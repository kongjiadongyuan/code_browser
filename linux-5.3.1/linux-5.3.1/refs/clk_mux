<def f='linux-5.3.1/include/linux/clk-provider.h' l='535' ll='543'/>
<size>56</size>
<doc f='linux-5.3.1/include/linux/clk-provider.h' l='506'>/**
 * struct clk_mux - multiplexer clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @reg:	register controlling multiplexer
 * @table:	array of register values corresponding to the parent index
 * @shift:	shift to multiplexer bit field
 * @mask:	mask of mutliplexer bit field
 * @flags:	hardware-specific flags
 * @lock:	register lock
 *
 * Clock with multiple selectable parents.  Implements .get_parent, .set_parent
 * and .recalc_rate
 *
 * Flags:
 * CLK_MUX_INDEX_ONE - register index starts at 1, not 0
 * CLK_MUX_INDEX_BIT - register index is a single bit (power of two)
 * CLK_MUX_HIWORD_MASK - The mux settings are only in lower 16-bit of this
 *	register, and mask of mux bits are in higher 16-bit of this register.
 *	While setting the mux bits, higher 16-bit should also be updated to
 *	indicate changing mux bits.
 * CLK_MUX_READ_ONLY - The mux registers can&apos;t be written, only read in the
 * 	.get_parent clk_op.
 * CLK_MUX_ROUND_CLOSEST - Use the parent rate that is closest to the desired
 *	frequency.
 * CLK_MUX_BIG_ENDIAN - By default little endian register accesses are used for
 *	the mux register.  Setting this flag makes the register accesses big
 *	endian.
 */</doc>
<mbr r='clk_mux::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_mux::reg' o='192' t='void *'/>
<mbr r='clk_mux::table' o='256' t='u32 *'/>
<mbr r='clk_mux::mask' o='320' t='u32'/>
<mbr r='clk_mux::shift' o='352' t='u8'/>
<mbr r='clk_mux::flags' o='360' t='u8'/>
<mbr r='clk_mux::lock' o='384' t='spinlock_t *'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='26' c='clk_mux_readl'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='34' c='clk_mux_writel'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='89' c='clk_mux_get_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='89' macro='1' c='clk_mux_get_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='89' macro='1' c='clk_mux_get_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='89' macro='1' c='clk_mux_get_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='100' c='clk_mux_set_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='100' macro='1' c='clk_mux_set_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='100' macro='1' c='clk_mux_set_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='100' macro='1' c='clk_mux_set_parent'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='131' c='clk_mux_determine_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='131' macro='1' c='clk_mux_determine_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='131' macro='1' c='clk_mux_determine_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='131' macro='1' c='clk_mux_determine_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='154' c='clk_hw_register_mux_table'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='249' c='clk_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='256' macro='1' c='clk_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='256' macro='1' c='clk_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='256' macro='1' c='clk_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='265' c='clk_hw_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='267' macro='1' c='clk_hw_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='267' macro='1' c='clk_hw_unregister_mux'/>
<use f='linux-5.3.1/drivers/clk/clk-mux.c' l='267' macro='1' c='clk_hw_unregister_mux'/>
<size>56</size>
