<dec f='linux-5.3.1/include/drm/drm_gem_framebuffer_helper.h' l='32' type='int drm_gem_fb_prepare_fb(struct drm_plane * plane, struct drm_plane_state * state)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='287' ll='303' type='int drm_gem_fb_prepare_fb(struct drm_plane * plane, struct drm_plane_state * state)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='304' type='int drm_gem_fb_prepare_fb(struct drm_plane * , struct drm_plane_state * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='304' c='drm_gem_fb_prepare_fb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='304' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='323' u='c' c='drm_gem_fb_simple_display_pipe_prepare_fb'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='269'>/**
 * drm_gem_fb_prepare_fb() - Prepare a GEM backed framebuffer
 * @plane: Plane
 * @state: Plane state the fence will be attached to
 *
 * This function prepares a GEM backed framebuffer for scanout by checking if
 * the plane framebuffer has a DMA-BUF attached. If it does, it extracts the
 * exclusive fence and attaches it to the plane state for the atomic helper to
 * wait on. This function can be used as the &amp;drm_plane_helper_funcs.prepare_fb
 * callback.
 *
 * There is no need for &amp;drm_plane_helper_funcs.cleanup_fb hook for simple
 * gem based framebuffer drivers which have their buffers always pinned in
 * memory.
 *
 * See drm_atomic_set_fence_for_plane() for a discussion of implicit and
 * explicit fencing in atomic modeset updates.
 */</doc>
