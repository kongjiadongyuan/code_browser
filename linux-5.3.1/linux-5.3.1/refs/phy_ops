<def f='linux-5.3.1/include/linux/phy/phy.h' l='66' ll='107'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='133'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='442' c='phy_create'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='449' c='devm_phy_create'/>
<size>88</size>
<doc f='linux-5.3.1/include/linux/phy/phy.h' l='54'>/**
 * struct phy_ops - set of function pointers for performing phy operations
 * @init: operation to be performed for initializing phy
 * @exit: operation to be performed while exiting
 * @power_on: powering on the phy
 * @power_off: powering off the phy
 * @set_mode: set the mode of the phy
 * @reset: resetting the phy
 * @calibrate: calibrate the phy
 * @release: ops to be performed while the consumer relinquishes the PHY
 * @owner: the module owner containing the ops
 */</doc>
<mbr r='phy_ops::init' o='0' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::exit' o='64' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::power_on' o='128' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::power_off' o='192' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::set_mode' o='256' t='int (*)(struct phy *, enum phy_mode, int)'/>
<mbr r='phy_ops::configure' o='320' t='int (*)(struct phy *, union phy_configure_opts *)'/>
<mbr r='phy_ops::validate' o='384' t='int (*)(struct phy *, enum phy_mode, int, union phy_configure_opts *)'/>
<mbr r='phy_ops::reset' o='448' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::calibrate' o='512' t='int (*)(struct phy *)'/>
<mbr r='phy_ops::release' o='576' t='void (*)(struct phy *)'/>
<mbr r='phy_ops::owner' o='640' t='struct module *'/>
