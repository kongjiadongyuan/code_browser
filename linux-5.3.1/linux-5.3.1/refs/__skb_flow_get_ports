<dec f='linux-5.3.1/include/linux/skbuff.h' l='1245' type='__be32 __skb_flow_get_ports(const struct sk_buff * skb, int thoff, u8 ip_proto, void * data, int hlen_proto)'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='1251' u='c' c='skb_flow_get_ports'/>
<def f='linux-5.3.1/net/core/flow_dissector.c' l='183' ll='203' type='__be32 __skb_flow_get_ports(const struct sk_buff * skb, int thoff, u8 ip_proto, void * data, int hlen)'/>
<dec f='linux-5.3.1/net/core/flow_dissector.c' l='204' type='__be32 __skb_flow_get_ports(const struct sk_buff * , int , u8 , void * , int )'/>
<use f='linux-5.3.1/net/core/flow_dissector.c' l='204' c='__skb_flow_get_ports'/>
<use f='linux-5.3.1/net/core/flow_dissector.c' l='204' u='a'/>
<use f='linux-5.3.1/net/core/flow_dissector.c' l='1290' u='c' c='__skb_flow_dissect'/>
<doc f='linux-5.3.1/net/core/flow_dissector.c' l='172'>/**
 * __skb_flow_get_ports - extract the upper layer ports and return them
 * @skb: sk_buff to extract the ports from
 * @thoff: transport header offset
 * @ip_proto: protocol for which to get port offset
 * @data: raw buffer pointer to the packet, if NULL use skb-&gt;data
 * @hlen: packet header length, if @data is NULL use skb_headlen(skb)
 *
 * The function will try to retrieve the ports at offset thoff + poff where poff
 * is the protocol port offset returned from proto_ports_offset
 */</doc>
