<dec f='linux-5.3.1/include/linux/percpu-refcount.h' l='112' type='void percpu_ref_exit(struct percpu_ref * ref)'/>
<use f='linux-5.3.1/include/linux/genhd.h' l='711' u='c' c='hd_free_part'/>
<use f='linux-5.3.1/block/blk-core.c' l='378' u='c' c='blk_cleanup_queue'/>
<use f='linux-5.3.1/block/blk-core.c' l='541' u='c' c='blk_alloc_queue_node'/>
<use f='linux-5.3.1/drivers/md/md.c' l='5285' u='c' c='md_free'/>
<use f='linux-5.3.1/fs/aio.c' l='590' u='c' c='free_ioctx'/>
<use f='linux-5.3.1/fs/aio.c' l='591' u='c' c='free_ioctx'/>
<use f='linux-5.3.1/fs/aio.c' l='804' u='c' c='ioctx_alloc'/>
<use f='linux-5.3.1/fs/aio.c' l='805' u='c' c='ioctx_alloc'/>
<use f='linux-5.3.1/fs/io_uring.c' l='3085' u='c' c='io_ring_ctx_free'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='2085' u='c' c='cgroup_setup_root'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4959' u='c' c='css_free_rwork_fn'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='5325' u='c' c='cgroup_create'/>
<def f='linux-5.3.1/lib/percpu-refcount.c' l='105' ll='115' type='void percpu_ref_exit(struct percpu_ref * ref)'/>
<dec f='linux-5.3.1/lib/percpu-refcount.c' l='116' type='void percpu_ref_exit(struct percpu_ref * )'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='116' c='percpu_ref_exit'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='116' u='a'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='127' u='c' c='percpu_ref_call_confirm_rcu'/>
<doc f='linux-5.3.1/lib/percpu-refcount.c' l='95'>/**
 * percpu_ref_exit - undo percpu_ref_init()
 * @ref: percpu_ref to exit
 *
 * This function exits @ref.  The caller is responsible for ensuring that
 * @ref is no longer in active use.  The usual places to invoke this
 * function from are the @ref-&gt;release() callback or in init failure path
 * where percpu_ref_init() succeeded but other parts of the initialization
 * of the embedding object failed.
 */</doc>
