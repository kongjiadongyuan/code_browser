<dec f='linux-5.3.1/include/linux/key-type.h' l='189' type='int generic_key_instantiate(struct key * key, struct key_preparsed_payload * prep)'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='581'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='581'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='189'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='189'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='414'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='414'/>
<use f='linux-5.3.1/net/dns_resolver/dns_key.c' l='320'/>
<use f='linux-5.3.1/net/dns_resolver/dns_key.c' l='320'/>
<def f='linux-5.3.1/security/keys/key.c' l='1097' ll='1116' type='int generic_key_instantiate(struct key * key, struct key_preparsed_payload * prep)'/>
<dec f='linux-5.3.1/security/keys/key.c' l='1117' type='int generic_key_instantiate(struct key * , struct key_preparsed_payload * )'/>
<use f='linux-5.3.1/security/keys/key.c' l='1117' c='generic_key_instantiate'/>
<use f='linux-5.3.1/security/keys/key.c' l='1117' u='a'/>
<doc f='linux-5.3.1/security/keys/key.c' l='1087'>/**
 * generic_key_instantiate - Simple instantiation of a key from preparsed data
 * @key: The key to be instantiated
 * @prep: The preparsed data to load.
 *
 * Instantiate a key from preparsed data.  We assume we can just copy the data
 * in directly and clear the old pointers.
 *
 * This can be pointed to directly by the key type instantiate op pointer.
 */</doc>
<use f='linux-5.3.1/security/keys/user_defined.c' l='27'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='27'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='47'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='47'/>
