<dec f='linux-5.3.1/include/drm/drm_damage_helper.h' l='81' type='bool drm_atomic_helper_damage_merged(const struct drm_plane_state * old_state, struct drm_plane_state * state, struct drm_rect * rect)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='353' ll='376' type='bool drm_atomic_helper_damage_merged(const struct drm_plane_state * old_state, struct drm_plane_state * state, struct drm_rect * rect)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='377' type='bool drm_atomic_helper_damage_merged(const struct drm_plane_state * , struct drm_plane_state * , struct drm_rect * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='377' c='drm_atomic_helper_damage_merged'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='377' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='338'>/**
 * drm_atomic_helper_damage_merged - Merged plane damage
 * @old_state: Old plane state for validation.
 * @state: Plane state from which to iterate the damage clips.
 * @rect: Returns the merged damage rectangle
 *
 * This function merges any valid plane damage clips into one rectangle and
 * returns it in @rect.
 *
 * For details see: drm_atomic_helper_damage_iter_init() and
 * drm_atomic_helper_damage_iter_next().
 *
 * Returns:
 * True if there is valid plane damage otherwise false.
 */</doc>
