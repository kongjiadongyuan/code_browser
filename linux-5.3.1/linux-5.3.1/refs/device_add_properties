<dec f='linux-5.3.1/include/linux/property.h' l='322' type='int device_add_properties(struct device * dev, const struct property_entry * properties)'/>
<use f='linux-5.3.1/drivers/base/platform.c' l='387' u='c' c='platform_device_add_properties'/>
<def f='linux-5.3.1/drivers/base/property.c' l='545' ll='556' type='int device_add_properties(struct device * dev, const struct property_entry * properties)'/>
<dec f='linux-5.3.1/drivers/base/property.c' l='557' type='int device_add_properties(struct device * , const struct property_entry * )'/>
<use f='linux-5.3.1/drivers/base/property.c' l='557' c='device_add_properties'/>
<use f='linux-5.3.1/drivers/base/property.c' l='557' u='a'/>
<doc f='linux-5.3.1/drivers/base/property.c' l='533'>/**
 * device_add_properties - Add a collection of properties to a device object.
 * @dev: Device to add properties to.
 * @properties: Collection of properties to add.
 *
 * Associate a collection of device properties represented by @properties with
 * @dev. The function takes a copy of @properties.
 *
 * WARNING: The callers should not use this function if it is known that there
 * is no real firmware node associated with @dev! In that case the callers
 * should create a software node and assign it to @dev directly.
 */</doc>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='770' u='c' c='i2c_new_client_device'/>
