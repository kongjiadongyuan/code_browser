<dec f='linux-5.3.1/include/drm/drm_dsc.h' l='605' type='void drm_dsc_pps_payload_pack(struct drm_dsc_picture_parameter_set * pps_sdp, const struct drm_dsc_config * dsc_cfg)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_dsc.c' l='69' ll='245' type='void drm_dsc_pps_payload_pack(struct drm_dsc_picture_parameter_set * pps_payload, const struct drm_dsc_config * dsc_cfg)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_dsc.c' l='246' type='void drm_dsc_pps_payload_pack(struct drm_dsc_picture_parameter_set * , const struct drm_dsc_config * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dsc.c' l='246' c='drm_dsc_pps_payload_pack'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dsc.c' l='246' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_dsc.c' l='52'>/**
 * drm_dsc_pps_payload_pack() - Populates the DSC PPS
 *
 * @pps_payload:
 * Bitwise struct for DSC Picture Parameter Set. This is defined
 * by &amp;struct drm_dsc_picture_parameter_set
 * @dsc_cfg:
 * DSC Configuration data filled by driver as defined by
 * &amp;struct drm_dsc_config
 *
 * DSC source device sends a picture parameter set (PPS) containing the
 * information required by the sink to decode the compressed frame. Driver
 * populates the DSC PPS struct using the DSC configuration parameters in
 * the order expected by the DSC Display Sink device. For the DSC, the sink
 * device expects the PPS payload in big endian format for fields
 * that span more than 1 byte.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_vdsc.c' l='889' u='c' c='intel_dp_write_dsc_pps_sdp'/>
