<dec f='linux-5.3.1/include/linux/firmware.h' l='53' type='int request_firmware_into_buf(const struct firmware ** firmware_p, const char * name, struct device * device, void * buf, size_t size)'/>
<def f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='924' ll='938' type='int request_firmware_into_buf(const struct firmware ** firmware_p, const char * name, struct device * device, void * buf, size_t size)'/>
<dec f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='939' type='int request_firmware_into_buf(const struct firmware ** , const char * , struct device * , void * , size_t )'/>
<use f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='939' c='request_firmware_into_buf'/>
<use f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='939' u='a'/>
<doc f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='909'>/**
 * request_firmware_into_buf() - load firmware into a previously allocated buffer
 * @firmware_p: pointer to firmware image
 * @name: name of firmware file
 * @device: device for which firmware is being loaded and DMA region allocated
 * @buf: address of buffer to load firmware into
 * @size: size of buffer
 *
 * This function works pretty much like request_firmware(), but it doesn&apos;t
 * allocate a buffer to hold the firmware data. Instead, the firmware
 * is loaded directly into the buffer pointed to by @buf and the @firmware_p
 * data member is pointed at @buf.
 *
 * This function doesn&apos;t cache firmware either.
 */</doc>
