<dec f='linux-5.3.1/include/linux/memblock.h' l='350' type='phys_addr_t memblock_phys_alloc_range(phys_addr_t size, phys_addr_t align, phys_addr_t start, phys_addr_t end)'/>
<use f='linux-5.3.1/include/linux/memblock.h' l='357' u='c' c='memblock_phys_alloc'/>
<def f='linux-5.3.1/mm/memblock.c' l='1411' ll='1417' type='phys_addr_t memblock_phys_alloc_range(phys_addr_t size, phys_addr_t align, phys_addr_t start, phys_addr_t end)'/>
<doc f='linux-5.3.1/mm/memblock.c' l='1399'>/**
 * memblock_phys_alloc_range - allocate a memory block inside specified range
 * @size: size of memory block to be allocated in bytes
 * @align: alignment of the region and block&apos;s size
 * @start: the lower bound of the memory region to allocate (physical address)
 * @end: the upper bound of the memory region to allocate (physical address)
 *
 * Allocate @size bytes in the between @start and @end.
 *
 * Return: physical address of the allocated memory block on success,
 * %0 on failure.
 */</doc>
