<dec f='linux-5.3.1/include/linux/netdevice.h' l='2602' type='void __dev_remove_pack(struct packet_type * pt)'/>
<def f='linux-5.3.1/net/core/dev.c' l='429' ll='446' type='void __dev_remove_pack(struct packet_type * pt)'/>
<dec f='linux-5.3.1/net/core/dev.c' l='447' type='void __dev_remove_pack(struct packet_type * )'/>
<use f='linux-5.3.1/net/core/dev.c' l='447' c='__dev_remove_pack'/>
<use f='linux-5.3.1/net/core/dev.c' l='447' u='a'/>
<use f='linux-5.3.1/net/core/dev.c' l='463' u='c' c='dev_remove_pack'/>
<doc f='linux-5.3.1/net/core/dev.c' l='416'>/**
 *	__dev_remove_pack	 - remove packet handler
 *	@pt: packet type declaration
 *
 *	Remove a protocol handler that was previously added to the kernel
 *	protocol handlers by dev_add_pack(). The passed &amp;packet_type is removed
 *	from the kernel lists and can be freed or reused once this function
 *	returns.
 *
 *      The packet type might still be in use by receivers
 *	and must not be freed until after all the CPU&apos;s have gone
 *	through a quiescent state.
 */</doc>
<use f='linux-5.3.1/net/packet/af_packet.c' l='335' u='c' c='__unregister_prot_hook'/>
<use f='linux-5.3.1/net/packet/af_packet.c' l='1491' u='c' c='__fanout_unlink'/>
<use f='linux-5.3.1/net/packet/af_packet.c' l='1721' u='c' c='fanout_add'/>
