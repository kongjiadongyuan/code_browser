<dec f='linux-5.3.1/include/linux/dcache.h' l='240' type='struct dentry * d_splice_alias(struct inode * , struct dentry * )'/>
<use f='linux-5.3.1/fs/dcache.c' l='2159' u='c' c='d_add_ci'/>
<def f='linux-5.3.1/fs/dcache.c' l='2998' ll='3046' type='struct dentry * d_splice_alias(struct inode * inode, struct dentry * dentry)'/>
<dec f='linux-5.3.1/fs/dcache.c' l='3047' type='struct dentry * d_splice_alias(struct inode * , struct dentry * )'/>
<use f='linux-5.3.1/fs/dcache.c' l='3047' c='d_splice_alias'/>
<use f='linux-5.3.1/fs/dcache.c' l='3047' u='a'/>
<doc f='linux-5.3.1/fs/dcache.c' l='2975'>/**
 * d_splice_alias - splice a disconnected dentry into the tree if one exists
 * @inode:  the inode which may have a disconnected dentry
 * @dentry: a negative dentry which we want to point to the inode.
 *
 * If inode is a directory and has an IS_ROOT alias, then d_move that in
 * place of the given dentry and return it, else simply d_add the inode
 * to the dentry and return NULL.
 *
 * If a non-IS_ROOT directory is found, the filesystem is corrupt, and
 * we should error out: directories can&apos;t have multiple aliases.
 *
 * This is needed in the lookup routine of any filesystem that is exportable
 * (via knfsd) so that we can build dcache paths to directories effectively.
 *
 * If a dentry was found and moved, then it is returned.  Otherwise NULL
 * is returned.  This matches the expected return value of -&gt;lookup.
 *
 * Cluster filesystems may call this function with a negative, hashed dentry.
 * In that case, we know that the inode will be a regular file, and also this
 * will only occur during atomic_open. So we need to check for the dentry
 * being already hashed only in the final case.
 */</doc>
<use f='linux-5.3.1/fs/ext4/namei.c' l='1728' u='c' c='ext4_lookup'/>
<use f='linux-5.3.1/fs/fat/namei_msdos.c' l='223' u='c' c='msdos_lookup'/>
<use f='linux-5.3.1/fs/fat/namei_vfat.c' l='753' u='c' c='vfat_lookup'/>
<use f='linux-5.3.1/fs/isofs/namei.c' l='172' u='c' c='isofs_lookup'/>
<use f='linux-5.3.1/fs/kernfs/dir.c' l='1104' u='c' c='kernfs_iop_lookup'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='508' u='c' c='nfs_prime_dcache'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1427' u='c' c='nfs_lookup'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1577' u='c' c='nfs_atomic_open'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1704' u='c' c='nfs_instantiate'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='2979' u='c' c='_nfs4_open_and_get_state'/>
<use f='linux-5.3.1/fs/proc/base.c' l='2104' u='c' c='proc_map_files_instantiate'/>
<use f='linux-5.3.1/fs/proc/base.c' l='2473' u='c' c='proc_pident_instantiate'/>
<use f='linux-5.3.1/fs/proc/base.c' l='3239' u='c' c='proc_pid_instantiate'/>
<use f='linux-5.3.1/fs/proc/base.c' l='3533' u='c' c='proc_task_instantiate'/>
<use f='linux-5.3.1/fs/proc/fd.c' l='203' u='c' c='proc_fd_instantiate'/>
<use f='linux-5.3.1/fs/proc/fd.c' l='339' u='c' c='proc_fdinfo_instantiate'/>
<use f='linux-5.3.1/fs/proc/generic.c' l='261' u='c' c='proc_lookup_de'/>
<use f='linux-5.3.1/fs/proc/namespaces.c' l='107' u='c' c='proc_ns_instantiate'/>
<use f='linux-5.3.1/fs/proc/proc_sysctl.c' l='566' u='c' c='proc_sys_lookup'/>
<use f='linux-5.3.1/fs/proc/proc_sysctl.c' l='718' u='c' c='proc_sys_fill_cache'/>
