<dec f='linux-5.3.1/include/linux/trace_events.h' l='131' type='int register_trace_event(struct trace_event * event)'/>
<use f='linux-5.3.1/kernel/trace/blktrace.c' l='1567' u='c' c='init_blk_tracer'/>
<use f='linux-5.3.1/kernel/trace/trace_events.c' l='221' u='c' c='trace_event_raw_init'/>
<def f='linux-5.3.1/kernel/trace/trace_output.c' l='716' ll='779' type='int register_trace_event(struct trace_event * event)'/>
<dec f='linux-5.3.1/kernel/trace/trace_output.c' l='780' type='int register_trace_event(struct trace_event * )'/>
<use f='linux-5.3.1/kernel/trace/trace_output.c' l='780' c='register_trace_event'/>
<use f='linux-5.3.1/kernel/trace/trace_output.c' l='780' u='a'/>
<use f='linux-5.3.1/kernel/trace/trace_output.c' l='1377' u='c' c='init_events'/>
<doc f='linux-5.3.1/kernel/trace/trace_output.c' l='701'>/**
 * register_trace_event - register output for an event type
 * @event: the event type to register
 *
 * Event types are stored in a hash and this hash is used to
 * find a way to print an event. If the @event-&gt;type is set
 * then it will use that type, otherwise it will assign a
 * type to use.
 *
 * If you assign your own type, please make sure it is added
 * to the trace_type enum in trace.h, to avoid collisions
 * with the dynamic types.
 *
 * Returns the event type number or zero on error.
 */</doc>
<use f='linux-5.3.1/kernel/trace/trace_probe.c' l='934' u='c' c='trace_probe_register_event_call'/>
