<dec f='linux-5.3.1/include/linux/phy.h' l='788' type='int __phy_modify_mmd_changed(struct phy_device * phydev, int devad, u32 regnum, u16 mask, u16 set)'/>
<def f='linux-5.3.1/drivers/net/phy/phy-core.c' l='557' ll='573' type='int __phy_modify_mmd_changed(struct phy_device * phydev, int devad, u32 regnum, u16 mask, u16 set)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-core.c' l='574' type='int __phy_modify_mmd_changed(struct phy_device * , int , u32 , u16 , u16 )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='574' c='__phy_modify_mmd_changed'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='574' u='a'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='596' u='c' c='phy_modify_mmd_changed'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='620' u='c' c='__phy_modify_mmd'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-core.c' l='544'>/**
 * __phy_modify_mmd_changed - Function for modifying a register on MMD
 * @phydev: the phy_device struct
 * @devad: the MMD containing register to modify
 * @regnum: register number to modify
 * @mask: bit mask of bits to clear
 * @set: new value of bits set in mask to write to @regnum
 *
 * Unlocked helper function which allows a MMD register to be modified as
 * new register value = (old register value &amp; ~mask) | set
 *
 * Returns negative errno, 0 if there was no change, and 1 in case of change
 */</doc>
