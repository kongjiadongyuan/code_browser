<dec f='linux-5.3.1/include/linux/idr.h' l='118' type='void * idr_remove(struct idr * , unsigned long id)'/>
<use f='linux-5.3.1/block/bsg.c' l='397' u='c' c='bsg_unregister_queue'/>
<use f='linux-5.3.1/block/bsg.c' l='457' u='c' c='bsg_register_queue'/>
<use f='linux-5.3.1/block/genhd.c' l='530' u='c' c='blk_free_devt'/>
<use f='linux-5.3.1/drivers/block/loop.c' l='2059' u='c' c='loop_add'/>
<use f='linux-5.3.1/drivers/block/loop.c' l='2166' u='c' c='loop_control_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_auth.c' l='275' u='c' c='drm_master_release'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='2154' u='c' c='drm_tile_group_free'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='151' u='c' c='drm_minor_alloc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='171' u='c' c='drm_minor_free'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='200' u='c' c='drm_gem_object_handle_free'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='293' u='c' c='drm_gem_handle_delete'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='424' u='c' c='drm_gem_handle_create_tail'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_lease.c' l='279' u='c' c='drm_lease_destroy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_lease.c' l='317' u='c' c='_drm_lease_revoke'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_object.c' l='107' u='c' c='drm_mode_object_unregister'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='409' u='c' c='drm_syncobj_destroy'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='878' u='c' c='i915_gem_vm_destroy_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='2204' u='c' c='i915_gem_context_destroy_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_perf.c' l='3363' u='c' c='i915_perf_remove_config_ioctl'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='1392' u='c' c='i2c_register_adapter'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='1601' u='c' c='i2c_del_adapter'/>
<use f='linux-5.3.1/drivers/iommu/intel-pasid.c' l='51' u='c' c='intel_pasid_free_id'/>
<use f='linux-5.3.1/drivers/md/dm.c' l='1830' u='c' c='free_minor'/>
<use f='linux-5.3.1/drivers/pps/pps.c' l='340' u='c' c='pps_device_destruct'/>
<use f='linux-5.3.1/drivers/pps/pps.c' l='400' u='c' c='pps_register_cdev'/>
<use f='linux-5.3.1/drivers/scsi/sg.c' l='1562' u='c' c='sg_add_device'/>
<use f='linux-5.3.1/drivers/scsi/sg.c' l='1585' u='c' c='sg_device_destroy'/>
<use f='linux-5.3.1/drivers/usb/core/hcd.c' l='956' u='c' c='usb_deregister_bus'/>
<use f='linux-5.3.1/fs/kernfs/dir.c' l='538' u='c' c='kernfs_put'/>
<use f='linux-5.3.1/fs/kernfs/dir.c' l='682' u='c' c='__kernfs_new_node'/>
<use f='linux-5.3.1/fs/nfs/client.c' l='210' u='c' c='nfs_cb_idr_remove_locked'/>
<use f='linux-5.3.1/fs/notify/inotify/inotify_user.c' l='460' u='c' c='inotify_remove_from_idr'/>
<use f='linux-5.3.1/ipc/util.c' l='311' u='c' c='ipc_addid'/>
<use f='linux-5.3.1/ipc/util.c' l='465' u='c' c='ipc_rmid'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='330' u='c' c='cgroup_idr_remove'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='1307' u='c' c='cgroup_exit_root_id'/>
<use f='linux-5.3.1/kernel/events/core.c' l='10036' u='c' c='perf_pmu_register'/>
<use f='linux-5.3.1/kernel/events/core.c' l='10058' u='c' c='perf_pmu_unregister'/>
<use f='linux-5.3.1/kernel/pid.c' l='153' u='c' c='free_pid'/>
<use f='linux-5.3.1/kernel/pid.c' l='241' u='c' c='alloc_pid'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='3530' u='c' c='put_unbound_pool'/>
<def f='linux-5.3.1/lib/idr.c' l='152' ll='155' type='void * idr_remove(struct idr * idr, unsigned long id)'/>
<dec f='linux-5.3.1/lib/idr.c' l='156' type='void * idr_remove(struct idr * , unsigned long )'/>
<use f='linux-5.3.1/lib/idr.c' l='156' c='idr_remove'/>
<use f='linux-5.3.1/lib/idr.c' l='156' u='a'/>
<doc f='linux-5.3.1/lib/idr.c' l='138'>/**
 * idr_remove() - Remove an ID from the IDR.
 * @idr: IDR handle.
 * @id: Pointer ID.
 *
 * Removes this ID from the IDR.  If the ID was not previously in the IDR,
 * this function returns %NULL.
 *
 * Since this function modifies the IDR, the caller should provide their
 * own locking to ensure that concurrent modification of the same IDR is
 * not possible.
 *
 * Return: The pointer formerly associated with this ID.
 */</doc>
<use f='linux-5.3.1/net/core/net_namespace.c' l='532' u='c' c='unhash_nsid'/>
<use f='linux-5.3.1/net/mac80211/cfg.c' l='294' u='c' c='ieee80211_add_nan_func'/>
<use f='linux-5.3.1/net/mac80211/cfg.c' l='3771' u='c' c='ieee80211_nan_func_terminated'/>
<use f='linux-5.3.1/net/mac80211/iface.c' l='967' u='c' c='ieee80211_do_stop'/>
<use f='linux-5.3.1/net/mac80211/status.c' l='473' u='c' c='ieee80211_report_ack_skb'/>
<use f='linux-5.3.1/net/netlink/genetlink.c' l='387' u='c' c='genl_register_family'/>
<use f='linux-5.3.1/net/netlink/genetlink.c' l='415' u='c' c='genl_unregister_family'/>
<use f='linux-5.3.1/net/sched/act_api.c' l='132' u='c' c='__tcf_action_put'/>
<use f='linux-5.3.1/net/sched/act_api.c' l='279' u='c' c='tcf_idr_release_unsafe'/>
<use f='linux-5.3.1/net/sched/act_api.c' l='383' u='c' c='tcf_idr_delete_index'/>
<use f='linux-5.3.1/net/sched/act_api.c' l='473' u='c' c='tcf_idr_cleanup'/>
<use f='linux-5.3.1/net/sched/cls_api.c' l='978' u='c' c='tcf_block_remove'/>
