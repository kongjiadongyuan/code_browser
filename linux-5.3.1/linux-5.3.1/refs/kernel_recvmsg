<dec f='linux-5.3.1/include/linux/net.h' l='295' type='int kernel_recvmsg(struct socket * sock, struct msghdr * msg, struct kvec * vec, size_t num, size_t len, int flags)'/>
<def f='linux-5.3.1/net/socket.c' l='909' ll='920' type='int kernel_recvmsg(struct socket * sock, struct msghdr * msg, struct kvec * vec, size_t num, size_t size, int flags)'/>
<dec f='linux-5.3.1/net/socket.c' l='921' type='int kernel_recvmsg(struct socket * , struct msghdr * , struct kvec * , size_t , size_t , int )'/>
<use f='linux-5.3.1/net/socket.c' l='921' c='kernel_recvmsg'/>
<use f='linux-5.3.1/net/socket.c' l='921' u='a'/>
<doc f='linux-5.3.1/net/socket.c' l='893'>/**
 *	kernel_recvmsg - Receive a message from a socket (kernel space)
 *	@sock: The socket to receive the message from
 *	@msg: Received message
 *	@vec: Input s/g array for message data
 *	@num: Size of input s/g array
 *	@size: Number of bytes to read
 *	@flags: Message flags (MSG_DONTWAIT, etc...)
 *
 *	On return the msg structure contains the scatter/gather array passed in the
 *	vec argument. The array is modified so that it consists of the unfilled
 *	portion of the original array.
 *
 *	The returned value is the total number of bytes received, or an error.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/svcsock.c' l='528' u='c' c='svc_udp_recvfrom'/>
