<dec f='linux-5.3.1/include/linux/sunrpc/xdr.h' l='188' type='int xdr_buf_subsegment(struct xdr_buf * , struct xdr_buf * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/auth_gss.c' l='1746' u='c' c='gss_wrap_req_integ'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/auth_gss.c' l='1961' u='c' c='gss_unwrap_resp_integ'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/svcauth_gss.c' l='880' u='c' c='unwrap_integ_data'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/svcauth_gss.c' l='1638' u='c' c='svcauth_gss_wrap_resp_integ'/>
<def f='linux-5.3.1/net/sunrpc/xdr.c' l='1109' ll='1151' type='int xdr_buf_subsegment(struct xdr_buf * buf, struct xdr_buf * subbuf, unsigned int base, unsigned int len)'/>
<dec f='linux-5.3.1/net/sunrpc/xdr.c' l='1152' type='int xdr_buf_subsegment(struct xdr_buf * , struct xdr_buf * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1152' c='xdr_buf_subsegment'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1152' u='a'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1177' u='c' c='read_bytes_from_xdr_buf'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1208' u='c' c='write_bytes_to_xdr_buf'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1249' u='c' c='xdr_buf_read_netobj'/>
<doc f='linux-5.3.1/net/sunrpc/xdr.c' l='1095'>/**
 * xdr_buf_subsegment - set subbuf to a portion of buf
 * @buf: an xdr buffer
 * @subbuf: the result buffer
 * @base: beginning of range in bytes
 * @len: length of range in bytes
 *
 * sets @subbuf to an xdr buffer representing the portion of @buf of
 * length @len starting at offset @base.
 *
 * @buf and @subbuf may be pointers to the same struct xdr_buf.
 *
 * Returns -1 if base of length are out of bounds.
 */</doc>
