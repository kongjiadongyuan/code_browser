<dec f='linux-5.3.1/include/linux/phy.h' l='268' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * dev, int sizeof_priv)'/>
<use f='linux-5.3.1/include/linux/phy.h' l='271' u='c' c='devm_mdiobus_alloc'/>
<def f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='205' ll='223' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * dev, int sizeof_priv)'/>
<dec f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='224' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * , int )'/>
<use f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='224' c='devm_mdiobus_alloc_size'/>
<use f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='224' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='191'>/**
 * devm_mdiobus_alloc_size - Resource-managed mdiobus_alloc_size()
 * @dev:		Device to allocate mii_bus for
 * @sizeof_priv:	Space to allocate for private structure.
 *
 * Managed mdiobus_alloc_size. mii_bus allocated with this function is
 * automatically freed on driver detach.
 *
 * If an mii_bus allocated with this function needs to be freed separately,
 * devm_mdiobus_free() must be used.
 *
 * RETURNS:
 * Pointer to allocated mii_bus on success, NULL on failure.
 */</doc>
