<dec f='linux-5.3.1/include/linux/sunrpc/rpc_pipe_fs.h' l='127' type='struct dentry * rpc_mkpipe_dentry(struct dentry * , const char * , void * , struct rpc_pipe * )'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='441' u='c' c='nfs_idmap_pipe_create'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/auth_gss.c' l='897' u='c' c='gss_pipe_dentry_create'/>
<def f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='801' ll='831' type='struct dentry * rpc_mkpipe_dentry(struct dentry * parent, const char * name, void * private, struct rpc_pipe * pipe)'/>
<dec f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='832' type='struct dentry * rpc_mkpipe_dentry(struct dentry * , const char * , void * , struct rpc_pipe * )'/>
<use f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='832' c='rpc_mkpipe_dentry'/>
<use f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='832' u='a'/>
<use f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='1331' u='c' c='rpc_gssd_dummy_populate'/>
<doc f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='783'>/**
 * rpc_mkpipe - make an rpc_pipefs file for kernel&lt;-&gt;userspace communication
 * @parent: dentry of directory to create new &quot;pipe&quot; in
 * @name: name of pipe
 * @private: private data to associate with the pipe, for the caller&apos;s use
 * @pipe: &amp;rpc_pipe containing input parameters
 *
 * Data is made available for userspace to read by calls to
 * rpc_queue_upcall().  The actual reads will result in calls to
 * @ops-&gt;upcall, which will be called with the file pointer,
 * message, and userspace buffer to copy to.
 *
 * Writes can come at any time, and do not necessarily have to be
 * responses to upcalls.  They will result in calls to @msg-&gt;downcall.
 *
 * The @private argument passed here will be available to all these methods
 * from the file pointer, via RPC_I(file_inode(file))-&gt;private.
 */</doc>
