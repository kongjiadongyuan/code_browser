<def f='linux-5.3.1/include/linux/sbitmap.h' l='97' ll='142'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='375' c='sbitmap_queue_init_node'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='383' c='sbitmap_queue_free'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='399' c='sbitmap_queue_resize'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='408' c='__sbitmap_queue_get'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='423' c='__sbitmap_queue_get_shallow'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='435' c='sbitmap_queue_get'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='460' c='sbitmap_queue_get_shallow'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='486' c='sbitmap_queue_min_shallow_depth'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='496' c='sbitmap_queue_clear'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='517' c='sbq_wait_ptr'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='532' c='sbitmap_queue_wake_all'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='539' c='sbitmap_queue_wake_up'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='549' c='sbitmap_queue_show'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='552'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='570' c='sbitmap_prepare_to_wait'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='577' c='sbitmap_finish_wait'/>
<use f='linux-5.3.1/include/linux/sbitmap.h' l='583' c='sbitmap_add_wait_queue'/>
<use f='linux-5.3.1/block/blk-mq-tag.h' l='16'/>
<use f='linux-5.3.1/block/blk-mq-tag.h' l='17'/>
<use f='linux-5.3.1/block/blk-mq-tag.h' l='39' c='bt_wait_ptr'/>
<size>64</size>
<doc f='linux-5.3.1/include/linux/sbitmap.h' l='88'>/**
 * struct sbitmap_queue - Scalable bitmap with the added ability to wait on free
 * bits.
 *
 * A &amp;struct sbitmap_queue uses multiple wait queues and rolling wakeups to
 * avoid contention on the wait queue spinlock. This ensures that we don&apos;t hit a
 * scalability wall when we run out of free bits and have to start putting tasks
 * to sleep.
 */</doc>
<mbr r='sbitmap_queue::sb' o='0' t='struct sbitmap'/>
<mbr r='sbitmap_queue::alloc_hint' o='192' t='unsigned int *'/>
<mbr r='sbitmap_queue::wake_batch' o='256' t='unsigned int'/>
<mbr r='sbitmap_queue::wake_index' o='288' t='atomic_t'/>
<mbr r='sbitmap_queue::ws' o='320' t='struct sbq_wait_state *'/>
<mbr r='sbitmap_queue::ws_active' o='384' t='atomic_t'/>
<mbr r='sbitmap_queue::round_robin' o='416' t='bool'/>
<mbr r='sbitmap_queue::min_shallow_depth' o='448' t='unsigned int'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='71' c='hctx_may_queue'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='98' c='__blk_mq_get_tag'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='112' c='blk_mq_get_tag'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='139' c='blk_mq_get_tag'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='249' c='bt_for_each'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='303' c='bt_tags_for_each'/>
<use f='linux-5.3.1/block/blk-mq-tag.c' l='404' c='bt_alloc'/>
<size>64</size>
<use f='linux-5.3.1/block/blk-mq.c' l='1079' c='blk_mq_dispatch_wake'/>
<use f='linux-5.3.1/block/blk-mq.c' l='1100' c='blk_mq_mark_tag_wait'/>
<size>64</size>
<use f='linux-5.3.1/block/kyber-iosched.c' l='157'/>
<use f='linux-5.3.1/block/kyber-iosched.c' l='707' c='kyber_get_domain_token'/>
<size>64</size>
<use f='linux-5.3.1/lib/sbitmap.c' l='338' c='sbq_calc_wake_batch'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='369' c='sbitmap_queue_init_node'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='412' c='sbitmap_queue_update_wake_batch'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='431' c='sbitmap_queue_resize'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='438' c='__sbitmap_queue_get'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='466' c='__sbitmap_queue_get_shallow'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='497' c='sbitmap_queue_min_shallow_depth'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='505' c='sbq_wake_ptr'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='528' c='__sbq_wake_up'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='569' c='sbitmap_queue_wake_up'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='576' c='sbitmap_queue_clear'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='606' c='sbitmap_queue_wake_all'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='627' c='sbitmap_queue_show'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='663' c='sbitmap_add_wait_queue'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='685' c='sbitmap_prepare_to_wait'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='697' c='sbitmap_finish_wait'/>
<size>64</size>
