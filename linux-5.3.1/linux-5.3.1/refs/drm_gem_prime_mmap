<dec f='linux-5.3.1/include/drm/drm_prime.h' l='73' type='int drm_gem_prime_mmap(struct drm_gem_object * obj, struct vm_area_struct * vma)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='625' ll='656' type='int drm_gem_prime_mmap(struct drm_gem_object * obj, struct vm_area_struct * vma)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='657' type='int drm_gem_prime_mmap(struct drm_gem_object * , struct vm_area_struct * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='657' c='drm_gem_prime_mmap'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='657' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='613'>/**
 * drm_gem_prime_mmap - PRIME mmap function for GEM drivers
 * @obj: GEM object
 * @vma: Virtual address range
 *
 * This function sets up a userspace mapping for PRIME exported buffers using
 * the same codepath that is used for regular GEM buffer mapping on the DRM fd.
 * The fake GEM offset is added to vma-&gt;vm_pgoff and &amp;drm_driver-&gt;fops-&gt;mmap is
 * called to set up the mapping.
 *
 * Drivers can use this as their &amp;drm_driver.gem_prime_mmap callback.
 */</doc>
