<dec f='linux-5.3.1/include/linux/iommu.h' l='426' type='struct iommu_group * iommu_group_alloc()'/>
<def f='linux-5.3.1/drivers/iommu/iommu.c' l='415' ll='469' type='struct iommu_group * iommu_group_alloc()'/>
<dec f='linux-5.3.1/drivers/iommu/iommu.c' l='470' type='struct iommu_group * iommu_group_alloc()'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='470' c='iommu_group_alloc'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='470' u='a'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1205' u='c' c='generic_device_group'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1272' u='c' c='pci_device_group'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1283' u='c' c='fsl_mc_device_group'/>
<doc f='linux-5.3.1/drivers/iommu/iommu.c' l='404'>/**
 * iommu_group_alloc - Allocate a new group
 *
 * This function is called by an iommu driver to allocate a new iommu
 * group.  The iommu group represents the minimum granularity of the iommu.
 * Upon successful return, the caller holds a reference to the supplied
 * group in order to hold the group until devices are added.  Use
 * iommu_group_put() to release this extra reference count, allowing the
 * group to be automatically reclaimed once it has no devices or external
 * references.
 */</doc>
