<dec f='linux-5.3.1/include/linux/lockd/lockd.h' l='236' type='struct nlm_host * nlmsvc_lookup_host(const struct svc_rqst * rqstp, const char * hostname, const size_t hostname_len)'/>
<def f='linux-5.3.1/fs/lockd/host.c' l='328' ll='405' type='struct nlm_host * nlmsvc_lookup_host(const struct svc_rqst * rqstp, const char * hostname, const size_t hostname_len)'/>
<doc f='linux-5.3.1/fs/lockd/host.c' l='310'>/**
 * nlmsvc_lookup_host - Find an NLM host handle matching a remote client
 * @rqstp: incoming NLM request
 * @hostname: name of client host
 * @hostname_len: length of client hostname
 *
 * Returns an nlm_host structure that matches the [client address,
 * transport protocol, NLM version, client hostname] of the passed-in
 * NLM request.  If one doesn&apos;t already exist in the host cache, a
 * new handle is created and returned.
 *
 * Before possibly creating a new nlm_host, construct a sockaddr
 * for a specific source address in case the local system has
 * multiple network addresses.  The family of the address in
 * rq_daddr is guaranteed to be the same as the family of the
 * address in rq_addr, so it&apos;s safe to use the same family for
 * the source address.
 */</doc>
<use f='linux-5.3.1/fs/lockd/svc4proc.c' l='36' u='c' c='nlm4svc_retrieve_args'/>
<use f='linux-5.3.1/fs/lockd/svc4proc.c' l='296' u='c' c='nlm4svc_callback'/>
<use f='linux-5.3.1/fs/lockd/svcproc.c' l='65' u='c' c='nlmsvc_retrieve_args'/>
<use f='linux-5.3.1/fs/lockd/svcproc.c' l='337' u='c' c='nlmsvc_callback'/>
