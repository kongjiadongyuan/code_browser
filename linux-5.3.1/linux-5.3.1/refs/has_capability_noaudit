<dec f='linux-5.3.1/include/linux/capability.h' l='207' type='bool has_capability_noaudit(struct task_struct * t, int cap)'/>
<use f='linux-5.3.1/fs/proc/base.c' l='1088' u='c' c='__set_oom_adj'/>
<use f='linux-5.3.1/fs/proc/base.c' l='1107' u='c' c='__set_oom_adj'/>
<def f='linux-5.3.1/kernel/capability.c' l='359' ll='362' type='bool has_capability_noaudit(struct task_struct * t, int cap)'/>
<doc f='linux-5.3.1/kernel/capability.c' l='347'>/**
 * has_capability_noaudit - Does a task have a capability (unaudited) in the
 * initial user ns
 * @t: The task in question
 * @cap: The capability to be tested for
 *
 * Return true if the specified task has the given superior capability
 * currently in effect to init_user_ns, false if not.  Don&apos;t write an
 * audit message for the check.
 *
 * Note that this does not set PF_SUPERPRIV on the task.
 */</doc>
<use f='linux-5.3.1/kernel/kallsyms.c' l='656' u='c' c='kallsyms_show_value'/>
<use f='linux-5.3.1/lib/vsprintf.c' l='807' u='c' c='restricted_pointer'/>
