<dec f='linux-5.3.1/include/linux/interrupt.h' l='226' type='void enable_irq(unsigned int irq)'/>
<use f='linux-5.3.1/include/linux/interrupt.h' l='435' u='c' c='enable_irq_lockdep'/>
<use f='linux-5.3.1/include/linux/interrupt.h' l='443' u='c' c='enable_irq_lockdep_irqrestore'/>
<use f='linux-5.3.1/arch/x86/kernel/hpet.c' l='534' u='c' c='hpet_setup_msi_irq'/>
<use f='linux-5.3.1/arch/x86/kernel/i8259.c' l='117' u='c' c='make_8259A_irq'/>
<use f='linux-5.3.1/drivers/base/power/wakeirq.c' l='235' u='c' c='dev_pm_enable_wake_irq'/>
<use f='linux-5.3.1/drivers/base/power/wakeirq.c' l='288' u='c' c='dev_pm_enable_wake_irq_check'/>
<use f='linux-5.3.1/drivers/base/power/wakeirq.c' l='324' u='c' c='dev_pm_arm_wake_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5231' u='c' c='e1000_netpoll'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='6764' u='c' c='e1000_intr_msix'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='6770' u='c' c='e1000_intr_msix'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='6776' u='c' c='e1000_intr_msix'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='6801' u='c' c='e1000_netpoll'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='6806' u='c' c='e1000_netpoll'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='1076' u='c' c='nv_enable_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='1078' u='c' c='nv_enable_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='1080' u='c' c='nv_enable_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='1081' u='c' c='nv_enable_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='1082' u='c' c='nv_enable_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/realtek/8139too.c' l='2228' u='c' c='rtl8139_poll_controller'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_port.c' l='2265' u='c' c='serial8250_do_startup'/>
<def f='linux-5.3.1/kernel/irq/manage.c' l='639' ll='653' type='void enable_irq(unsigned int irq)'/>
<dec f='linux-5.3.1/kernel/irq/manage.c' l='654' type='void enable_irq(unsigned int )'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='654' c='enable_irq'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='654' u='a'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='667' u='c' c='enable_nmi'/>
<doc f='linux-5.3.1/kernel/irq/manage.c' l='628'>/**
 *	enable_irq - enable handling of an irq
 *	@irq: Interrupt to enable
 *
 *	Undoes the effect of one call to disable_irq().  If this
 *	matches the last disable, processing of interrupts on this
 *	IRQ line is re-enabled.
 *
 *	This function may be called from IRQ context only when
 *	desc-&gt;irq_data.chip-&gt;bus_lock and desc-&gt;chip-&gt;bus_sync_unlock are NULL !
 */</doc>
