<dec f='linux-5.3.1/include/linux/etherdevice.h' l='49' type='struct net_device * alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs)'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='17642' macro='1' u='c' c='tg3_init_one'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e100.c' l='2824' macro='1' u='c' c='e100_probe'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000/e1000_main.c' l='957' macro='1' u='c' c='e1000_probe'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='7100' macro='1' u='c' c='e1000_probe'/>
<use f='linux-5.3.1/drivers/net/ethernet/marvell/sky2.c' l='4723' macro='1' u='c' c='sky2_init_netdev'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='5685' macro='1' u='c' c='nv_probe'/>
<use f='linux-5.3.1/drivers/net/ethernet/realtek/8139too.c' l='776' macro='1' u='c' c='rtl8139_init_board'/>
<def f='linux-5.3.1/net/ethernet/eth.c' l='406' ll='411' type='struct net_device * alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs)'/>
<dec f='linux-5.3.1/net/ethernet/eth.c' l='412' type='struct net_device * alloc_etherdev_mqs(int , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/net/ethernet/eth.c' l='412' c='alloc_etherdev_mqs'/>
<use f='linux-5.3.1/net/ethernet/eth.c' l='412' u='a'/>
<use f='linux-5.3.1/net/ethernet/eth.c' l='429' u='c' c='devm_alloc_etherdev_mqs'/>
<doc f='linux-5.3.1/net/ethernet/eth.c' l='391'>/**
 * alloc_etherdev_mqs - Allocates and sets up an Ethernet device
 * @sizeof_priv: Size of additional driver-private structure to be allocated
 *	for this Ethernet device
 * @txqs: The number of TX queues this device has.
 * @rxqs: The number of RX queues this device has.
 *
 * Fill in the fields of the device structure with Ethernet-generic
 * values. Basically does everything except registering the device.
 *
 * Constructs a new net device, complete with a private data area of
 * size (sizeof_priv).  A 32-byte (not bit) alignment is enforced for
 * this private data area.
 */</doc>
