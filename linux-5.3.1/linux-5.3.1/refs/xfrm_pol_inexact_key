<def f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='109' ll='114'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='117'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='693' c='xfrm_policy_inexact_alloc_bin'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='1448' c='xfrm_pol_bin_key'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='1465' c='xfrm_pol_bin_cmp'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='1982' c='xfrm_policy_inexact_lookup_rcu'/>
<size>16</size>
<doc f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='72'>/* xfrm inexact policy search tree:
 * xfrm_pol_inexact_bin = hash(dir,type,family,if_id);
 *  |
 * +---- root_d: sorted by daddr:prefix
 * |                 |
 * |        xfrm_pol_inexact_node
 * |                 |
 * |                 +- root: sorted by saddr/prefix
 * |                 |              |
 * |                 |         xfrm_pol_inexact_node
 * |                 |              |
 * |                 |              + root: unused
 * |                 |              |
 * |                 |              + hhead: saddr:daddr policies
 * |                 |
 * |                 +- coarse policies and all any:daddr policies
 * |
 * +---- root_s: sorted by saddr:prefix
 * |                 |
 * |        xfrm_pol_inexact_node
 * |                 |
 * |                 + root: unused
 * |                 |
 * |                 + hhead: saddr:any policies
 * |
 * +---- coarse policies and all any:any policies
 *
 * Lookups return four candidate lists:
 * 1. any:any list from top-level xfrm_pol_inexact_bin
 * 2. any:daddr list from daddr tree
 * 3. saddr:daddr list from 2nd level daddr tree
 * 4. saddr:any list from saddr tree
 *
 * This result set then needs to be searched for the policy with
 * the lowest priority.  If two results have same prio, youngest one wins.
 */</doc>
