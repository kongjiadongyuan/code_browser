<dec f='linux-5.3.1/include/linux/dma-fence.h' l='341' type='int dma_fence_signal_locked(struct dma_fence * fence)'/>
<use f='linux-5.3.1/include/linux/dma-fence.h' l='372' u='c' c='dma_fence_is_signaled_locked'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='90' u='c' c='dma_fence_get_stub'/>
<def f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='129' ll='157' type='int dma_fence_signal_locked(struct dma_fence * fence)'/>
<dec f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='158' type='int dma_fence_signal_locked(struct dma_fence * )'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='158' c='dma_fence_signal_locked'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='158' u='a'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='267' u='c' c='dma_fence_release'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='312' u='c' c='dma_fence_enable_sw_signaling'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='370' u='c' c='dma_fence_add_callback'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='501' u='c' c='dma_fence_default_wait'/>
<doc f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='113'>/**
 * dma_fence_signal_locked - signal completion of a fence
 * @fence: the fence to signal
 *
 * Signal completion for software callbacks on a fence, this will unblock
 * dma_fence_wait() calls and run all the callbacks added with
 * dma_fence_add_callback(). Can be called multiple times, but since a fence
 * can only go from the unsignaled to the signaled state and not back, it will
 * only be effective the first time.
 *
 * Unlike dma_fence_signal(), this function must be called with &amp;dma_fence.lock
 * held.
 *
 * Returns 0 on success and a negative error value when @fence has been
 * signalled already.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_request.c' l='242' u='c' c='i915_request_retire'/>
