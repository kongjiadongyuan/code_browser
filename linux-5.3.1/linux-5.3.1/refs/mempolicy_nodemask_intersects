<dec f='linux-5.3.1/include/linux/mempolicy.h' l='155' type='bool mempolicy_nodemask_intersects(struct task_struct * tsk, const nodemask_t * mask)'/>
<def f='linux-5.3.1/mm/mempolicy.c' l='2019' ll='2051' type='bool mempolicy_nodemask_intersects(struct task_struct * tsk, const nodemask_t * mask)'/>
<doc f='linux-5.3.1/mm/mempolicy.c' l='2009'>/*
 * mempolicy_nodemask_intersects
 *
 * If tsk&apos;s mempolicy is &quot;default&quot; [NULL], return &apos;true&apos; to indicate default
 * policy.  Otherwise, check for intersection between mask and the policy
 * nodemask for &apos;bind&apos; or &apos;interleave&apos; policy.  For &apos;perferred&apos; or &apos;local&apos;
 * policy, always return true since it may allocate elsewhere on fallback.
 *
 * Takes task_lock(tsk) to prevent freeing of its mempolicy.
 */</doc>
<use f='linux-5.3.1/mm/oom_kill.c' l='104' u='c' c='oom_cpuset_eligible'/>
