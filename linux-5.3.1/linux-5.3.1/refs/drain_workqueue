<dec f='linux-5.3.1/include/linux/workqueue.h' l='451' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.h' l='2516' u='c' c='i915_gem_drain_workqueue'/>
<def f='linux-5.3.1/kernel/workqueue.c' l='2924' ll='2965' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<dec f='linux-5.3.1/kernel/workqueue.c' l='2966' type='void drain_workqueue(struct workqueue_struct * )'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='2966' c='drain_workqueue'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='2966' u='a'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='4320' u='c' c='destroy_workqueue'/>
<doc f='linux-5.3.1/kernel/workqueue.c' l='2913'>/**
 * drain_workqueue - drain a workqueue
 * @wq: workqueue to drain
 *
 * Wait until the workqueue becomes empty.  While draining is in progress,
 * only chain queueing is allowed.  IOW, only currently pending or running
 * work items on @wq can queue further work items on it.  @wq is flushed
 * repeatedly until it becomes empty.  The number of flushing is determined
 * by the depth of chaining and should be relatively short.  Whine if it
 * takes too long.
 */</doc>
