<dec f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.h' l='20' type='void intel_hpd_irq_handler(struct drm_i915_private * dev_priv, u32 pin_mask, u32 long_mask)'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='412' ll='520' type='void intel_hpd_irq_handler(struct drm_i915_private * dev_priv, u32 pin_mask, u32 long_mask)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='396'>/**
 * intel_hpd_irq_handler - main hotplug irq handler
 * @dev_priv: drm_i915_private
 * @pin_mask: a mask of hpd pins that have triggered the irq
 * @long_mask: a mask of hpd pins that may be long hpd pulses
 *
 * This is the main hotplug irq handler for all platforms. The platform specific
 * irq handlers call the platform specific hotplug irq handlers, which read and
 * decode the appropriate registers into bitmasks about hpd pins that have
 * triggered (@pin_mask), and which of those pins may be long pulses
 * (@long_mask). The @long_mask is ignored if the port corresponding to the pin
 * is not a digital port.
 *
 * Here, we do hotplug irq storm detection and mitigation, and pass further
 * processing to appropriate bottom halves.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2168' u='c' c='i9xx_hpd_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2181' u='c' c='i9xx_hpd_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2382' u='c' c='ibx_hpd_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2539' u='c' c='icp_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2575' u='c' c='spt_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2594' u='c' c='ilk_hpd_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2773' u='c' c='bxt_hpd_irq_handler'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='2805' u='c' c='gen11_hpd_irq_handler'/>
