<dec f='linux-5.3.1/include/linux/security.h' l='84' type='int cap_ptrace_access_check(struct task_struct * child, unsigned int mode)'/>
<def f='linux-5.3.1/security/commoncap.c' l='133' ll='155' type='int cap_ptrace_access_check(struct task_struct * child, unsigned int mode)'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<use f='linux-5.3.1/security/commoncap.c' l='1345'/>
<doc f='linux-5.3.1/security/commoncap.c' l='118'>/**
 * cap_ptrace_access_check - Determine whether the current process may access
 *			   another
 * @child: The process to be accessed
 * @mode: The mode of attachment.
 *
 * If we are in the same or an ancestor user_ns and have all the target
 * task&apos;s capabilities, then ptrace access is allowed.
 * If we have the ptrace capability to the target user_ns, then ptrace
 * access is allowed.
 * Else denied.
 *
 * Determine whether a process may access another, returning 0 if permission
 * granted, -ve if denied.
 */</doc>
