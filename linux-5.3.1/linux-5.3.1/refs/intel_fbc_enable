<dec f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_fbc.h' l='28' type='void intel_fbc_enable(struct intel_crtc * crtc, struct intel_crtc_state * crtc_state, struct intel_plane_state * plane_state)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='13604' u='c' c='intel_update_crtc'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_fbc.c' l='1084' ll='1124' type='void intel_fbc_enable(struct intel_crtc * crtc, struct intel_crtc_state * crtc_state, struct intel_plane_state * plane_state)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_fbc.c' l='1073'>/**
 * intel_fbc_enable: tries to enable FBC on the CRTC
 * @crtc: the CRTC
 * @crtc_state: corresponding &amp;drm_crtc_state for @crtc
 * @plane_state: corresponding &amp;drm_plane_state for the primary plane of @crtc
 *
 * This function checks if the given CRTC was chosen for FBC, then enables it if
 * possible. Notice that it doesn&apos;t activate FBC. It is valid to call
 * intel_fbc_enable multiple times for the same pipe without an
 * intel_fbc_disable in the middle, as long as it is deactivated.
 */</doc>
