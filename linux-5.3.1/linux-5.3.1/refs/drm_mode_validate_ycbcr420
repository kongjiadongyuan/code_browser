<dec f='linux-5.3.1/include/drm/drm_modes.h' l='530' type='enum drm_mode_status drm_mode_validate_ycbcr420(const struct drm_display_mode * mode, struct drm_connector * connector)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1204' ll='1218' type='enum drm_mode_status drm_mode_validate_ycbcr420(const struct drm_display_mode * mode, struct drm_connector * connector)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1219' type='enum drm_mode_status drm_mode_validate_ycbcr420(const struct drm_display_mode * , struct drm_connector * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1219' c='drm_mode_validate_ycbcr420'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1219' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1193'>/**
 * drm_mode_validate_ycbcr420 - add &apos;ycbcr420-only&apos; modes only when allowed
 * @mode: mode to check
 * @connector: drm connector under action
 *
 * This function is a helper which can be used to filter out any YCBCR420
 * only mode, when the source doesn&apos;t support it.
 *
 * Returns:
 * The mode status
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='520' u='c' c='drm_helper_probe_single_connector_modes'/>
