<dec f='linux-5.3.1/include/linux/net.h' l='236' type='struct socket * sock_alloc()'/>
<def f='linux-5.3.1/net/socket.c' l='553' ll='571' type='struct socket * sock_alloc()'/>
<dec f='linux-5.3.1/net/socket.c' l='572' type='struct socket * sock_alloc()'/>
<use f='linux-5.3.1/net/socket.c' l='572' c='sock_alloc'/>
<use f='linux-5.3.1/net/socket.c' l='572' u='a'/>
<use f='linux-5.3.1/net/socket.c' l='1217' u='c' c='sock_create_lite'/>
<use f='linux-5.3.1/net/socket.c' l='1382' u='c' c='__sock_create'/>
<use f='linux-5.3.1/net/socket.c' l='1724' u='c' c='__sys_accept4'/>
<doc f='linux-5.3.1/net/socket.c' l='545'>/**
 *	sock_alloc - allocate a socket
 *
 *	Allocate a new inode and socket object. The two are bound together
 *	and initialised. The socket is then returned. If we are out of inodes
 *	NULL is returned. This functions uses GFP_KERNEL internally.
 */</doc>
