<dec f='linux-5.3.1/include/drm/drm_gem.h' l='326' type='void drm_gem_private_object_init(struct drm_device * dev, struct drm_gem_object * obj, size_t size)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='128' u='c' c='drm_gem_object_init'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='150' ll='166' type='void drm_gem_private_object_init(struct drm_device * dev, struct drm_gem_object * obj, size_t size)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='167' type='void drm_gem_private_object_init(struct drm_device * , struct drm_gem_object * , size_t )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='167' c='drm_gem_private_object_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='167' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='140'>/**
 * drm_gem_private_object_init - initialize an allocated private GEM object
 * @dev: drm_device the object should be initialized for
 * @obj: drm_gem_object to initialize
 * @size: object size
 *
 * Initialize an already allocated GEM object of the specified size with
 * no GEM provided backing store. Instead the caller is responsible for
 * backing the object and handling it.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c' l='290' u='c' c='i915_gem_prime_import'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_internal.c' l='188' u='c' c='i915_gem_object_create_internal'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_shmem.c' l='436' u='c' c='create_shmem'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_stolen.c' l='555' u='c' c='_i915_gem_object_create_stolen'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_userptr.c' l='786' u='c' c='i915_gem_userptr_ioctl'/>
