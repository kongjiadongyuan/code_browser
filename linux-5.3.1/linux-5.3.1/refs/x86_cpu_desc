<def f='linux-5.3.1/arch/x86/include/asm/cpu_device_id.h' l='22' ll='28'/>
<use f='linux-5.3.1/arch/x86/include/asm/cpu_device_id.h' l='39' c='x86_cpu_has_min_microcode_rev'/>
<use f='linux-5.3.1/arch/x86/events/intel/core.c' l='3971'/>
<use f='linux-5.3.1/arch/x86/events/intel/core.c' l='4012'/>
<use f='linux-5.3.1/arch/x86/events/intel/core.c' l='4150'/>
<size>8</size>
<doc f='linux-5.3.1/arch/x86/include/asm/cpu_device_id.h' l='12'>/*
 * Match specific microcode revisions.
 *
 * vendor/family/model/stepping must be all set.
 *
 * Only checks against the boot CPU.  When mixed-stepping configs are
 * valid for a CPU model, add a quirk for every valid stepping and
 * do the fine-tuning in the quirk handler.
 */</doc>
<mbr r='x86_cpu_desc::x86_family' o='0' t='u8'/>
<mbr r='x86_cpu_desc::x86_vendor' o='8' t='u8'/>
<mbr r='x86_cpu_desc::x86_model' o='16' t='u8'/>
<mbr r='x86_cpu_desc::x86_stepping' o='24' t='u8'/>
<mbr r='x86_cpu_desc::x86_microcode_rev' o='32' t='u32'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/match.c' l='52' c='x86_match_cpu_with_stepping'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/match.c' l='53' c='x86_match_cpu_with_stepping'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/match.c' l='56' c='x86_match_cpu_with_stepping'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/match.c' l='72' c='x86_cpu_has_min_microcode_rev'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/match.c' l='74' c='x86_cpu_has_min_microcode_rev'/>
<size>8</size>
