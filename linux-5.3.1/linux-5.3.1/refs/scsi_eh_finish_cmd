<dec f='linux-5.3.1/include/scsi/scsi_eh.h' l='12' type='void scsi_eh_finish_cmd(struct scsi_cmnd * scmd, struct list_head * done_q)'/>
<use f='linux-5.3.1/drivers/ata/libata-eh.c' l='620' u='c' c='ata_scsi_cmd_error_handler'/>
<use f='linux-5.3.1/drivers/ata/libata-eh.c' l='1231' u='c' c='__ata_eh_qc_complete'/>
<def f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1187' ll='1190' type='void scsi_eh_finish_cmd(struct scsi_cmnd * scmd, struct list_head * done_q)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1191' type='void scsi_eh_finish_cmd(struct scsi_cmnd * , struct list_head * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1191' c='scsi_eh_finish_cmd'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1191' u='a'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1272' u='c' c='scsi_eh_get_sense'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1357' u='c' c='scsi_eh_test_devices'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1437' u='c' c='scsi_eh_stu'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1502' u='c' c='scsi_eh_bus_device_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1571' u='c' c='scsi_eh_target_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1636' u='c' c='scsi_eh_bus_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1681' u='c' c='scsi_eh_host_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1713' u='c' c='scsi_eh_offline_sdevs'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_error.c' l='1175'>/**
 * scsi_eh_finish_cmd - Handle a cmd that eh is finished with.
 * @scmd:	Original SCSI cmd that eh has finished.
 * @done_q:	Queue for processed commands.
 *
 * Notes:
 *    We don&apos;t want to use the normal command completion while we are are
 *    still handling errors - it may cause other commands to be queued,
 *    and that would disturb what we are doing.  Thus we really want to
 *    keep a list of pending commands for final completion, and once we
 *    are ready to leave error handling we handle completion for real.
 */</doc>
