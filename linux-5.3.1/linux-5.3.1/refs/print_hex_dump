<dec f='linux-5.3.1/include/linux/printk.h' l='488' type='void print_hex_dump(const char * level, const char * prefix_str, int prefix_type, int rowsize, int groupsize, const void * buf, size_t len, bool ascii)'/>
<use f='linux-5.3.1/arch/x86/kernel/mpparse.c' l='196' u='c' c='smp_dump_mptable'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='1936' u='c' c='ata_dev_read_id'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='397' u='c' c='drm_dp_sideband_msg_build'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_edid.c' l='1452' u='c' c='drm_edid_block_valid'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_edid.c' l='1571' u='c' c='connector_bad_edid'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000/e1000_main.c' l='736' u='c' c='e1000_dump_eeprom'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='185' u='c' c='e1000e_dump_ps_pages'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='314' u='c' c='e1000e_dump'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='458' u='c' c='e1000e_dump'/>
<use f='linux-5.3.1/drivers/pci/probe.c' l='1693' u='c' c='early_dump_pci_device'/>
<use f='linux-5.3.1/drivers/usb/core/devio.c' l='485' u='c' c='snoop_urb'/>
<use f='linux-5.3.1/drivers/usb/core/devio.c' l='499' u='c' c='snoop_urb_data'/>
<use f='linux-5.3.1/drivers/usb/core/devio.c' l='506' u='c' c='snoop_urb_data'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='1126' u='c' c='ext4_destroy_inode'/>
<def f='linux-5.3.1/lib/hexdump.c' l='239' ll='270' type='void print_hex_dump(const char * level, const char * prefix_str, int prefix_type, int rowsize, int groupsize, const void * buf, size_t len, bool ascii)'/>
<dec f='linux-5.3.1/lib/hexdump.c' l='271' type='void print_hex_dump(const char * , const char * , int , int , int , const void * , size_t , bool )'/>
<use f='linux-5.3.1/lib/hexdump.c' l='271' c='print_hex_dump'/>
<use f='linux-5.3.1/lib/hexdump.c' l='271' u='a'/>
<use f='linux-5.3.1/lib/hexdump.c' l='289' u='c' c='print_hex_dump_bytes'/>
<doc f='linux-5.3.1/lib/hexdump.c' l='208'>/**
 * print_hex_dump - print a text hex dump to syslog for a binary blob of data
 * @level: kernel log level (e.g. KERN_DEBUG)
 * @prefix_str: string to prefix each line with;
 *  caller supplies trailing spaces for alignment if desired
 * @prefix_type: controls whether prefix of an offset, address, or none
 *  is printed (%DUMP_PREFIX_OFFSET, %DUMP_PREFIX_ADDRESS, %DUMP_PREFIX_NONE)
 * @rowsize: number of bytes to print per line; must be 16 or 32
 * @groupsize: number of bytes to print at a time (1, 2, 4, 8; default = 1)
 * @buf: data blob to dump
 * @len: number of bytes in the @buf
 * @ascii: include ASCII after the hex output
 *
 * Given a buffer of u8 data, print_hex_dump() prints a hex + ASCII dump
 * to the kernel log at the specified kernel log level, with an optional
 * leading prefix.
 *
 * print_hex_dump() works on one &quot;line&quot; of output at a time, i.e.,
 * 16 or 32 bytes of input data converted to hex + ASCII output.
 * print_hex_dump() iterates over the entire input @buf, breaking it into
 * &quot;line size&quot; chunks to format and print.
 *
 * E.g.:
 *   print_hex_dump(KERN_DEBUG, &quot;raw data: &quot;, DUMP_PREFIX_ADDRESS,
 *		    16, 1, frame-&gt;data, frame-&gt;len, true);
 *
 * Example output using %DUMP_PREFIX_OFFSET and 1-byte mode:
 * 0009ab42: 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f  @ABCDEFGHIJKLMNO
 * Example output using %DUMP_PREFIX_ADDRESS and 4-byte mode:
 * ffffffff88089af0: 73727170 77767574 7b7a7978 7f7e7d7c  pqrstuvwxyz{|}~.
 */</doc>
<use f='linux-5.3.1/mm/debug.c' l='93' u='c' c='__dump_page'/>
<use f='linux-5.3.1/mm/slub.c' l='531' u='c' c='print_section'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='769' u='c' c='skb_dump'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='774' u='c' c='skb_dump'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='779' u='c' c='skb_dump'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='793' u='c' c='skb_dump'/>
<use f='linux-5.3.1/net/ipv4/route.c' l='1769' u='c' c='ip_handle_martian_source'/>
