<dec f='linux-5.3.1/include/linux/phy.h' l='783' type='int phy_modify_changed(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<def f='linux-5.3.1/drivers/net/phy/phy-core.c' l='488' ll='497' type='int phy_modify_changed(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-core.c' l='498' type='int phy_modify_changed(struct phy_device * , u32 , u16 , u16 )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='498' c='phy_modify_changed'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='498' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-core.c' l='475'>/**
 * phy_modify_changed - Function for modifying a PHY register
 * @phydev: the phy_device struct
 * @regnum: register number to modify
 * @mask: bit mask of bits to clear
 * @set: new value of bits set in mask to write to @regnum
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 *
 * Returns negative errno, 0 if there was no change, and 1 in case of change
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='1581' u='c' c='genphy_config_advert'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='1609' u='c' c='genphy_config_advert'/>
