<dec f='linux-5.3.1/include/linux/dma-fence.h' l='518' type='long dma_fence_wait_timeout(struct dma_fence * , bool intr, long timeout)'/>
<use f='linux-5.3.1/include/linux/dma-fence.h' l='548' u='c' c='dma_fence_wait'/>
<def f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='219' ll='234' type='long dma_fence_wait_timeout(struct dma_fence * fence, bool intr, long timeout)'/>
<dec f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='235' type='long dma_fence_wait_timeout(struct dma_fence * , bool , long )'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='235' c='dma_fence_wait_timeout'/>
<use f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='235' u='a'/>
<doc f='linux-5.3.1/drivers/dma-buf/dma-fence.c' l='201'>/**
 * dma_fence_wait_timeout - sleep until the fence gets signaled
 * or until timeout elapses
 * @fence: the fence to wait on
 * @intr: if true, do an interruptible wait
 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT
 *
 * Returns -ERESTARTSYS if interrupted, 0 if the wait timed out, or the
 * remaining timeout in jiffies on success. Other error values may be
 * returned on custom implementations.
 *
 * Performs a synchronous wait on this fence. It is assumed the caller
 * directly or indirectly (buf-mgr between reservation and committing)
 * holds a reference to the fence, otherwise the fence might be
 * freed before return, resulting in undefined behavior.
 *
 * See also dma_fence_wait() and dma_fence_wait_any_timeout().
 */</doc>
<use f='linux-5.3.1/drivers/dma-buf/reservation.c' l='498' u='c' c='reservation_object_wait_timeout_rcu'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_wait.c' l='28' u='c' c='i915_gem_object_wait_fence'/>
