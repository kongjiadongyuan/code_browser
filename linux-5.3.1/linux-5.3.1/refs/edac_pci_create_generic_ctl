<dec f='linux-5.3.1/drivers/edac/edac_pci.h' l='243' type='struct edac_pci_ctl_info * edac_pci_create_generic_ctl(struct device * dev, const char * mod_name)'/>
<doc f='linux-5.3.1/drivers/edac/edac_pci.h' l='227'>/**
 * edac_pci_create_generic_ctl()
 *	A generic constructor for a PCI parity polling device
 *	Some systems have more than one domain of PCI busses.
 *	For systems with one domain, then this API will
 *	provide for a generic poller.
 *
 * @dev: pointer to struct &amp;device;
 * @mod_name: name of the PCI device
 *
 * This routine calls the edac_pci_alloc_ctl_info() for
 * the generic device, with default values
 *
 * Returns: Pointer to struct &amp;edac_pci_ctl_info on success, %NULL on
 *	failure.
 */</doc>
<def f='linux-5.3.1/drivers/edac/edac_pci.c' l='302' ll='331' type='struct edac_pci_ctl_info * edac_pci_create_generic_ctl(struct device * dev, const char * mod_name)'/>
<dec f='linux-5.3.1/drivers/edac/edac_pci.c' l='332' type='struct edac_pci_ctl_info * edac_pci_create_generic_ctl(struct device * , const char * )'/>
<use f='linux-5.3.1/drivers/edac/edac_pci.c' l='332' c='edac_pci_create_generic_ctl'/>
<use f='linux-5.3.1/drivers/edac/edac_pci.c' l='332' u='a'/>
