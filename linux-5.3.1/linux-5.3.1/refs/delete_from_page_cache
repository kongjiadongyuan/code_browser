<dec f='linux-5.3.1/include/linux/pagemap.h' l='601' type='void delete_from_page_cache(struct page * page)'/>
<use f='linux-5.3.1/fs/hugetlbfs/inode.c' l='352' u='c' c='remove_huge_page'/>
<def f='linux-5.3.1/mm/filemap.c' l='264' ll='275' type='void delete_from_page_cache(struct page * page)'/>
<dec f='linux-5.3.1/mm/filemap.c' l='276' type='void delete_from_page_cache(struct page * )'/>
<use f='linux-5.3.1/mm/filemap.c' l='276' c='delete_from_page_cache'/>
<use f='linux-5.3.1/mm/filemap.c' l='276' u='a'/>
<doc f='linux-5.3.1/mm/filemap.c' l='256'>/**
 * delete_from_page_cache - delete page from page cache
 * @page: the page which the kernel is trying to remove from page cache
 *
 * This must be called only on pages that have been verified to be in the page
 * cache and locked.  It will never put the page into the free list, the caller
 * has a reference on the page.
 */</doc>
<use f='linux-5.3.1/mm/shmem.c' l='1925' u='c' c='shmem_getpage_gfp'/>
<use f='linux-5.3.1/mm/shmem.c' l='2406' u='c' c='shmem_mfill_atomic_pte'/>
<use f='linux-5.3.1/mm/truncate.c' l='228' u='c' c='truncate_inode_page'/>
