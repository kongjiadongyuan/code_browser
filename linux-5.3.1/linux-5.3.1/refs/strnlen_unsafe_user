<dec f='linux-5.3.1/include/linux/uaccess.h' l='272' type='long strnlen_unsafe_user(const void * unsafe_addr, long count)'/>
<use f='linux-5.3.1/kernel/trace/trace_kprobe.c' l='872' u='c' c='fetch_store_strlen_user'/>
<def f='linux-5.3.1/mm/maccess.c' l='206' ll='218' type='long strnlen_unsafe_user(const void * unsafe_addr, long count)'/>
<doc f='linux-5.3.1/mm/maccess.c' l='190'>/**
 * strnlen_unsafe_user: - Get the size of a user string INCLUDING final NUL.
 * @unsafe_addr: The string to measure.
 * @count: Maximum count (including NUL)
 *
 * Get the size of a NUL-terminated string in user space without pagefault.
 *
 * Returns the size of the string INCLUDING the terminating NUL.
 *
 * If the string is too long, returns a number larger than @count. User
 * has to check the return value against &quot;&gt; count&quot;.
 * On exception (or invalid count), returns 0.
 *
 * Unlike strnlen_user, this can be used from IRQ handler etc. because
 * it disables pagefaults.
 */</doc>
