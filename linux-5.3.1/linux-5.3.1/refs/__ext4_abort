<dec f='linux-5.3.1/fs/ext4/ext4.h' l='2663' type='void __ext4_abort(struct super_block * , const char * , unsigned int , const char * )'/>
<use f='linux-5.3.1/fs/ext4/ext4_jbd2.c' l='61' macro='1' u='c' c='ext4_journal_check_start'/>
<use f='linux-5.3.1/fs/ext4/ext4_jbd2.c' l='237' u='c' c='__ext4_forget'/>
<def f='linux-5.3.1/fs/ext4/super.c' l='672' ll='708' type='void __ext4_abort(struct super_block * sb, const char * function, unsigned int line, const char * fmt)'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='986' macro='1' u='c' c='ext4_put_super'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='5328' macro='1' u='c' c='ext4_remount'/>
<doc f='linux-5.3.1/fs/ext4/super.c' l='662'>/*
 * ext4_abort is a much stronger failure handler than ext4_error.  The
 * abort function may be used to deal with unrecoverable failures such
 * as journal IO errors or ENOMEM at a critical moment in log management.
 *
 * We unconditionally force the filesystem into an ABORT|READONLY state,
 * unless the error response on the fs has been set to panic in which
 * case we take the easy way out and panic immediately.
 */</doc>
