<dec f='linux-5.3.1/include/net/cfg80211.h' l='6956' type='void cfg80211_tdls_oper_request(struct net_device * dev, const u8 * peer, enum nl80211_tdls_operation oper, u16 reason_code, gfp_t gfp)'/>
<doc f='linux-5.3.1/include/net/cfg80211.h' l='6941'>/*
 * cfg80211_tdls_oper_request - request userspace to perform TDLS operation
 * @dev: the device on which the operation is requested
 * @peer: the MAC address of the peer device
 * @oper: the requested TDLS operation (NL80211_TDLS_SETUP or
 *	NL80211_TDLS_TEARDOWN)
 * @reason_code: the reason code for teardown request
 * @gfp: allocation flags
 *
 * This function is used to request userspace to perform TDLS operation that
 * requires knowledge of keys, i.e., link setup or teardown when the AP
 * connection uses encryption. This is optional mechanism for the driver to use
 * if it can automatically determine when a TDLS link could be useful (e.g.,
 * based on traffic and signal strength for a peer).
 */</doc>
<use f='linux-5.3.1/net/mac80211/tdls.c' l='1454' u='c' c='ieee80211_tdls_oper_request'/>
<def f='linux-5.3.1/net/wireless/nl80211.c' l='16482' ll='16520' type='void cfg80211_tdls_oper_request(struct net_device * dev, const u8 * peer, enum nl80211_tdls_operation oper, u16 reason_code, gfp_t gfp)'/>
<dec f='linux-5.3.1/net/wireless/nl80211.c' l='16521' type='void cfg80211_tdls_oper_request(struct net_device * , const u8 * , enum nl80211_tdls_operation , u16 , gfp_t )'/>
<use f='linux-5.3.1/net/wireless/nl80211.c' l='16521' c='cfg80211_tdls_oper_request'/>
<use f='linux-5.3.1/net/wireless/nl80211.c' l='16521' u='a'/>
