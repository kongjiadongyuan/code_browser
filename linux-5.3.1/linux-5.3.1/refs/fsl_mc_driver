<def f='linux-5.3.1/include/linux/fsl/mc.h' l='38' ll='46'/>
<use f='linux-5.3.1/include/linux/fsl/mc.h' l='379' c='__fsl_mc_driver_register'/>
<use f='linux-5.3.1/include/linux/fsl/mc.h' l='382' c='fsl_mc_driver_unregister'/>
<size>176</size>
<doc f='linux-5.3.1/include/linux/fsl/mc.h' l='24'>/**
 * struct fsl_mc_driver - MC object device driver object
 * @driver: Generic device driver
 * @match_id_table: table of supported device matching Ids
 * @probe: Function called when a device is added
 * @remove: Function called when a device is removed
 * @shutdown: Function called at shutdown time to quiesce the device
 * @suspend: Function called when a device is stopped
 * @resume: Function called when a device is resumed
 *
 * Generic DPAA device driver object for device drivers that are registered
 * with a DPRC bus. This structure is to be embedded in each device-specific
 * driver structure.
 */</doc>
<mbr r='fsl_mc_driver::driver' o='0' t='struct device_driver'/>
<mbr r='fsl_mc_driver::match_id_table' o='1024' t='const struct fsl_mc_device_id *'/>
<mbr r='fsl_mc_driver::probe' o='1088' t='int (*)(struct fsl_mc_device *)'/>
<mbr r='fsl_mc_driver::remove' o='1152' t='int (*)(struct fsl_mc_device *)'/>
<mbr r='fsl_mc_driver::shutdown' o='1216' t='void (*)(struct fsl_mc_device *)'/>
<mbr r='fsl_mc_driver::suspend' o='1280' t='int (*)(struct fsl_mc_device *, pm_message_t)'/>
<mbr r='fsl_mc_driver::resume' o='1344' t='int (*)(struct fsl_mc_device *)'/>
