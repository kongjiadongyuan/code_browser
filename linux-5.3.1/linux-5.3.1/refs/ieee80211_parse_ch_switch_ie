<dec f='linux-5.3.1/net/mac80211/ieee80211_i.h' l='1893' type='int ieee80211_parse_ch_switch_ie(struct ieee80211_sub_if_data * sdata, struct ieee802_11_elems * elems, enum nl80211_band current_band, u32 sta_flags, u8 * bssid, struct ieee80211_csa_ie * csa_ie)'/>
<doc f='linux-5.3.1/net/mac80211/ieee80211_i.h' l='1877'>/**
 * ieee80211_parse_ch_switch_ie - parses channel switch IEs
 * @sdata: the sdata of the interface which has received the frame
 * @elems: parsed 802.11 elements received with the frame
 * @current_band: indicates the current band
 * @sta_flags: contains information about own capabilities and restrictions
 *	to decide which channel switch announcements can be accepted. Only the
 *	following subset of &amp;enum ieee80211_sta_flags are evaluated:
 *	%IEEE80211_STA_DISABLE_HT, %IEEE80211_STA_DISABLE_VHT,
 *	%IEEE80211_STA_DISABLE_40MHZ, %IEEE80211_STA_DISABLE_80P80MHZ,
 *	%IEEE80211_STA_DISABLE_160MHZ.
 * @bssid: the currently connected bssid (for reporting)
 * @csa_ie: parsed 802.11 csa elements on count, mode, chandef and mesh ttl.
	All of them will be filled with if success only.
 * Return: 0 on success, &lt;0 on error and &gt;0 if there is nothing to parse.
 */</doc>
<use f='linux-5.3.1/net/mac80211/ibss.c' l='809' u='c' c='ieee80211_ibss_process_chanswitch'/>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='1307' u='c' c='ieee80211_sta_process_chanswitch'/>
<def f='linux-5.3.1/net/mac80211/spectmgmt.c' l='22' ll='184' type='int ieee80211_parse_ch_switch_ie(struct ieee80211_sub_if_data * sdata, struct ieee802_11_elems * elems, enum nl80211_band current_band, u32 sta_flags, u8 * bssid, struct ieee80211_csa_ie * csa_ie)'/>
