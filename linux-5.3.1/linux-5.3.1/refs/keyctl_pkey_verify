<dec f='linux-5.3.1/security/keys/internal.h' l='298' type='long keyctl_pkey_verify(const struct keyctl_pkey_params * , const char * , const void * , const void * )'/>
<use f='linux-5.3.1/security/keys/compat.c' l='155' u='c' c='__do_compat_sys_keyctl'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='1845' u='c' c='__do_sys_keyctl'/>
<def f='linux-5.3.1/security/keys/keyctl_pkey.c' l='282' ll='321' type='long keyctl_pkey_verify(const struct keyctl_pkey_params * _params, const char * _info, const void * _in, const void * _in2)'/>
<doc f='linux-5.3.1/security/keys/keyctl_pkey.c' l='265'>/*
 * Verify a signature.
 *
 * Verify a public key signature using the given key, or if not given, search
 * for a matching key.
 *
 * _info is a string of supplementary information in key=val format.  For
 * instance, it might contain:
 *
 *	&quot;enc=pkcs1 hash=sha256&quot;
 *
 * where enc= specifies the signature blob encoding and hash= selects the OID
 * to go in that particular encoding.  If enc= isn&apos;t supplied, it&apos;s assumed
 * that the caller is supplying raw values.
 *
 * If successful, 0 is returned.
 */</doc>
