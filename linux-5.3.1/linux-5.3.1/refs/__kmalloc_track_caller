<dec f='linux-5.3.1/include/linux/slab.h' l='698' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<doc f='linux-5.3.1/include/linux/slab.h' l='690'>/*
 * kmalloc_track_caller is a special version of kmalloc that records the
 * calling function of the routine calling it for slab leak tracking instead
 * of just the calling function (confusing, eh?).
 * It&apos;s useful when the call to kmalloc comes from a widely-used standard
 * allocator where we care about the real place the memory allocation
 * request comes from.
 */</doc>
<use f='linux-5.3.1/lib/kasprintf.c' l='25' macro='1' u='c' c='kvasprintf'/>
<use f='linux-5.3.1/mm/slab_common.c' l='1601' macro='1' u='c' c='__do_krealloc'/>
<def f='linux-5.3.1/mm/slub.c' l='4322' ll='4341' type='void * __kmalloc_track_caller(size_t size, gfp_t gfpflags, unsigned long caller)'/>
<use f='linux-5.3.1/mm/util.c' l='53' macro='1' u='c' c='kstrdup'/>
<use f='linux-5.3.1/mm/util.c' l='98' macro='1' u='c' c='kstrndup'/>
<use f='linux-5.3.1/mm/util.c' l='120' macro='1' u='c' c='kmemdup'/>
<use f='linux-5.3.1/mm/util.c' l='143' macro='1' u='c' c='kmemdup_nul'/>
<use f='linux-5.3.1/mm/util.c' l='165' macro='1' u='c' c='memdup_user'/>
<use f='linux-5.3.1/mm/util.c' l='252' macro='1' u='c' c='memdup_user_nul'/>
