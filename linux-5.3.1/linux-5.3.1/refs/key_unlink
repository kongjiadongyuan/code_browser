<dec f='linux-5.3.1/include/linux/key.h' l='370' type='int key_unlink(struct key * keyring, struct key * key)'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='576' u='c' c='keyctl_keyring_unlink'/>
<def f='linux-5.3.1/security/keys/keyring.c' l='1544' ll='1561' type='int key_unlink(struct key * keyring, struct key * key)'/>
<dec f='linux-5.3.1/security/keys/keyring.c' l='1562' type='int key_unlink(struct key * , struct key * )'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1562' c='key_unlink'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1562' u='a'/>
<doc f='linux-5.3.1/security/keys/keyring.c' l='1527'>/**
 * key_unlink - Unlink the first link to a key from a keyring.
 * @keyring: The keyring to remove the link from.
 * @key: The key the link is to.
 *
 * Remove a link from a keyring to a key.
 *
 * This function will write-lock the keyring&apos;s semaphore.
 *
 * Returns 0 if successful, -ENOTDIR if the keyring isn&apos;t a keyring, -ENOENT if
 * the key isn&apos;t linked to by the keyring or -ENOMEM if there&apos;s insufficient
 * memory.
 *
 * It is assumed that the caller has checked that it is permitted for a link to
 * be removed (the keyring should have Write permission; no permissions are
 * required on the key).
 */</doc>
