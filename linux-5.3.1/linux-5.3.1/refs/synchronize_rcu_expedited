<dec f='linux-5.3.1/include/linux/rcutree.h' l='35' type='void synchronize_rcu_expedited()'/>
<use f='linux-5.3.1/drivers/acpi/osl.c' l='372' u='c' c='acpi_os_map_cleanup'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='844' u='c' c='__i915_gem_set_wedged'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='1382' u='c' c='i915_handle_error'/>
<use f='linux-5.3.1/drivers/md/dm-stats.c' l='433' u='c' c='dm_stats_delete'/>
<use f='linux-5.3.1/drivers/md/dm.c' l='719' u='c' c='dm_sync_table'/>
<use f='linux-5.3.1/fs/namespace.c' l='1375' u='c' c='namespace_unlock'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2676' u='c' c='synchronize_rcu'/>
<def f='linux-5.3.1/kernel/rcu/tree_exp.h' l='793' ll='838' type='void synchronize_rcu_expedited()'/>
<dec f='linux-5.3.1/kernel/rcu/tree_exp.h' l='839' type='void synchronize_rcu_expedited()'/>
<use f='linux-5.3.1/kernel/rcu/tree_exp.h' l='839' c='synchronize_rcu_expedited'/>
<use f='linux-5.3.1/kernel/rcu/tree_exp.h' l='839' u='a'/>
<doc f='linux-5.3.1/kernel/rcu/tree_exp.h' l='773'>/**
 * synchronize_rcu_expedited - Brute-force RCU grace period
 *
 * Wait for an RCU grace period, but expedite it.  The basic idea is to
 * IPI all non-idle non-nohz online CPUs.  The IPI handler checks whether
 * the CPU is in an RCU critical section, and if so, it sets a flag that
 * causes the outermost rcu_read_unlock() to report the quiescent state
 * for RCU-preempt or asks the scheduler for help for RCU-sched.  On the
 * other hand, if the CPU is not in an RCU read-side critical section,
 * the IPI handler reports the quiescent state immediately.
 *
 * Although this is a greate improvement over previous expedited
 * implementations, it is still unfriendly to real-time workloads, so is
 * thus not recommended for any sort of common-case code.  In fact, if
 * you are using synchronize_rcu_expedited() in a loop, please restructure
 * your code to batch your updates, and then Use a single synchronize_rcu()
 * instead.
 *
 * This has the same semantics as (but is more brutal than) synchronize_rcu().
 */</doc>
<use f='linux-5.3.1/kernel/rcu/update.c' l='194' u='c' c='rcu_test_sync_prims'/>
<use f='linux-5.3.1/mm/backing-dev.c' l='924' u='c' c='bdi_remove_from_list'/>
<use f='linux-5.3.1/net/core/dev.c' l='9270' u='c' c='synchronize_net'/>
