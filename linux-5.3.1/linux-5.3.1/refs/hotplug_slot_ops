<def f='linux-5.3.1/include/linux/pci_hotplug.h' l='38' ll='48'/>
<use f='linux-5.3.1/include/linux/pci_hotplug.h' l='57'/>
<size>72</size>
<doc f='linux-5.3.1/include/linux/pci_hotplug.h' l='17'>/**
 * struct hotplug_slot_ops -the callbacks that the hotplug pci core can use
 * @enable_slot: Called when the user wants to enable a specific pci slot
 * @disable_slot: Called when the user wants to disable a specific pci slot
 * @set_attention_status: Called to set the specific slot&apos;s attention LED to
 * the specified value
 * @hardware_test: Called to run a specified hardware test on the specified
 * slot.
 * @get_power_status: Called to get the current power status of a slot.
 * @get_attention_status: Called to get the current attention status of a slot.
 * @get_latch_status: Called to get the current latch status of a slot.
 * @get_adapter_status: Called to get see if an adapter is present in the slot or not.
 * @reset_slot: Optional interface to allow override of a bus reset for the
 *	slot for cases where a secondary bus reset can result in spurious
 *	hotplug events or where a slot can be reset independent of the bus.
 *
 * The table of function pointers that is passed to the hotplug pci core by a
 * hotplug pci driver.  These functions are called by the hotplug pci core when
 * the user wants to do something to a specific slot (query it for information,
 * set an LED, enable / disable power, etc.)
 */</doc>
<mbr r='hotplug_slot_ops::enable_slot' o='0' t='int (*)(struct hotplug_slot *)'/>
<mbr r='hotplug_slot_ops::disable_slot' o='64' t='int (*)(struct hotplug_slot *)'/>
<mbr r='hotplug_slot_ops::set_attention_status' o='128' t='int (*)(struct hotplug_slot *, u8)'/>
<mbr r='hotplug_slot_ops::hardware_test' o='192' t='int (*)(struct hotplug_slot *, u32)'/>
<mbr r='hotplug_slot_ops::get_power_status' o='256' t='int (*)(struct hotplug_slot *, u8 *)'/>
<mbr r='hotplug_slot_ops::get_attention_status' o='320' t='int (*)(struct hotplug_slot *, u8 *)'/>
<mbr r='hotplug_slot_ops::get_latch_status' o='384' t='int (*)(struct hotplug_slot *, u8 *)'/>
<mbr r='hotplug_slot_ops::get_adapter_status' o='448' t='int (*)(struct hotplug_slot *, u8 *)'/>
<mbr r='hotplug_slot_ops::reset_slot' o='512' t='int (*)(struct hotplug_slot *, int)'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='52' c='get_power_status'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='52' c='get_attention_status'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='52' c='get_latch_status'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='52' c='get_adapter_status'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='140' c='attention_write_file'/>
<size>72</size>
<use f='linux-5.3.1/drivers/platform/x86/eeepc-laptop.c' l='723'/>
<size>72</size>
