<dec f='linux-5.3.1/include/linux/sunrpc/clnt.h' l='201' type='int rpc_localaddr(struct rpc_clnt * , struct sockaddr * , size_t )'/>
<use f='linux-5.3.1/fs/nfs/nfs4client.c' l='404' u='c' c='nfs4_init_client'/>
<use f='linux-5.3.1/fs/nfs/nfs4client.c' l='1275' u='c' c='nfs4_update_server'/>
<def f='linux-5.3.1/net/sunrpc/clnt.c' l='1437' ll='1460' type='int rpc_localaddr(struct rpc_clnt * clnt, struct sockaddr * buf, size_t buflen)'/>
<dec f='linux-5.3.1/net/sunrpc/clnt.c' l='1461' type='int rpc_localaddr(struct rpc_clnt * , struct sockaddr * , size_t )'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1461' c='rpc_localaddr'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1461' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/clnt.c' l='1421'>/**
 * rpc_localaddr - discover local endpoint address for an RPC client
 * @clnt: RPC client structure
 * @buf: target buffer
 * @buflen: size of target buffer, in bytes
 *
 * Returns zero and fills in &quot;buf&quot; and &quot;buflen&quot; if successful;
 * otherwise, a negative errno is returned.
 *
 * This works even if the underlying transport is not currently connected,
 * or if the upper layer never previously provided a source address.
 *
 * The result of this function call is transient: multiple calls in
 * succession may give different results, depending on how local
 * networking configuration changes over time.
 */</doc>
