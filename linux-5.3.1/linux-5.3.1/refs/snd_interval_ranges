<dec f='linux-5.3.1/include/sound/pcm.h' l='956' type='int snd_interval_ranges(struct snd_interval * i, unsigned int count, const struct snd_interval * list, unsigned int mask)'/>
<def f='linux-5.3.1/sound/core/pcm_lib.c' l='1032' ll='1069' type='int snd_interval_ranges(struct snd_interval * i, unsigned int count, const struct snd_interval * ranges, unsigned int mask)'/>
<dec f='linux-5.3.1/sound/core/pcm_lib.c' l='1070' type='int snd_interval_ranges(struct snd_interval * , unsigned int , const struct snd_interval * , unsigned int )'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1070' c='snd_interval_ranges'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1070' u='a'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1274' u='c' c='snd_pcm_hw_rule_ranges'/>
<doc f='linux-5.3.1/sound/core/pcm_lib.c' l='1018'>/**
 * snd_interval_ranges - refine the interval value from the list of ranges
 * @i: the interval value to refine
 * @count: the number of elements in the list of ranges
 * @ranges: the ranges list
 * @mask: the bit-mask to evaluate
 *
 * Refines the interval value from the list of ranges.
 * When mask is non-zero, only the elements corresponding to bit 1 are
 * evaluated.
 *
 * Return: Positive if the value is changed, zero if it&apos;s not changed, or a
 * negative error code.
 */</doc>
