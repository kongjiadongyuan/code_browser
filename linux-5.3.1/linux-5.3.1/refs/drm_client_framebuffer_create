<dec f='linux-5.3.1/include/drm/drm_client.h' l='150' type='struct drm_client_buffer * drm_client_framebuffer_create(struct drm_client_dev * client, u32 width, u32 height, u32 format)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='407' ll='424' type='struct drm_client_buffer * drm_client_framebuffer_create(struct drm_client_dev * client, u32 width, u32 height, u32 format)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='425' type='struct drm_client_buffer * drm_client_framebuffer_create(struct drm_client_dev * , u32 , u32 , u32 )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='425' c='drm_client_framebuffer_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='425' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='393'>/**
 * drm_client_framebuffer_create - Create a client framebuffer
 * @client: DRM client
 * @width: Framebuffer width
 * @height: Framebuffer height
 * @format: Buffer format
 *
 * This function creates a &amp;drm_client_buffer which consists of a
 * &amp;drm_framebuffer backed by a dumb buffer.
 * Call drm_client_framebuffer_delete() to free the buffer.
 *
 * Returns:
 * Pointer to a client buffer or an error pointer on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='2209' u='c' c='drm_fb_helper_generic_probe'/>
