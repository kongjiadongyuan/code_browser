<dec f='linux-5.3.1/include/linux/regmap.h' l='1048' type='void regcache_cache_bypass(struct regmap * map, bool enable)'/>
<def f='linux-5.3.1/drivers/base/regmap/regcache.c' l='538' ll='545' type='void regcache_cache_bypass(struct regmap * map, bool enable)'/>
<dec f='linux-5.3.1/drivers/base/regmap/regcache.c' l='546' type='void regcache_cache_bypass(struct regmap * , bool )'/>
<use f='linux-5.3.1/drivers/base/regmap/regcache.c' l='546' c='regcache_cache_bypass'/>
<use f='linux-5.3.1/drivers/base/regmap/regcache.c' l='546' u='a'/>
<doc f='linux-5.3.1/drivers/base/regmap/regcache.c' l='527'>/**
 * regcache_cache_bypass - Put a register map into cache bypass mode
 *
 * @map: map to configure
 * @enable: flag if changes should not be written to the cache
 *
 * When a register map is marked with the cache bypass option, writes
 * to the register map API will only update the hardware and not the
 * the cache directly.  This is useful when syncing the cache back to
 * the hardware.
 */</doc>
