<def f='linux-5.3.1/include/linux/fb.h' l='232' ll='300'/>
<use f='linux-5.3.1/include/linux/fb.h' l='479'/>
<size>184</size>
<doc f='linux-5.3.1/include/linux/fb.h' l='218'>/*
 * Frame buffer operations
 *
 * LOCKING NOTE: those functions must _ALL_ be called with the console
 * semaphore held, this is the only suitable locking mechanism we have
 * in 2.6. Some may be called at interrupt time at this point though.
 *
 * The exception to this is the debug related hooks.  Putting the fb
 * into a debug state (e.g. flipping to the kernel console) and restoring
 * it must be done in a lock-free manner, so low level drivers should
 * keep track of the initial console (if applicable) and may need to
 * perform direct, unlocked hardware writes in these hooks.
 */</doc>
<mbr r='fb_ops::owner' o='0' t='struct module *'/>
<mbr r='fb_ops::fb_open' o='64' t='int (*)(struct fb_info *, int)'/>
<mbr r='fb_ops::fb_release' o='128' t='int (*)(struct fb_info *, int)'/>
<mbr r='fb_ops::fb_read' o='192' t='ssize_t (*)(struct fb_info *, char *, size_t, loff_t *)'/>
<mbr r='fb_ops::fb_write' o='256' t='ssize_t (*)(struct fb_info *, const char *, size_t, loff_t *)'/>
<mbr r='fb_ops::fb_check_var' o='320' t='int (*)(struct fb_var_screeninfo *, struct fb_info *)'/>
<mbr r='fb_ops::fb_set_par' o='384' t='int (*)(struct fb_info *)'/>
<mbr r='fb_ops::fb_setcolreg' o='448' t='int (*)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, struct fb_info *)'/>
<mbr r='fb_ops::fb_setcmap' o='512' t='int (*)(struct fb_cmap *, struct fb_info *)'/>
<mbr r='fb_ops::fb_blank' o='576' t='int (*)(int, struct fb_info *)'/>
<mbr r='fb_ops::fb_pan_display' o='640' t='int (*)(struct fb_var_screeninfo *, struct fb_info *)'/>
<mbr r='fb_ops::fb_fillrect' o='704' t='void (*)(struct fb_info *, const struct fb_fillrect *)'/>
<mbr r='fb_ops::fb_copyarea' o='768' t='void (*)(struct fb_info *, const struct fb_copyarea *)'/>
<mbr r='fb_ops::fb_imageblit' o='832' t='void (*)(struct fb_info *, const struct fb_image *)'/>
<mbr r='fb_ops::fb_cursor' o='896' t='int (*)(struct fb_info *, struct fb_cursor *)'/>
<mbr r='fb_ops::fb_sync' o='960' t='int (*)(struct fb_info *)'/>
<mbr r='fb_ops::fb_ioctl' o='1024' t='int (*)(struct fb_info *, unsigned int, unsigned long)'/>
<mbr r='fb_ops::fb_compat_ioctl' o='1088' t='int (*)(struct fb_info *, unsigned int, unsigned long)'/>
<mbr r='fb_ops::fb_mmap' o='1152' t='int (*)(struct fb_info *, struct vm_area_struct *)'/>
<mbr r='fb_ops::fb_get_caps' o='1216' t='void (*)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *)'/>
<mbr r='fb_ops::fb_destroy' o='1280' t='void (*)(struct fb_info *)'/>
<mbr r='fb_ops::fb_debug_enter' o='1344' t='int (*)(struct fb_info *)'/>
<mbr r='fb_ops::fb_debug_leave' o='1408' t='int (*)(struct fb_info *)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='701' c='drm_fb_helper_defio_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='2038' c='drm_fb_helper_fbdev_teardown'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='2114' c='drm_fbdev_cleanup'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='2162'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='2229' c='drm_fb_helper_generic_probe'/>
<size>184</size>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_fbdev.c' l='102'/>
<size>184</size>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1092' c='do_fb_ioctl'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1305' c='fb_compat_ioctl'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1345' c='fb_mmap'/>
<size>184</size>
<use f='linux-5.3.1/drivers/video/fbdev/efifb.c' l='273'/>
<size>184</size>
