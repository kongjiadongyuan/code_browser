<dec f='linux-5.3.1/include/linux/pci_hotplug.h' l='77' type='int pci_hp_add(struct hotplug_slot * slot)'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='414' u='c' c='__pci_hp_register'/>
<def f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='477' ll='492' type='int pci_hp_add(struct hotplug_slot * slot)'/>
<dec f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='493' type='int pci_hp_add(struct hotplug_slot * )'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='493' c='pci_hp_add'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='493' u='a'/>
<doc f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='467'>/**
 * pci_hp_add - publish hotplug slot to user space
 * @slot: pointer to the &amp;struct hotplug_slot to publish
 *
 * Make a hotplug slot&apos;s sysfs interface available and inform user space of its
 * addition by sending a uevent.  The hotplug driver must be prepared to handle
 * all &amp;struct hotplug_slot_ops callbacks from this point on.
 *
 * Returns 0 on success or a negative int on error.
 */</doc>
