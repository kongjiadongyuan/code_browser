<dec f='linux-5.3.1/include/linux/sunrpc/gss_api.h' l='62' type='u32 gss_wrap(struct gss_ctx * ctx_id, int offset, struct xdr_buf * outbuf, struct page ** inpages)'/>
<use f='linux-5.3.1/net/sunrpc/auth_gss/auth_gss.c' l='1862' u='c' c='gss_wrap_req_priv'/>
<def f='linux-5.3.1/net/sunrpc/auth_gss/gss_mech_switch.c' l='428' ll='436' type='u32 gss_wrap(struct gss_ctx * ctx_id, int offset, struct xdr_buf * buf, struct page ** inpages)'/>
<doc f='linux-5.3.1/net/sunrpc/auth_gss/gss_mech_switch.c' l='414'>/*
 * This function is called from both the client and server code.
 * Each makes guarantees about how much &quot;slack&quot; space is available
 * for the underlying function in &quot;buf&quot;&apos;s head and tail while
 * performing the wrap.
 *
 * The client and server code allocate RPC_MAX_AUTH_SIZE extra
 * space in both the head and tail which is available for use by
 * the wrap function.
 *
 * Underlying functions should verify they do not use more than
 * RPC_MAX_AUTH_SIZE of extra space in either the head or tail
 * when performing the wrap.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/auth_gss/svcauth_gss.c' l='1720' u='c' c='svcauth_gss_wrap_resp_priv'/>
