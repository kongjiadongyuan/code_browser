<dec f='linux-5.3.1/include/linux/clk.h' l='500' type='int clk_bulk_enable(int num_clks, const struct clk_bulk_data * clks)'/>
<use f='linux-5.3.1/include/linux/clk.h' l='929' u='c' c='clk_bulk_prepare_enable'/>
<doc f='linux-5.3.1/include/linux/clk.h' l='491'>/**
 * clk_bulk_enable - inform the system when the set of clks should be running.
 * @num_clks: the number of clk_bulk_data
 * @clks: the clk_bulk_data table of consumer
 *
 * May be called from atomic contexts.
 *
 * Returns success (0) or negative errno.
 */</doc>
<def f='linux-5.3.1/drivers/clk/clk-bulk.c' l='224' ll='244' type='int clk_bulk_enable(int num_clks, const struct clk_bulk_data * clks)'/>
<dec f='linux-5.3.1/drivers/clk/clk-bulk.c' l='245' type='int clk_bulk_enable(int , const struct clk_bulk_data * )'/>
<use f='linux-5.3.1/drivers/clk/clk-bulk.c' l='245' c='clk_bulk_enable'/>
<use f='linux-5.3.1/drivers/clk/clk-bulk.c' l='245' u='a'/>
<doc f='linux-5.3.1/drivers/clk/clk-bulk.c' l='216'>/**
 * clk_bulk_enable - ungate a set of clocks
 * @num_clks: the number of clk_bulk_data
 * @clks: the clk_bulk_data table being ungated
 *
 * clk_bulk_enable must not sleep
 * Returns 0 on success, -EERROR otherwise.
 */</doc>
