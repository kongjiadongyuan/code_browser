<dec f='linux-5.3.1/include/linux/fs.h' l='2698' type='int write_inode_now(struct inode * , int )'/>
<use f='linux-5.3.1/fs/block_dev.c' l='65' u='c' c='bdev_write_inode'/>
<use f='linux-5.3.1/fs/fat/file.c' l='251' u='c' c='fat_cont_expand'/>
<def f='linux-5.3.1/fs/fs-writeback.c' l='2484' ll='2498' type='int write_inode_now(struct inode * inode, int sync)'/>
<dec f='linux-5.3.1/fs/fs-writeback.c' l='2499' type='int write_inode_now(struct inode * , int )'/>
<use f='linux-5.3.1/fs/fs-writeback.c' l='2499' c='write_inode_now'/>
<use f='linux-5.3.1/fs/fs-writeback.c' l='2499' u='a'/>
<doc f='linux-5.3.1/fs/fs-writeback.c' l='2474'>/**
 * write_inode_now	-	write an inode to disk
 * @inode: inode to write to disk
 * @sync: whether the write should be synchronous or not
 *
 * This function commits an inode to disk immediately if it is dirty. This is
 * primarily needed by knfsd.
 *
 * The caller must either have a ref on the inode or must have set I_WILL_FREE.
 */</doc>
<use f='linux-5.3.1/fs/inode.c' l='1549' u='c' c='iput_final'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1891' u='c' c='nfs_unlink'/>
