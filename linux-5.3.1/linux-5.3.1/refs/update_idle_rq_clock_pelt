<def f='linux-5.3.1/kernel/sched/pelt.h' l='97' ll='115' type='void update_idle_rq_clock_pelt(struct rq * rq)'/>
<doc f='linux-5.3.1/kernel/sched/pelt.h' l='88'>/*
 * When rq becomes idle, we have to check if it has lost idle time
 * because it was fully busy. A rq is fully used when the /Sum util_sum
 * is greater or equal to:
 * (LOAD_AVG_MAX - 1024 + rq-&gt;cfs.avg.period_contrib) &lt;&lt; SCHED_CAPACITY_SHIFT;
 * For optimization and computing rounding purpose, we don&apos;t take into account
 * the position in the current window (period_contrib) and we use the higher
 * bound of util_sum to decide.
 */</doc>
<use f='linux-5.3.1/kernel/sched/fair.c' l='6928' u='c' c='pick_next_task_fair'/>
