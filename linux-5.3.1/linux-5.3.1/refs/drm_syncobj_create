<def f='linux-5.3.1/include/uapi/drm/drm.h' l='719' ll='723'/>
<size>8</size>
<mbr r='drm_syncobj_create::handle' o='0' t='__u32'/>
<mbr r='drm_syncobj_create::flags' o='32' t='__u32'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='685' macro='1'/>
<size>8</size>
<dec f='linux-5.3.1/include/drm/drm_syncobj.h' l='126' type='int drm_syncobj_create(struct drm_syncobj ** out_syncobj, uint32_t flags, struct dma_fence * fence)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='328' ll='349' type='int drm_syncobj_create(struct drm_syncobj ** out_syncobj, uint32_t flags, struct dma_fence * fence)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='350' type='int drm_syncobj_create(struct drm_syncobj ** , uint32_t , struct dma_fence * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='350' c='drm_syncobj_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='350' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='394' u='c' c='drm_syncobj_create_as_handle'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='610' c='drm_syncobj_create_ioctl'/>
<size>8</size>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='316'>/**
 * drm_syncobj_create - create a new syncobj
 * @out_syncobj: returned syncobj
 * @flags: DRM_SYNCOBJ_* flags
 * @fence: if non-NULL, the syncobj will represent this fence
 *
 * This is the first function to create a sync object. After creating, drivers
 * probably want to make it available to userspace, either through
 * drm_syncobj_get_handle() or drm_syncobj_get_fd().
 *
 * Returns 0 on success or a negative error value on failure.
 */</doc>
