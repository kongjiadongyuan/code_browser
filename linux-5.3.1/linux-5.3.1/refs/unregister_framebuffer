<dec f='linux-5.3.1/include/linux/fb.h' l='612' type='void unregister_framebuffer(struct fb_info * fb_info)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='556' u='c' c='drm_fb_helper_unregister_fbi'/>
<def f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1861' ll='1867' type='void unregister_framebuffer(struct fb_info * fb_info)'/>
<dec f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1868' type='void unregister_framebuffer(struct fb_info * )'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1868' c='unregister_framebuffer'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1868' u='a'/>
<doc f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1845'>/**
 *	unregister_framebuffer - releases a frame buffer device
 *	@fb_info: frame buffer info structure
 *
 *	Unregisters a frame buffer device @fb_info.
 *
 *	Returns negative errno on error, or zero for success.
 *
 *      This function will also notify the framebuffer console
 *      to release the driver.
 *
 *      This is meant to be called within a driver&apos;s module_exit()
 *      function. If this is called outside module_exit(), ensure
 *      that the driver implements fb_open() and fb_release() to
 *      check that no processes are using the device.
 */</doc>
<use f='linux-5.3.1/drivers/video/fbdev/efifb.c' l='616' u='c' c='efifb_remove'/>
