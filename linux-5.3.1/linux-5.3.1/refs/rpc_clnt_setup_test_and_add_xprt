<dec f='linux-5.3.1/include/linux/sunrpc/clnt.h' l='221' type='int rpc_clnt_setup_test_and_add_xprt(struct rpc_clnt * , struct rpc_xprt_switch * , struct rpc_xprt * , void * )'/>
<def f='linux-5.3.1/net/sunrpc/clnt.c' l='2826' ll='2869' type='int rpc_clnt_setup_test_and_add_xprt(struct rpc_clnt * clnt, struct rpc_xprt_switch * xps, struct rpc_xprt * xprt, void * data)'/>
<dec f='linux-5.3.1/net/sunrpc/clnt.c' l='2870' type='int rpc_clnt_setup_test_and_add_xprt(struct rpc_clnt * , struct rpc_xprt_switch * , struct rpc_xprt * , void * )'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='2870' c='rpc_clnt_setup_test_and_add_xprt'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='2870' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/clnt.c' l='2808'>/**
 * rpc_clnt_setup_test_and_add_xprt()
 *
 * This is an rpc_clnt_add_xprt setup() function which returns 1 so:
 *   1) caller of the test function must dereference the rpc_xprt_switch
 *   and the rpc_xprt.
 *   2) test function must call rpc_xprt_switch_add_xprt, usually in
 *   the rpc_call_done routine.
 *
 * Upon success (return of 1), the test function adds the new
 * transport to the rpc_clnt xprt switch
 *
 * @clnt: struct rpc_clnt to get the new transport
 * @xps:  the rpc_xprt_switch to hold the new transport
 * @xprt: the rpc_xprt to test
 * @data: a struct rpc_add_xprt_test pointer that holds the test function
 *        and test function call data
 */</doc>
