<dec f='linux-5.3.1/include/drm/drm_format_helper.h' l='28' type='void drm_fb_xrgb8888_to_gray8(u8 * dst, void * vaddr, struct drm_framebuffer * fb, struct drm_rect * clip)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='287' ll='322' type='void drm_fb_xrgb8888_to_gray8(u8 * dst, void * vaddr, struct drm_framebuffer * fb, struct drm_rect * clip)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='323' type='void drm_fb_xrgb8888_to_gray8(u8 * , void * , struct drm_framebuffer * , struct drm_rect * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='323' c='drm_fb_xrgb8888_to_gray8'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='323' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='271'>/**
 * drm_fb_xrgb8888_to_gray8 - Convert XRGB8888 to grayscale
 * @dst: 8-bit grayscale destination buffer
 * @vaddr: XRGB8888 source buffer
 * @fb: DRM framebuffer
 * @clip: Clip rectangle area to copy
 *
 * Drm doesn&apos;t have native monochrome or grayscale support.
 * Such drivers can announce the commonly supported XR24 format to userspace
 * and use this function to convert to the native format.
 *
 * Monochrome drivers will use the most significant bit,
 * where 1 means foreground color and 0 background color.
 *
 * ITU BT.601 is used for the RGB -&gt; luma (brightness) conversion.
 */</doc>
