<dec f='linux-5.3.1/include/linux/rtmutex.h' l='121' type='int rt_mutex_trylock(struct rt_mutex * lock)'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='649' u='c' c='i2c_adapter_trylock_bus'/>
<def f='linux-5.3.1/kernel/locking/rtmutex.c' l='1583' ll='1595' type='int rt_mutex_trylock(struct rt_mutex * lock)'/>
<dec f='linux-5.3.1/kernel/locking/rtmutex.c' l='1596' type='int rt_mutex_trylock(struct rt_mutex * )'/>
<use f='linux-5.3.1/kernel/locking/rtmutex.c' l='1596' c='rt_mutex_trylock'/>
<use f='linux-5.3.1/kernel/locking/rtmutex.c' l='1596' u='a'/>
<doc f='linux-5.3.1/kernel/locking/rtmutex.c' l='1572'>/**
 * rt_mutex_trylock - try to lock a rt_mutex
 *
 * @lock:	the rt_mutex to be locked
 *
 * This function can only be called in thread context. It&apos;s safe to
 * call it from atomic regions, but not from hard interrupt or soft
 * interrupt context.
 *
 * Returns 1 on success and 0 on contention
 */</doc>
