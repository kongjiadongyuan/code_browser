<dec f='linux-5.3.1/include/linux/capability.h' l='212' type='bool ns_capable_noaudit(struct user_namespace * ns, int cap)'/>
<def f='linux-5.3.1/kernel/capability.c' l='412' ll='415' type='bool ns_capable_noaudit(struct user_namespace * ns, int cap)'/>
<dec f='linux-5.3.1/kernel/capability.c' l='416' type='bool ns_capable_noaudit(struct user_namespace * , int )'/>
<use f='linux-5.3.1/kernel/capability.c' l='416' c='ns_capable_noaudit'/>
<use f='linux-5.3.1/kernel/capability.c' l='416' u='a'/>
<doc f='linux-5.3.1/kernel/capability.c' l='400'>/**
 * ns_capable_noaudit - Determine if the current task has a superior capability
 * (unaudited) in effect
 * @ns:  The usernamespace we want the capability in
 * @cap: The capability to be tested for
 *
 * Return true if the current task has the given superior capability currently
 * available for use, false if not.
 *
 * This sets PF_SUPERPRIV on the task if the capability is available on the
 * assumption that it&apos;s about to be used.
 */</doc>
<use f='linux-5.3.1/net/sysctl_net.c' l='48' u='c' c='net_ctl_permissions'/>
