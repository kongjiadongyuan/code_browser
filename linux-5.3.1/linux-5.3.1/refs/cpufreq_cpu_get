<dec f='linux-5.3.1/include/linux/cpufreq.h' l='163' type='struct cpufreq_policy * cpufreq_cpu_get(unsigned int cpu)'/>
<def f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='210' ll='231' type='struct cpufreq_policy * cpufreq_cpu_get(unsigned int cpu)'/>
<dec f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='232' type='struct cpufreq_policy * cpufreq_cpu_get(unsigned int )'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='232' c='cpufreq_cpu_get'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='232' u='a'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='274' u='c' c='cpufreq_cpu_acquire'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='1687' u='c' c='cpufreq_quick_get'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='1705' u='c' c='cpufreq_quick_get_max'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='1733' u='c' c='cpufreq_get'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='2334' u='c' c='cpufreq_get_policy'/>
<doc f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='199'>/**
 * cpufreq_cpu_get - Return policy for a CPU and mark it as busy.
 * @cpu: CPU to find the policy for.
 *
 * Call cpufreq_cpu_get_raw() to obtain a cpufreq policy for @cpu and increment
 * the kobject reference counter of that policy.  Return a valid policy on
 * success or NULL on failure.
 *
 * The policy returned by this function has to be released with the help of
 * cpufreq_cpu_put() to balance its kobject reference counter properly.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_pm.c' l='7492' u='c' c='gen6_update_ring_freq'/>
