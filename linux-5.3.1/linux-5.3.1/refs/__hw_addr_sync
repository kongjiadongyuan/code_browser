<dec f='linux-5.3.1/include/linux/netdevice.h' l='4101' type='int __hw_addr_sync(struct netdev_hw_addr_list * to_list, struct netdev_hw_addr_list * from_list, int addr_len)'/>
<doc f='linux-5.3.1/include/linux/netdevice.h' l='4100'>/* General hardware address lists handling functions */</doc>
<def f='linux-5.3.1/net/core/dev_addr_lists.c' l='192' ll='208' type='int __hw_addr_sync(struct netdev_hw_addr_list * to_list, struct netdev_hw_addr_list * from_list, int addr_len)'/>
<dec f='linux-5.3.1/net/core/dev_addr_lists.c' l='209' type='int __hw_addr_sync(struct netdev_hw_addr_list * , struct netdev_hw_addr_list * , int )'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='209' c='__hw_addr_sync'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='209' u='a'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='641' u='c' c='dev_uc_sync'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='862' u='c' c='dev_mc_sync'/>
<doc f='linux-5.3.1/net/core/dev_addr_lists.c' l='187'>/* This function only works where there is a strict 1-1 relationship
 * between source and destionation of they synch. If you ever need to
 * sync addresses to more then 1 destination, you need to use
 * __hw_addr_sync_multiple().
 */</doc>
<use f='linux-5.3.1/net/mac80211/iface.c' l='1100' u='c' c='ieee80211_set_multicast_list'/>
