<dec f='linux-5.3.1/include/net/netfilter/nf_nat_helper.h' l='11' type='bool __nf_nat_mangle_tcp_packet(struct sk_buff * skb, struct nf_conn * ct, enum ip_conntrack_info ctinfo, unsigned int protoff, unsigned int match_offset, unsigned int match_len, const char * rep_buffer, unsigned int rep_len, bool adjust)'/>
<use f='linux-5.3.1/include/net/netfilter/nf_nat_helper.h' l='26' u='c' c='nf_nat_mangle_tcp_packet'/>
<doc f='linux-5.3.1/include/net/netfilter/nf_nat_helper.h' l='10'>/* These return true or false. */</doc>
<def f='linux-5.3.1/net/netfilter/nf_nat_helper.c' l='86' ll='122' type='bool __nf_nat_mangle_tcp_packet(struct sk_buff * skb, struct nf_conn * ct, enum ip_conntrack_info ctinfo, unsigned int protoff, unsigned int match_offset, unsigned int match_len, const char * rep_buffer, unsigned int rep_len, bool adjust)'/>
<dec f='linux-5.3.1/net/netfilter/nf_nat_helper.c' l='123' type='bool __nf_nat_mangle_tcp_packet(struct sk_buff * , struct nf_conn * , enum ip_conntrack_info , unsigned int , unsigned int , unsigned int , const char * , unsigned int , bool )'/>
<use f='linux-5.3.1/net/netfilter/nf_nat_helper.c' l='123' c='__nf_nat_mangle_tcp_packet'/>
<use f='linux-5.3.1/net/netfilter/nf_nat_helper.c' l='123' u='a'/>
<doc f='linux-5.3.1/net/netfilter/nf_nat_helper.c' l='78'>/* Generic function for mangling variable-length address changes inside
 * NATed TCP connections (like the PORT XXX,XXX,XXX,XXX,XXX,XXX
 * command in FTP).
 *
 * Takes care about all the nasty sequence number changes, checksumming,
 * skb enlargement, ...
 *
 * */</doc>
<use f='linux-5.3.1/net/netfilter/nf_nat_sip.c' l='50' u='c' c='mangle_packet'/>
