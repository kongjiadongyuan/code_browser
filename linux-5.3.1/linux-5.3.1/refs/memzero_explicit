<dec f='linux-5.3.1/include/linux/string.h' l='230' type='void memzero_explicit(void * s, size_t count)'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='601' u='c' c='ahash_request_zero'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='957' u='c' c='shash_desc_zero'/>
<use f='linux-5.3.1/include/crypto/skcipher.h' l='523' u='c' c='skcipher_request_zero'/>
<use f='linux-5.3.1/crypto/authenc.c' l='114' u='c' c='crypto_authenc_setkey'/>
<use f='linux-5.3.1/crypto/authencesn.c' l='88' u='c' c='crypto_authenc_esn_setkey'/>
<use f='linux-5.3.1/include/crypto/des.h' l='41' u='c' c='__des3_verify_key'/>
<use f='linux-5.3.1/crypto/drbg.c' l='1107' u='c' c='drbg_async_seed'/>
<use f='linux-5.3.1/crypto/drbg.c' l='1199' u='c' c='drbg_seed'/>
<use f='linux-5.3.1/crypto/ghash-generic.c' l='47' u='c' c='ghash_setkey'/>
<use f='linux-5.3.1/crypto/sha1_generic.c' l='40' u='c' c='sha1_generic_block_fn'/>
<use f='linux-5.3.1/crypto/sha256_generic.c' l='226' u='c' c='sha256_transform'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1026' u='c' c='crng_reseed'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1149' u='c' c='extract_crng_user'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1538' u='c' c='extract_buf'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1550' u='c' c='extract_buf'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1578' u='c' c='_extract_entropy'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1664' u='c' c='extract_entropy_user'/>
<use f='linux-5.3.1/drivers/char/random.c' l='1722' u='c' c='_get_random_bytes'/>
<def f='linux-5.3.1/lib/string.c' l='763' ll='767' type='void memzero_explicit(void * s, size_t count)'/>
<dec f='linux-5.3.1/lib/string.c' l='768' type='void memzero_explicit(void * , size_t )'/>
<use f='linux-5.3.1/lib/string.c' l='768' c='memzero_explicit'/>
<use f='linux-5.3.1/lib/string.c' l='768' u='a'/>
<doc f='linux-5.3.1/lib/string.c' l='749'>/**
 * memzero_explicit - Fill a region of memory (e.g. sensitive
 *		      keying data) with 0s.
 * @s: Pointer to the start of the area.
 * @count: The size of the area.
 *
 * Note: usually using memset() is just fine (!), but in cases
 * where clearing out _local_ data at the end of a scope is
 * necessary, memzero_explicit() should be used instead in
 * order to prevent the compiler from optimising away zeroing.
 *
 * memzero_explicit() doesn&apos;t need an arch-specific version as
 * it just invokes the one of memset() implicitly.
 */</doc>
<use f='linux-5.3.1/net/mac80211/wep.c' l='120' u='c' c='ieee80211_wep_encrypt_data'/>
<use f='linux-5.3.1/net/mac80211/wep.c' l='174' u='c' c='ieee80211_wep_decrypt_data'/>
<use f='linux-5.3.1/security/keys/gc.c' l='156' u='c' c='key_gc_unused_keys'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='146' u='c' c='__do_sys_add_key'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='1160' u='c' c='keyctl_instantiate_key_common'/>
