<dec f='linux-5.3.1/include/linux/sched/signal.h' l='485' type='int set_user_sigmask(const sigset_t * umask, size_t sigsetsize)'/>
<use f='linux-5.3.1/fs/aio.c' l='2105' u='c' c='__do_sys_io_pgetevents'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='2321' u='c' c='__do_sys_epoll_pwait'/>
<use f='linux-5.3.1/fs/io_uring.c' l='2493' u='c' c='io_cqring_wait'/>
<use f='linux-5.3.1/fs/select.c' l='755' u='c' c='do_pselect'/>
<use f='linux-5.3.1/fs/select.c' l='1097' u='c' c='__do_sys_ppoll'/>
<def f='linux-5.3.1/kernel/signal.c' l='2964' ll='2980' type='int set_user_sigmask(const sigset_t * umask, size_t sigsetsize)'/>
<doc f='linux-5.3.1/kernel/signal.c' l='2955'>/*
 * The api helps set app-provided sigmasks.
 *
 * This is useful for syscalls such as ppoll, pselect, io_pgetevents and
 * epoll_pwait where a new sigmask is passed from userland for the syscalls.
 *
 * Note that it does set_restore_sigmask() in advance, so it must be always
 * paired with restore_saved_sigmask_unless() before return from syscall.
 */</doc>
