<dec f='linux-5.3.1/include/linux/netdevice.h' l='4110' type='int __hw_addr_ref_sync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *, int) sync, int (*)(struct net_device *, const unsigned char *, int) unsync)'/>
<def f='linux-5.3.1/net/core/dev_addr_lists.c' l='292' ll='334' type='int __hw_addr_ref_sync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *, int) sync, int (*)(struct net_device *, const unsigned char *, int) unsync)'/>
<dec f='linux-5.3.1/net/core/dev_addr_lists.c' l='335' type='int __hw_addr_ref_sync_dev(struct netdev_hw_addr_list * , struct net_device * , int (*)(struct net_device *, const unsigned char *, int) , int (*)(struct net_device *, const unsigned char *, int) )'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='335' c='__hw_addr_ref_sync_dev'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='335' u='a'/>
<doc f='linux-5.3.1/net/core/dev_addr_lists.c' l='276'>/**
 *  __hw_addr_ref_sync_dev - Synchronize device&apos;s multicast address list taking
 *  into account references
 *  @list: address list to synchronize
 *  @dev:  device to sync
 *  @sync: function to call if address or reference on it should be added
 *  @unsync: function to call if address or some reference on it should removed
 *
 *  This function is intended to be called from the ndo_set_rx_mode
 *  function of devices that require explicit address or references on it
 *  add/remove notifications. The unsync function may be NULL in which case
 *  the addresses or references on it requiring removal will simply be
 *  removed without any notification to the device. That is responsibility of
 *  the driver to identify and distribute address or references on it between
 *  internal address tables.
 **/</doc>
