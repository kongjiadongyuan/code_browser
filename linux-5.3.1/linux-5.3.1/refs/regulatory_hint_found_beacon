<dec f='linux-5.3.1/net/wireless/reg.h' l='86' type='int regulatory_hint_found_beacon(struct wiphy * wiphy, struct ieee80211_channel * beacon_chan, gfp_t gfp)'/>
<doc f='linux-5.3.1/net/wireless/reg.h' l='68'>/**
 * regulatory_hint_found_beacon - hints a beacon was found on a channel
 * @wiphy: the wireless device where the beacon was found on
 * @beacon_chan: the channel on which the beacon was found on
 * @gfp: context flags
 *
 * This informs the wireless core that a beacon from an AP was found on
 * the channel provided. This allows the wireless core to make educated
 * guesses on regulatory to help with world roaming. This is only used for
 * world roaming -- when we do not know our current location. This is
 * only useful on channels 12, 13 and 14 on the 2 GHz band as channels
 * 1-11 are already enabled by the world regulatory domain; and on
 * non-radar 5 GHz channels.
 *
 * Drivers do not need to call this, cfg80211 will do it for after a scan
 * on a newly found BSS. If you cannot make use of this feature you can
 * set the wiphy-&gt;disable_beacon_hints to true.
 */</doc>
<def f='linux-5.3.1/net/wireless/reg.c' l='3337' ll='3380' type='int regulatory_hint_found_beacon(struct wiphy * wiphy, struct ieee80211_channel * beacon_chan, gfp_t gfp)'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1437' u='c' c='cfg80211_inform_single_bss_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1440' u='c' c='cfg80211_inform_single_bss_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1855' u='c' c='cfg80211_inform_single_bss_frame_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1858' u='c' c='cfg80211_inform_single_bss_frame_data'/>
