<dec f='linux-5.3.1/include/linux/phy.h' l='1142' type='void phy_request_interrupt(struct phy_device * phydev)'/>
<def f='linux-5.3.1/drivers/net/phy/phy.c' l='815' ll='833' type='void phy_request_interrupt(struct phy_device * phydev)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy.c' l='834' type='void phy_request_interrupt(struct phy_device * )'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='834' c='phy_request_interrupt'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='834' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/phy.c' l='807'>/**
 * phy_request_interrupt - request and enable interrupt for a PHY device
 * @phydev: target phy_device struct
 *
 * Description: Request and enable the interrupt for the given PHY.
 *   If this fails, then we set irq to PHY_POLL.
 *   This should only be called with a valid IRQ number.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='960' u='c' c='phy_connect_direct'/>
