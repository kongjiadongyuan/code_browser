<dec f='linux-5.3.1/arch/x86/include/asm/io_apic.h' l='145' type='unsigned long'/>
<use f='linux-5.3.1/arch/x86/kernel/apic/io_apic.c' l='258' u='w' c='arch_early_ioapic_init'/>
<use f='linux-5.3.1/arch/x86/kernel/apic/io_apic.c' l='1180' macro='1' u='r' c='IO_APIC_get_PCI_irq_vector'/>
<use f='linux-5.3.1/arch/x86/kernel/apic/io_apic.c' l='1974' macro='1' u='r' c='init_IO_APIC_traps'/>
<use f='linux-5.3.1/arch/x86/kernel/apic/io_apic.c' l='2361' u='w' c='setup_IO_APIC'/>
<use f='linux-5.3.1/arch/x86/kernel/apic/vector.c' l='723' u='a' c='__setup_vector_irq'/>
<def f='linux-5.3.1/arch/x86/kernel/i8259.c' l='56' type='unsigned long'/>
<use f='linux-5.3.1/arch/x86/kernel/i8259.c' l='115' u='w' c='make_8259A_irq'/>
<doc f='linux-5.3.1/arch/x86/kernel/i8259.c' l='47'>/*
 * Not all IRQs can be routed through the IO-APIC, eg. on certain (older)
 * boards the timer interrupt is not really connected to any IO-APIC pin,
 * it&apos;s fed to the master 8259A&apos;s IR0 line only.
 *
 * Any &apos;1&apos; bit in this mask means the IRQ is routed through the IO-APIC.
 * this &apos;mixed mode&apos; IRQ handling costs nothing because it&apos;s only used
 * at IRQ setup time.
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/topology.c' l='135' macro='1' u='r' c='arch_register_cpu'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='899' macro='1' u='r' c='pcibios_lookup_irq'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1052' macro='1' u='r' c='pcibios_fixup_irqs'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1152' macro='1' u='r' c='pcibios_irq_init'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1160' macro='1' u='r' c='pcibios_irq_init'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1205' macro='1' u='r' c='pirq_enable_irq'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1208' macro='1' u='r' c='pirq_enable_irq'/>
<use f='linux-5.3.1/arch/x86/pci/irq.c' l='1282' macro='1' u='r' c='pirq_disable_irq'/>
