<def f='linux-5.3.1/include/linux/rhashtable.h' l='826' ll='837' type='int rhashtable_insert_fast(struct rhashtable * ht, struct rhash_head * obj, const struct rhashtable_params params)'/>
<doc f='linux-5.3.1/include/linux/rhashtable.h' l='811'>/**
 * rhashtable_insert_fast - insert object into hash table
 * @ht:		hash table
 * @obj:	pointer to hash head inside object
 * @params:	hash table parameters
 *
 * Will take the per bucket bitlock to protect against mutual mutations
 * on the same bucket. Multiple insertions may occur in parallel unless
 * they map to the same bucket.
 *
 * It is safe to call this function from atomic context.
 *
 * Will trigger an automatic deferred table resizing if residency in the
 * table grows beyond 70%.
 */</doc>
<use f='linux-5.3.1/ipc/util.c' l='308' u='c' c='ipc_addid'/>
<use f='linux-5.3.1/net/sched/cls_api.c' l='614' u='c' c='tc_indr_block_dev_get'/>
