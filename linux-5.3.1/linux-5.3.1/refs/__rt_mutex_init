<dec f='linux-5.3.1/include/linux/rtmutex.h' l='106' type='void __rt_mutex_init(struct rt_mutex * lock, const char * name, struct lock_class_key * key)'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='1325' macro='1' u='c' c='i2c_register_adapter'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='1326' macro='1' u='c' c='i2c_register_adapter'/>
<def f='linux-5.3.1/kernel/locking/rtmutex.c' l='1677' ll='1686' type='void __rt_mutex_init(struct rt_mutex * lock, const char * name, struct lock_class_key * key)'/>
<dec f='linux-5.3.1/kernel/locking/rtmutex.c' l='1687' type='void __rt_mutex_init(struct rt_mutex * , const char * , struct lock_class_key * )'/>
<use f='linux-5.3.1/kernel/locking/rtmutex.c' l='1687' c='__rt_mutex_init'/>
<use f='linux-5.3.1/kernel/locking/rtmutex.c' l='1687' u='a'/>
<use f='linux-5.3.1/kernel/locking/rtmutex.c' l='1706' u='c' c='rt_mutex_init_proxy_locked'/>
<doc f='linux-5.3.1/kernel/locking/rtmutex.c' l='1668'>/**
 * __rt_mutex_init - initialize the rt lock
 *
 * @lock: the rt lock to be initialized
 *
 * Initialize the rt lock to unlocked state.
 *
 * Initializing of a locked rt lock is not allowed
 */</doc>
