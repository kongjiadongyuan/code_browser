<dec f='linux-5.3.1/include/linux/pm_runtime.h' l='36' type='int pm_runtime_force_resume(struct device * dev)'/>
<def f='linux-5.3.1/drivers/base/power/runtime.c' l='1781' ll='1807' type='int pm_runtime_force_resume(struct device * dev)'/>
<dec f='linux-5.3.1/drivers/base/power/runtime.c' l='1808' type='int pm_runtime_force_resume(struct device * )'/>
<use f='linux-5.3.1/drivers/base/power/runtime.c' l='1808' c='pm_runtime_force_resume'/>
<use f='linux-5.3.1/drivers/base/power/runtime.c' l='1808' u='a'/>
<doc f='linux-5.3.1/drivers/base/power/runtime.c' l='1769'>/**
 * pm_runtime_force_resume - Force a device into resume state if needed.
 * @dev: Device to resume.
 *
 * Prior invoking this function we expect the user to have brought the device
 * into low power state by a call to pm_runtime_force_suspend(). Here we reverse
 * those actions and bring the device into full power, if it is expected to be
 * used on system resume.  In the other case, we defer the resume to be managed
 * via runtime PM.
 *
 * Typically this function may be invoked from a system resume callback.
 */</doc>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2954' u='c' c='hda_codec_force_resume'/>
