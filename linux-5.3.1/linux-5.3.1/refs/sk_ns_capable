<dec f='linux-5.3.1/include/net/sock.h' l='2519' type='bool sk_ns_capable(const struct sock * sk, struct user_namespace * user_ns, int cap)'/>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='1875' u='c' c='rtnl_get_net_ns_capable'/>
<def f='linux-5.3.1/net/core/sock.c' l='156' ll='161' type='bool sk_ns_capable(const struct sock * sk, struct user_namespace * user_ns, int cap)'/>
<dec f='linux-5.3.1/net/core/sock.c' l='162' type='bool sk_ns_capable(const struct sock * , struct user_namespace * , int )'/>
<use f='linux-5.3.1/net/core/sock.c' l='162' c='sk_ns_capable'/>
<use f='linux-5.3.1/net/core/sock.c' l='162' u='a'/>
<use f='linux-5.3.1/net/core/sock.c' l='175' u='c' c='sk_capable'/>
<use f='linux-5.3.1/net/core/sock.c' l='190' u='c' c='sk_net_capable'/>
<doc f='linux-5.3.1/net/core/sock.c' l='146'>/**
 * sk_ns_capable - General socket capability test
 * @sk: Socket to use a capability on or through
 * @user_ns: The user namespace of the capability to use
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket had when the socket was
 * created and the current process has the capability @cap in the user
 * namespace @user_ns.
 */</doc>
