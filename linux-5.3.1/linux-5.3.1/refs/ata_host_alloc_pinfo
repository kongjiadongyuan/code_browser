<dec f='linux-5.3.1/include/linux/libata.h' l='1095' type='struct ata_host * ata_host_alloc_pinfo(struct device * dev, const struct ata_port_info *const * ppi, int n_ports)'/>
<use f='linux-5.3.1/drivers/ata/ahci.c' l='1795' u='c' c='ahci_init_one'/>
<def f='linux-5.3.1/drivers/ata/libata-core.c' l='6169' ll='6199' type='struct ata_host * ata_host_alloc_pinfo(struct device * dev, const struct ata_port_info *const * ppi, int n_ports)'/>
<dec f='linux-5.3.1/drivers/ata/libata-core.c' l='7293' type='struct ata_host * ata_host_alloc_pinfo(struct device * , const struct ata_port_info *const * , int )'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='7293' c='ata_host_alloc_pinfo'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='7293' u='a'/>
<doc f='linux-5.3.1/drivers/ata/libata-core.c' l='6153'>/**
 *	ata_host_alloc_pinfo - alloc host and init with port_info array
 *	@dev: generic device this host is associated with
 *	@ppi: array of ATA port_info to initialize host with
 *	@n_ports: number of ATA ports attached to this host
 *
 *	Allocate ATA host and initialize with info from @ppi.  If NULL
 *	terminated, @ppi may contain fewer entries than @n_ports.  The
 *	last entry will be used for the remaining ports.
 *
 *	RETURNS:
 *	Allocate ATA host on success, NULL on failure.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 */</doc>
<use f='linux-5.3.1/drivers/ata/libata-sff.c' l='2311' u='c' c='ata_pci_sff_prepare_host'/>
