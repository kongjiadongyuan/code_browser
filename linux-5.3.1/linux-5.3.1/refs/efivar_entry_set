<dec f='linux-5.3.1/include/linux/efi.h' l='1506' type='int efivar_entry_set(struct efivar_entry * entry, u32 attributes, unsigned long size, void * data, struct list_head * head)'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='239' u='c' c='efivar_store_raw'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='401' u='c' c='efivar_create'/>
<def f='linux-5.3.1/drivers/firmware/efi/vars.c' l='659' ll='689' type='int efivar_entry_set(struct efivar_entry * entry, u32 attributes, unsigned long size, void * data, struct list_head * head)'/>
<dec f='linux-5.3.1/drivers/firmware/efi/vars.c' l='690' type='int efivar_entry_set(struct efivar_entry * , u32 , unsigned long , void * , struct list_head * )'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='690' c='efivar_entry_set'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='690' u='a'/>
<doc f='linux-5.3.1/drivers/firmware/efi/vars.c' l='638'>/**
 * efivar_entry_set - call set_variable()
 * @entry: entry containing the EFI variable to write
 * @attributes: variable attributes
 * @size: size of @data buffer
 * @data: buffer containing variable data
 * @head: head of variable list
 *
 * Calls set_variable() for an EFI variable. If creating a new EFI
 * variable, this function is usually followed by efivar_entry_add().
 *
 * Before writing the variable, the remaining EFI variable storage
 * space is checked to ensure there is enough room available.
 *
 * If @head is not NULL a lookup is performed to determine whether
 * the entry is already on the list.
 *
 * Returns 0 on success, -EINTR if we can&apos;t grab the semaphore,
 * -EEXIST if a lookup is performed and the entry already exists on
 * the list, or a converted EFI status code if set_variable() fails.
 */</doc>
