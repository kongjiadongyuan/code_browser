<dec f='linux-5.3.1/include/drm/drm_mm.h' l='504' type='void drm_mm_scan_init_with_range(struct drm_mm_scan * scan, struct drm_mm * mm, u64 size, u64 alignment, unsigned long color, u64 start, u64 end, enum drm_mm_insert_mode mode)'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='536' u='c' c='drm_mm_scan_init'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='680' ll='710' type='void drm_mm_scan_init_with_range(struct drm_mm_scan * scan, struct drm_mm * mm, u64 size, u64 alignment, unsigned long color, u64 start, u64 end, enum drm_mm_insert_mode mode)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='711' type='void drm_mm_scan_init_with_range(struct drm_mm_scan * , struct drm_mm * , u64 , u64 , unsigned long , u64 , u64 , enum drm_mm_insert_mode )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='711' c='drm_mm_scan_init_with_range'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='711' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='662'>/**
 * drm_mm_scan_init_with_range - initialize range-restricted lru scanning
 * @scan: scan state
 * @mm: drm_mm to scan
 * @size: size of the allocation
 * @alignment: alignment of the allocation
 * @color: opaque tag value to use for the allocation
 * @start: start of the allowed range for the allocation
 * @end: end of the allowed range for the allocation
 * @mode: fine-tune the allocation search and placement
 *
 * This simply sets up the scanning routines with the parameters for the desired
 * hole.
 *
 * Warning:
 * As long as the scan list is non-empty, no other operations than
 * adding/removing nodes to/from the scan list are allowed.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_evict.c' l='130' u='c' c='i915_gem_evict_something'/>
