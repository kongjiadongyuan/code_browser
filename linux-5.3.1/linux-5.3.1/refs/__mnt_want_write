<dec f='linux-5.3.1/include/linux/mount.h' l='90' type='int __mnt_want_write(struct vfsmount * )'/>
<use f='linux-5.3.1/fs/inode.c' l='1739' u='c' c='touch_atime'/>
<def f='linux-5.3.1/fs/namespace.c' l='311' ll='339' type='int __mnt_want_write(struct vfsmount * m)'/>
<use f='linux-5.3.1/fs/namespace.c' l='355' u='c' c='mnt_want_write'/>
<use f='linux-5.3.1/fs/namespace.c' l='396' u='c' c='__mnt_want_write_file'/>
<doc f='linux-5.3.1/fs/namespace.c' l='301'>/**
 * __mnt_want_write - get write access to a mount without freeze protection
 * @m: the mount on which to take a write
 *
 * This tells the low-level filesystem that a write is about to be performed to
 * it, and makes sure that writes are allowed (mnt it read-write) before
 * returning success. This operation does not protect against filesystem being
 * frozen. When the write operation is finished, __mnt_drop_write() must be
 * called. This is effectively a refcount.
 */</doc>
<use f='linux-5.3.1/fs/open.c' l='766' u='c' c='do_dentry_open'/>
<use f='linux-5.3.1/kernel/acct.c' l='230' u='c' c='acct_on'/>
