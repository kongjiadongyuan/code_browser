<dec f='linux-5.3.1/include/linux/phy.h' l='1134' type='void phy_start_machine(struct phy_device * phydev)'/>
<def f='linux-5.3.1/drivers/net/phy/phy.c' l='701' ll='704' type='void phy_start_machine(struct phy_device * phydev)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy.c' l='705' type='void phy_start_machine(struct phy_device * )'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='705' c='phy_start_machine'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='705' u='a'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='903' u='c' c='phy_start'/>
<doc f='linux-5.3.1/drivers/net/phy/phy.c' l='691'>/**
 * phy_start_machine - start PHY state machine tracking
 * @phydev: the phy_device struct
 *
 * Description: The PHY infrastructure can run a state machine
 *   which tracks whether the PHY is starting up, negotiating,
 *   etc.  This function starts the delayed workqueue which tracks
 *   the state of the PHY. If you want to maintain your own state machine,
 *   do not call this function.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='304' u='c' c='mdio_bus_phy_resume'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='323' u='c' c='mdio_bus_phy_restore'/>
