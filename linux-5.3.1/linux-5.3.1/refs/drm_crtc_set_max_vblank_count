<dec f='linux-5.3.1/include/drm/drm_vblank.h' l='229' type='void drm_crtc_set_max_vblank_count(struct drm_crtc * crtc, u32 max_vblank_count)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1242' ll='1253' type='void drm_crtc_set_max_vblank_count(struct drm_crtc * crtc, u32 max_vblank_count)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1254' type='void drm_crtc_set_max_vblank_count(struct drm_crtc * , u32 )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1254' c='drm_crtc_set_max_vblank_count'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1254' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1225'>/**
 * drm_crtc_set_max_vblank_count - configure the hw max vblank counter value
 * @crtc: CRTC in question
 * @max_vblank_count: max hardware vblank counter value
 *
 * Update the maximum hardware vblank counter value for @crtc
 * at runtime. Useful for hardware where the operation of the
 * hardware vblank counter depends on the currently active
 * display configuration.
 *
 * For example, if the hardware vblank counter does not work
 * when a specific connector is active the maximum can be set
 * to zero. And when that specific connector isn&apos;t active the
 * maximum can again be set to the appropriate non-zero value.
 *
 * If used, must be called before drm_vblank_on().
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='1803' u='c' c='intel_crtc_vblank_on'/>
