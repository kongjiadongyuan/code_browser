<dec f='linux-5.3.1/include/drm/drm_crtc.h' l='1173' type='struct drm_crtc * drm_crtc_from_index(struct drm_device * dev, int idx)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='84' ll='93' type='struct drm_crtc * drm_crtc_from_index(struct drm_device * dev, int idx)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='94' type='struct drm_crtc * drm_crtc_from_index(struct drm_device * , int )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='94' c='drm_crtc_from_index'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='94' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='73'>/**
 * drm_crtc_from_index - find the registered CRTC at an index
 * @dev: DRM device
 * @idx: index of registered CRTC to find for
 *
 * Given a CRTC index, return the registered CRTC from DRM device&apos;s
 * list of CRTCs with matching index. This is the inverse of drm_crtc_index().
 * It&apos;s useful in the vblank callbacks (like &amp;drm_driver.enable_vblank or
 * &amp;drm_driver.disable_vblank), since that still deals with indices instead
 * of pointers to &amp;struct drm_crtc.&quot;
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='134' u='c' c='__get_vblank_counter'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='340' u='c' c='__disable_vblank'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='615' u='c' c='drm_calc_vbltimestamp_from_scanoutpos'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='945' u='c' c='__enable_vblank'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1475' u='c' c='drm_queue_vblank_event'/>
