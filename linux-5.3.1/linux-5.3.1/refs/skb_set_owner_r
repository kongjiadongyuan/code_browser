<def f='linux-5.3.1/include/net/sock.h' l='2131' ll='2138' type='void skb_set_owner_r(struct sk_buff * skb, struct sock * sk)'/>
<doc f='linux-5.3.1/include/net/sock.h' l='2123'>/*
 *	Queue a received datagram if it will fit. Stream and sequenced
 *	protocols can&apos;t normally use this as they need to fit buffers in
 *	and play with them.
 *
 *	Inlined as it&apos;s very short and called for pretty much every
 *	packet ever received.
 */</doc>
<use f='linux-5.3.1/net/core/sock.c' l='468' u='c' c='__sock_queue_rcv_skb'/>
<use f='linux-5.3.1/net/ipv4/tcp_fastopen.c' l='185' u='c' c='tcp_fastopen_add_skb'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4625' u='c' c='tcp_data_queue_ofo'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4641' u='c' c='tcp_queue_rcv'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4927' u='c' c='tcp_collapse'/>
<use f='linux-5.3.1/net/ipv6/tcp_ipv6.c' l='1281' u='c' c='tcp_v6_syn_recv_sock'/>
<use f='linux-5.3.1/net/ipv6/tcp_ipv6.c' l='1420' u='c' c='tcp_v6_do_rcv'/>
<use f='linux-5.3.1/net/packet/af_packet.c' l='2119' u='c' c='packet_rcv'/>
<use f='linux-5.3.1/net/packet/af_packet.c' l='2242' u='c' c='tpacket_rcv'/>
