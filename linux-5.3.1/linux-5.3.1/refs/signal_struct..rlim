<dec f='linux-5.3.1/include/linux/sched/signal.h' l='209' type='struct rlimit [16]'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='695' u='m' c='task_rlimit'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='695' u='m' c='task_rlimit'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='695' u='m' c='task_rlimit'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='695' u='m' c='task_rlimit'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='695' u='m' c='task_rlimit'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='701' u='m' c='task_rlimit_max'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='701' u='m' c='task_rlimit_max'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='701' u='m' c='task_rlimit_max'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='701' u='m' c='task_rlimit_max'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='701' u='m' c='task_rlimit_max'/>
<offset>5312</offset>
<doc f='linux-5.3.1/include/linux/sched/signal.h' l='200'>/*
	 * We don&apos;t bother to synchronize most readers of this at all,
	 * because there is no reader checking a limit that actually needs
	 * to get both rlim_cur and rlim_max atomically, and either one
	 * alone is a single word that can safely be read normally.
	 * getrlimit/setrlimit use task_lock(current-&gt;group_leader) to
	 * protect this instead of the siglock, because they really
	 * have no need to disable irqs.
	 */</doc>
<use f='linux-5.3.1/fs/coredump.c' l='560' u='w' c='umh_pipe_setup'/>
<use f='linux-5.3.1/fs/exec.c' l='371' u='r' c='bprm_mm_init'/>
<use f='linux-5.3.1/fs/exec.c' l='1395' u='w' c='finalize_exec'/>
<use f='linux-5.3.1/fs/proc/array.c' l='497' u='m' c='do_task_stat'/>
<use f='linux-5.3.1/fs/proc/array.c' l='497' u='m' c='do_task_stat'/>
<use f='linux-5.3.1/fs/proc/array.c' l='497' u='m' c='do_task_stat'/>
<use f='linux-5.3.1/fs/proc/array.c' l='497' u='m' c='do_task_stat'/>
<use f='linux-5.3.1/fs/proc/array.c' l='497' u='m' c='do_task_stat'/>
<use f='linux-5.3.1/fs/proc/base.c' l='594' u='r' c='proc_pid_limits'/>
<use f='linux-5.3.1/init/init_task.c' l='27' u='w'/>
<use f='linux-5.3.1/kernel/acct.c' l='481' u='m' c='do_acct_process'/>
<use f='linux-5.3.1/kernel/acct.c' l='482' u='m' c='do_acct_process'/>
<use f='linux-5.3.1/kernel/acct.c' l='524' u='m' c='do_acct_process'/>
<use f='linux-5.3.1/kernel/fork.c' l='809' u='m' c='fork_init'/>
<use f='linux-5.3.1/kernel/fork.c' l='810' u='m' c='fork_init'/>
<use f='linux-5.3.1/kernel/fork.c' l='811' u='w' c='fork_init'/>
<use f='linux-5.3.1/kernel/fork.c' l='812' u='r' c='fork_init'/>
<use f='linux-5.3.1/kernel/fork.c' l='1528' u='m' c='posix_cpu_timers_init_group'/>
<use f='linux-5.3.1/kernel/fork.c' l='1528' u='m' c='posix_cpu_timers_init_group'/>
<use f='linux-5.3.1/kernel/fork.c' l='1528' u='m' c='posix_cpu_timers_init_group'/>
<use f='linux-5.3.1/kernel/fork.c' l='1528' u='m' c='posix_cpu_timers_init_group'/>
<use f='linux-5.3.1/kernel/fork.c' l='1528' u='m' c='posix_cpu_timers_init_group'/>
<use f='linux-5.3.1/kernel/fork.c' l='1577' u='r' c='copy_signal'/>
<use f='linux-5.3.1/kernel/fork.c' l='1577' u='r' c='copy_signal'/>
<use f='linux-5.3.1/kernel/fork.c' l='1577' u='r' c='copy_signal'/>
<use f='linux-5.3.1/kernel/sys.c' l='1457' u='r' c='__do_sys_old_getrlimit'/>
<use f='linux-5.3.1/kernel/sys.c' l='1477' u='r' c='__do_compat_sys_old_getrlimit'/>
<use f='linux-5.3.1/kernel/sys.c' l='1550' u='r' c='do_prlimit'/>
<use f='linux-5.3.1/kernel/time/posix-cpu-timers.c' l='860' u='m' c='check_thread_timers'/>
<use f='linux-5.3.1/kernel/time/posix-cpu-timers.c' l='980' u='m' c='check_process_timers'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='2533' u='r' c='selinux_bprm_committing_creds'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='2534' u='r' c='selinux_bprm_committing_creds'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='4050' u='r' c='selinux_task_setrlimit'/>
