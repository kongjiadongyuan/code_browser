<dec f='linux-5.3.1/include/drm/drm_atomic.h' l='670' type='int drm_atomic_check_only(struct drm_atomic_state * state)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1128' ll='1192' type='int drm_atomic_check_only(struct drm_atomic_state * state)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1193' type='int drm_atomic_check_only(struct drm_atomic_state * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1193' c='drm_atomic_check_only'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1193' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1214' u='c' c='drm_atomic_commit'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1243' u='c' c='drm_atomic_nonblocking_commit'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1117'>/**
 * drm_atomic_check_only - check whether a given config would work
 * @state: atomic configuration to check
 *
 * Note that this function can return -EDEADLK if the driver needed to acquire
 * more locks but encountered a deadlock. The caller must then do the usual w/w
 * backoff dance and restart. All other errors are fatal.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='1401' u='c' c='drm_mode_atomic_ioctl'/>
