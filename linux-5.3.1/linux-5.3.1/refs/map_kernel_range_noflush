<dec f='linux-5.3.1/include/linux/vmalloc.h' l='152' type='int map_kernel_range_noflush(unsigned long start, unsigned long size, pgprot_t prot, struct page ** pages)'/>
<use f='linux-5.3.1/mm/percpu-vm.c' l='195' u='c' c='__pcpu_map_pages'/>
<def f='linux-5.3.1/mm/vmalloc.c' l='1954' ll='1958' type='int map_kernel_range_noflush(unsigned long addr, unsigned long size, pgprot_t prot, struct page ** pages)'/>
<doc f='linux-5.3.1/mm/vmalloc.c' l='1935'>/**
 * map_kernel_range_noflush - map kernel VM area with the specified pages
 * @addr: start of the VM area to map
 * @size: size of the VM area to map
 * @prot: page protection flags to use
 * @pages: pages to map
 *
 * Map PFN_UP(@size) pages at @addr.  The VM area @addr and @size
 * specify should have been allocated using get_vm_area() and its
 * friends.
 *
 * NOTE:
 * This function does NOT do any cache flushing.  The caller is
 * responsible for calling flush_cache_vmap() on to-be-mapped areas
 * before calling this function.
 *
 * RETURNS:
 * The number of pages mapped on success, -errno on failure.
 */</doc>
