<def f='linux-5.3.1/include/linux/timekeeper_internal.h' l='34' ll='43'/>
<use f='linux-5.3.1/include/linux/timekeeper_internal.h' l='93'/>
<use f='linux-5.3.1/include/linux/timekeeper_internal.h' l='94'/>
<size>56</size>
<doc f='linux-5.3.1/include/linux/timekeeper_internal.h' l='14'>/**
 * struct tk_read_base - base structure for timekeeping readout
 * @clock:	Current clocksource used for timekeeping.
 * @mask:	Bitmask for two&apos;s complement subtraction of non 64bit clocks
 * @cycle_last: @clock cycle value at last update
 * @mult:	(NTP adjusted) multiplier for scaled math conversion
 * @shift:	Shift value for scaled math conversion
 * @xtime_nsec: Shifted (fractional) nano seconds offset for readout
 * @base:	ktime_t (nanoseconds) base time for readout
 * @base_real:	Nanoseconds base value for clock REALTIME readout
 *
 * This struct has size 56 byte on 64 bit. Together with a seqcount it
 * occupies a single 64byte cache line.
 *
 * The struct is separate from struct timekeeper as it is also used
 * for a fast NMI safe accessors.
 *
 * @base_real is for the fast NMI safe accessor to allow reading clock
 * realtime from any context.
 */</doc>
<mbr r='tk_read_base::clock' o='0' t='struct clocksource *'/>
<mbr r='tk_read_base::mask' o='64' t='u64'/>
<mbr r='tk_read_base::cycle_last' o='128' t='u64'/>
<mbr r='tk_read_base::mult' o='192' t='u32'/>
<mbr r='tk_read_base::shift' o='224' t='u32'/>
<mbr r='tk_read_base::xtime_nsec' o='256' t='u64'/>
<mbr r='tk_read_base::base' o='320' t='ktime_t'/>
<mbr r='tk_read_base::base_real' o='384' t='u64'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='67'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='169' c='tk_clock_read'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='262' c='timekeeping_get_delta'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='359' c='timekeeping_delta_to_ns'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='370' c='timekeeping_get_ns'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='378' c='timekeeping_cycles_to_ns'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='401' c='update_fast_timekeeper'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='404' c='update_fast_timekeeper'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='453' c='__ktime_get_fast_ns'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='519' c='__ktime_get_real_fast_ns'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='559' c='halt_fast_timekeeper'/>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='560' c='halt_fast_timekeeper'/>
<size>56</size>
