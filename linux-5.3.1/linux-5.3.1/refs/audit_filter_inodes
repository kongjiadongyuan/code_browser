<dec f='linux-5.3.1/kernel/audit.h' l='290' type='void audit_filter_inodes(struct task_struct * tsk, struct audit_context * ctx)'/>
<use f='linux-5.3.1/kernel/audit_watch.c' l='263' u='c' c='audit_update_watch'/>
<def f='linux-5.3.1/kernel/auditsc.c' l='831' ll='845' type='void audit_filter_inodes(struct task_struct * tsk, struct audit_context * ctx)'/>
<use f='linux-5.3.1/kernel/auditsc.c' l='1603' u='c' c='__audit_free'/>
<use f='linux-5.3.1/kernel/auditsc.c' l='1711' u='c' c='__audit_syscall_exit'/>
<doc f='linux-5.3.1/kernel/auditsc.c' l='826'>/* At syscall exit time, this filter is called if any audit_names have been
 * collected during syscall processing.  We only check rules in sublists at hash
 * buckets applicable to the inode numbers in audit_names.
 * Regarding audit_state, same rules apply as for audit_filter_syscall().
 */</doc>
