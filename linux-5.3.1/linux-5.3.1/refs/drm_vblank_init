<dec f='linux-5.3.1/include/drm/drm_vblank.h' l='198' type='int drm_vblank_init(struct drm_device * dev, unsigned int num_crtcs)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='445' ll='489' type='int drm_vblank_init(struct drm_device * dev, unsigned int num_crtcs)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='490' type='int drm_vblank_init(struct drm_device * , unsigned int )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='490' c='drm_vblank_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='490' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='433'>/**
 * drm_vblank_init - initialize vblank support
 * @dev: DRM device
 * @num_crtcs: number of CRTCs supported by @dev
 *
 * This function initializes vblank support for @num_crtcs display pipelines.
 * Cleanup is handled by the DRM core, or through calling drm_dev_fini() for
 * drivers with a &amp;drm_driver.release callback.
 *
 * Returns:
 * Zero on success or a negative error code on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='686' u='c' c='i915_load_modeset_init'/>
