<dec f='linux-5.3.1/include/linux/scatterlist.h' l='465' type='void sg_miter_stop(struct sg_mapping_iter * miter)'/>
<use f='linux-5.3.1/drivers/ata/libata-scsi.c' l='3688' u='c' c='ata_scsi_report_zones_complete'/>
<use f='linux-5.3.1/drivers/usb/storage/protocol.c' l='159' u='c' c='usb_stor_access_xfer_buf'/>
<use f='linux-5.3.1/lib/mpi/mpicoder.c' l='312' u='c' c='mpi_write_to_sgl'/>
<use f='linux-5.3.1/lib/mpi/mpicoder.c' l='371' u='c' c='mpi_read_raw_from_sgl'/>
<use f='linux-5.3.1/lib/mpi/mpicoder.c' l='379' u='c' c='mpi_read_raw_from_sgl'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='728' u='c' c='sg_miter_skip'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='765' u='c' c='sg_miter_next'/>
<def f='linux-5.3.1/lib/scatterlist.c' l='800' ll='824' type='void sg_miter_stop(struct sg_mapping_iter * miter)'/>
<dec f='linux-5.3.1/lib/scatterlist.c' l='825' type='void sg_miter_stop(struct sg_mapping_iter * )'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='825' c='sg_miter_stop'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='825' u='a'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='870' u='c' c='sg_copy_buffer'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='976' u='c' c='sg_zero_buffer'/>
<doc f='linux-5.3.1/lib/scatterlist.c' l='786'>/**
 * sg_miter_stop - stop mapping iteration
 * @miter: sg mapping iter to be stopped
 *
 * Description:
 *   Stops mapping iterator @miter.  @miter should have been started
 *   using sg_miter_start().  A stopped iteration can be resumed by
 *   calling sg_miter_next() on it.  This is useful when resources (kmap)
 *   need to be released during iteration.
 *
 * Context:
 *   Preemption disabled if the SG_MITER_ATOMIC is set.  Don&apos;t care
 *   otherwise.
 */</doc>
