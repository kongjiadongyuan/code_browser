<dec f='linux-5.3.1/include/linux/skbuff.h' l='1957' type='void skb_append(struct sk_buff * old, struct sk_buff * newsk, struct sk_buff_head * list)'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='3174' ll='3181' type='void skb_append(struct sk_buff * old, struct sk_buff * newsk, struct sk_buff_head * list)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='3182' type='void skb_append(struct sk_buff * , struct sk_buff * , struct sk_buff_head * )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3182' c='skb_append'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3182' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='3164'>/**
 *	skb_append	-	append a buffer
 *	@old: buffer to insert after
 *	@newsk: buffer to insert
 *	@list: list to use
 *
 *	Place a packet after a given packet in a list. The list locks are taken
 *	and this function is atomic with respect to other list locked calls.
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
