<dec f='linux-5.3.1/arch/x86/include/asm/traps.h' l='121' type='void ist_enter(struct pt_regs * regs)'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='1255' u='c' c='do_machine_check'/>
<def f='linux-5.3.1/arch/x86/kernel/traps.c' l='95' ll='113' type='void ist_enter(struct pt_regs * regs)'/>
<use f='linux-5.3.1/arch/x86/kernel/traps.c' l='114'/>
<use f='linux-5.3.1/arch/x86/kernel/traps.c' l='371' u='c' c='do_double_fault'/>
<use f='linux-5.3.1/arch/x86/kernel/traps.c' l='590' u='c' c='do_int3'/>
<use f='linux-5.3.1/arch/x86/kernel/traps.c' l='716' u='c' c='do_debug'/>
<doc f='linux-5.3.1/arch/x86/kernel/traps.c' l='89'>/*
 * In IST context, we explicitly disable preemption.  This serves two
 * purposes: it makes it much less likely that we would accidentally
 * schedule in IST context and it will force a warning if we somehow
 * manage to schedule by accident.
 */</doc>
