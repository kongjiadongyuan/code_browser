<dec f='linux-5.3.1/fs/internal.h' l='41' type='void guard_bio_eod(int rw, struct bio * bio)'/>
<doc f='linux-5.3.1/fs/internal.h' l='38'>/*
 * buffer.c
 */</doc>
<def f='linux-5.3.1/fs/buffer.c' l='2994' ll='3046' type='void guard_bio_eod(int op, struct bio * bio)'/>
<use f='linux-5.3.1/fs/buffer.c' l='3082' u='c' c='submit_bh_wbc'/>
<doc f='linux-5.3.1/fs/buffer.c' l='2982'>/*
 * This allows us to do IO even on the odd last sectors
 * of a device, even if the block size is some multiple
 * of the physical sector size.
 *
 * We&apos;ll just truncate the bio to the size of the device,
 * and clear the end of the buffer head manually.
 *
 * Truly out-of-range accesses will turn into actual IO
 * errors, this only handles the &quot;we need to be able to
 * do IO at the final sector&quot; case.
 */</doc>
<use f='linux-5.3.1/fs/mpage.c' l='65' u='c' c='mpage_bio_submit'/>
