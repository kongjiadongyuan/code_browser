<def f='linux-5.3.1/include/rdma/ib_verbs.h' l='2809' ll='2814' type='bool ib_is_destroy_retryable(int ret, enum rdma_remove_reason why, struct ib_uobject * uobj)'/>
<use f='linux-5.3.1/include/rdma/ib_verbs.h' l='2829' u='c' c='ib_destroy_usecnt'/>
<doc f='linux-5.3.1/include/rdma/ib_verbs.h' l='2794'>/**
 * ib_is_destroy_retryable - Check whether the uobject destruction
 * is retryable.
 * @ret: The initial destruction return code
 * @why: remove reason
 * @uobj: The uobject that is destroyed
 *
 * This function is a helper function that IB layer and low-level drivers
 * can use to consider whether the destruction of the given uobject is
 * retry-able.
 * It checks the original return code, if it wasn&apos;t success the destruction
 * is retryable according to the ucontext state (i.e. cleanup_retryable) and
 * the remove reason. (i.e. why).
 * Must be called with the object locked for destroy.
 */</doc>
