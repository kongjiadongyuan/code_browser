<def f='linux-5.3.1/include/linux/ptr_ring.h' l='48' ll='51' type='bool __ptr_ring_full(struct ptr_ring * r)'/>
<use f='linux-5.3.1/include/linux/ptr_ring.h' l='58' u='c' c='ptr_ring_full'/>
<use f='linux-5.3.1/include/linux/ptr_ring.h' l='69' u='c' c='ptr_ring_full_irq'/>
<use f='linux-5.3.1/include/linux/ptr_ring.h' l='81' u='c' c='ptr_ring_full_any'/>
<use f='linux-5.3.1/include/linux/ptr_ring.h' l='92' u='c' c='ptr_ring_full_bh'/>
<doc f='linux-5.3.1/include/linux/ptr_ring.h' l='42'>/* Note: callers invoking this in a loop must use a compiler barrier,
 * for example cpu_relax().
 *
 * NB: this is unlike __ptr_ring_empty in that callers must hold producer_lock:
 * see e.g. ptr_ring_full.
 */</doc>
<use f='linux-5.3.1/include/linux/skb_array.h' l='34' u='c' c='__skb_array_full'/>
