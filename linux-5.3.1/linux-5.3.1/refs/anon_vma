<use f='linux-5.3.1/include/linux/mm_types.h' l='330'/>
<use f='linux-5.3.1/include/linux/mm.h' l='1334' c='page_anon_vma'/>
<use f='linux-5.3.1/include/linux/mm.h' l='2303' c='vma_merge'/>
<use f='linux-5.3.1/include/linux/mm.h' l='2305' c='find_mergeable_anon_vma'/>
<def f='linux-5.3.1/include/linux/rmap.h' l='29' ll='62'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='30'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='49'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='79'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='105' c='get_anon_vma'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='110' c='__put_anon_vma'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='112' c='put_anon_vma'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='118' c='anon_vma_lock_write'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='123' c='anon_vma_unlock_write'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='128' c='anon_vma_lock_read'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='133' c='anon_vma_unlock_read'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='163' c='page_get_anon_vma'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='249' c='page_lock_anon_vma_read'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='250' c='page_unlock_anon_vma_read'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='271'/>
<size>80</size>
<doc f='linux-5.3.1/include/linux/rmap.h' l='15'>/*
 * The anon_vma heads a list of private &quot;related&quot; vmas, to scan if
 * an anonymous page pointing to this anon_vma needs to be unmapped:
 * the vmas on the list will be related by forking, or by splitting.
 *
 * Since vmas come and go as they are split and merged (particularly
 * in mprotect), the mapping field of an anonymous page cannot point
 * directly to a vma: instead it points to an anon_vma, on whose list
 * the related vmas can be easily linked or unlinked.
 *
 * After unlinking the last vma on the list, we must garbage collect
 * the anon_vma object itself: we&apos;re guaranteed no page can be
 * pointing to this anon_vma once its vma list is empty.
 */</doc>
<mbr r='anon_vma::root' o='0' t='struct anon_vma *'/>
<mbr r='anon_vma::rwsem' o='64' t='struct rw_semaphore'/>
<mbr r='anon_vma::refcount' o='384' t='atomic_t'/>
<mbr r='anon_vma::degree' o='416' t='unsigned int'/>
<mbr r='anon_vma::parent' o='448' t='struct anon_vma *'/>
<mbr r='anon_vma::rb_root' o='512' t='struct rb_root_cached'/>
<use f='linux-5.3.1/mm/migrate.c' l='1008' c='__unmap_and_move'/>
<use f='linux-5.3.1/mm/migrate.c' l='1287' c='unmap_and_move_huge_page'/>
<size>80</size>
<use f='linux-5.3.1/mm/mmap.c' l='724' c='__vma_adjust'/>
<use f='linux-5.3.1/mm/mmap.c' l='1032' c='is_mergeable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='1033' c='is_mergeable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='1059' c='can_vma_merge_before'/>
<use f='linux-5.3.1/mm/mmap.c' l='1080' c='can_vma_merge_after'/>
<use f='linux-5.3.1/mm/mmap.c' l='1137' c='vma_merge'/>
<use f='linux-5.3.1/mm/mmap.c' l='1271' c='reusable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='1274' c='reusable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='1290' c='find_mergeable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='1292' c='find_mergeable_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='3463' c='vm_lock_anon_vma'/>
<use f='linux-5.3.1/mm/mmap.c' l='3581' c='vm_unlock_anon_vma'/>
<size>80</size>
<use f='linux-5.3.1/mm/rmap.c' l='78' c='anon_vma_alloc'/>
<use f='linux-5.3.1/mm/rmap.c' l='80' c='anon_vma_alloc'/>
<use f='linux-5.3.1/mm/rmap.c' l='97' c='anon_vma_free'/>
<use f='linux-5.3.1/mm/rmap.c' l='139' c='anon_vma_chain_link'/>
<use f='linux-5.3.1/mm/rmap.c' l='178' c='__anon_vma_prepare'/>
<use f='linux-5.3.1/mm/rmap.c' l='178' c='__anon_vma_prepare'/>
<use f='linux-5.3.1/mm/rmap.c' l='231' c='lock_anon_vma_root'/>
<use f='linux-5.3.1/mm/rmap.c' l='231' c='lock_anon_vma_root'/>
<use f='linux-5.3.1/mm/rmap.c' l='231' c='lock_anon_vma_root'/>
<use f='linux-5.3.1/mm/rmap.c' l='233' c='lock_anon_vma_root'/>
<use f='linux-5.3.1/mm/rmap.c' l='243' c='unlock_anon_vma_root'/>
<use f='linux-5.3.1/mm/rmap.c' l='264' c='anon_vma_clone'/>
<use f='linux-5.3.1/mm/rmap.c' l='267' c='anon_vma_clone'/>
<use f='linux-5.3.1/mm/rmap.c' l='318' c='anon_vma_fork'/>
<use f='linux-5.3.1/mm/rmap.c' l='379' c='unlink_anon_vmas'/>
<use f='linux-5.3.1/mm/rmap.c' l='386' c='unlink_anon_vmas'/>
<use f='linux-5.3.1/mm/rmap.c' l='413' c='unlink_anon_vmas'/>
<use f='linux-5.3.1/mm/rmap.c' l='425' c='anon_vma_ctor'/>
<use f='linux-5.3.1/mm/rmap.c' l='434' c='anon_vma_init'/>
<use f='linux-5.3.1/mm/rmap.c' l='464' c='page_get_anon_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='466' c='page_get_anon_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='476' c='page_get_anon_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='507' c='page_lock_anon_vma_read'/>
<use f='linux-5.3.1/mm/rmap.c' l='509' c='page_lock_anon_vma_read'/>
<use f='linux-5.3.1/mm/rmap.c' l='510' c='page_lock_anon_vma_read'/>
<use f='linux-5.3.1/mm/rmap.c' l='520' c='page_lock_anon_vma_read'/>
<use f='linux-5.3.1/mm/rmap.c' l='569' c='page_unlock_anon_vma_read'/>
<use f='linux-5.3.1/mm/rmap.c' l='691' c='page_address_in_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='1005' c='page_move_anon_rmap'/>
<use f='linux-5.3.1/mm/rmap.c' l='1031' c='__page_set_anon_rmap'/>
<use f='linux-5.3.1/mm/rmap.c' l='1767' c='__put_anon_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='1769' c='__put_anon_vma'/>
<use f='linux-5.3.1/mm/rmap.c' l='1776' c='rmap_walk_anon_lock'/>
<use f='linux-5.3.1/mm/rmap.c' l='1779' c='rmap_walk_anon_lock'/>
<use f='linux-5.3.1/mm/rmap.c' l='1815' c='rmap_walk_anon'/>
<use f='linux-5.3.1/mm/rmap.c' l='1936' c='hugepage_add_anon_rmap'/>
<size>80</size>
<use f='linux-5.3.1/mm/util.c' l='532' c='page_anon_vma'/>
