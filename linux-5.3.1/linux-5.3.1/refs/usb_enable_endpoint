<dec f='linux-5.3.1/drivers/usb/core/usb.h' l='23' type='void usb_enable_endpoint(struct usb_device * dev, struct usb_host_endpoint * ep, bool reset_toggle)'/>
<use f='linux-5.3.1/drivers/usb/core/hub.c' l='4422' u='c' c='usb_ep0_reinit'/>
<def f='linux-5.3.1/drivers/usb/core/message.c' l='1286' ll='1300' type='void usb_enable_endpoint(struct usb_device * dev, struct usb_host_endpoint * ep, bool reset_ep)'/>
<use f='linux-5.3.1/drivers/usb/core/message.c' l='1317' u='c' c='usb_enable_interface'/>
<doc f='linux-5.3.1/drivers/usb/core/message.c' l='1277'>/**
 * usb_enable_endpoint - Enable an endpoint for USB communications
 * @dev: the device whose interface is being enabled
 * @ep: the endpoint
 * @reset_ep: flag to reset the endpoint state
 *
 * Resets the endpoint state if asked, and sets dev-&gt;ep_{in,out} pointers.
 * For control endpoints, both the input and output sides are handled.
 */</doc>
<use f='linux-5.3.1/drivers/usb/core/usb.c' l='624' u='c' c='usb_alloc_dev'/>
