<dec f='linux-5.3.1/include/linux/mmzone.h' l='1190' type='unsigned long'/>
<use f='linux-5.3.1/include/linux/mmzone.h' l='1264' u='r' c='__section_mem_map_addr'/>
<use f='linux-5.3.1/include/linux/mmzone.h' l='1271' u='r' c='present_section'/>
<use f='linux-5.3.1/include/linux/mmzone.h' l='1281' u='r' c='valid_section'/>
<use f='linux-5.3.1/include/linux/mmzone.h' l='1286' u='r' c='early_section'/>
<use f='linux-5.3.1/include/linux/mmzone.h' l='1296' u='r' c='online_section'/>
<offset>0</offset>
<doc f='linux-5.3.1/include/linux/mmzone.h' l='1178'>/*
	 * This is, logically, a pointer to an array of struct
	 * pages.  However, it is stored with some other magic.
	 * (see sparse.c::sparse_init_one_section())
	 *
	 * Additionally during early boot we encode node id of
	 * the location of the section here to guide allocation.
	 * (see sparse.c::memory_present())
	 *
	 * Making it a UL at least makes someone do a cast
	 * before using it wrong.
	 */</doc>
<use f='linux-5.3.1/mm/sparse.c' l='150' u='r' c='sparse_early_nid'/>
<use f='linux-5.3.1/mm/sparse.c' l='196' u='w' c='section_mark_present'/>
<use f='linux-5.3.1/mm/sparse.c' l='283' u='r' c='memory_present'/>
<use f='linux-5.3.1/mm/sparse.c' l='284' u='w' c='memory_present'/>
<use f='linux-5.3.1/mm/sparse.c' l='335' u='w' c='sparse_init_one_section'/>
<use f='linux-5.3.1/mm/sparse.c' l='336' u='w' c='sparse_init_one_section'/>
<use f='linux-5.3.1/mm/sparse.c' l='559' u='w' c='sparse_init_nid'/>
