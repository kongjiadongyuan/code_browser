<dec f='linux-5.3.1/include/linux/slab.h' l='404' type='void kmem_cache_free_bulk(struct kmem_cache * , size_t , void ** )'/>
<use f='linux-5.3.1/include/linux/slab.h' l='413' u='c' c='kfree_bulk'/>
<doc f='linux-5.3.1/include/linux/slab.h' l='397'>/*
 * Bulk allocation and freeing operations. These are accelerated in an
 * allocator specific way to avoid taking locks repeatedly or building
 * metadata structures unnecessarily.
 *
 * Note that interrupts must be enabled when calling these functions.
 */</doc>
<use f='linux-5.3.1/fs/io_uring.c' l='604' u='c' c='io_free_req_many'/>
<use f='linux-5.3.1/fs/io_uring.c' l='2190' u='c' c='io_submit_state_end'/>
<def f='linux-5.3.1/mm/slub.c' l='3129' ll='3143' type='void kmem_cache_free_bulk(struct kmem_cache * s, size_t size, void ** p)'/>
<dec f='linux-5.3.1/mm/slub.c' l='3144' type='void kmem_cache_free_bulk(struct kmem_cache * , size_t , void ** )'/>
<use f='linux-5.3.1/mm/slub.c' l='3144' c='kmem_cache_free_bulk'/>
<use f='linux-5.3.1/mm/slub.c' l='3144' u='a'/>
<doc f='linux-5.3.1/mm/slub.c' l='3128'>/* Note that interrupts must be enabled when calling this function. */</doc>
<use f='linux-5.3.1/net/core/skbuff.c' l='862' u='c' c='__kfree_skb_flush'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='885' u='c' c='_kfree_skb_defer'/>
