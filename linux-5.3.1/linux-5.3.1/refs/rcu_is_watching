<dec f='linux-5.3.1/include/linux/rcutree.h' l='55' type='bool rcu_is_watching()'/>
<use f='linux-5.3.1/kernel/extable.c' l='128' u='c' c='kernel_text_address'/>
<def f='linux-5.3.1/kernel/rcu/tree.c' l='889' ll='897' type='bool rcu_is_watching()'/>
<dec f='linux-5.3.1/kernel/rcu/tree.c' l='898' type='bool rcu_is_watching()'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='898' c='rcu_is_watching'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='898' u='a'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2443' u='c' c='__call_rcu_core'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2535' u='c' c='__call_rcu'/>
<doc f='linux-5.3.1/kernel/rcu/tree.c' l='881'>/**
 * rcu_is_watching - see if RCU thinks that the current CPU is not idle
 *
 * Return true if RCU is watching the running CPU, which means that this
 * CPU can safely enter RCU read-side critical sections.  In other words,
 * if the current CPU is not in its idle loop or is in an interrupt or
 * NMI handler, return true.
 */</doc>
<use f='linux-5.3.1/kernel/trace/trace.c' l='2868' u='c' c='__trace_stack'/>
