<dec f='linux-5.3.1/include/linux/cpuidle.h' l='151' type='void cpuidle_disable_device(struct cpuidle_device * dev)'/>
<use f='linux-5.3.1/drivers/acpi/processor_idle.c' l='1358' u='c' c='acpi_processor_hotplug'/>
<use f='linux-5.3.1/drivers/acpi/processor_idle.c' l='1399' u='c' c='acpi_processor_power_state_has_changed'/>
<def f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='492' ll='509' type='void cpuidle_disable_device(struct cpuidle_device * dev)'/>
<dec f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='511' type='void cpuidle_disable_device(struct cpuidle_device * )'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='511' c='cpuidle_disable_device'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='511' u='a'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='615' u='c' c='cpuidle_unregister_device'/>
<doc f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='485'>/**
 * cpuidle_disable_device - disables idle PM for a CPU
 * @dev: the CPU
 *
 * This function must be called between cpuidle_pause_and_lock and
 * cpuidle_resume_and_unlock when used externally.
 */</doc>
<use f='linux-5.3.1/drivers/cpuidle/governor.c' l='60' u='c' c='cpuidle_switch_governor'/>
