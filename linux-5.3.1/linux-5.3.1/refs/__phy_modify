<dec f='linux-5.3.1/include/linux/phy.h' l='785' type='int __phy_modify(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<use f='linux-5.3.1/include/linux/phy.h' l='807' u='c' c='__phy_set_bits'/>
<use f='linux-5.3.1/include/linux/phy.h' l='821' u='c' c='__phy_clear_bits'/>
<def f='linux-5.3.1/drivers/net/phy/phy-core.c' l='511' ll='518' type='int __phy_modify(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-core.c' l='519' type='int __phy_modify(struct phy_device * , u32 , u16 , u16 )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='519' c='__phy_modify'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='519' u='a'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='537' u='c' c='phy_modify'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='802' u='c' c='phy_modify_paged'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-core.c' l='500'>/**
 * __phy_modify - Convenience function for modifying a PHY register
 * @phydev: the phy_device struct
 * @regnum: register number to modify
 * @mask: bit mask of bits to clear
 * @set: new value of bits set in mask to write to @regnum
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/realtek.c' l='224' u='c' c='rtl8211e_config_init'/>
