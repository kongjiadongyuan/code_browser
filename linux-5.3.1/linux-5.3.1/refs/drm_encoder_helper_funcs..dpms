<dec f='linux-5.3.1/include/drm/drm_modeset_helper_vtables.h' l='489' type='void (*)(struct drm_encoder *, int)'/>
<offset>0</offset>
<doc f='linux-5.3.1/include/drm/drm_modeset_helper_vtables.h' l='473'>/**
	 * @dpms:
	 *
	 * Callback to control power levels on the encoder.  If the mode passed in
	 * is unsupported, the provider must use the next lowest power level.
	 * This is used by the legacy encoder helpers to implement DPMS
	 * functionality in drm_helper_connector_dpms().
	 *
	 * This callback is also used to disable an encoder by calling it with
	 * DRM_MODE_DPMS_OFF if the @disable hook isn&apos;t used.
	 *
	 * This callback is used by the legacy CRTC helpers.  Atomic helpers
	 * also support using this hook for enabling and disabling an encoder to
	 * facilitate transitions to atomic, but it is deprecated. Instead
	 * @enable and @disable should be used.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='1042' u='r' c='disable_outputs'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='1043' u='r' c='disable_outputs'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='166' u='r' c='drm_encoder_disable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='167' u='r' c='drm_encoder_disable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='832' u='r' c='drm_helper_encoder_dpms'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='833' u='r' c='drm_helper_encoder_dpms'/>
