<dec f='linux-5.3.1/include/linux/freezer.h' l='70' type='bool freeze_task(struct task_struct * p)'/>
<use f='linux-5.3.1/kernel/cgroup/legacy_freezer.c' l='181' u='c' c='freezer_attach'/>
<use f='linux-5.3.1/kernel/cgroup/legacy_freezer.c' l='222' u='c' c='freezer_fork'/>
<use f='linux-5.3.1/kernel/cgroup/legacy_freezer.c' l='325' u='c' c='freeze_cgroup'/>
<def f='linux-5.3.1/kernel/freezer.c' l='121' ll='150' type='bool freeze_task(struct task_struct * p)'/>
<doc f='linux-5.3.1/kernel/freezer.c' l='110'>/**
 * freeze_task - send a freeze request to given task
 * @p: task to send the request to
 *
 * If @p is freezing, the freeze request is sent either by sending a fake
 * signal (if it&apos;s not a kernel thread) or waking it up (if it&apos;s a kernel
 * thread).
 *
 * RETURNS:
 * %false, if @p is not freezing or already frozen; %true, otherwise
 */</doc>
<use f='linux-5.3.1/kernel/power/process.c' l='53' u='c' c='try_to_freeze_tasks'/>
