<dec f='linux-5.3.1/sound/pci/hda/hda_local.h' l='619' type='unsigned int snd_hda_codec_eapd_power_filter(struct hda_codec * codec, hda_nid_t nid, unsigned int power_state)'/>
<def f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2749' ll='2764' type='unsigned int snd_hda_codec_eapd_power_filter(struct hda_codec * codec, hda_nid_t nid, unsigned int power_state)'/>
<dec f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2765' type='unsigned int snd_hda_codec_eapd_power_filter(struct hda_codec * , hda_nid_t , unsigned int )'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2765' c='snd_hda_codec_eapd_power_filter'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2765' u='a'/>
<doc f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='2740'>/**
 * snd_hda_codec_eapd_power_filter - A power filter callback for EAPD
 * @codec: the HDA codec
 * @nid: widget NID
 * @power_state: power state to evalue
 *
 * Don&apos;t power down the widget if it controls eapd and EAPD_BTLENABLE is set.
 * This can be used a codec power_filter callback.
 */</doc>
