<dec f='linux-5.3.1/include/linux/netlink.h' l='245' type='bool __netlink_ns_capable(const struct netlink_skb_parms * nsp, struct user_namespace * ns, int cap)'/>
<use f='linux-5.3.1/drivers/connector/cn_proc.c' l='358' u='c' c='cn_proc_mcast_ctl'/>
<def f='linux-5.3.1/net/netlink/af_netlink.c' l='852' ll='858' type='bool __netlink_ns_capable(const struct netlink_skb_parms * nsp, struct user_namespace * user_ns, int cap)'/>
<dec f='linux-5.3.1/net/netlink/af_netlink.c' l='859' type='bool __netlink_ns_capable(const struct netlink_skb_parms * , struct user_namespace * , int )'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='859' c='__netlink_ns_capable'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='859' u='a'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='874' u='c' c='netlink_ns_capable'/>
<doc f='linux-5.3.1/net/netlink/af_netlink.c' l='842'>/**
 * __netlink_ns_capable - General netlink message capability test
 * @nsp: NETLINK_CB of the socket buffer holding a netlink command from userspace.
 * @user_ns: The user namespace of the capability to use
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap in the user namespace @user_ns.
 */</doc>
