<dec f='linux-5.3.1/include/linux/mm.h' l='1557' type='long get_user_pages_unlocked(unsigned long start, unsigned long nr_pages, struct page ** pages, unsigned int gup_flags)'/>
<def f='linux-5.3.1/mm/gup.c' l='1678' ll='1700' type='long get_user_pages_unlocked(unsigned long start, unsigned long nr_pages, struct page ** pages, unsigned int gup_flags)'/>
<dec f='linux-5.3.1/mm/gup.c' l='1701' type='long get_user_pages_unlocked(unsigned long , unsigned long , struct page ** , unsigned int )'/>
<use f='linux-5.3.1/mm/gup.c' l='1701' c='get_user_pages_unlocked'/>
<use f='linux-5.3.1/mm/gup.c' l='1701' u='a'/>
<use f='linux-5.3.1/mm/gup.c' l='2380' u='c' c='__gup_longterm_unlocked'/>
<doc f='linux-5.3.1/mm/gup.c' l='1663'>/*
 * get_user_pages_unlocked() is suitable to replace the form:
 *
 *      down_read(&amp;mm-&gt;mmap_sem);
 *      get_user_pages(tsk, mm, ..., pages, NULL);
 *      up_read(&amp;mm-&gt;mmap_sem);
 *
 *  with:
 *
 *      get_user_pages_unlocked(tsk, mm, ..., pages);
 *
 * It is functionally equivalent to get_user_pages_fast so
 * get_user_pages_fast should be used instead if specific gup_flags
 * (e.g. FOLL_FORCE) are not required.
 */</doc>
