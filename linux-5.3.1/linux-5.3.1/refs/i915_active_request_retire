<def f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.h' l='321' ll='344' type='int i915_active_request_retire(struct i915_active_request * active, struct mutex * mutex)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.h' l='312'>/**
 * i915_active_request_retire - waits until the request is retired
 * @active - the active request on which to wait
 *
 * i915_active_request_retire() waits until the request is completed,
 * and then ensures that at least the retirement handler for this
 * @active tracker is called before returning. If the @active
 * tracker is idle, the function returns immediately.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='236' u='c' c='intel_overlay_do_wait_request'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='430' u='c' c='intel_overlay_recover_from_interrupt'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='212' u='c' c='i915_active_wait'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='217' u='c' c='i915_active_wait'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_fence_reg.c' l='233' u='c' c='fence_update'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_fence_reg.c' l='241' u='c' c='fence_update'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_vma.c' l='998' u='c' c='i915_vma_unbind'/>
