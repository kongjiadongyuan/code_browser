<dec f='linux-5.3.1/include/drm/drm_property.h' l='273' type='struct drm_property_blob * drm_property_lookup_blob(struct drm_device * dev, uint32_t id)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='397' u='c' c='drm_atomic_replace_property_blob_from_id'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='432' u='c' c='drm_atomic_crtc_set_property'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='653' ll='663' type='struct drm_property_blob * drm_property_lookup_blob(struct drm_device * dev, uint32_t id)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='664' type='struct drm_property_blob * drm_property_lookup_blob(struct drm_device * , uint32_t )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='664' c='drm_property_lookup_blob'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='664' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='767' u='c' c='drm_mode_getblob_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='833' u='c' c='drm_mode_destroyblob_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='910' u='c' c='drm_property_change_valid_get'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='641'>/**
 * drm_property_lookup_blob - look up a blob property and take a reference
 * @dev: drm device
 * @id: id of the blob property
 *
 * If successful, this takes an additional reference to the blob property.
 * callers need to make sure to eventually unreference the returned property
 * again, using drm_property_blob_put().
 *
 * Return:
 * NULL on failure, pointer to the blob on success.
 */</doc>
