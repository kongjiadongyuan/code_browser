<dec f='linux-5.3.1/include/linux/rfkill.h' l='159' type='bool rfkill_set_hw_state(struct rfkill * rfkill, bool blocked)'/>
<doc f='linux-5.3.1/include/linux/rfkill.h' l='140'>/**
 * rfkill_set_hw_state - Set the internal rfkill hardware block state
 * @rfkill: pointer to the rfkill class to modify.
 * @blocked: the current hardware block state to set
 *
 * rfkill drivers that get events when the hard-blocked state changes
 * use this function to notify the rfkill core (and through that also
 * userspace) of the current state.  They should also use this after
 * resume if the state could have changed.
 *
 * You need not (but may) call this function if poll_state is assigned.
 *
 * This function can be called in any context, even from within rfkill
 * callbacks.
 *
 * The function returns the combined block state (true if transmitter
 * should be blocked) so that drivers need not keep track of the soft
 * block state -- which they might not be able to.
 */</doc>
<def f='linux-5.3.1/net/rfkill/core.c' l='525' ll='548' type='bool rfkill_set_hw_state(struct rfkill * rfkill, bool blocked)'/>
<dec f='linux-5.3.1/net/rfkill/core.c' l='549' type='bool rfkill_set_hw_state(struct rfkill * , bool )'/>
<use f='linux-5.3.1/net/rfkill/core.c' l='549' c='rfkill_set_hw_state'/>
<use f='linux-5.3.1/net/rfkill/core.c' l='549' u='a'/>
<use f='linux-5.3.1/net/wireless/core.c' l='1068' u='c' c='wiphy_rfkill_set_hw_state'/>
