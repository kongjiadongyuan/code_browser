<dec f='linux-5.3.1/include/linux/wait.h' l='204' type='void __wake_up_sync_key(struct wait_queue_head * wq_head, unsigned int mode, int nr, void * key)'/>
<use f='linux-5.3.1/fs/pipe.c' l='356' macro='1' u='c' c='pipe_read'/>
<use f='linux-5.3.1/fs/pipe.c' l='365' macro='1' u='c' c='pipe_read'/>
<use f='linux-5.3.1/fs/pipe.c' l='492' macro='1' u='c' c='pipe_write'/>
<use f='linux-5.3.1/fs/pipe.c' l='503' macro='1' u='c' c='pipe_write'/>
<use f='linux-5.3.1/fs/pipe.c' l='597' macro='1' u='c' c='pipe_release'/>
<use f='linux-5.3.1/kernel/exit.c' l='1499' u='c' c='__wake_up_parent'/>
<def f='linux-5.3.1/kernel/sched/wait.c' l='185' ll='197' type='void __wake_up_sync_key(struct wait_queue_head * wq_head, unsigned int mode, int nr_exclusive, void * key)'/>
<dec f='linux-5.3.1/kernel/sched/wait.c' l='198' type='void __wake_up_sync_key(struct wait_queue_head * , unsigned int , int , void * )'/>
<use f='linux-5.3.1/kernel/sched/wait.c' l='198' c='__wake_up_sync_key'/>
<use f='linux-5.3.1/kernel/sched/wait.c' l='198' u='a'/>
<use f='linux-5.3.1/kernel/sched/wait.c' l='205' u='c' c='__wake_up_sync'/>
<doc f='linux-5.3.1/kernel/sched/wait.c' l='168'>/**
 * __wake_up_sync_key - wake up threads blocked on a waitqueue.
 * @wq_head: the waitqueue
 * @mode: which threads
 * @nr_exclusive: how many wake-one or wake-many threads to wake up
 * @key: opaque value to be passed to wakeup targets
 *
 * The sync wakeup differs that the waker knows that it will schedule
 * away soon, so while the target thread will be woken up, it will not
 * be migrated to another CPU - ie. the two threads are &apos;synchronized&apos;
 * with each other. This can prevent needless bouncing between CPUs.
 *
 * On UP it can prevent extra preemption.
 *
 * If this function wakes up a task, it executes a full memory barrier before
 * accessing the task state.
 */</doc>
<use f='linux-5.3.1/net/core/sock.c' l='2786' macro='1' u='c' c='sock_def_readable'/>
<use f='linux-5.3.1/net/core/sock.c' l='2804' macro='1' u='c' c='sock_def_write_space'/>
<use f='linux-5.3.1/net/unix/af_unix.c' l='460' macro='1' u='c' c='unix_write_space'/>
<use f='linux-5.3.1/net/unix/af_unix.c' l='2074' macro='1' u='c' c='unix_dgram_recvmsg'/>
