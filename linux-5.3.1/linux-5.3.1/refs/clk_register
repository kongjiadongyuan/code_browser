<dec f='linux-5.3.1/include/linux/clk-provider.h' l='792' type='struct clk * clk_register(struct device * dev, struct clk_hw * hw)'/>
<def f='linux-5.3.1/drivers/clk/clk.c' l='3677' ll='3680' type='struct clk * clk_register(struct device * dev, struct clk_hw * hw)'/>
<dec f='linux-5.3.1/drivers/clk/clk.c' l='3681' type='struct clk * clk_register(struct device * , struct clk_hw * )'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='3681' c='clk_register'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='3681' u='a'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='3856' u='c' c='devm_clk_register'/>
<doc f='linux-5.3.1/drivers/clk/clk.c' l='3664'>/**
 * clk_register - allocate a new clock, register it and return an opaque cookie
 * @dev: device that is registering this clock
 * @hw: link to hardware-specific clock data
 *
 * clk_register is the *deprecated* interface for populating the clock tree with
 * new clock nodes. Use clk_hw_register() instead.
 *
 * Returns: a pointer to the newly allocated struct clk which
 * cannot be dereferenced by driver code but may be used in conjunction with the
 * rest of the clock API.  In the event of an error clk_register will return an
 * error code; drivers must test for an error code after calling clk_register.
 */</doc>
