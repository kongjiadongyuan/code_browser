<dec f='linux-5.3.1/include/linux/net.h' l='231' type='int __sock_create(struct net * net, int family, int type, int proto, struct socket ** res, int kern)'/>
<def f='linux-5.3.1/net/socket.c' l='1347' ll='1453' type='int __sock_create(struct net * net, int family, int type, int protocol, struct socket ** res, int kern)'/>
<dec f='linux-5.3.1/net/socket.c' l='1454' type='int __sock_create(struct net * , int , int , int , struct socket ** , int )'/>
<use f='linux-5.3.1/net/socket.c' l='1454' c='__sock_create'/>
<use f='linux-5.3.1/net/socket.c' l='1454' u='a'/>
<use f='linux-5.3.1/net/socket.c' l='1469' u='c' c='sock_create'/>
<use f='linux-5.3.1/net/socket.c' l='1487' u='c' c='sock_create_kern'/>
<doc f='linux-5.3.1/net/socket.c' l='1332'>/**
 *	__sock_create - creates a socket
 *	@net: net namespace
 *	@family: protocol family (AF_INET, ...)
 *	@type: communication type (SOCK_STREAM, ...)
 *	@protocol: protocol (0, ...)
 *	@res: new socket
 *	@kern: boolean for kernel space sockets
 *
 *	Creates a new socket and assigns it to @res, passing through LSM.
 *	Returns 0 or an error. On failure @res is set to %NULL. @kern must
 *	be set to true if the socket resides in kernel space.
 *	This function internally uses GFP_KERNEL.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1337' u='c' c='rpc_sockname'/>
<use f='linux-5.3.1/net/sunrpc/svcsock.c' l='1427' u='c' c='svc_create_socket'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='1896' u='c' c='xs_create_sock'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='1967' u='c' c='xs_local_setup_socket'/>
<use f='linux-5.3.1/net/wireless/nl80211.c' l='11283' u='c' c='nl80211_parse_wowlan_tcp'/>
