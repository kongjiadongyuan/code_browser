<dec f='linux-5.3.1/include/linux/mm.h' l='1495' type='void truncate_pagecache(struct inode * inode, loff_t new)'/>
<use f='linux-5.3.1/fs/ext4/extents.c' l='5447' u='c' c='ext4_collapse_range'/>
<use f='linux-5.3.1/fs/ext4/extents.c' l='5589' u='c' c='ext4_insert_range'/>
<use f='linux-5.3.1/fs/ext4/inode.c' l='5680' u='c' c='ext4_setattr'/>
<use f='linux-5.3.1/fs/fat/inode.c' l='218' u='c' c='fat_write_failed'/>
<use f='linux-5.3.1/fs/nfs/inode.c' l='661' u='c' c='nfs_vmtruncate'/>
<def f='linux-5.3.1/mm/truncate.c' l='790' ll='807' type='void truncate_pagecache(struct inode * inode, loff_t newsize)'/>
<dec f='linux-5.3.1/mm/truncate.c' l='808' type='void truncate_pagecache(struct inode * , loff_t )'/>
<use f='linux-5.3.1/mm/truncate.c' l='808' c='truncate_pagecache'/>
<use f='linux-5.3.1/mm/truncate.c' l='808' u='a'/>
<use f='linux-5.3.1/mm/truncate.c' l='830' u='c' c='truncate_setsize'/>
<doc f='linux-5.3.1/mm/truncate.c' l='775'>/**
 * truncate_pagecache - unmap and remove pagecache that has been truncated
 * @inode: inode
 * @newsize: new file size
 *
 * inode&apos;s new i_size must already be written before truncate_pagecache
 * is called.
 *
 * This function should typically be called before the filesystem
 * releases resources associated with the freed range (eg. deallocates
 * blocks). This way, pagecache will always stay logically coherent
 * with on-disk format, and the filesystem would not have to deal with
 * situations such as writepage being called for a page that has already
 * had its underlying blocks deallocated.
 */</doc>
