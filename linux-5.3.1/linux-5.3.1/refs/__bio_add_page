<dec f='linux-5.3.1/include/linux/bio.h' l='440' type='void __bio_add_page(struct bio * bio, struct page * page, unsigned int len, unsigned int off)'/>
<def f='linux-5.3.1/block/bio.c' l='795' ll='809' type='void __bio_add_page(struct bio * bio, struct page * page, unsigned int len, unsigned int off)'/>
<dec f='linux-5.3.1/block/bio.c' l='810' type='void __bio_add_page(struct bio * , struct page * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/block/bio.c' l='810' c='__bio_add_page'/>
<use f='linux-5.3.1/block/bio.c' l='810' u='a'/>
<use f='linux-5.3.1/block/bio.c' l='830' u='c' c='bio_add_page'/>
<use f='linux-5.3.1/block/bio.c' l='915' u='c' c='__bio_iov_iter_get_pages'/>
<doc f='linux-5.3.1/block/bio.c' l='785'>/**
 * __bio_add_page - add page(s) to a bio in a new segment
 * @bio: destination bio
 * @page: start page to add
 * @len: length of the data to add, may cross pages
 * @off: offset of the data relative to @page, may cross pages
 *
 * Add the data at @page + @off to @bio as a new bvec.  The caller must ensure
 * that @bio has space for another bvec.
 */</doc>
<use f='linux-5.3.1/fs/iomap/buffered-io.c' l='545' u='c' c='iomap_read_page_sync'/>
<use f='linux-5.3.1/fs/iomap/direct-io.c' l='196' u='c' c='iomap_dio_zero'/>
