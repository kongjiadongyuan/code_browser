<dec f='linux-5.3.1/ipc/util.h' l='136' type='void ipc_rmid(struct ipc_ids * , struct kern_ipc_perm * )'/>
<doc f='linux-5.3.1/ipc/util.h' l='135'>/* must be called with both locks acquired. */</doc>
<use f='linux-5.3.1/ipc/msg.c' l='114' u='c' c='msg_rmid'/>
<use f='linux-5.3.1/ipc/sem.c' l='485' u='c' c='sem_rmid'/>
<use f='linux-5.3.1/ipc/shm.c' l='231' u='c' c='shm_rmid'/>
<def f='linux-5.3.1/ipc/util.c' l='461' ll='478' type='void ipc_rmid(struct ipc_ids * ids, struct kern_ipc_perm * ipcp)'/>
<doc f='linux-5.3.1/ipc/util.c' l='453'>/**
 * ipc_rmid - remove an ipc identifier
 * @ids: ipc identifier set
 * @ipcp: ipc perm structure containing the identifier to remove
 *
 * ipc_ids.rwsem (as a writer) and the spinlock for this ID are held
 * before this function is called, and remain locked on the exit.
 */</doc>
