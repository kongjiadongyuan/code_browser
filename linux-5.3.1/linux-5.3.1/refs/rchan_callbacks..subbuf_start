<dec f='linux-5.3.1/include/linux/relay.h' l='99' type='int (*)(struct rchan_buf *, void *, void *, size_t)'/>
<offset>0</offset>
<doc f='linux-5.3.1/include/linux/relay.h' l='82'>/*
	 * subbuf_start - called on buffer-switch to a new sub-buffer
	 * @buf: the channel buffer containing the new sub-buffer
	 * @subbuf: the start of the new sub-buffer
	 * @prev_subbuf: the start of the previous sub-buffer
	 * @prev_padding: unused space at the end of previous sub-buffer
	 *
	 * The client should return 1 to continue logging, 0 to stop
	 * logging.
	 *
	 * NOTE: subbuf_start will also be invoked when the buffer is
	 *       created, so that the first sub-buffer can be initialized
	 *       if necessary.  In this case, prev_subbuf will be NULL.
	 *
	 * NOTE: the client can reserve bytes at the beginning of the new
	 *       sub-buffer by calling subbuf_start_reserve() in this callback.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_log.c' l='160' u='w'/>
<use f='linux-5.3.1/kernel/relay.c' l='323' u='w'/>
<use f='linux-5.3.1/kernel/relay.c' l='373' u='r' c='__relay_reset'/>
<use f='linux-5.3.1/kernel/relay.c' l='509' u='r' c='setup_callbacks'/>
<use f='linux-5.3.1/kernel/relay.c' l='510' u='w' c='setup_callbacks'/>
<use f='linux-5.3.1/kernel/relay.c' l='777' u='r' c='relay_switch_subbuf'/>
<use f='linux-5.3.1/kernel/trace/blktrace.c' l='449' u='w'/>
