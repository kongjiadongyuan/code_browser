<dec f='linux-5.3.1/include/linux/asn1_decoder.h' l='15' type='int asn1_ber_decoder(const struct asn1_decoder * decoder, void * context, const unsigned char * data, size_t datalen)'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_parser.c' l='140' u='c' c='pkcs7_parse_message'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='88' u='c' c='x509_cert_parse'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='96' u='c' c='x509_cert_parse'/>
<use f='linux-5.3.1/crypto/rsa_helper.c' l='165' u='c' c='rsa_parse_pub_key'/>
<use f='linux-5.3.1/crypto/rsa_helper.c' l='184' u='c' c='rsa_parse_priv_key'/>
<def f='linux-5.3.1/lib/asn1_decoder.c' l='167' ll='518' type='int asn1_ber_decoder(const struct asn1_decoder * decoder, void * context, const unsigned char * data, size_t datalen)'/>
<dec f='linux-5.3.1/lib/asn1_decoder.c' l='519' type='int asn1_ber_decoder(const struct asn1_decoder * , void * , const unsigned char * , size_t )'/>
<use f='linux-5.3.1/lib/asn1_decoder.c' l='519' c='asn1_ber_decoder'/>
<use f='linux-5.3.1/lib/asn1_decoder.c' l='519' u='a'/>
<doc f='linux-5.3.1/lib/asn1_decoder.c' l='142'>/**
 * asn1_ber_decoder - Decoder BER/DER/CER ASN.1 according to pattern
 * @decoder: The decoder definition (produced by asn1_compiler)
 * @context: The caller&apos;s context (to be passed to the action functions)
 * @data: The encoded data
 * @datalen: The size of the encoded data
 *
 * Decode BER/DER/CER encoded ASN.1 data according to a bytecode pattern
 * produced by asn1_compiler.  Action functions are called on marked tags to
 * allow the caller to retrieve significant data.
 *
 * LIMITATIONS:
 *
 * To keep down the amount of stack used by this function, the following limits
 * have been imposed:
 *
 *  (1) This won&apos;t handle datalen &gt; 65535 without increasing the size of the
 *	cons stack elements and length_too_long checking.
 *
 *  (2) The stack of constructed types is 10 deep.  If the depth of non-leaf
 *	constructed types exceeds this, the decode will fail.
 *
 *  (3) The SET type (not the SET OF type) isn&apos;t really supported as tracking
 *	what members of the set have been seen is a pain.
 */</doc>
