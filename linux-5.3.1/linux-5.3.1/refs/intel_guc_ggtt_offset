<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.h' l='144' ll='153' type='u32 intel_guc_ggtt_offset(struct intel_guc * guc, struct i915_vma * vma)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.h' l='131'>/**
 * intel_guc_ggtt_offset() - Get and validate the GGTT offset of @vma
 * @guc: intel_guc structure.
 * @vma: i915 graphics virtual memory area.
 *
 * GuC does not allow any gfx GGTT address that falls into range
 * [0, ggtt.pin_bias), which is reserved for Boot ROM, SRAM and WOPCM.
 * Currently, in order to exclude [0, ggtt.pin_bias) address space from
 * GGTT, all gfx objects used by GuC are allocated with intel_guc_allocate_vma()
 * and pinned with PIN_OFFSET_BIAS along with the value of ggtt.pin_bias.
 *
 * Return: GGTT offset of the @vma.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='303' u='c' c='guc_ctl_ctxinfo_flags'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='315' u='c' c='guc_ctl_log_params_flags'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='356' u='c' c='guc_ctl_ads_flags'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='599' u='c' c='intel_guc_reset_engine'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_ads.c' l='131' u='c' c='__guc_ads_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_ct.c' l='229' u='c' c='ctch_enable'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='413' u='c' c='guc_stage_desc_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='422' u='c' c='guc_stage_desc_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='439' u='c' c='guc_stage_desc_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='631' u='c' c='inject_preempt_context'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_huc.c' l='131' u='c' c='intel_huc_auth'/>
