<dec f='linux-5.3.1/include/drm/drm_damage_helper.h' l='68' type='void drm_atomic_helper_check_plane_damage(struct drm_atomic_state * state, struct drm_plane_state * plane_state)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='876' u='c' c='drm_atomic_helper_check_planes'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='120' ll='137' type='void drm_atomic_helper_check_plane_damage(struct drm_atomic_state * state, struct drm_plane_state * plane_state)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='138' type='void drm_atomic_helper_check_plane_damage(struct drm_atomic_state * , struct drm_plane_state * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='138' c='drm_atomic_helper_check_plane_damage'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='138' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='106'>/**
 * drm_atomic_helper_check_plane_damage - Verify plane damage on atomic_check.
 * @state: The driver state object.
 * @plane_state: Plane state for which to verify damage.
 *
 * This helper function makes sure that damage from plane state is discarded
 * for full modeset. If there are more reasons a driver would want to do a full
 * plane update rather than processing individual damage regions, then those
 * cases should be taken care of here.
 *
 * Note that &amp;drm_plane_state.fb_damage_clips == NULL in plane state means that
 * full plane update should happen. It also ensure helper iterator will return
 * &amp;drm_plane_state.src as damage.
 */</doc>
