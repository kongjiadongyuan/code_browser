<dec f='linux-5.3.1/include/linux/backing-dev.h' l='180' type='long wait_iff_congested(int sync, long timeout)'/>
<def f='linux-5.3.1/mm/backing-dev.c' l='1035' ll='1067' type='long wait_iff_congested(int sync, long timeout)'/>
<dec f='linux-5.3.1/mm/backing-dev.c' l='1068' type='long wait_iff_congested(int , long )'/>
<use f='linux-5.3.1/mm/backing-dev.c' l='1068' c='wait_iff_congested'/>
<use f='linux-5.3.1/mm/backing-dev.c' l='1068' u='a'/>
<doc f='linux-5.3.1/mm/backing-dev.c' l='1022'>/**
 * wait_iff_congested - Conditionally wait for a backing_dev to become uncongested or a pgdat to complete writes
 * @sync: SYNC or ASYNC IO
 * @timeout: timeout in jiffies
 *
 * In the event of a congested backing_dev (any backing_dev) this waits
 * for up to @timeout jiffies for either a BDI to exit congestion of the
 * given @sync queue or a write to complete.
 *
 * The return value is 0 if the sleep is for the full timeout. Otherwise,
 * it is the number of jiffies that were still remaining when the function
 * returned. return_value == timeout implies the function did not sleep.
 */</doc>
<use f='linux-5.3.1/mm/vmscan.c' l='2810' u='c' c='shrink_node'/>
