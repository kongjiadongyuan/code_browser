<dec f='linux-5.3.1/include/drm/drm_gem.h' l='395' type='int drm_gem_fence_array_add_implicit(struct xarray * fence_array, struct drm_gem_object * obj, bool write)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1403' ll='1433' type='int drm_gem_fence_array_add_implicit(struct xarray * fence_array, struct drm_gem_object * obj, bool write)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1434' type='int drm_gem_fence_array_add_implicit(struct xarray * , struct drm_gem_object * , bool )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1434' c='drm_gem_fence_array_add_implicit'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1434' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1389'>/**
 * drm_gem_fence_array_add_implicit - Adds the implicit dependencies tracked
 * in the GEM object&apos;s reservation object to an array of dma_fences for use in
 * scheduling a rendering job.
 *
 * This should be called after drm_gem_lock_reservations() on your array of
 * GEM objects used in the job but before updating the reservations with your
 * own fences.
 *
 * @fence_array: array of dma_fence * for the job to block on.
 * @obj: the gem object to add new dependencies from.
 * @write: whether the job might write the object (so we need to depend on
 * shared fences in the reservation object).
 */</doc>
