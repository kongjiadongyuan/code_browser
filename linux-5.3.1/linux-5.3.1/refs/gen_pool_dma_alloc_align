<dec f='linux-5.3.1/include/linux/genalloc.h' l='160' type='void * gen_pool_dma_alloc_align(struct gen_pool * pool, size_t size, dma_addr_t * dma, int align)'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-hcd.c' l='519' u='c' c='ohci_init'/>
<def f='linux-5.3.1/lib/genalloc.c' l='393' ll='400' type='void * gen_pool_dma_alloc_align(struct gen_pool * pool, size_t size, dma_addr_t * dma, int align)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='401' type='void * gen_pool_dma_alloc_align(struct gen_pool * , size_t , dma_addr_t * , int )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='401' c='gen_pool_dma_alloc_align'/>
<use f='linux-5.3.1/lib/genalloc.c' l='401' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='379'>/**
 * gen_pool_dma_alloc_align - allocate special memory from the pool for DMA
 * usage with the given alignment
 * @pool: pool to allocate from
 * @size: number of bytes to allocate from the pool
 * @dma: DMA-view physical address return value. Use %NULL if unneeded.
 * @align: alignment in bytes for starting address
 *
 * Allocate the requested number bytes from the specified pool, with the given
 * alignment restriction. Can not be used in NMI handler on architectures
 * without NMI-safe cmpxchg implementation.
 *
 * Return: virtual address of the allocated memory, or %NULL on failure
 */</doc>
