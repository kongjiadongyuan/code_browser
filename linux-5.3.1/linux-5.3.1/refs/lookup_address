<dec f='linux-5.3.1/arch/x86/include/asm/pgtable_types.h' l='561' type='pte_t * lookup_address(unsigned long address, unsigned int * level)'/>
<doc f='linux-5.3.1/arch/x86/include/asm/pgtable_types.h' l='555'>/*
 * Helper function that returns the kernel pagetable entry controlling
 * the virtual address &apos;address&apos;. NULL means no pagetable entry present.
 * NOTE: the return type is pte_t but if the pmd is PSE then we return it
 * as a pte too.
 */</doc>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='368' u='c' c='cpa_flush'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='476' u='c' c='protect_kernel_text_ro'/>
<def f='linux-5.3.1/arch/x86/mm/pageattr.c' l='615' ll='618' type='pte_t * lookup_address(unsigned long address, unsigned int * level)'/>
<dec f='linux-5.3.1/arch/x86/mm/pageattr.c' l='619' type='pte_t * lookup_address(unsigned long , unsigned int * )'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='619' c='lookup_address'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='619' u='a'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='628' u='c' c='_lookup_address_cpa'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='675' u='c' c='slow_virt_to_phys'/>
<use f='linux-5.3.1/arch/x86/mm/pageattr.c' l='2312' u='c' c='kernel_page_present'/>
<doc f='linux-5.3.1/arch/x86/mm/pageattr.c' l='607'>/*
 * Lookup the page table entry for a virtual address. Return a pointer
 * to the entry and the level of the mapping.
 *
 * Note: We return pud and pmd either when the entry is marked large
 * or when the present bit is not set. Otherwise we would return a
 * pointer to a nonexisting mapping.
 */</doc>
<use f='linux-5.3.1/arch/x86/mm/pti.c' l='283' u='c' c='pti_setup_vsyscall'/>
