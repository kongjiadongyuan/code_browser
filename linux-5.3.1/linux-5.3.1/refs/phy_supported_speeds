<dec f='linux-5.3.1/include/linux/phy.h' l='119' type='unsigned int phy_supported_speeds(struct phy_device * phy, unsigned int * speeds, unsigned int size)'/>
<doc f='linux-5.3.1/include/linux/phy.h' l='108'>/**
 * phy_supported_speeds - return all speeds currently supported by a phy device
 * @phy: The phy device to return supported speeds of.
 * @speeds: buffer to store supported speeds in.
 * @size: size of speeds buffer.
 *
 * Description: Returns the number of supported speeds, and fills
 * the speeds buffer with the supported speeds. If speeds buffer is
 * too small to contain all currently supported speeds, will return as
 * many speeds as can fit.
 */</doc>
<def f='linux-5.3.1/drivers/net/phy/phy.c' l='209' ll='214' type='unsigned int phy_supported_speeds(struct phy_device * phy, unsigned int * speeds, unsigned int size)'/>
<doc f='linux-5.3.1/drivers/net/phy/phy.c' l='199'>/**
 * phy_supported_speeds - return all speeds currently supported by a phy device
 * @phy: The phy device to return supported speeds of.
 * @speeds: buffer to store supported speeds in.
 * @size:   size of speeds buffer.
 *
 * Description: Returns the number of supported speeds, and fills the speeds
 * buffer with the supported speeds. If speeds buffer is too small to contain
 * all currently supported speeds, will return as many speeds as can fit.
 */</doc>
