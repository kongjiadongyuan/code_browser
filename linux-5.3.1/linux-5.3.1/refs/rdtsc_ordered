<def f='linux-5.3.1/arch/x86/include/asm/msr.h' l='218' ll='245' type='unsigned long long rdtsc_ordered()'/>
<doc f='linux-5.3.1/arch/x86/include/asm/msr.h' l='210'>/**
 * rdtsc_ordered() - read the current TSC in program order
 *
 * rdtsc_ordered() returns the result of RDTSC as a 64-bit integer.
 * It is ordered like a load to a global in-memory counter.  It should
 * be impossible to observe non-monotonic rdtsc_unordered() behavior
 * across multiple CPUs as long as the TSC is synced.
 */</doc>
<use f='linux-5.3.1/arch/x86/include/asm/vdso/gettimeofday.h' l='241' u='c' c='__arch_get_hw_counter'/>
<use f='linux-5.3.1/arch/x86/events/msr.c' l='214' u='c' c='msr_read_counter'/>
<use f='linux-5.3.1/arch/x86/kernel/trace_clock.c' l='16' u='c' c='trace_clock_x86_tsc'/>
<use f='linux-5.3.1/arch/x86/kernel/tsc.c' l='1087' u='c' c='read_tsc'/>
<use f='linux-5.3.1/arch/x86/kernel/tsc_sync.c' l='231' u='c' c='check_tsc_warp'/>
<use f='linux-5.3.1/arch/x86/kernel/tsc_sync.c' l='246' u='c' c='check_tsc_warp'/>
<use f='linux-5.3.1/arch/x86/lib/delay.c' l='59' u='c' c='delay_tsc'/>
<use f='linux-5.3.1/arch/x86/lib/delay.c' l='61' u='c' c='delay_tsc'/>
<use f='linux-5.3.1/arch/x86/lib/delay.c' l='82' u='c' c='delay_tsc'/>
<use f='linux-5.3.1/arch/x86/lib/delay.c' l='104' u='c' c='delay_mwaitx'/>
<use f='linux-5.3.1/arch/x86/lib/delay.c' l='122' u='c' c='delay_mwaitx'/>
