<dec f='linux-5.3.1/include/linux/netdevice.h' l='4116' type='void __hw_addr_ref_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *, int) unsync)'/>
<def f='linux-5.3.1/net/core/dev_addr_lists.c' l='351' ll='370' type='void __hw_addr_ref_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *, int) unsync)'/>
<dec f='linux-5.3.1/net/core/dev_addr_lists.c' l='371' type='void __hw_addr_ref_unsync_dev(struct netdev_hw_addr_list * , struct net_device * , int (*)(struct net_device *, const unsigned char *, int) )'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='371' c='__hw_addr_ref_unsync_dev'/>
<use f='linux-5.3.1/net/core/dev_addr_lists.c' l='371' u='a'/>
<doc f='linux-5.3.1/net/core/dev_addr_lists.c' l='337'>/**
 *  __hw_addr_ref_unsync_dev - Remove synchronized addresses and references on
 *  it from device
 *  @list: address list to remove synchronized addresses (references on it) from
 *  @dev:  device to sync
 *  @unsync: function to call if address and references on it should be removed
 *
 *  Remove all addresses that were added to the device by
 *  __hw_addr_ref_sync_dev(). This function is intended to be called from the
 *  ndo_stop or ndo_open functions on devices that require explicit address (or
 *  references on it) add/remove notifications. If the unsync function pointer
 *  is NULL then this function can be used to just reset the sync_cnt for the
 *  addresses in the list.
 **/</doc>
