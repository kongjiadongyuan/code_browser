<dec f='linux-5.3.1/include/sound/control.h' l='107' type='void snd_ctl_notify(struct snd_card * card, unsigned int mask, struct snd_ctl_elem_id * id)'/>
<def f='linux-5.3.1/sound/core/control.c' l='141' ll='180' type='void snd_ctl_notify(struct snd_card * card, unsigned int mask, struct snd_ctl_elem_id * id)'/>
<dec f='linux-5.3.1/sound/core/control.c' l='181' type='void snd_ctl_notify(struct snd_card * , unsigned int , struct snd_ctl_elem_id * )'/>
<use f='linux-5.3.1/sound/core/control.c' l='181' c='snd_ctl_notify'/>
<use f='linux-5.3.1/sound/core/control.c' l='181' u='a'/>
<use f='linux-5.3.1/sound/core/control.c' l='380' u='c' c='__snd_ctl_add_replace'/>
<use f='linux-5.3.1/sound/core/control.c' l='472' u='c' c='snd_ctl_remove'/>
<use f='linux-5.3.1/sound/core/control.c' l='589' u='c' c='snd_ctl_activate_id'/>
<use f='linux-5.3.1/sound/core/control.c' l='921' u='c' c='snd_ctl_elem_write'/>
<use f='linux-5.3.1/sound/core/control.c' l='1128' u='c' c='replace_user_tlv'/>
<doc f='linux-5.3.1/sound/core/control.c' l='131'>/**
 * snd_ctl_notify - Send notification to user-space for a control change
 * @card: the card to send notification
 * @mask: the event mask, SNDRV_CTL_EVENT_*
 * @id: the ctl element id to send notification
 *
 * This function adds an event record with the given id and mask, appends
 * to the list and wakes up the user-space for notification.  This can be
 * called in the atomic context.
 */</doc>
<use f='linux-5.3.1/sound/core/ctljack.c' l='83' u='c' c='snd_kctl_jack_report'/>
