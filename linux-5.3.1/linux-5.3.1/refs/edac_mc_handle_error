<dec f='linux-5.3.1/drivers/edac/edac_mc.h' l='245' type='void edac_mc_handle_error(const enum hw_event_mc_err_type type, struct mem_ctl_info * mci, const u16 error_count, const unsigned long page_frame_number, const unsigned long offset_in_page, const unsigned long syndrome, const int top_layer, const int mid_layer, const int low_layer, const char * msg, const char * other_detail)'/>
<doc f='linux-5.3.1/drivers/edac/edac_mc.h' l='227'>/**
 * edac_mc_handle_error() - Reports a memory event to userspace.
 *
 * @type:		severity of the error (CE/UE/Fatal)
 * @mci:		a struct mem_ctl_info pointer
 * @error_count:	Number of errors of the same type
 * @page_frame_number:	mem page where the error occurred
 * @offset_in_page:	offset of the error inside the page
 * @syndrome:		ECC syndrome
 * @top_layer:		Memory layer[0] position
 * @mid_layer:		Memory layer[1] position
 * @low_layer:		Memory layer[2] position
 * @msg:		Message meaningful to the end users that
 *			explains the event
 * @other_detail:	Technical details about the event that
 *			may help hardware manufacturers and
 *			EDAC developers to analyse the event
 */</doc>
<def f='linux-5.3.1/drivers/edac/edac_mc.c' l='1082' ll='1249' type='void edac_mc_handle_error(const enum hw_event_mc_err_type type, struct mem_ctl_info * mci, const u16 error_count, const unsigned long page_frame_number, const unsigned long offset_in_page, const unsigned long syndrome, const int top_layer, const int mid_layer, const int low_layer, const char * msg, const char * other_detail)'/>
<dec f='linux-5.3.1/drivers/edac/edac_mc.c' l='1250' type='void edac_mc_handle_error(const enum hw_event_mc_err_type , struct mem_ctl_info * , const u16 , const unsigned long , const unsigned long , const unsigned long , const int , const int , const int , const char * , const char * )'/>
<use f='linux-5.3.1/drivers/edac/edac_mc.c' l='1250' c='edac_mc_handle_error'/>
<use f='linux-5.3.1/drivers/edac/edac_mc.c' l='1250' u='a'/>
