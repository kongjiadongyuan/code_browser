<dec f='linux-5.3.1/include/linux/dmapool.h' l='24' type='void dma_pool_destroy(struct dma_pool * pool)'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e100.c' l='2981' u='c' c='e100_remove'/>
<use f='linux-5.3.1/drivers/usb/core/buffer.c' l='103' u='c' c='hcd_buffer_destroy'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-mem.c' l='118' u='c' c='ehci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-mem.c' l='120' u='c' c='ehci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-mem.c' l='122' u='c' c='ehci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-mem.c' l='124' u='c' c='ehci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-mem.c' l='59' u='c' c='ohci_mem_init'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-mem.c' l='67' u='c' c='ohci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-mem.c' l='69' u='c' c='ohci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='546' u='c' c='release_uhci'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='548' u='c' c='release_uhci'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='691' u='c' c='uhci_start'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='694' u='c' c='uhci_start'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-mem.c' l='1870' u='c' c='xhci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-mem.c' l='1874' u='c' c='xhci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-mem.c' l='1878' u='c' c='xhci_mem_cleanup'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-mem.c' l='1883' u='c' c='xhci_mem_cleanup'/>
<def f='linux-5.3.1/mm/dmapool.c' l='269' ll='306' type='void dma_pool_destroy(struct dma_pool * pool)'/>
<dec f='linux-5.3.1/mm/dmapool.c' l='307' type='void dma_pool_destroy(struct dma_pool * )'/>
<use f='linux-5.3.1/mm/dmapool.c' l='307' c='dma_pool_destroy'/>
<use f='linux-5.3.1/mm/dmapool.c' l='307' u='a'/>
<use f='linux-5.3.1/mm/dmapool.c' l='484' u='c' c='dmam_pool_release'/>
<doc f='linux-5.3.1/mm/dmapool.c' l='261'>/**
 * dma_pool_destroy - destroys a pool of dma memory blocks.
 * @pool: dma pool that will be destroyed
 * Context: !in_interrupt()
 *
 * Caller guarantees that no more memory from the pool is in use,
 * and that nothing will try to use the pool after this call.
 */</doc>
