<dec f='linux-5.3.1/include/linux/generic-radix-tree.h' l='135' type='void * __genradix_ptr_alloc(struct __genradix * , size_t , gfp_t )'/>
<use f='linux-5.3.1/fs/proc/base.c' l='2216' macro='1' u='c' c='proc_map_files_readdir'/>
<def f='linux-5.3.1/lib/generic-radix-tree.c' l='82' ll='139' type='void * __genradix_ptr_alloc(struct __genradix * radix, size_t offset, gfp_t gfp_mask)'/>
<dec f='linux-5.3.1/lib/generic-radix-tree.c' l='140' type='void * __genradix_ptr_alloc(struct __genradix * , size_t , gfp_t )'/>
<use f='linux-5.3.1/lib/generic-radix-tree.c' l='140' c='__genradix_ptr_alloc'/>
<use f='linux-5.3.1/lib/generic-radix-tree.c' l='140' u='a'/>
<use f='linux-5.3.1/lib/generic-radix-tree.c' l='203' u='c' c='__genradix_prealloc'/>
<doc f='linux-5.3.1/lib/generic-radix-tree.c' l='78'>/*
 * Returns pointer to the specified byte @offset within @radix, allocating it if
 * necessary - newly allocated slots are always zeroed out:
 */</doc>
