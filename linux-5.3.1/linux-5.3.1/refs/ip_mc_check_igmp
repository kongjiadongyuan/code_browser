<dec f='linux-5.3.1/include/linux/igmp.h' l='143' type='int ip_mc_check_igmp(struct sk_buff * skb)'/>
<def f='linux-5.3.1/net/ipv4/igmp.c' l='1606' ll='1621' type='int ip_mc_check_igmp(struct sk_buff * skb)'/>
<dec f='linux-5.3.1/net/ipv4/igmp.c' l='1622' type='int ip_mc_check_igmp(struct sk_buff * )'/>
<use f='linux-5.3.1/net/ipv4/igmp.c' l='1622' c='ip_mc_check_igmp'/>
<use f='linux-5.3.1/net/ipv4/igmp.c' l='1622' u='a'/>
<doc f='linux-5.3.1/net/ipv4/igmp.c' l='1591'>/**
 * ip_mc_check_igmp - checks whether this is a sane IGMP packet
 * @skb: the skb to validate
 *
 * Checks whether an IPv4 packet is a valid IGMP packet. If so sets
 * skb transport header accordingly and returns zero.
 *
 * -EINVAL: A broken packet was detected, i.e. it violates some internet
 *  standard
 * -ENOMSG: IP header validation succeeded but it is not an IGMP packet.
 * -ENOMEM: A memory allocation failure happened.
 *
 * Caller needs to set the skb network header and free any returned skb if it
 * differs from the provided skb.
 */</doc>
