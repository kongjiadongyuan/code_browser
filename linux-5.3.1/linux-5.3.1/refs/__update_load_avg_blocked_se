<dec f='linux-5.3.1/kernel/sched/pelt.h' l='4' type='int __update_load_avg_blocked_se(u64 now, struct sched_entity * se)'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='3210' u='c' c='set_task_rq_fair'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='3654' u='c' c='sync_entity_load_avg'/>
<def f='linux-5.3.1/kernel/sched/pelt.c' l='266' ll='275' type='int __update_load_avg_blocked_se(u64 now, struct sched_entity * se)'/>
<doc f='linux-5.3.1/kernel/sched/pelt.c' l='239'>/*
 * sched_entity:
 *
 *   task:
 *     se_runnable() == se_weight()
 *
 *   group: [ see update_cfs_group() ]
 *     se_weight()   = tg-&gt;weight * grq-&gt;load_avg / tg-&gt;load_avg
 *     se_runnable() = se_weight(se) * grq-&gt;runnable_load_avg / grq-&gt;load_avg
 *
 *   load_sum := runnable_sum
 *   load_avg = se_weight(se) * runnable_avg
 *
 *   runnable_load_sum := runnable_sum
 *   runnable_load_avg = se_runnable(se) * runnable_avg
 *
 * XXX collapse load_sum and runnable_load_sum
 *
 * cfq_rq:
 *
 *   load_sum = \Sum se_weight(se) * se-&gt;avg.load_sum
 *   load_avg = \Sum se-&gt;avg.load_avg
 *
 *   runnable_load_sum = \Sum se_runnable(se) * se-&gt;avg.runnable_load_sum
 *   runnable_load_avg = \Sum se-&gt;avg.runable_load_avg
 */</doc>
