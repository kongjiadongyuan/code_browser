<dec f='linux-5.3.1/include/linux/skbuff.h' l='2050' type='struct sk_buff * skb_dequeue_tail(struct sk_buff_head * list)'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='3048' ll='3057' type='struct sk_buff * skb_dequeue_tail(struct sk_buff_head * list)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='3058' type='struct sk_buff * skb_dequeue_tail(struct sk_buff_head * )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3058' c='skb_dequeue_tail'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3058' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='3040'>/**
 *	skb_dequeue_tail - remove from the tail of the queue
 *	@list: list to dequeue from
 *
 *	Remove the tail of the list. The list lock is taken so the function
 *	may be used safely with other locking list functions. The tail item is
 *	returned or %NULL if the list is empty.
 */</doc>
