<def f='linux-5.3.1/include/linux/pid.h' l='133' ll='139' type='struct pid_namespace * ns_of_pid(struct pid * pid)'/>
<doc f='linux-5.3.1/include/linux/pid.h' l='123'>/*
 * ns_of_pid() returns the pid namespace in which the specified pid was
 * allocated.
 *
 * NOTE:
 * 	ns_of_pid() is expected to be called for a process (task) that has
 * 	an attached &apos;struct pid&apos; (see attach_pid(), detach_pid()) i.e @pid
 * 	is expected to be non-NULL. If @pid is NULL, caller should handle
 * 	the resulting NULL pid-ns.
 */</doc>
<use f='linux-5.3.1/fs/autofs/dev-ioctl.c' l='358' u='c' c='autofs_dev_ioctl_setpipefd'/>
<use f='linux-5.3.1/fs/autofs/dev-ioctl.c' l='358' u='c' c='autofs_dev_ioctl_setpipefd'/>
<use f='linux-5.3.1/fs/autofs/waitq.c' l='367' u='c' c='autofs_wait'/>
<use f='linux-5.3.1/fs/autofs/waitq.c' l='368' u='c' c='autofs_wait'/>
<use f='linux-5.3.1/ipc/mqueue.c' l='728' u='c' c='__do_notify'/>
<use f='linux-5.3.1/kernel/fork.c' l='2168' u='c' c='copy_process'/>
<use f='linux-5.3.1/kernel/fork.c' l='2194' u='c' c='copy_process'/>
<use f='linux-5.3.1/kernel/pid.c' l='443' u='c' c='task_active_pid_ns'/>
<use f='linux-5.3.1/kernel/signal.c' l='3651' u='c' c='access_pidfd_pidns'/>
