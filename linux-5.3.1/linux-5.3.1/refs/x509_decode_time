<dec f='linux-5.3.1/crypto/asymmetric_keys/x509_parser.h' l='49' type='int x509_decode_time(time64_t * _t, size_t hdrlen, unsigned char tag, const unsigned char * value, size_t vlen)'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_parser.c' l='500' u='c' c='pkcs7_sig_note_authenticated_attr'/>
<def f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='533' ll='607' type='int x509_decode_time(time64_t * _t, size_t hdrlen, unsigned char tag, const unsigned char * value, size_t vlen)'/>
<dec f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='608' type='int x509_decode_time(time64_t * , size_t , unsigned char , const unsigned char * , size_t )'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='608' c='x509_decode_time'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='608' u='a'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='615' u='c' c='x509_note_not_before'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='623' u='c' c='x509_note_not_after'/>
<doc f='linux-5.3.1/crypto/asymmetric_keys/x509_cert_parser.c' l='515'>/**
 * x509_decode_time - Decode an X.509 time ASN.1 object
 * @_t: The time to fill in
 * @hdrlen: The length of the object header
 * @tag: The object tag
 * @value: The object value
 * @vlen: The size of the object value
 *
 * Decode an ASN.1 universal time or generalised time field into a struct the
 * kernel can handle and check it for validity.  The time is decoded thus:
 *
 *	[RFC5280 ยง4.1.2.5]
 *	CAs conforming to this profile MUST always encode certificate validity
 *	dates through the year 2049 as UTCTime; certificate validity dates in
 *	2050 or later MUST be encoded as GeneralizedTime.  Conforming
 *	applications MUST be able to process validity dates that are encoded in
 *	either UTCTime or GeneralizedTime.
 */</doc>
