<dec f='linux-5.3.1/include/drm/drm_gem.h' l='370' type='int drm_gem_handle_create(struct drm_file * file_priv, struct drm_gem_object * obj, u32 * handlep)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='444' ll='451' type='int drm_gem_handle_create(struct drm_file * file_priv, struct drm_gem_object * obj, u32 * handlep)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='452' type='int drm_gem_handle_create(struct drm_file * , struct drm_gem_object * , u32 * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='452' c='drm_gem_handle_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='452' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='431'>/**
 * drm_gem_handle_create - create a gem handle for an object
 * @file_priv: drm file-private structure to register the handle for
 * @obj: object to register
 * @handlep: pionter to return the created handle to the caller
 *
 * Create a handle for this object. This adds a handle reference to the object,
 * which includes a regular reference count. Callers will likely want to
 * dereference the object afterwards.
 *
 * Since this publishes @obj to userspace it must be fully set up by this point,
 * drivers must call this last in their buffer object creation callbacks.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='122' u='c' c='drm_gem_fb_create_handle'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='15361' u='c' c='intel_user_framebuffer_create_handle'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_userptr.c' l='804' u='c' c='i915_gem_userptr_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem.c' l='170' u='c' c='i915_gem_create'/>
