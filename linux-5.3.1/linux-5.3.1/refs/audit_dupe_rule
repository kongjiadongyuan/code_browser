<dec f='linux-5.3.1/kernel/audit.h' l='241' type='struct audit_entry * audit_dupe_rule(struct audit_krule * old)'/>
<use f='linux-5.3.1/kernel/audit_watch.c' l='282' u='c' c='audit_update_watch'/>
<def f='linux-5.3.1/kernel/auditfilter.c' l='804' ll='880' type='struct audit_entry * audit_dupe_rule(struct audit_krule * old)'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='1395' u='c' c='update_lsm_rule'/>
<doc f='linux-5.3.1/kernel/auditfilter.c' l='798'>/* Duplicate an audit rule.  This will be a deep copy with the exception
 * of the watch - that pointer is carried over.  The LSM specific fields
 * will be updated in the copy.  The point is to be able to replace the old
 * rule with the new rule in the filterlist, then free the old rule.
 * The rlist element is undefined; list manipulations are handled apart from
 * the initial copy. */</doc>
