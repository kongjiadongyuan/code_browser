<dec f='linux-5.3.1/include/linux/clk.h' l='330' type='int clk_bulk_get_all(struct device * dev, struct clk_bulk_data ** clks)'/>
<doc f='linux-5.3.1/include/linux/clk.h' l='312'>/**
 * clk_bulk_get_all - lookup and obtain all available references to clock
 *		      producer.
 * @dev: device for clock &quot;consumer&quot;
 * @clks: pointer to the clk_bulk_data table of consumer
 *
 * This helper function allows drivers to get all clk consumers in one
 * operation. If any of the clk cannot be acquired then any clks
 * that were obtained will be freed before returning to the caller.
 *
 * Returns a positive value for the number of clocks obtained while the
 * clock references are stored in the clk_bulk_data table in @clks field.
 * Returns 0 if there&apos;re none and a negative value if something failed.
 *
 * Drivers must assume that the clock source is not enabled.
 *
 * clk_bulk_get should not be called from within interrupt context.
 */</doc>
<def f='linux-5.3.1/drivers/clk/clk-bulk.c' l='136' ll='145' type='int clk_bulk_get_all(struct device * dev, struct clk_bulk_data ** clks)'/>
<dec f='linux-5.3.1/drivers/clk/clk-bulk.c' l='146' type='int clk_bulk_get_all(struct device * , struct clk_bulk_data ** )'/>
<use f='linux-5.3.1/drivers/clk/clk-bulk.c' l='146' c='clk_bulk_get_all'/>
<use f='linux-5.3.1/drivers/clk/clk-bulk.c' l='146' u='a'/>
<use f='linux-5.3.1/drivers/clk/clk-devres.c' l='106' u='c' c='devm_clk_bulk_get_all'/>
