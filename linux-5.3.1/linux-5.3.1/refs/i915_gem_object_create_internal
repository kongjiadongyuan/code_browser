<dec f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.h' l='2672' type='struct drm_i915_gem_object * i915_gem_object_create_internal(struct drm_i915_private * dev_priv, phys_addr_t size)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.h' l='2670'>/* i915_gem_internal.c */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1319' u='c' c='get_registers'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_internal.c' l='171' ll='198' type='struct drm_i915_gem_object * i915_gem_object_create_internal(struct drm_i915_private * i915, phys_addr_t size)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_internal.c' l='156'>/**
 * i915_gem_object_create_internal: create an object with volatile pages
 * @i915: the i915 device
 * @size: the size in bytes of backing storage to allocate for the object
 *
 * Creates a new object that wraps some internal memory for private use.
 * This object is not backed by swappable storage, and as such its contents
 * are volatile and only valid whilst pinned. If the object is reaped by the
 * shrinker, its pages and data will be discarded. Equally, it is not a full
 * GEM object and so not valid for access from userspace. This makes it useful
 * for hardware interfaces like ringbuffers (which are pinned from the time
 * the request is written to the time the hardware stops accessing it), but
 * not for contexts (which need to be preserved when not active for later
 * reuse). Note that it is not cleared upon allocation.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_engine_cs.c' l='572' u='c' c='init_status_page'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_ringbuffer.c' l='1245' u='c' c='intel_ring_create_vma'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_workarounds.c' l='1390' u='c' c='create_scratch'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem.c' l='1453' u='c' c='i915_gem_init_scratch'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_batch_pool.c' l='129' u='c' c='i915_gem_batch_pool_get'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_render_state.c' l='193' u='c' c='i915_gem_render_state_emit'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_timeline.c' l='42' u='c' c='__hwsp_alloc'/>
