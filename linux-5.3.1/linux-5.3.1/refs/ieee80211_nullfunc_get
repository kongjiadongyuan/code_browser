<dec f='linux-5.3.1/include/net/mac80211.h' l='4815' type='struct sk_buff * ieee80211_nullfunc_get(struct ieee80211_hw * hw, struct ieee80211_vif * vif, bool qos_ok)'/>
<doc f='linux-5.3.1/include/net/mac80211.h' l='4796'>/**
 * ieee80211_nullfunc_get - retrieve a nullfunc template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &amp;struct ieee80211_vif pointer from the add_interface callback.
 * @qos_ok: QoS NDP is acceptable to the caller, this should be set
 *	if at all possible
 *
 * Creates a Nullfunc template which can, for example, uploaded to
 * hardware. The template must be updated after association so that correct
 * BSSID and address is used.
 *
 * If @qos_ndp is set and the association is to an AP with QoS/WMM, the
 * returned packet will be QoS NDP.
 *
 * Note: Caller (or hardware) is responsible for setting the
 * &amp;IEEE80211_FCTL_PM bit as well as Duration and Sequence Control fields.
 *
 * Return: The nullfunc template. %NULL on error.
 */</doc>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='1022' u='c' c='ieee80211_send_nullfunc'/>
<def f='linux-5.3.1/net/mac80211/tx.c' l='4727' ll='4783' type='struct sk_buff * ieee80211_nullfunc_get(struct ieee80211_hw * hw, struct ieee80211_vif * vif, bool qos_ok)'/>
<dec f='linux-5.3.1/net/mac80211/tx.c' l='4784' type='struct sk_buff * ieee80211_nullfunc_get(struct ieee80211_hw * , struct ieee80211_vif * , bool )'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='4784' c='ieee80211_nullfunc_get'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='4784' u='a'/>
