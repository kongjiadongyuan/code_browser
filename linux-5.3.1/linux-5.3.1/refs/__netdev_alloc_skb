<dec f='linux-5.3.1/include/linux/skbuff.h' l='2750' type='struct sk_buff * __netdev_alloc_skb(struct net_device * dev, unsigned int length, gfp_t gfp_mask)'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='2769' u='c' c='netdev_alloc_skb'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='2776' u='c' c='__dev_alloc_skb'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='2789' u='c' c='__netdev_alloc_skb_ip_align'/>
<use f='linux-5.3.1/drivers/net/ethernet/marvell/sky2.c' l='1444' u='c' c='sky2_rx_alloc'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='424' ll='480' type='struct sk_buff * __netdev_alloc_skb(struct net_device * dev, unsigned int len, gfp_t gfp_mask)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='481' type='struct sk_buff * __netdev_alloc_skb(struct net_device * , unsigned int , gfp_t )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='481' c='__netdev_alloc_skb'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='481' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='411'>/**
 *	__netdev_alloc_skb - allocate an skbuff for rx on a specific device
 *	@dev: network device to receive on
 *	@len: length to allocate
 *	@gfp_mask: get_free_pages mask, passed to alloc_skb
 *
 *	Allocate a new &amp;sk_buff and assign it a usage count of one. The
 *	buffer has NET_SKB_PAD headroom built in. Users should allocate
 *	the headroom they think they need without accounting for the
 *	built in space. The built in space is used for optimisations.
 *
 *	%NULL is returned if there is no free memory.
 */</doc>
