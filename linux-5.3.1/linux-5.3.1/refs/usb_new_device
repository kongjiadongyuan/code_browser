<dec f='linux-5.3.1/include/linux/usb/hcd.h' l='523' type='int usb_new_device(struct usb_device * dev)'/>
<use f='linux-5.3.1/drivers/usb/core/hcd.c' l='1008' u='c' c='register_root_hub'/>
<def f='linux-5.3.1/drivers/usb/core/hub.c' l='2482' ll='2574' type='int usb_new_device(struct usb_device * udev)'/>
<use f='linux-5.3.1/drivers/usb/core/hub.c' l='5098' u='c' c='hub_port_connect'/>
<doc f='linux-5.3.1/drivers/usb/core/hub.c' l='2461'>/**
 * usb_new_device - perform initial device setup (usbcore-internal)
 * @udev: newly addressed device (in ADDRESS state)
 *
 * This is called with devices which have been detected but not fully
 * enumerated.  The device descriptor is available, but not descriptors
 * for any device configuration.  The caller must have locked either
 * the parent hub (if udev is a normal device) or else the
 * usb_bus_idr_lock (if udev is a root hub).  The parent&apos;s pointer to
 * udev has already been installed, but udev is not yet visible through
 * sysfs or other filesystem code.
 *
 * This call is synchronous, and may not be used in an interrupt context.
 *
 * Only the hub driver or root-hub registrar should ever call this.
 *
 * Return: Whether the device is configured properly or not. Zero if the
 * interface was registered with the driver core; else a negative errno
 * value.
 *
 */</doc>
