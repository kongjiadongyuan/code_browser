<dec f='linux-5.3.1/include/linux/interrupt.h' l='341' type='int irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify * notify)'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='1997' u='c' c='iommu_init_intcapxt'/>
<def f='linux-5.3.1/kernel/irq/manage.c' l='361' ll='392' type='int irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify * notify)'/>
<dec f='linux-5.3.1/kernel/irq/manage.c' l='393' type='int irq_set_affinity_notifier(unsigned int , struct irq_affinity_notify * )'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='393' c='irq_set_affinity_notifier'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='393' u='a'/>
<doc f='linux-5.3.1/kernel/irq/manage.c' l='350'>/**
 *	irq_set_affinity_notifier - control notification of IRQ affinity changes
 *	@irq:		Interrupt for which to enable/disable notification
 *	@notify:	Context for notification, or %NULL to disable
 *			notification.  Function pointers must be initialised;
 *			the other fields will be initialised by this function.
 *
 *	Must be called in process context.  Notification may only be enabled
 *	after the IRQ is allocated and must be disabled before the IRQ is
 *	freed using free_irq().
 */</doc>
<use f='linux-5.3.1/lib/cpu_rmap.c' l='235' u='c' c='free_irq_cpu_rmap'/>
<use f='linux-5.3.1/lib/cpu_rmap.c' l='297' u='c' c='irq_cpu_rmap_add'/>
