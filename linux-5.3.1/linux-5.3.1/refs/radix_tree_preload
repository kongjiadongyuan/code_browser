<dec f='linux-5.3.1/include/linux/radix-tree.h' l='227' type='int radix_tree_preload(gfp_t gfp_mask)'/>
<def f='linux-5.3.1/lib/radix-tree.c' l='69' ll='73'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='74'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='255' c='radix_tree_node_alloc'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='333' c='__radix_tree_preload'/>
<def f='linux-5.3.1/lib/radix-tree.c' l='374' ll='379' type='int radix_tree_preload(gfp_t gfp_mask)'/>
<dec f='linux-5.3.1/lib/radix-tree.c' l='380' type='int radix_tree_preload(gfp_t )'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='380' c='radix_tree_preload'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='380' u='a'/>
<use f='linux-5.3.1/lib/radix-tree.c' l='1589' c='radix_tree_cpu_dead'/>
<size>16</size>
<doc f='linux-5.3.1/lib/radix-tree.c' l='66'>/*
 * Per-cpu pool of preloaded nodes
 */</doc>
<doc f='linux-5.3.1/lib/radix-tree.c' l='365'>/*
 * Load up this CPU&apos;s radix_tree_node buffer with sufficient objects to
 * ensure that the addition of a single element in the tree cannot fail.  On
 * success, return zero, with preemption disabled.  On error, return -ENOMEM
 * with preemption not disabled.
 *
 * To make use of this facility, the radix tree must be initialised without
 * __GFP_DIRECT_RECLAIM being passed to INIT_RADIX_TREE().
 */</doc>
<use f='linux-5.3.1/mm/vmalloc.c' l='1472' u='c' c='new_vmap_block'/>
