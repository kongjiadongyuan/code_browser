<dec f='linux-5.3.1/fs/ext4/ext4.h' l='2466' type='struct inode * __ext4_new_inode(handle_t * , struct inode * , umode_t , const struct qstr * qstr, __u32 goal, uid_t * owner, __u32 i_flags, int handle_type, unsigned int line_no, int nblocks)'/>
<doc f='linux-5.3.1/fs/ext4/ext4.h' l='2465'>/* ialloc.c */</doc>
<def f='linux-5.3.1/fs/ext4/ialloc.c' l='742' ll='1200' type='struct inode * __ext4_new_inode(handle_t * handle, struct inode * dir, umode_t mode, const struct qstr * qstr, __u32 goal, uid_t * owner, __u32 i_flags, int handle_type, unsigned int line_no, int nblocks)'/>
<doc f='linux-5.3.1/fs/ext4/ialloc.c' l='732'>/*
 * There are two policies for allocating an inode.  If the new inode is
 * a directory, then a forward search is made for a block group with both
 * free space and a low directory-to-inode ratio; if that fails, then of
 * the groups with above-average free space, that group with the fewest
 * directories already is chosen.
 *
 * For other inodes, search forward from the parent directory&apos;s block
 * group to find a free inode.
 */</doc>
<use f='linux-5.3.1/fs/ext4/migrate.c' l='470' macro='1' u='c' c='ext4_ext_migrate'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2587' macro='1' u='c' c='ext4_create'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2620' macro='1' u='c' c='ext4_mknod'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2649' macro='1' u='c' c='ext4_tmpfile'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2763' macro='1' u='c' c='ext4_mkdir'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='3262' macro='1' u='c' c='ext4_symlink'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='3603' macro='1' u='c' c='ext4_whiteout_for_rename'/>
<use f='linux-5.3.1/fs/ext4/xattr.c' l='1430' macro='1' u='c' c='ext4_xattr_inode_create'/>
