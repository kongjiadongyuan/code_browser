<dec f='linux-5.3.1/include/crypto/public_key.h' l='76' type='int decrypt_blob(struct kernel_pkey_params * , const void * , void * )'/>
<def f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='101' ll='106' type='int decrypt_blob(struct kernel_pkey_params * params, const void * enc, void * data)'/>
<dec f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='107' type='int decrypt_blob(struct kernel_pkey_params * , const void * , void * )'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='107' c='decrypt_blob'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='107' u='a'/>
<doc f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='88'>/**
 * decrypt_blob - Decrypt data using an asymmetric key
 * @params: Various parameters
 * @enc: Encrypted data to be decrypted, length params-&gt;enc_len
 * @data: Decrypted data buffer, length params-&gt;data_len
 *
 * Decrypt the specified data blob using the private key specified by
 * params-&gt;key.  The decrypted data is wrapped in an encoding if
 * params-&gt;encoding is specified (eg. &quot;pkcs1&quot;).
 *
 * Returns the length of the data placed in the decrypted data buffer or an
 * error.
 */</doc>
