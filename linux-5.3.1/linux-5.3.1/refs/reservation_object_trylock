<def f='linux-5.3.1/include/linux/reservation.h' l='202' ll='206' type='bool reservation_object_trylock(struct reservation_object * obj)'/>
<doc f='linux-5.3.1/include/linux/reservation.h' l='188'>/**
 * reservation_object_trylock - trylock the reservation object
 * @obj: the reservation object
 *
 * Tries to lock the reservation object for exclusive access and modification.
 * Note, that the lock is only against other writers, readers will run
 * concurrently with a writer under RCU. The seqlock is used to notify readers
 * if they overlap with a writer.
 *
 * Also note that since no context is provided, no deadlock protection is
 * possible.
 *
 * Returns true if the lock was acquired, false otherwise.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_wait.c' l='90' u='c' c='i915_gem_object_wait_reservation'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_vma.c' l='102' u='c' c='__i915_vma_retire'/>
