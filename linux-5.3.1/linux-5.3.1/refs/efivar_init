<dec f='linux-5.3.1/include/linux/efi.h' l='1492' type='int efivar_init(int (*)(efi_char16_t *, efi_guid_t, unsigned long, void *) func, void * data, bool duplicates, struct list_head * head)'/>
<use f='linux-5.3.1/drivers/firmware/efi/efi.c' l='285' u='c' c='efivar_ssdt_load'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='603' u='c' c='efivar_update_sysfs_entries'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='683' u='c' c='efivars_sysfs_init'/>
<def f='linux-5.3.1/drivers/firmware/efi/vars.c' l='426' ll='516' type='int efivar_init(int (*)(efi_char16_t *, efi_guid_t, unsigned long, void *) func, void * data, bool duplicates, struct list_head * head)'/>
<dec f='linux-5.3.1/drivers/firmware/efi/vars.c' l='517' type='int efivar_init(int (*)(efi_char16_t *, efi_guid_t, unsigned long, void *) , void * , bool , struct list_head * )'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='517' c='efivar_init'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='517' u='a'/>
<doc f='linux-5.3.1/drivers/firmware/efi/vars.c' l='413'>/**
 * efivar_init - build the initial list of EFI variables
 * @func: callback function to invoke for every variable
 * @data: function-specific data to pass to @func
 * @atomic: do we need to execute the @func-loop atomically?
 * @duplicates: error if we encounter duplicates on @head?
 * @head: initialised head of variable list
 *
 * Get every EFI variable from the firmware and invoke @func. @func
 * should call efivar_entry_add() to build the list of variables.
 *
 * Returns 0 on success, or a kernel error code on failure.
 */</doc>
<use f='linux-5.3.1/fs/efivarfs/super.c' l='216' u='c' c='efivarfs_fill_super'/>
