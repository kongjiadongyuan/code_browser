<dec f='linux-5.3.1/include/linux/bio.h' l='359' type='struct bio * bio_split(struct bio * bio, int sectors, gfp_t gfp, struct bio_set * bs)'/>
<use f='linux-5.3.1/include/linux/bio.h' l='378' u='c' c='bio_next_split'/>
<def f='linux-5.3.1/block/bio.c' l='1848' ll='1871' type='struct bio * bio_split(struct bio * bio, int sectors, gfp_t gfp, struct bio_set * bs)'/>
<dec f='linux-5.3.1/block/bio.c' l='1872' type='struct bio * bio_split(struct bio * , int , gfp_t , struct bio_set * )'/>
<use f='linux-5.3.1/block/bio.c' l='1872' c='bio_split'/>
<use f='linux-5.3.1/block/bio.c' l='1872' u='a'/>
<doc f='linux-5.3.1/block/bio.c' l='1834'>/**
 * bio_split - split a bio
 * @bio:	bio to split
 * @sectors:	number of sectors to split from the front of @bio
 * @gfp:	gfp mask
 * @bs:		bio set to allocate from
 *
 * Allocates and returns a new bio which represents @sectors from the start of
 * @bio, and updates @bio to represent the remaining sectors.
 *
 * Unless this is a discard request the newly allocated bio will point
 * to @bio&apos;s bi_io_vec; it is the caller&apos;s responsibility to ensure that
 * @bio is not freed before the split.
 */</doc>
<use f='linux-5.3.1/block/blk-merge.c' l='102' u='c' c='blk_bio_discard_split'/>
<use f='linux-5.3.1/block/blk-merge.c' l='116' u='c' c='blk_bio_write_zeroes_split'/>
<use f='linux-5.3.1/block/blk-merge.c' l='132' u='c' c='blk_bio_write_same_split'/>
<use f='linux-5.3.1/block/blk-merge.c' l='250' u='c' c='blk_bio_segment_split'/>
<use f='linux-5.3.1/block/bounce.c' l='308' u='c' c='__blk_queue_bounce'/>
<use f='linux-5.3.1/drivers/md/dm.c' l='1648' u='c' c='__split_and_process_bio'/>
<use f='linux-5.3.1/drivers/md/dm.c' l='1729' u='c' c='dm_queue_split'/>
