<dec f='linux-5.3.1/include/drm/drm_crtc_helper.h' l='56' type='int drm_helper_connector_dpms(struct drm_connector * connector, int mode)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='879' ll='921' type='int drm_helper_connector_dpms(struct drm_connector * connector, int mode)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='922' type='int drm_helper_connector_dpms(struct drm_connector * , int )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='922' c='drm_helper_connector_dpms'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='922' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='858'>/**
 * drm_helper_connector_dpms() - connector dpms helper implementation
 * @connector: affected connector
 * @mode: DPMS mode
 *
 * The drm_helper_connector_dpms() helper function implements the
 * &amp;drm_connector_funcs.dpms callback for drivers using the legacy CRTC
 * helpers.
 *
 * This is the main helper function provided by the CRTC helper framework for
 * implementing the DPMS connector attribute. It computes the new desired DPMS
 * state for all encoders and CRTCs in the output mesh and calls the
 * &amp;drm_crtc_helper_funcs.dpms and &amp;drm_encoder_helper_funcs.dpms callbacks
 * provided by the driver.
 *
 * This function is deprecated.  New drivers must implement atomic modeset
 * support, where DPMS is handled in the DRM core.
 *
 * Returns:
 * Always returns 0.
 */</doc>
