<dec f='linux-5.3.1/include/linux/dcache.h' l='236' type='struct dentry * d_alloc(struct dentry * , const struct qstr * )'/>
<doc f='linux-5.3.1/include/linux/dcache.h' l='235'>/* allocate/de-allocate */</doc>
<def f='linux-5.3.1/fs/dcache.c' l='1765' ll='1781' type='struct dentry * d_alloc(struct dentry * parent, const struct qstr * name)'/>
<dec f='linux-5.3.1/fs/dcache.c' l='1782' type='struct dentry * d_alloc(struct dentry * , const struct qstr * )'/>
<use f='linux-5.3.1/fs/dcache.c' l='1782' c='d_alloc'/>
<use f='linux-5.3.1/fs/dcache.c' l='1782' u='a'/>
<use f='linux-5.3.1/fs/dcache.c' l='1829' u='c' c='d_alloc_name'/>
<use f='linux-5.3.1/fs/dcache.c' l='2153' u='c' c='d_add_ci'/>
<use f='linux-5.3.1/fs/dcache.c' l='2519' u='c' c='d_alloc_parallel'/>
<doc f='linux-5.3.1/fs/dcache.c' l='1756'>/**
 * d_alloc	-	allocate a dcache entry
 * @parent: parent of entry to allocate
 * @name: qstr of the name
 *
 * Allocates a dentry. It returns %NULL if there is insufficient memory
 * available. On a success the dentry is returned. The name passed in is
 * copied and the copy passed in may be reused after this call.
 */</doc>
<use f='linux-5.3.1/fs/efivarfs/super.c' l='99' u='c' c='efivarfs_alloc_dentry'/>
<use f='linux-5.3.1/fs/namei.c' l='1540' u='c' c='__lookup_hash'/>
<use f='linux-5.3.1/fs/namei.c' l='3448' u='c' c='vfs_tmpfile'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='2067' u='c' c='nfs_rename'/>
<use f='linux-5.3.1/mm/shmem.c' l='3009' u='c' c='shmem_whiteout'/>
<use f='linux-5.3.1/net/sunrpc/rpc_pipe.c' l='636' u='c' c='__rpc_lookup_create_exclusive'/>
