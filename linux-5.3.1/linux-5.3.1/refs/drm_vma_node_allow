<dec f='linux-5.3.1/include/drm/drm_vma_manager.h' l='76' type='int drm_vma_node_allow(struct drm_vma_offset_node * node, struct drm_file * tag)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='403' u='c' c='drm_gem_handle_create_tail'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='642' u='c' c='drm_gem_prime_mmap'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_vma_manager.c' l='263' ll='309' type='int drm_vma_node_allow(struct drm_vma_offset_node * node, struct drm_file * tag)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_vma_manager.c' l='310' type='int drm_vma_node_allow(struct drm_vma_offset_node * , struct drm_file * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vma_manager.c' l='310' c='drm_vma_node_allow'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vma_manager.c' l='310' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_vma_manager.c' l='243'>/**
 * drm_vma_node_allow - Add open-file to list of allowed users
 * @node: Node to modify
 * @tag: Tag of file to remove
 *
 * Add @tag to the list of allowed open-files for this node. If @tag is
 * already on this list, the ref-count is incremented.
 *
 * The list of allowed-users is preserved across drm_vma_offset_add() and
 * drm_vma_offset_remove() calls. You may even call it if the node is currently
 * not added to any offset-manager.
 *
 * You must remove all open-files the same number of times as you added them
 * before destroying the node. Otherwise, you will leak memory.
 *
 * This is locked against concurrent access internally.
 *
 * RETURNS:
 * 0 on success, negative error code on internal failure (out-of-mem)
 */</doc>
