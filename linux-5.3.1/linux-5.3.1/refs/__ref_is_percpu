<def f='linux-5.3.1/include/linux/percpu-refcount.h' l='145' ll='174' type='bool __ref_is_percpu(struct percpu_ref * ref, unsigned long ** percpu_countp)'/>
<use f='linux-5.3.1/include/linux/percpu-refcount.h' l='191' u='c' c='percpu_ref_get_many'/>
<use f='linux-5.3.1/include/linux/percpu-refcount.h' l='228' u='c' c='percpu_ref_tryget'/>
<use f='linux-5.3.1/include/linux/percpu-refcount.h' l='262' u='c' c='percpu_ref_tryget_live'/>
<use f='linux-5.3.1/include/linux/percpu-refcount.h' l='290' u='c' c='percpu_ref_put_many'/>
<use f='linux-5.3.1/include/linux/percpu-refcount.h' l='338' u='c' c='percpu_ref_is_zero'/>
<doc f='linux-5.3.1/include/linux/percpu-refcount.h' l='139'>/*
 * Internal helper.  Don&apos;t use outside percpu-refcount proper.  The
 * function doesn&apos;t return the pointer and let the caller test it for NULL
 * because doing so forces the compiler to generate two conditional
 * branches as it can&apos;t assume that @ref-&gt;percpu_count is not NULL.
 */</doc>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='397' u='c' c='percpu_ref_resurrect'/>
