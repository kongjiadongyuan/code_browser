<dec f='linux-5.3.1/kernel/power/power.h' l='153' type='int snapshot_write_next(struct snapshot_handle * handle)'/>
<def f='linux-5.3.1/kernel/power/snapshot.c' l='2584' ll='2652' type='int snapshot_write_next(struct snapshot_handle * handle)'/>
<doc f='linux-5.3.1/kernel/power/snapshot.c' l='2568'>/**
 * snapshot_write_next - Get the address to store the next image page.
 * @handle: Snapshot handle structure to guide the writing.
 *
 * On the first call, @handle should point to a zeroed snapshot_handle
 * structure.  The structure gets populated then and a pointer to it should be
 * passed to this function every next time.
 *
 * On success, the function returns a positive number.  Then, the caller
 * is allowed to write up to the returned number of bytes to the memory
 * location computed by the data_of() macro.
 *
 * The function returns 0 to indicate the &quot;end of file&quot; condition.  Negative
 * numbers are returned on errors, in which cases the structure pointed to by
 * @handle is not updated and should not be used any more.
 */</doc>
<use f='linux-5.3.1/kernel/power/swap.c' l='1071' u='c' c='load_image'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='1287' u='c' c='load_image_lzo'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='1413' u='c' c='load_image_lzo'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='1482' u='c' c='swsusp_read'/>
<use f='linux-5.3.1/kernel/power/user.c' l='179' u='c' c='snapshot_write'/>
