<dec f='linux-5.3.1/ipc/util.h' l='133' type='int ipc_addid(struct ipc_ids * , struct kern_ipc_perm * , int )'/>
<doc f='linux-5.3.1/ipc/util.h' l='132'>/* must be called with ids-&gt;rwsem acquired for writing */</doc>
<use f='linux-5.3.1/ipc/msg.c' l='164' u='c' c='newque'/>
<use f='linux-5.3.1/ipc/sem.c' l='552' u='c' c='newary'/>
<use f='linux-5.3.1/ipc/shm.c' l='679' u='c' c='newseg'/>
<def f='linux-5.3.1/ipc/util.c' l='277' ll='326' type='int ipc_addid(struct ipc_ids * ids, struct kern_ipc_perm * new, int limit)'/>
<doc f='linux-5.3.1/ipc/util.c' l='262'>/**
 * ipc_addid - add an ipc identifier
 * @ids: ipc identifier set
 * @new: new ipc permission set
 * @limit: limit for the number of used ids
 *
 * Add an entry &apos;new&apos; to the ipc ids idr. The permissions object is
 * initialised and the first free entry is set up and the index assigned
 * is returned. The &apos;new&apos; entry is returned in a locked state on success.
 *
 * On failure the entry is not locked and a negative err-code is returned.
 * The caller must use ipc_rcu_putref() to free the identifier.
 *
 * Called with writer ipc_ids.rwsem held.
 */</doc>
