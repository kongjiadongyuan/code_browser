<dec f='linux-5.3.1/include/drm/drm_dp_helper.h' l='1174' type='u8 drm_dp_dsc_sink_max_slice_count(const u8 * dsc_dpcd, bool is_edp)'/>
<doc f='linux-5.3.1/include/drm/drm_dp_helper.h' l='1173'>/* DP/eDP DSC support */</doc>
<def f='linux-5.3.1/drivers/gpu/drm/drm_dp_helper.c' l='1382' ll='1422' type='u8 drm_dp_dsc_sink_max_slice_count(const u8 * dsc_dpcd, bool is_edp)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_dp_helper.c' l='1423' type='u8 drm_dp_dsc_sink_max_slice_count(const u8 * , bool )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_helper.c' l='1423' c='drm_dp_dsc_sink_max_slice_count'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_helper.c' l='1423' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_dp_helper.c' l='1366'>/**
 * drm_dp_dsc_sink_max_slice_count() - Get the max slice count
 * supported by the DSC sink.
 * @dsc_dpcd: DSC capabilities from DPCD
 * @is_edp: true if its eDP, false for DP
 *
 * Read the slice capabilities DPCD register from DSC sink to get
 * the maximum slice count supported. This is used to populate
 * the DSC parameters in the &amp;struct drm_dsc_config by the driver.
 * Driver creates an infoframe using these parameters to populate
 * &amp;struct drm_dsc_pps_infoframe. These are sent to the sink using DSC
 * infoframe using the helper function drm_dsc_pps_infoframe_pack()
 *
 * Returns:
 * Maximum slice count supported by DSC sink or 0 its invalid
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_dp.c' l='574' u='c' c='intel_dp_mode_valid'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_dp.c' l='1963' u='c' c='intel_dp_dsc_compute_config'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_dp.c' l='4422' u='c' c='intel_dp_dsc_get_slice_count'/>
