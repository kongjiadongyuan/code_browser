<dec f='linux-5.3.1/arch/x86/include/asm/fpu/xstate.h' l='50' type='void * get_xsave_addr(struct xregs_state * xsave, int xfeature_nr)'/>
<use f='linux-5.3.1/arch/x86/include/asm/pgtable.h' l='143' u='c' c='write_pkru'/>
<use f='linux-5.3.1/arch/x86/include/asm/fpu/internal.h' l='611' u='c' c='switch_fpu_finish'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/common.c' l='459' u='c' c='setup_pku'/>
<def f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='833' ll='863' type='void * get_xsave_addr(struct xregs_state * xsave, int xfeature_nr)'/>
<dec f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='864' type='void * get_xsave_addr(struct xregs_state * , int )'/>
<use f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='864' c='get_xsave_addr'/>
<use f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='864' u='a'/>
<use f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='893' u='c' c='get_xsave_field_ptr'/>
<doc f='linux-5.3.1/arch/x86/kernel/fpu/xstate.c' l='815'>/*
 * Given the xsave area and a state inside, this function returns the
 * address of the state.
 *
 * This is the API that is called to get xstate address in either
 * standard format or compacted format of xsave area.
 *
 * Note that if there is no data for the field in the xsave buffer
 * this will return NULL.
 *
 * Inputs:
 *	xstate: the thread&apos;s storage area for all FPU data
 *	xfeature_nr: state which is defined in xsave.h (e.g. XFEATURE_FP,
 *	XFEATURE_SSE, etc...)
 * Output:
 *	address of the state in the xsave area, or NULL if the
 *	field is not present in the xsave buffer.
 */</doc>
<use f='linux-5.3.1/arch/x86/mm/pkeys.c' l='180' u='c' c='init_pkru_write_file'/>
