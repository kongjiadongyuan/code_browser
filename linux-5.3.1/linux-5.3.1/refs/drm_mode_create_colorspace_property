<dec f='linux-5.3.1/include/drm/drm_connector.h' l='1498' type='int drm_mode_create_colorspace_property(struct drm_connector * connector)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1603' ll='1624' type='int drm_mode_create_colorspace_property(struct drm_connector * connector)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1625' type='int drm_mode_create_colorspace_property(struct drm_connector * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1625' c='drm_mode_create_colorspace_property'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1625' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1576'>/**
 * DOC: standard connector properties
 *
 * Colorspace:
 *     drm_mode_create_colorspace_property - create colorspace property
 *     This property helps select a suitable colorspace based on the sink
 *     capability. Modern sink devices support wider gamut like BT2020.
 *     This helps switch to BT2020 mode if the BT2020 encoded video stream
 *     is being played by the user, same for any other colorspace. Thereby
 *     giving a good visual experience to users.
 *
 *     The expectation from userspace is that it should parse the EDID
 *     and get supported colorspaces. Use this property and switch to the
 *     one supported. Sink supported colorspaces should be retrieved by
 *     userspace from EDID and driver will not explicitly expose them.
 *
 *     Basically the expectation from userspace is:
 *      - Set up CRTC DEGAMMA/CTM/GAMMA to convert to some sink
 *        colorspace
 *      - Set this new property to let the sink know what it
 *        converted the CRTC output to.
 *      - This property is just to inform sink what colorspace
 *        source is trying to drive.
 *
 * Called by a driver the first time it&apos;s needed, must be attached to desired
 * connectors.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_connector.c' l='280' u='c' c='intel_attach_colorspace_property'/>
