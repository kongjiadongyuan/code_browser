<dec f='linux-5.3.1/include/scsi/scsi_device.h' l='505' type='int scsi_internal_device_block_nowait(struct scsi_device * sdev)'/>
<def f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2604' ll='2624' type='int scsi_internal_device_block_nowait(struct scsi_device * sdev)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2625' type='int scsi_internal_device_block_nowait(struct scsi_device * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2625' c='scsi_internal_device_block_nowait'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2625' u='a'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2648' u='c' c='scsi_internal_device_block'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2590'>/**
 * scsi_internal_device_block_nowait - try to transition to the SDEV_BLOCK state
 * @sdev: device to block
 *
 * Pause SCSI command processing on the specified device. Does not sleep.
 *
 * Returns zero if successful or a negative error code upon failure.
 *
 * Notes:
 * This routine transitions the device to the SDEV_BLOCK state (which must be
 * a legal transition). When the device is in this state, command processing
 * is paused until the device leaves the SDEV_BLOCK state. See also
 * scsi_internal_device_unblock_nowait().
 */</doc>
