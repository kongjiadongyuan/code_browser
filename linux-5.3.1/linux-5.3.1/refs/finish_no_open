<dec f='linux-5.3.1/include/linux/fs.h' l='2519' type='int finish_no_open(struct file * file, struct dentry * dentry)'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1558' u='c' c='nfs_atomic_open'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='1615' u='c' c='nfs_atomic_open'/>
<def f='linux-5.3.1/fs/open.c' l='884' ll='888' type='int finish_no_open(struct file * file, struct dentry * dentry)'/>
<dec f='linux-5.3.1/fs/open.c' l='889' type='int finish_no_open(struct file * , struct dentry * )'/>
<use f='linux-5.3.1/fs/open.c' l='889' c='finish_no_open'/>
<use f='linux-5.3.1/fs/open.c' l='889' u='a'/>
<doc f='linux-5.3.1/fs/open.c' l='870'>/**
 * finish_no_open - finish -&gt;atomic_open() without opening the file
 *
 * @file: file pointer
 * @dentry: dentry or NULL (as returned from -&gt;lookup())
 *
 * This can be used to set the result of a successful lookup in -&gt;atomic_open().
 *
 * NB: unlike finish_open() this function does consume the dentry reference and
 * the caller need not dput() it.
 *
 * Returns &quot;0&quot; which must be the return value of -&gt;atomic_open() after having
 * called this function.
 */</doc>
