<dec f='linux-5.3.1/include/linux/sunrpc/auth.h' l='174' type='int rpcauth_wrap_req(struct rpc_task * task, struct xdr_stream * xdr)'/>
<def f='linux-5.3.1/net/sunrpc/auth.c' l='805' ll='810' type='int rpcauth_wrap_req(struct rpc_task * task, struct xdr_stream * xdr)'/>
<doc f='linux-5.3.1/net/sunrpc/auth.c' l='796'>/**
 * rpcauth_wrap_req - XDR encode and wrap the RPC procedure
 * @task: controlling RPC task
 * @xdr: stream where on-the-wire bytes are to be marshalled
 *
 * On success, @xdr contains the encoded and wrapped message,
 * and zero is returned. Otherwise, @xdr is in an undefined
 * state and a negative errno is returned.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1872' u='c' c='rpc_xdr_encode'/>
