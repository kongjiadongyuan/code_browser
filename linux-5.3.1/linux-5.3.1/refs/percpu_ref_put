<def f='linux-5.3.1/include/linux/percpu-refcount.h' l='307' ll='310' type='void percpu_ref_put(struct percpu_ref * ref)'/>
<use f='linux-5.3.1/include/linux/cgroup.h' l='396' u='c' c='css_put'/>
<use f='linux-5.3.1/include/linux/memremap.h' l='172' u='c' c='put_dev_pagemap'/>
<use f='linux-5.3.1/include/linux/genhd.h' l='699' u='c' c='hd_struct_put'/>
<doc f='linux-5.3.1/include/linux/percpu-refcount.h' l='298'>/**
 * percpu_ref_put - decrement a percpu refcount
 * @ref: percpu_ref to put
 *
 * Decrement the refcount, and if 0, call the release function (which was passed
 * to percpu_ref_init())
 *
 * This function is safe to call as long as @ref is between init and exit.
 */</doc>
<use f='linux-5.3.1/block/blk-core.c' l='413' u='c' c='blk_queue_enter'/>
<use f='linux-5.3.1/block/blk-core.c' l='445' u='c' c='blk_queue_exit'/>
<use f='linux-5.3.1/block/blk-mq-sched.c' l='446' u='c' c='blk_mq_sched_insert_requests'/>
<use f='linux-5.3.1/drivers/md/md.c' l='5323' u='c' c='mddev_init_writes_pending'/>
<use f='linux-5.3.1/drivers/md/md.c' l='8219' u='c' c='md_write_start'/>
<use f='linux-5.3.1/drivers/md/md.c' l='8245' u='c' c='md_write_end'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='621' u='c' c='scsi_end_request'/>
<use f='linux-5.3.1/fs/aio.c' l='630' u='c' c='free_ioctx_users'/>
<use f='linux-5.3.1/fs/aio.c' l='1081' u='c' c='iocb_destroy'/>
<use f='linux-5.3.1/fs/aio.c' l='1335' u='c' c='__do_sys_io_setup'/>
<use f='linux-5.3.1/fs/aio.c' l='1367' u='c' c='__do_compat_sys_io_setup'/>
<use f='linux-5.3.1/fs/aio.c' l='1396' u='c' c='__do_sys_io_destroy'/>
<use f='linux-5.3.1/fs/aio.c' l='1928' u='c' c='__do_sys_io_submit'/>
<use f='linux-5.3.1/fs/aio.c' l='1970' u='c' c='__do_compat_sys_io_submit'/>
<use f='linux-5.3.1/fs/aio.c' l='2023' u='c' c='__do_sys_io_cancel'/>
<use f='linux-5.3.1/fs/aio.c' l='2041' u='c' c='do_io_getevents'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='130' u='c' c='percpu_ref_call_confirm_rcu'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='350' u='c' c='percpu_ref_kill_and_confirm'/>
