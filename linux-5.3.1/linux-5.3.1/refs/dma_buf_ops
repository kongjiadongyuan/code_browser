<def f='linux-5.3.1/include/linux/dma-buf.h' l='35' ll='264'/>
<use f='linux-5.3.1/include/linux/dma-buf.h' l='300'/>
<use f='linux-5.3.1/include/linux/dma-buf.h' l='365'/>
<size>104</size>
<doc f='linux-5.3.1/include/linux/dma-buf.h' l='29'>/**
 * struct dma_buf_ops - operations possible on struct dma_buf
 * @vmap: [optional] creates a virtual mapping for the buffer into kernel
 *	  address space. Same restrictions as for vmap and friends apply.
 * @vunmap: [optional] unmaps a vmap from the buffer
 */</doc>
<mbr r='dma_buf_ops::cache_sgt_mapping' o='0' t='bool'/>
<mbr r='dma_buf_ops::attach' o='64' t='int (*)(struct dma_buf *, struct dma_buf_attachment *)'/>
<mbr r='dma_buf_ops::detach' o='128' t='void (*)(struct dma_buf *, struct dma_buf_attachment *)'/>
<mbr r='dma_buf_ops::map_dma_buf' o='192' t='struct sg_table *(*)(struct dma_buf_attachment *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::unmap_dma_buf' o='256' t='void (*)(struct dma_buf_attachment *, struct sg_table *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::release' o='320' t='void (*)(struct dma_buf *)'/>
<mbr r='dma_buf_ops::begin_cpu_access' o='384' t='int (*)(struct dma_buf *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::end_cpu_access' o='448' t='int (*)(struct dma_buf *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::mmap' o='512' t='int (*)(struct dma_buf *, struct vm_area_struct *)'/>
<mbr r='dma_buf_ops::map' o='576' t='void *(*)(struct dma_buf *, unsigned long)'/>
<mbr r='dma_buf_ops::unmap' o='640' t='void (*)(struct dma_buf *, unsigned long, void *)'/>
<mbr r='dma_buf_ops::vmap' o='704' t='void *(*)(struct dma_buf *)'/>
<mbr r='dma_buf_ops::vunmap' o='768' t='void (*)(struct dma_buf *, void *)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='413'/>
<size>104</size>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c' l='194'/>
<size>104</size>
