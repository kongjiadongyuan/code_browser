<dec f='linux-5.3.1/include/linux/net.h' l='235' type='int sock_create_lite(int family, int type, int proto, struct socket ** res)'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='2040' u='c' c='__netlink_kernel_create'/>
<def f='linux-5.3.1/net/socket.c' l='1208' ll='1235' type='int sock_create_lite(int family, int type, int protocol, struct socket ** res)'/>
<dec f='linux-5.3.1/net/socket.c' l='1236' type='int sock_create_lite(int , int , int , struct socket ** )'/>
<use f='linux-5.3.1/net/socket.c' l='1236' c='sock_create_lite'/>
<use f='linux-5.3.1/net/socket.c' l='1236' u='a'/>
<use f='linux-5.3.1/net/socket.c' l='3532' u='c' c='kernel_accept'/>
<doc f='linux-5.3.1/net/socket.c' l='1195'>/**
 *	sock_create_lite - creates a socket
 *	@family: protocol family (AF_INET, ...)
 *	@type: communication type (SOCK_STREAM, ...)
 *	@protocol: protocol (0, ...)
 *	@res: new socket
 *
 *	Creates a new socket and assigns it to @res, passing through LSM.
 *	The new socket initialization is not complete, see kernel_accept().
 *	Returns 0 or an error. On failure @res is set to %NULL.
 *	This function internally uses GFP_KERNEL.
 */</doc>
