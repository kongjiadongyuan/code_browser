<dec f='linux-5.3.1/include/linux/sunrpc/xdr.h' l='288' type='ssize_t xdr_stream_decode_string_dup(struct xdr_stream * xdr, char ** str, size_t maxlen, gfp_t gfp_flags)'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='3886' u='c' c='decode_nfs4_string'/>
<def f='linux-5.3.1/net/sunrpc/xdr.c' l='1657' ll='1676' type='ssize_t xdr_stream_decode_string_dup(struct xdr_stream * xdr, char ** str, size_t maxlen, gfp_t gfp_flags)'/>
<dec f='linux-5.3.1/net/sunrpc/xdr.c' l='1677' type='ssize_t xdr_stream_decode_string_dup(struct xdr_stream * , char ** , size_t , gfp_t )'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1677' c='xdr_stream_decode_string_dup'/>
<use f='linux-5.3.1/net/sunrpc/xdr.c' l='1677' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/xdr.c' l='1644'>/**
 * xdr_stream_decode_string_dup - Decode and duplicate variable length string
 * @xdr: pointer to xdr_stream
 * @str: location to store pointer to string
 * @maxlen: maximum acceptable string length
 * @gfp_flags: GFP mask to use
 *
 * Return values:
 *   On success, returns length of NUL-terminated string stored in *@ptr
 *   %-EBADMSG on XDR buffer overflow
 *   %-EMSGSIZE if the size of the string would exceed @maxlen
 *   %-ENOMEM on memory allocation failure
 */</doc>
