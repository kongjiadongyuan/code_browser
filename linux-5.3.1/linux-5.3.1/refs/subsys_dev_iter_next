<dec f='linux-5.3.1/include/linux/device.h' l='164' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * iter)'/>
<def f='linux-5.3.1/drivers/base/bus.c' l='1034' ll='1047' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * iter)'/>
<dec f='linux-5.3.1/drivers/base/bus.c' l='1048' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * )'/>
<use f='linux-5.3.1/drivers/base/bus.c' l='1048' c='subsys_dev_iter_next'/>
<use f='linux-5.3.1/drivers/base/bus.c' l='1048' u='a'/>
<use f='linux-5.3.1/drivers/base/bus.c' l='1080' u='c' c='subsys_interface_register'/>
<use f='linux-5.3.1/drivers/base/bus.c' l='1105' u='c' c='subsys_interface_unregister'/>
<doc f='linux-5.3.1/drivers/base/bus.c' l='1022'>/**
 * subsys_dev_iter_next - iterate to the next device
 * @iter: subsys iterator to proceed
 *
 * Proceed @iter to the next device and return it.  Returns NULL if
 * iteration is complete.
 *
 * The returned device is referenced and won&apos;t be released till
 * iterator is proceed to the next device or exited.  The caller is
 * free to do whatever it wants to do with the device including
 * calling back into subsys code.
 */</doc>
