<dec f='linux-5.3.1/include/sound/control.h' l='179' type='struct snd_kcontrol * snd_ctl_make_virtual_master(char * name, const unsigned int * tlv)'/>
<doc f='linux-5.3.1/include/sound/control.h' l='176'>/*
 * virtual master control
 */</doc>
<def f='linux-5.3.1/sound/core/vmaster.c' l='391' ll='432' type='struct snd_kcontrol * snd_ctl_make_virtual_master(char * name, const unsigned int * tlv)'/>
<dec f='linux-5.3.1/sound/core/vmaster.c' l='433' type='struct snd_kcontrol * snd_ctl_make_virtual_master(char * , const unsigned int * )'/>
<use f='linux-5.3.1/sound/core/vmaster.c' l='433' c='snd_ctl_make_virtual_master'/>
<use f='linux-5.3.1/sound/core/vmaster.c' l='433' u='a'/>
<doc f='linux-5.3.1/sound/core/vmaster.c' l='374'>/**
 * snd_ctl_make_virtual_master - Create a virtual master control
 * @name: name string of the control element to create
 * @tlv: optional TLV int array for dB information
 *
 * Creates a virtual master control with the given name string.
 *
 * After creating a vmaster element, you can add the slave controls
 * via snd_ctl_add_slave() or snd_ctl_add_slave_uncached().
 *
 * The optional argument @tlv can be used to specify the TLV information
 * for dB scale of the master control.  It should be a single element
 * with #SNDRV_CTL_TLVT_DB_SCALE, #SNDRV_CTL_TLV_DB_MINMAX or
 * #SNDRV_CTL_TLVT_DB_MINMAX_MUTE type, and should be the max 0dB.
 *
 * Return: The created control element, or %NULL for errors (ENOMEM).
 */</doc>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1944' u='c' c='__snd_hda_add_vmaster'/>
