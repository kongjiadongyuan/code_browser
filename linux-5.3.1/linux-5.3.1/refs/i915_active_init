<dec f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.h' l='372' type='void i915_active_init(struct drm_i915_private * i915, struct i915_active * ref, void (*)(struct i915_active *) retire)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.h' l='346'>/*
 * GPU activity tracking
 *
 * Each set of commands submitted to the GPU compromises a single request that
 * signals a fence upon completion. struct i915_request combines the
 * command submission, scheduling and fence signaling roles. If we want to see
 * if a particular task is complete, we need to grab the fence (struct
 * i915_request) for that task and check or wait for it to be signaled. More
 * often though we want to track the status of a bunch of tasks, for example
 * to wait for the GPU to finish accessing some memory across a variety of
 * different command pipelines from different clients. We could choose to
 * track every single request associated with the task, but knowing that
 * each request belongs to an ordered timeline (later requests within a
 * timeline must wait for earlier requests), we need only track the
 * latest request in each timeline to determine the overall status of the
 * task.
 *
 * struct i915_active provides this tracking across timelines. It builds a
 * composite shared-fence, and is updated as new work is submitted to the task,
 * forming a snapshot of the current status. It should be embedded into the
 * different resources that need to track their associated GPU activity to
 * provide a callback when that GPU activity has ceased, or otherwise to
 * provide a serialisation point either for request submission or for CPU
 * synchronisation.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='926' u='c' c='context_barrier_task'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_context.c' l='152' u='c' c='intel_context_init'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='154' ll='164' type='void i915_active_init(struct drm_i915_private * i915, struct i915_active * ref, void (*)(struct i915_active *) retire)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_gtt.c' l='2056' u='c' c='pd_vma_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_timeline.c' l='173' u='c' c='cacheline_alloc'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_vma.c' l='141' u='c' c='vma_create'/>
