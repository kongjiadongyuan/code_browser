<dec f='linux-5.3.1/include/keys/asymmetric-type.h' l='62' type='bool asymmetric_key_id_partial(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<def f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='173' ll='182' type='bool asymmetric_key_id_partial(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<dec f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='183' type='bool asymmetric_key_id_partial(const struct asymmetric_key_id * , const struct asymmetric_key_id * )'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='183' c='asymmetric_key_id_partial'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='183' u='a'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='267' u='r' c='asymmetric_key_cmp_partial'/>
<doc f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='168'>/**
 * asymmetric_key_id_partial - Return true if two asymmetric keys IDs
 * partially match
 * @kid_1, @kid_2: The key IDs to compare
 */</doc>
<use f='linux-5.3.1/crypto/asymmetric_keys/restrict.c' l='93' u='c' c='restrict_link_by_signature'/>
