<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.h' l='174' type='struct i915_vma * intel_guc_allocate_vma(struct intel_guc * guc, u32 size)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='191' u='c' c='guc_shared_data_create'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='659' ll='687' type='struct i915_vma * intel_guc_allocate_vma(struct intel_guc * guc, u32 size)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='646'>/**
 * intel_guc_allocate_vma() - Allocate a GGTT VMA for GuC usage
 * @guc:	the guc
 * @size:	size of area to allocate (both virtual space and memory)
 *
 * This is a wrapper to create an object for use with the GuC. In order to
 * use it inside the GuC, an object needs to be pinned lifetime, so we allocate
 * both some backing storage and a range inside the Global GTT. We must pin
 * it in the GGTT somewhere other than than [0, GUC ggtt_pin_bias) because that
 * range is reserved inside GuC.
 *
 * Return:	A i915_vma if successful, otherwise an ERR_PTR.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_ads.c' l='167' u='c' c='intel_guc_ads_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_ct.c' l='176' u='c' c='ctch_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_log.c' l='476' u='c' c='intel_guc_log_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='334' u='c' c='guc_stage_desc_pool_create'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc_submission.c' l='1059' u='c' c='guc_client_alloc'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_huc.c' l='72' u='c' c='intel_huc_rsa_data_create'/>
