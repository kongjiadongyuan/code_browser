<dec f='linux-5.3.1/include/linux/component.h' l='74' type='int (*)(struct device *)'/>
<use f='linux-5.3.1/drivers/base/component.c' l='257' u='r' c='try_to_bring_up_master'/>
<offset>0</offset>
<doc f='linux-5.3.1/include/linux/component.h' l='53'>/**
	 * @bind:
	 *
	 * Called when all components or the aggregate driver, as specified in
	 * the match list passed to component_master_add_with_match(), are
	 * ready. Usually there are 3 steps to bind an aggregate driver:
	 *
	 * 1. Allocate a structure for the aggregate driver.
	 *
	 * 2. Bind all components to the aggregate driver by calling
	 *    component_bind_all() with the aggregate driver structure as opaque
	 *    pointer data.
	 *
	 * 3. Register the aggregate driver with the subsystem to publish its
	 *    interfaces.
	 *
	 * Note that the lifetime of the aggregate driver does not align with
	 * any of the underlying &amp;struct device instances. Therefore devm cannot
	 * be used and all resources acquired or allocated in this callback must
	 * be explicitly released in the @unbind callback.
	 */</doc>
<use f='linux-5.3.1/sound/hda/hdac_component.c' l='235' u='w'/>
