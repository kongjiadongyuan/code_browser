<dec f='linux-5.3.1/include/linux/fs.h' l='1681' type='bool inode_owner_or_capable(const struct inode * inode)'/>
<use f='linux-5.3.1/fs/attr.c' l='90' u='c' c='setattr_prepare'/>
<use f='linux-5.3.1/fs/attr.c' l='101' u='c' c='setattr_prepare'/>
<use f='linux-5.3.1/fs/attr.c' l='249' u='c' c='notify_change'/>
<use f='linux-5.3.1/fs/efivarfs/file.c' l='141' u='c' c='efivarfs_ioc_setxflags'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='142' u='c' c='swap_inode_boot_loader'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='768' u='c' c='ext4_ioctl'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='810' u='c' c='ext4_ioctl'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='949' u='c' c='ext4_ioctl'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='971' u='c' c='ext4_ioctl'/>
<use f='linux-5.3.1/fs/ext4/ioctl.c' l='1139' u='c' c='ext4_ioctl'/>
<use f='linux-5.3.1/fs/fcntl.c' l='49' u='c' c='setfl'/>
<def f='linux-5.3.1/fs/inode.c' l='2068' ll='2079' type='bool inode_owner_or_capable(const struct inode * inode)'/>
<dec f='linux-5.3.1/fs/inode.c' l='2080' type='bool inode_owner_or_capable(const struct inode * )'/>
<use f='linux-5.3.1/fs/inode.c' l='2080' c='inode_owner_or_capable'/>
<use f='linux-5.3.1/fs/inode.c' l='2080' u='a'/>
<doc f='linux-5.3.1/fs/inode.c' l='2061'>/**
 * inode_owner_or_capable - check current task permissions to inode
 * @inode: inode being checked
 *
 * Return true if current either has CAP_FOWNER in a namespace with the
 * inode owner uid mapped, or owns the file.
 */</doc>
<use f='linux-5.3.1/fs/namei.c' l='999' u='c' c='may_linkat'/>
<use f='linux-5.3.1/fs/namei.c' l='2986' u='c' c='may_open'/>
<use f='linux-5.3.1/fs/posix_acl.c' l='867' u='c' c='set_posix_acl'/>
<use f='linux-5.3.1/fs/xattr.c' l='130' u='c' c='xattr_permission'/>
<use f='linux-5.3.1/mm/mincore.c' l='192' u='c' c='can_do_mincore'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='3149' u='c' c='selinux_inode_setxattr'/>
