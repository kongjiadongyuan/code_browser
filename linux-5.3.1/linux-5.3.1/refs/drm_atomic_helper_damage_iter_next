<dec f='linux-5.3.1/include/drm/drm_damage_helper.h' l='79' type='bool drm_atomic_helper_damage_iter_next(struct drm_atomic_helper_damage_iter * iter, struct drm_rect * rect)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='312' ll='335' type='bool drm_atomic_helper_damage_iter_next(struct drm_atomic_helper_damage_iter * iter, struct drm_rect * rect)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='336' type='bool drm_atomic_helper_damage_iter_next(struct drm_atomic_helper_damage_iter * , struct drm_rect * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='336' c='drm_atomic_helper_damage_iter_next'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='336' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='367' macro='1' u='c' c='drm_atomic_helper_damage_merged'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_damage_helper.c' l='296'>/**
 * drm_atomic_helper_damage_iter_next - Advance the damage iterator.
 * @iter: The iterator to advance.
 * @rect: Return a rectangle in fb coordinate clipped to plane src.
 *
 * Since plane src is in 16.16 fixed point and damage clips are whole number,
 * this iterator round off clips that intersect with plane src. Round down for
 * x1/y1 and round up for x2/y2 for the intersected coordinate. Similar rounding
 * off for full plane src, in case it&apos;s returned as damage. This iterator will
 * skip damage clips outside of plane src.
 *
 * Return: True if the output is valid, false if reached the end.
 *
 * If the first call to iterator next returns false then it means no need to
 * update the plane.
 */</doc>
