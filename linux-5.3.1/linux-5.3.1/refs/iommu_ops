<use f='linux-5.3.1/include/linux/device.h' l='141'/>
<use f='linux-5.3.1/include/linux/dma-mapping.h' l='701' c='arch_setup_dma_ops'/>
<use f='linux-5.3.1/include/linux/acpi_iort.h' l='50' c='iort_iommu_configure'/>
<use f='linux-5.3.1/drivers/acpi/scan.c' l='1454' c='acpi_dma_configure'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='91'/>
<def f='linux-5.3.1/include/linux/iommu.h' l='233' ll='296'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='307'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='365' c='iommu_device_set_ops'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='388' c='bus_set_iommu'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='508'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='528' c='iommu_fwspec_init'/>
<use f='linux-5.3.1/include/linux/iommu.h' l='531' c='iommu_ops_from_fwnode'/>
<size>288</size>
<doc f='linux-5.3.1/include/linux/iommu.h' l='194'>/**
 * struct iommu_ops - iommu ops and capabilities
 * @capable: check capability
 * @domain_alloc: allocate iommu domain
 * @domain_free: free iommu domain
 * @attach_dev: attach device to an iommu domain
 * @detach_dev: detach device from an iommu domain
 * @map: map a physically contiguous memory region to an iommu domain
 * @unmap: unmap a physically contiguous memory region from an iommu domain
 * @flush_iotlb_all: Synchronously flush all hardware TLBs for this domain
 * @iotlb_range_add: Add a given iova range to the flush queue for this domain
 * @iotlb_sync_map: Sync mappings created recently using @map to the hardware
 * @iotlb_sync: Flush all queued ranges from the hardware TLBs and empty flush
 *            queue
 * @iova_to_phys: translate iova to physical address
 * @add_device: add device to iommu grouping
 * @remove_device: remove device from iommu grouping
 * @device_group: find iommu group for a particular device
 * @domain_get_attr: Query domain attributes
 * @domain_set_attr: Change domain attributes
 * @get_resv_regions: Request list of reserved regions for a device
 * @put_resv_regions: Free list of reserved regions for a device
 * @apply_resv_region: Temporary helper call-back for iova reserved ranges
 * @domain_window_enable: Configure and enable a particular window for a domain
 * @domain_window_disable: Disable a particular window for a domain
 * @of_xlate: add OF master IDs to iommu grouping
 * @is_attach_deferred: Check if domain attach should be deferred from iommu
 *                      driver init to device driver init (default no)
 * @dev_has/enable/disable_feat: per device entries to check/enable/disable
 *                               iommu specific features.
 * @dev_feat_enabled: check enabled feature
 * @aux_attach/detach_dev: aux-domain specific attach/detach entries.
 * @aux_get_pasid: get the pasid given an aux-domain
 * @sva_bind: Bind process address space to device
 * @sva_unbind: Unbind process address space from device
 * @sva_get_pasid: Get PASID associated to a SVA handle
 * @page_response: handle page request response
 * @pgsize_bitmap: bitmap of all possible supported page sizes
 */</doc>
<mbr r='iommu_ops::capable' o='0' t='bool (*)(enum iommu_cap)'/>
<mbr r='iommu_ops::domain_alloc' o='64' t='struct iommu_domain *(*)(unsigned int)'/>
<mbr r='iommu_ops::domain_free' o='128' t='void (*)(struct iommu_domain *)'/>
<mbr r='iommu_ops::attach_dev' o='192' t='int (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::detach_dev' o='256' t='void (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::map' o='320' t='int (*)(struct iommu_domain *, unsigned long, phys_addr_t, size_t, int)'/>
<mbr r='iommu_ops::unmap' o='384' t='size_t (*)(struct iommu_domain *, unsigned long, size_t)'/>
<mbr r='iommu_ops::flush_iotlb_all' o='448' t='void (*)(struct iommu_domain *)'/>
<mbr r='iommu_ops::iotlb_range_add' o='512' t='void (*)(struct iommu_domain *, unsigned long, size_t)'/>
<mbr r='iommu_ops::iotlb_sync_map' o='576' t='void (*)(struct iommu_domain *)'/>
<mbr r='iommu_ops::iotlb_sync' o='640' t='void (*)(struct iommu_domain *)'/>
<mbr r='iommu_ops::iova_to_phys' o='704' t='phys_addr_t (*)(struct iommu_domain *, dma_addr_t)'/>
<mbr r='iommu_ops::add_device' o='768' t='int (*)(struct device *)'/>
<mbr r='iommu_ops::remove_device' o='832' t='void (*)(struct device *)'/>
<mbr r='iommu_ops::device_group' o='896' t='struct iommu_group *(*)(struct device *)'/>
<mbr r='iommu_ops::domain_get_attr' o='960' t='int (*)(struct iommu_domain *, enum iommu_attr, void *)'/>
<mbr r='iommu_ops::domain_set_attr' o='1024' t='int (*)(struct iommu_domain *, enum iommu_attr, void *)'/>
<mbr r='iommu_ops::get_resv_regions' o='1088' t='void (*)(struct device *, struct list_head *)'/>
<mbr r='iommu_ops::put_resv_regions' o='1152' t='void (*)(struct device *, struct list_head *)'/>
<mbr r='iommu_ops::apply_resv_region' o='1216' t='void (*)(struct device *, struct iommu_domain *, struct iommu_resv_region *)'/>
<mbr r='iommu_ops::domain_window_enable' o='1280' t='int (*)(struct iommu_domain *, u32, phys_addr_t, u64, int)'/>
<mbr r='iommu_ops::domain_window_disable' o='1344' t='void (*)(struct iommu_domain *, u32)'/>
<mbr r='iommu_ops::of_xlate' o='1408' t='int (*)(struct device *, struct of_phandle_args *)'/>
<mbr r='iommu_ops::is_attach_deferred' o='1472' t='bool (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::dev_has_feat' o='1536' t='bool (*)(struct device *, enum iommu_dev_features)'/>
<mbr r='iommu_ops::dev_feat_enabled' o='1600' t='bool (*)(struct device *, enum iommu_dev_features)'/>
<mbr r='iommu_ops::dev_enable_feat' o='1664' t='int (*)(struct device *, enum iommu_dev_features)'/>
<mbr r='iommu_ops::dev_disable_feat' o='1728' t='int (*)(struct device *, enum iommu_dev_features)'/>
<mbr r='iommu_ops::aux_attach_dev' o='1792' t='int (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::aux_detach_dev' o='1856' t='void (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::aux_get_pasid' o='1920' t='int (*)(struct iommu_domain *, struct device *)'/>
<mbr r='iommu_ops::sva_bind' o='1984' t='struct iommu_sva *(*)(struct device *, struct mm_struct *, void *)'/>
<mbr r='iommu_ops::sva_unbind' o='2048' t='void (*)(struct iommu_sva *)'/>
<mbr r='iommu_ops::sva_get_pasid' o='2112' t='int (*)(struct iommu_sva *)'/>
<mbr r='iommu_ops::page_response' o='2176' t='int (*)(struct device *, struct iommu_fault_event *, struct iommu_page_response *)'/>
<mbr r='iommu_ops::pgsize_bitmap' o='2240' t='unsigned long'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='87'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='3234'/>
<size>288</size>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='92'/>
<size>288</size>
<use f='linux-5.3.1/drivers/iommu/dmar.c' l='66'/>
<size>288</size>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='402'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='5667'/>
<size>288</size>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='123' c='iommu_probe_device'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='142' c='iommu_release_device'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1299' c='iommu_group_get_for_dev'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1434' c='iommu_bus_init'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1480' c='bus_set_iommu'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1805' c='iommu_map'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='1867' c='__iommu_unmap'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2100' c='iommu_get_resv_regions'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2108' c='iommu_put_resv_regions'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2199' c='iommu_ops_from_fwnode'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2201' c='iommu_ops_from_fwnode'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2215' c='iommu_fwspec_init'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2277' c='iommu_dev_has_feature'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2288' c='iommu_dev_enable_feature'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2304' c='iommu_dev_disable_feature'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2315' c='iommu_dev_feature_enabled'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2388' c='iommu_sva_bind_device'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2433' c='iommu_sva_unbind_device'/>
<use f='linux-5.3.1/drivers/iommu/iommu.c' l='2463' c='iommu_sva_get_pasid'/>
<size>288</size>
