<dec f='linux-5.3.1/include/linux/seq_file.h' l='233' type='struct hlist_node * seq_hlist_start_head_rcu(struct hlist_head * head, loff_t pos)'/>
<def f='linux-5.3.1/fs/seq_file.c' l='1018' ll='1025' type='struct hlist_node * seq_hlist_start_head_rcu(struct hlist_head * head, loff_t pos)'/>
<dec f='linux-5.3.1/fs/seq_file.c' l='1026' type='struct hlist_node * seq_hlist_start_head_rcu(struct hlist_head * , loff_t )'/>
<use f='linux-5.3.1/fs/seq_file.c' l='1026' c='seq_hlist_start_head_rcu'/>
<use f='linux-5.3.1/fs/seq_file.c' l='1026' u='a'/>
<doc f='linux-5.3.1/fs/seq_file.c' l='1006'>/**
 * seq_hlist_start_head_rcu - start an iteration of a hlist protected by RCU
 * @head: the head of the hlist
 * @pos:  the start position of the sequence
 *
 * Called at seq_file-&gt;op-&gt;start(). Call this function if you want to
 * print a header at the top of the output.
 *
 * This list-traversal primitive may safely run concurrently with
 * the _rcu list-mutation primitives such as hlist_add_head_rcu()
 * as long as the traversal is guarded by rcu_read_lock().
 */</doc>
<use f='linux-5.3.1/net/packet/af_packet.c' l='4549' u='c' c='packet_seq_start'/>
