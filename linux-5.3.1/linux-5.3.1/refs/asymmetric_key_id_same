<dec f='linux-5.3.1/include/keys/asymmetric-type.h' l='59' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='111' u='c' c='find_asymmetric_key'/>
<def f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='157' ll='165' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<dec f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='166' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * , const struct asymmetric_key_id * )'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='166' c='asymmetric_key_id_same'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='166' u='a'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='254' u='r' c='asymmetric_key_cmp'/>
<doc f='linux-5.3.1/crypto/asymmetric_keys/asymmetric_type.c' l='153'>/**
 * asymmetric_key_id_same - Return true if two asymmetric keys IDs are the same.
 * @kid_1, @kid_2: The key IDs to compare
 */</doc>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_verify.c' l='140' u='c' c='pkcs7_find_key'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_verify.c' l='231' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_verify.c' l='242' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_verify.c' l='256' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/restrict.c' l='114' u='c' c='match_either_id'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/restrict.c' l='115' u='c' c='match_either_id'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/restrict.c' l='182' u='c' c='key_or_keyring_common'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_public_key.c' l='116' u='c' c='x509_check_for_self_signed'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/x509_public_key.c' l='117' u='c' c='x509_check_for_self_signed'/>
