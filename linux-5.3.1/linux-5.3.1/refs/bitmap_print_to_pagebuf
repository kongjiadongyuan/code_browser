<dec f='linux-5.3.1/include/linux/bitmap.h' l='201' type='int bitmap_print_to_pagebuf(bool list, char * buf, const unsigned long * maskp, int nmaskbits)'/>
<use f='linux-5.3.1/include/linux/cpumask.h' l='893' u='c' c='cpumap_print_to_pagebuf'/>
<def f='linux-5.3.1/lib/bitmap.c' l='470' ll='477' type='int bitmap_print_to_pagebuf(bool list, char * buf, const unsigned long * maskp, int nmaskbits)'/>
<dec f='linux-5.3.1/lib/bitmap.c' l='478' type='int bitmap_print_to_pagebuf(bool , char * , const unsigned long * , int )'/>
<use f='linux-5.3.1/lib/bitmap.c' l='478' c='bitmap_print_to_pagebuf'/>
<use f='linux-5.3.1/lib/bitmap.c' l='478' u='a'/>
<doc f='linux-5.3.1/lib/bitmap.c' l='454'>/**
 * bitmap_print_to_pagebuf - convert bitmap to list or hex format ASCII string
 * @list: indicates whether the bitmap must be list
 * @buf: page aligned buffer into which string is placed
 * @maskp: pointer to bitmap to convert
 * @nmaskbits: size of bitmap, in bits
 *
 * Output format is a comma-separated list of decimal numbers and
 * ranges if list is specified or hex digits grouped into comma-separated
 * sets of 8 digits/set. Returns the number of characters written to buf.
 *
 * It is assumed that @buf is a pointer into a PAGE_SIZE, page-aligned
 * area and that sufficient storage remains at @buf to accommodate the
 * bitmap_print_to_pagebuf() output. Returns the number of characters
 * actually printed to @buf, excluding terminating &apos;\0&apos;.
 */</doc>
<use f='linux-5.3.1/net/core/net-sysfs.c' l='1365' u='c' c='xps_rxqs_show'/>
