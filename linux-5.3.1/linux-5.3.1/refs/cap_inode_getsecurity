<dec f='linux-5.3.1/include/linux/security.h' l='97' type='int cap_inode_getsecurity(struct inode * inode, const char * name, void ** buffer, bool alloc)'/>
<def f='linux-5.3.1/security/commoncap.c' l='369' ll='451' type='int cap_inode_getsecurity(struct inode * inode, const char * name, void ** buffer, bool alloc)'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<use f='linux-5.3.1/security/commoncap.c' l='1352'/>
<doc f='linux-5.3.1/security/commoncap.c' l='358'>/*
 * getsecurity: We are called for security.* before any attempt to read the
 * xattr from the inode itself.
 *
 * This gives us a chance to read the on-disk value and convert it.  If we
 * return -EOPNOTSUPP, then vfs_getxattr() will call the i_op handler.
 *
 * Note we are not called by vfs_getxattr_alloc(), but that is only called
 * by the integrity subsystem, which really wants the unconverted values -
 * so that&apos;s good.
 */</doc>
