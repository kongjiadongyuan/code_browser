<dec f='linux-5.3.1/fs/internal.h' l='56' type='void vfs_clean_context(struct fs_context * fc)'/>
<def f='linux-5.3.1/fs/fs_context.c' l='734' ll='750' type='void vfs_clean_context(struct fs_context * fc)'/>
<doc f='linux-5.3.1/fs/fs_context.c' l='721'>/*
 * Clean up a context after performing an action on it and put it into a state
 * from where it can be used to reconfigure a superblock.
 *
 * Note that here we do only the parts that can&apos;t fail; the rest is in
 * finish_clean_context() below and in between those fs_context is marked
 * FS_CONTEXT_AWAITING_RECONF.  The reason for splitup is that after
 * successful mount or remount we need to report success to userland.
 * Trying to do full reinit (for the sake of possible subsequent remount)
 * and failing to allocate memory would&apos;ve put us into a nasty situation.
 * So here we only discard the old state and reinitialization is left
 * until we actually try to reconfigure.
 */</doc>
<use f='linux-5.3.1/fs/fsopen.c' l='258' u='c' c='vfs_fsconfig_locked'/>
<use f='linux-5.3.1/fs/namespace.c' l='3437' u='c' c='__do_sys_fsmount'/>
