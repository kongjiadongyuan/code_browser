<dec f='linux-5.3.1/include/linux/bio.h' l='435' type='int bio_add_page(struct bio * , struct page * , unsigned int , unsigned int )'/>
<def f='linux-5.3.1/block/bio.c' l='822' ll='833' type='int bio_add_page(struct bio * bio, struct page * page, unsigned int len, unsigned int offset)'/>
<dec f='linux-5.3.1/block/bio.c' l='834' type='int bio_add_page(struct bio * , struct page * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/block/bio.c' l='834' c='bio_add_page'/>
<use f='linux-5.3.1/block/bio.c' l='834' u='a'/>
<use f='linux-5.3.1/block/bio.c' l='861' u='c' c='__bio_iov_bvec_add_pages'/>
<doc f='linux-5.3.1/block/bio.c' l='812'>/**
 *	bio_add_page	-	attempt to add page(s) to bio
 *	@bio: destination bio
 *	@page: start page to add
 *	@len: vec entry length, may cross pages
 *	@offset: vec entry offset relative to @page, may cross pages
 *
 *	Attempt to add page(s) to the bio_vec maplist. This will only fail
 *	if either bio-&gt;bi_vcnt == bio-&gt;bi_max_vecs or it&apos;s a cloned bio.
 */</doc>
<use f='linux-5.3.1/block/blk-lib.c' l='292' u='c' c='__blkdev_issue_zero_pages'/>
<use f='linux-5.3.1/drivers/md/dm-io.c' l='364' u='c' c='do_region'/>
<use f='linux-5.3.1/drivers/md/dm-io.c' l='377' u='c' c='do_region'/>
<use f='linux-5.3.1/drivers/md/md.c' l='881' u='c' c='md_super_write'/>
<use f='linux-5.3.1/drivers/md/md.c' l='923' u='c' c='sync_page_io'/>
<use f='linux-5.3.1/fs/buffer.c' l='3075' u='c' c='submit_bh_wbc'/>
<use f='linux-5.3.1/fs/direct-io.c' l='754' u='c' c='dio_bio_add_page'/>
<use f='linux-5.3.1/fs/ext4/page-io.c' l='396' u='c' c='io_submit_add_bh'/>
<use f='linux-5.3.1/fs/ext4/readpage.c' l='267' u='c' c='ext4_mpage_readpages'/>
<use f='linux-5.3.1/fs/iomap/buffered-io.c' l='277' u='c' c='iomap_readpage_actor'/>
<use f='linux-5.3.1/fs/mpage.c' l='315' u='c' c='do_mpage_readpage'/>
<use f='linux-5.3.1/fs/mpage.c' l='652' u='c' c='__mpage_writepage'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='275' u='c' c='hib_submit_io'/>
<use f='linux-5.3.1/mm/page_io.c' l='43' u='c' c='get_swap_bio'/>
