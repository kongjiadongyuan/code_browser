<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.h' l='235' type='int __intel_wait_for_register_fw(struct intel_uncore * uncore, i915_reg_t reg, u32 mask, u32 value, unsigned int fast_timeout_us, unsigned int slow_timeout_ms, u32 * out_value)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.h' l='249' u='c' c='intel_wait_for_register_fw'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_engine_cs.c' l='937' u='c' c='intel_engine_stop_cs'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='282' u='c' c='ironlake_do_reset'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='293' u='c' c='ironlake_do_reset'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='323' u='c' c='gen6_hw_domain_reset'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='415' u='c' c='gen11_lock_sfc'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_reset.c' l='524' u='c' c='gen8_engine_reset_prepare'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_ringbuffer.c' l='1958' u='c' c='gen6_bsd_submit_request'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='447' u='c' c='intel_guc_send_mmio'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_sideband.c' l='127' u='c' c='vlv_sideband_rw'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_sideband.c' l='303' u='c' c='intel_sbi_rw'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_sideband.c' l='400' u='c' c='__sandybridge_pcode_rw'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1754' ll='1781' type='int __intel_wait_for_register_fw(struct intel_uncore * uncore, i915_reg_t reg, u32 mask, u32 value, unsigned int fast_timeout_us, unsigned int slow_timeout_ms, u32 * out_value)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1820' u='c' c='__intel_wait_for_register'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1728'>/**
 * __intel_wait_for_register_fw - wait until register matches expected state
 * @uncore: the struct intel_uncore
 * @reg: the register to read
 * @mask: mask to apply to register value
 * @value: expected value
 * @fast_timeout_us: fast timeout in microsecond for atomic/tight wait
 * @slow_timeout_ms: slow timeout in millisecond
 * @out_value: optional placeholder to hold registry value
 *
 * This routine waits until the target register @reg contains the expected
 * @value after applying the @mask, i.e. it waits until ::
 *
 *     (I915_READ_FW(reg) &amp; mask) == value
 *
 * Otherwise, the wait will timeout after @slow_timeout_ms milliseconds.
 * For atomic context @slow_timeout_ms must be zero and @fast_timeout_us
 * must be not larger than 20,0000 microseconds.
 *
 * Note that this routine assumes the caller holds forcewake asserted, it is
 * not suitable for very long waits. See intel_wait_for_register() if you
 * wish to wait without holding forcewake for the duration (i.e. you expect
 * the wait to be slow).
 *
 * Returns 0 if the register matches the desired condition, or -ETIMEOUT.
 */</doc>
