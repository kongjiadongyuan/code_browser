<dec f='linux-5.3.1/include/linux/cpu.h' l='180' type='int cpu_check_up_prepare(int cpu)'/>
<use f='linux-5.3.1/arch/x86/kernel/smpboot.c' l='1165' u='c' c='native_cpu_up'/>
<def f='linux-5.3.1/kernel/smpboot.c' l='352' ll='400' type='int cpu_check_up_prepare(int cpu)'/>
<doc f='linux-5.3.1/kernel/smpboot.c' l='340'>/*
 * If CPU has died properly, set its state to CPU_UP_PREPARE and
 * return success.  Otherwise, return -EBUSY if the CPU died after
 * cpu_wait_death() timed out.  And yet otherwise again, return -EAGAIN
 * if cpu_wait_death() timed out and the CPU still hasn&apos;t gotten around
 * to dying.  In the latter two cases, the CPU might not be set up
 * properly, but it is up to the arch-specific code to decide.
 * Finally, -EIO indicates an unanticipated problem.
 *
 * Note that it is permissible to omit this call entirely, as is
 * done in architectures that do no CPU-hotplug error checking.
 */</doc>
