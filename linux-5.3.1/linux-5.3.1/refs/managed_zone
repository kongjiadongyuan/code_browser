<def f='linux-5.3.1/include/linux/mmzone.h' l='865' ll='868' type='bool managed_zone(struct zone * zone)'/>
<doc f='linux-5.3.1/include/linux/mmzone.h' l='859'>/*
 * Returns true if a zone has pages managed by the buddy allocator.
 * All the reclaim decisions have to use this function rather than
 * populated_zone(). If the whole zone is reserved then we can easily
 * end up with populated_zone() &amp;&amp; !managed_zone().
 */</doc>
<use f='linux-5.3.1/mm/page_alloc.c' l='5418' u='c' c='build_zonerefs_node'/>
<use f='linux-5.3.1/mm/vmscan.c' l='369' u='c' c='lruvec_lru_size'/>
<use f='linux-5.3.1/mm/vmscan.c' l='2314' u='c' c='get_scan_count'/>
<use f='linux-5.3.1/mm/vmscan.c' l='2638' u='c' c='should_continue_reclaim'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3059' u='c' c='allow_direct_reclaim'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3346' u='c' c='pgdat_watermark_boosted'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3373' u='c' c='pgdat_balanced'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3454' u='c' c='kswapd_shrink_node'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3522' u='c' c='balance_pgdat'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3553' u='c' c='balance_pgdat'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3895' u='c' c='wakeup_kswapd'/>
