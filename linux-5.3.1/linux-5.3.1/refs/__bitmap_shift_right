<dec f='linux-5.3.1/include/linux/bitmap.h' l='125' type='void __bitmap_shift_right(unsigned long * dst, const unsigned long * src, unsigned int shift, unsigned int nbits)'/>
<use f='linux-5.3.1/include/linux/bitmap.h' l='399' u='c' c='bitmap_shift_right'/>
<def f='linux-5.3.1/lib/bitmap.c' l='81' ll='110' type='void __bitmap_shift_right(unsigned long * dst, const unsigned long * src, unsigned int shift, unsigned int nbits)'/>
<dec f='linux-5.3.1/lib/bitmap.c' l='111' type='void __bitmap_shift_right(unsigned long * , const unsigned long * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/lib/bitmap.c' l='111' c='__bitmap_shift_right'/>
<use f='linux-5.3.1/lib/bitmap.c' l='111' u='a'/>
<doc f='linux-5.3.1/lib/bitmap.c' l='70'>/**
 * __bitmap_shift_right - logical right shift of the bits in a bitmap
 *   @dst : destination bitmap
 *   @src : source bitmap
 *   @shift : shift by this many bits
 *   @nbits : bitmap size, in bits
 *
 * Shifting right (dividing) means moving bits in the MS -&gt; LS bit
 * direction.  Zeros are fed into the vacated MS positions and the
 * LS bits shifted off the bottom are lost.
 */</doc>
