<dec f='linux-5.3.1/include/linux/hid.h' l='880' type='int hid_input_report(struct hid_device * , int type, u8 * , u32 , int )'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='1660' u='c' c='__hid_request'/>
<def f='linux-5.3.1/drivers/hid/hid-core.c' l='1735' ll='1783' type='int hid_input_report(struct hid_device * hid, int type, u8 * data, u32 size, int interrupt)'/>
<dec f='linux-5.3.1/drivers/hid/hid-core.c' l='1784' type='int hid_input_report(struct hid_device * , int , u8 * , u32 , int )'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='1784' c='hid_input_report'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='1784' u='a'/>
<doc f='linux-5.3.1/drivers/hid/hid-core.c' l='1724'>/**
 * hid_input_report - report data from lower layer (usb, bt...)
 *
 * @hid: hid device
 * @type: HID report type (HID_*_REPORT)
 * @data: report contents
 * @size: size of data parameter
 * @interrupt: distinguish between interrupt and control transfers
 *
 * This is data entry for lower layers.
 */</doc>
<use f='linux-5.3.1/drivers/hid/usbhid/hid-core.c' l='284' u='c' c='hid_irq_in'/>
<use f='linux-5.3.1/drivers/hid/usbhid/hid-core.c' l='486' u='c' c='hid_ctrl'/>
