<dec f='linux-5.3.1/include/linux/fs.h' l='2686' type='unsigned long invalidate_mapping_pages(struct address_space * mapping, unsigned long start, unsigned long end)'/>
<use f='linux-5.3.1/include/linux/fs.h' l='2693' u='c' c='invalidate_remote_inode'/>
<use f='linux-5.3.1/drivers/md/md-bitmap.c' l='856' u='c' c='md_bitmap_file_unmap'/>
<use f='linux-5.3.1/fs/block_dev.c' l='98' u='c' c='invalidate_bdev'/>
<use f='linux-5.3.1/fs/drop_caches.c' l='39' u='c' c='drop_pagecache_sb'/>
<use f='linux-5.3.1/fs/inode.c' l='759' u='c' c='inode_lru_isolate'/>
<use f='linux-5.3.1/fs/nfs/dir.c' l='440' u='c' c='nfs_force_use_readdirplus'/>
<use f='linux-5.3.1/mm/fadvise.c' l='160' u='c' c='generic_fadvise'/>
<use f='linux-5.3.1/mm/fadvise.c' l='171' u='c' c='generic_fadvise'/>
<use f='linux-5.3.1/mm/filemap.c' l='3446' u='c' c='__generic_file_write_iter'/>
<def f='linux-5.3.1/mm/truncate.c' l='546' ll='613' type='unsigned long invalidate_mapping_pages(struct address_space * mapping, unsigned long start, unsigned long end)'/>
<dec f='linux-5.3.1/mm/truncate.c' l='614' type='unsigned long invalidate_mapping_pages(struct address_space * , unsigned long , unsigned long )'/>
<use f='linux-5.3.1/mm/truncate.c' l='614' c='invalidate_mapping_pages'/>
<use f='linux-5.3.1/mm/truncate.c' l='614' u='a'/>
<doc f='linux-5.3.1/mm/truncate.c' l='531'>/**
 * invalidate_mapping_pages - Invalidate all the unlocked pages of one inode
 * @mapping: the address_space which holds the pages to invalidate
 * @start: the offset &apos;from&apos; which to invalidate
 * @end: the offset &apos;to&apos; which to invalidate (inclusive)
 *
 * This function only removes the unlocked pages, if you want to
 * remove all the pages of one inode, you must call truncate_inode_pages.
 *
 * invalidate_mapping_pages() will not block on IO activity. It will not
 * invalidate pages which are dirty, locked, under writeback or mapped into
 * pagetables.
 *
 * Return: the number of the pages that were invalidated
 */</doc>
