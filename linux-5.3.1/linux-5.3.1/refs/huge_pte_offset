<dec f='linux-5.3.1/include/linux/hugetlb.h' l='120' type='pte_t * huge_pte_offset(struct mm_struct * mm, unsigned long addr, unsigned long sz)'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='3325' u='c' c='copy_hugetlb_page_range'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='3436' u='c' c='__unmap_hugepage_range'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='3670' u='c' c='hugetlb_cow'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='3707' u='c' c='hugetlb_cow'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='4017' u='c' c='hugetlb_fault'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='4303' u='c' c='follow_hugetlb_page'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='4464' u='c' c='hugetlb_change_protection'/>
<use f='linux-5.3.1/mm/hugetlb.c' l='4784' u='c' c='huge_pmd_share'/>
<def f='linux-5.3.1/mm/hugetlb.c' l='4897' ll='4927' type='pte_t * huge_pte_offset(struct mm_struct * mm, unsigned long addr, unsigned long sz)'/>
<doc f='linux-5.3.1/mm/hugetlb.c' l='4888'>/*
 * huge_pte_offset() - Walk the page table to resolve the hugepage
 * entry at address @addr
 *
 * Return: Pointer to page table or swap entry (PUD or PMD) for
 * address @addr, or NULL if a p*d_none() entry is encountered and the
 * size @sz doesn&apos;t match the hugepage size at this level of the page
 * table.
 */</doc>
<use f='linux-5.3.1/mm/page_vma_mapped.c' l='156' u='c' c='page_vma_mapped_walk'/>
<use f='linux-5.3.1/mm/pagewalk.c' l='190' u='c' c='walk_hugetlb_range'/>
