<def f='linux-5.3.1/include/uapi/linux/input.h' l='89' ll='96'/>
<use f='linux-5.3.1/include/linux/input.h' l='157'/>
<size>24</size>
<doc f='linux-5.3.1/include/uapi/linux/input.h' l='65'>/**
 * struct input_absinfo - used by EVIOCGABS/EVIOCSABS ioctls
 * @value: latest reported value for the axis.
 * @minimum: specifies minimum value for the axis.
 * @maximum: specifies maximum value for the axis.
 * @fuzz: specifies fuzz value that is used to filter noise from
 *	the event stream.
 * @flat: values that are within this value will be discarded by
 *	joydev interface and reported as 0 instead.
 * @resolution: specifies resolution for the values reported for
 *	the axis.
 *
 * Note that input core does not clamp reported values to the
 * [minimum, maximum] limits, such task is left to userspace.
 *
 * The default resolution for main axes (ABS_X, ABS_Y, ABS_Z)
 * is reported in units per millimeter (units/mm), resolution
 * for rotational axes (ABS_RX, ABS_RY, ABS_RZ) is reported
 * in units per radian.
 * When INPUT_PROP_ACCELEROMETER is set the resolution changes.
 * The main axes (ABS_X, ABS_Y, ABS_Z) are then reported in
 * in units per g (units/g) and in units per degree per second
 * (units/deg/s) for rotational axes (ABS_RX, ABS_RY, ABS_RZ).
 */</doc>
<mbr r='input_absinfo::value' o='0' t='__s32'/>
<mbr r='input_absinfo::minimum' o='32' t='__s32'/>
<mbr r='input_absinfo::maximum' o='64' t='__s32'/>
<mbr r='input_absinfo::fuzz' o='96' t='__s32'/>
<mbr r='input_absinfo::flat' o='128' t='__s32'/>
<mbr r='input_absinfo::resolution' o='160' t='__s32'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1066' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1235' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1235' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1235' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1235' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1244' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1253' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1253' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1253' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1253' macro='1' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1261' c='evdev_do_ioctl'/>
<use f='linux-5.3.1/drivers/input/evdev.c' l='1264' c='evdev_do_ioctl'/>
<size>24</size>
<use f='linux-5.3.1/drivers/input/input.c' l='498' c='input_set_abs_params'/>
<size>24</size>
<use f='linux-5.3.1/drivers/input/touchscreen/of_touchscreen.c' l='36' c='touchscreen_set_params'/>
<use f='linux-5.3.1/drivers/input/touchscreen/of_touchscreen.c' l='68' c='touchscreen_parse_properties'/>
<size>24</size>
