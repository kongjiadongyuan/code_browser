<def f='linux-5.3.1/include/linux/rhashtable.h' l='983' ll='990' type='void * rhashtable_lookup_get_insert_key(struct rhashtable * ht, const void * key, struct rhash_head * obj, const struct rhashtable_params params)'/>
<doc f='linux-5.3.1/include/linux/rhashtable.h' l='972'>/**
 * rhashtable_lookup_get_insert_key - lookup and insert object into hash table
 * @ht:		hash table
 * @obj:	pointer to hash head inside object
 * @params:	hash table parameters
 * @data:	pointer to element data already in hashes
 *
 * Just like rhashtable_lookup_insert_key(), but this function returns the
 * object if it exists, NULL if it does not and the insertion was successful,
 * and an ERR_PTR otherwise.
 */</doc>
<use f='linux-5.3.1/net/ipv4/inet_fragment.c' l='310' u='c' c='inet_frag_create'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='719' u='c' c='xfrm_policy_inexact_alloc_bin'/>
