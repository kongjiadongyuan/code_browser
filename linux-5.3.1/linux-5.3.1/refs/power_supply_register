<dec f='linux-5.3.1/include/linux/power_supply.h' l='407' type='struct power_supply * power_supply_register(struct device * parent, const struct power_supply_desc * desc, const struct power_supply_config * cfg)'/>
<use f='linux-5.3.1/drivers/acpi/ac.c' l='359' u='c' c='acpi_ac_add'/>
<def f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1126' ll='1131' type='struct power_supply * power_supply_register(struct device * parent, const struct power_supply_desc * desc, const struct power_supply_config * cfg)'/>
<dec f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1132' type='struct power_supply * power_supply_register(struct device * , const struct power_supply_desc * , const struct power_supply_config * )'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1132' c='power_supply_register'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1132' u='a'/>
<doc f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1112'>/**
 * power_supply_register() - Register new power supply
 * @parent:	Device to be a parent of power supply&apos;s device, usually
 *		the device which probe function calls this
 * @desc:	Description of power supply, must be valid through whole
 *		lifetime of this power supply
 * @cfg:	Run-time specific configuration accessed during registering,
 *		may be NULL
 *
 * Return: A pointer to newly allocated power_supply on success
 * or ERR_PTR otherwise.
 * Use power_supply_unregister() on returned power_supply pointer to release
 * resources.
 */</doc>
