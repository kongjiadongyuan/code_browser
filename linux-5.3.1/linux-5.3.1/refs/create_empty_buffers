<dec f='linux-5.3.1/include/linux/buffer_head.h' l='163' type='void create_empty_buffers(struct page * , unsigned long , unsigned long b_state)'/>
<def f='linux-5.3.1/fs/buffer.c' l='1513' ll='1540' type='void create_empty_buffers(struct page * page, unsigned long blocksize, unsigned long b_state)'/>
<dec f='linux-5.3.1/fs/buffer.c' l='1541' type='void create_empty_buffers(struct page * , unsigned long , unsigned long )'/>
<use f='linux-5.3.1/fs/buffer.c' l='1541' c='create_empty_buffers'/>
<use f='linux-5.3.1/fs/buffer.c' l='1541' u='a'/>
<use f='linux-5.3.1/fs/buffer.c' l='1635' u='c' c='create_page_buffers'/>
<use f='linux-5.3.1/fs/buffer.c' l='2869' u='c' c='block_truncate_page'/>
<doc f='linux-5.3.1/fs/buffer.c' l='1508'>/*
 * We attach and possibly dirty the buffers atomically wrt
 * __set_page_dirty_buffers() via private_lock.  try_to_free_buffers
 * is already excluded via the page lock.
 */</doc>
<use f='linux-5.3.1/fs/ext4/inode.c' l='4046' u='c' c='__ext4_block_zero_page_range'/>
<use f='linux-5.3.1/fs/ext4/move_extent.c' l='182' u='c' c='mext_page_mkuptodate'/>
<use f='linux-5.3.1/fs/ext4/move_extent.c' l='375' u='c' c='move_extent_per_page'/>
<use f='linux-5.3.1/fs/mpage.c' l='120' u='c' c='map_buffer_to_page'/>
