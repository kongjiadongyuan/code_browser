<dec f='linux-5.3.1/include/linux/sunrpc/clnt.h' l='179' type='void rpc_prepare_reply_pages(struct rpc_rqst * req, struct page ** pages, unsigned int base, unsigned int len, unsigned int hdrsize)'/>
<use f='linux-5.3.1/fs/nfs/nfs2xdr.c' l='600' u='c' c='nfs2_xdr_enc_readlinkargs'/>
<use f='linux-5.3.1/fs/nfs/nfs2xdr.c' l='636' u='c' c='nfs2_xdr_enc_readargs'/>
<use f='linux-5.3.1/fs/nfs/nfs2xdr.c' l='794' u='c' c='nfs2_xdr_enc_readdirargs'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='916' u='c' c='nfs3_xdr_enc_readlink3args'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='949' u='c' c='nfs3_xdr_enc_read3args'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='1246' u='c' c='nfs3_xdr_enc_readdir3args'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='1288' u='c' c='nfs3_xdr_enc_readdirplus3args'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='1333' u='c' c='nfs3_xdr_enc_getacl3args'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2346' u='c' c='nfs4_xdr_enc_open'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2392' u='c' c='nfs4_xdr_enc_open_noattr'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2504' u='c' c='nfs4_xdr_enc_readlink'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2525' u='c' c='nfs4_xdr_enc_readdir'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2546' u='c' c='nfs4_xdr_enc_read'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2593' u='c' c='nfs4_xdr_enc_getacl'/>
<use f='linux-5.3.1/fs/nfs/nfs4xdr.c' l='2815' u='c' c='nfs4_xdr_enc_fs_locations'/>
<def f='linux-5.3.1/net/sunrpc/clnt.c' l='1243' ll='1254' type='void rpc_prepare_reply_pages(struct rpc_rqst * req, struct page ** pages, unsigned int base, unsigned int len, unsigned int hdrsize)'/>
<dec f='linux-5.3.1/net/sunrpc/clnt.c' l='1255' type='void rpc_prepare_reply_pages(struct rpc_rqst * , struct page ** , unsigned int , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1255' c='rpc_prepare_reply_pages'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1255' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/clnt.c' l='1234'>/**
 * rpc_prepare_reply_pages - Prepare to receive a reply data payload into pages
 * @req: RPC request to prepare
 * @pages: vector of struct page pointers
 * @base: offset in first page where receive should start, in bytes
 * @len: expected size of the upper layer data payload, in bytes
 * @hdrsize: expected size of upper layer reply header, in XDR words
 *
 */</doc>
