<dec f='linux-5.3.1/include/linux/input.h' l='371' type='int input_handler_for_each_handle(struct input_handler * , void * data, int (*)(struct input_handle *, void *) fn)'/>
<def f='linux-5.3.1/drivers/input/input.c' l='2273' ll='2290' type='int input_handler_for_each_handle(struct input_handler * handler, void * data, int (*)(struct input_handle *, void *) fn)'/>
<dec f='linux-5.3.1/drivers/input/input.c' l='2291' type='int input_handler_for_each_handle(struct input_handler * , void * , int (*)(struct input_handle *, void *) )'/>
<use f='linux-5.3.1/drivers/input/input.c' l='2291' c='input_handler_for_each_handle'/>
<use f='linux-5.3.1/drivers/input/input.c' l='2291' u='a'/>
<doc f='linux-5.3.1/drivers/input/input.c' l='2261'>/**
 * input_handler_for_each_handle - handle iterator
 * @handler: input handler to iterate
 * @data: data for the callback
 * @fn: function to be called for each handle
 *
 * Iterate over @bus&apos;s list of devices, and call @fn for each, passing
 * it @data and stop when @fn returns a non-zero value. The function is
 * using RCU to traverse the list and therefore may be using in atomic
 * contexts. The @fn callback is invoked from RCU critical section and
 * thus must not sleep.
 */</doc>
<use f='linux-5.3.1/drivers/tty/vt/keyboard.c' l='193' u='c' c='getkeycode'/>
<use f='linux-5.3.1/drivers/tty/vt/keyboard.c' l='220' u='c' c='setkeycode'/>
<use f='linux-5.3.1/drivers/tty/vt/keyboard.c' l='252' u='c' c='kd_nosound'/>
<use f='linux-5.3.1/drivers/tty/vt/keyboard.c' l='261' u='c' c='kd_mksound'/>
<use f='linux-5.3.1/drivers/tty/vt/keyboard.c' l='297' u='c' c='kbd_rate'/>
