<dec f='linux-5.3.1/security/keys/internal.h' l='302' type='long keyctl_pkey_e_d_s(int , const struct keyctl_pkey_params * , const char * , const void * , void * )'/>
<use f='linux-5.3.1/security/keys/compat.c' l='150' u='c' c='__do_compat_sys_keyctl'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='1837' u='c' c='__do_sys_keyctl'/>
<def f='linux-5.3.1/security/keys/keyctl_pkey.c' l='206' ll='263' type='long keyctl_pkey_e_d_s(int op, const struct keyctl_pkey_params * _params, const char * _info, const void * _in, void * _out)'/>
<doc f='linux-5.3.1/security/keys/keyctl_pkey.c' l='189'>/*
 * Encrypt/decrypt/sign
 *
 * Encrypt data, decrypt data or sign data using a public key.
 *
 * _info is a string of supplementary information in key=val format.  For
 * instance, it might contain:
 *
 *	&quot;enc=pkcs1 hash=sha256&quot;
 *
 * where enc= specifies the encoding and hash= selects the OID to go in that
 * particular encoding if required.  If enc= isn&apos;t supplied, it&apos;s assumed that
 * the caller is supplying raw values.
 *
 * If successful, the amount of data written into the output buffer is
 * returned.
 */</doc>
