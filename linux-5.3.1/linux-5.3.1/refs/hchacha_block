<dec f='linux-5.3.1/include/crypto/chacha.h' l='42' type='void hchacha_block(const u32 * in, u32 * out, int nrounds)'/>
<def f='linux-5.3.1/lib/chacha.c' l='102' ll='112' type='void hchacha_block(const u32 * in, u32 * out, int nrounds)'/>
<dec f='linux-5.3.1/lib/chacha.c' l='113' type='void hchacha_block(const u32 * , u32 * , int )'/>
<use f='linux-5.3.1/lib/chacha.c' l='113' c='hchacha_block'/>
<use f='linux-5.3.1/lib/chacha.c' l='113' u='a'/>
<doc f='linux-5.3.1/lib/chacha.c' l='91'>/**
 * hchacha_block - abbreviated ChaCha core, for XChaCha
 * @in: input state matrix (16 32-bit words)
 * @out: output (8 32-bit words)
 * @nrounds: number of rounds (20 or 12; 20 is recommended)
 *
 * HChaCha is the ChaCha equivalent of HSalsa and is an intermediate step
 * towards XChaCha (see https://cr.yp.to/snuffle/xsalsa-20081128.pdf).  HChaCha
 * skips the final addition of the initial state, and outputs only certain words
 * of the state.  It should not be used for streaming directly.
 */</doc>
