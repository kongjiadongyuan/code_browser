<def f='linux-5.3.1/include/linux/bpf.h' l='28' ll='64'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='75'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='176'/>
<size>168</size>
<doc f='linux-5.3.1/include/linux/bpf.h' l='27'>/* map is generic key/value storage optionally accesible by eBPF programs */</doc>
<mbr r='bpf_map_ops::map_alloc_check' o='0' t='int (*)(union bpf_attr *)'/>
<mbr r='bpf_map_ops::map_alloc' o='64' t='struct bpf_map *(*)(union bpf_attr *)'/>
<mbr r='bpf_map_ops::map_release' o='128' t='void (*)(struct bpf_map *, struct file *)'/>
<mbr r='bpf_map_ops::map_free' o='192' t='void (*)(struct bpf_map *)'/>
<mbr r='bpf_map_ops::map_get_next_key' o='256' t='int (*)(struct bpf_map *, void *, void *)'/>
<mbr r='bpf_map_ops::map_release_uref' o='320' t='void (*)(struct bpf_map *)'/>
<mbr r='bpf_map_ops::map_lookup_elem_sys_only' o='384' t='void *(*)(struct bpf_map *, void *)'/>
<mbr r='bpf_map_ops::map_lookup_elem' o='448' t='void *(*)(struct bpf_map *, void *)'/>
<mbr r='bpf_map_ops::map_update_elem' o='512' t='int (*)(struct bpf_map *, void *, void *, u64)'/>
<mbr r='bpf_map_ops::map_delete_elem' o='576' t='int (*)(struct bpf_map *, void *)'/>
<mbr r='bpf_map_ops::map_push_elem' o='640' t='int (*)(struct bpf_map *, void *, u64)'/>
<mbr r='bpf_map_ops::map_pop_elem' o='704' t='int (*)(struct bpf_map *, void *)'/>
<mbr r='bpf_map_ops::map_peek_elem' o='768' t='int (*)(struct bpf_map *, void *)'/>
<mbr r='bpf_map_ops::map_fd_get_ptr' o='832' t='void *(*)(struct bpf_map *, struct file *, int)'/>
<mbr r='bpf_map_ops::map_fd_put_ptr' o='896' t='void (*)(void *)'/>
<mbr r='bpf_map_ops::map_gen_lookup' o='960' t='u32 (*)(struct bpf_map *, struct bpf_insn *)'/>
<mbr r='bpf_map_ops::map_fd_sys_lookup_elem' o='1024' t='u32 (*)(void *)'/>
<mbr r='bpf_map_ops::map_seq_show_elem' o='1088' t='void (*)(struct bpf_map *, void *, struct seq_file *)'/>
<mbr r='bpf_map_ops::map_check_btf' o='1152' t='int (*)(const struct bpf_map *, const struct btf *, const struct btf_type *, const struct btf_type *)'/>
<mbr r='bpf_map_ops::map_direct_value_addr' o='1216' t='int (*)(const struct bpf_map *, u64 *, u32)'/>
<mbr r='bpf_map_ops::map_direct_value_meta' o='1280' t='int (*)(const struct bpf_map *, u64, u32 *)'/>
