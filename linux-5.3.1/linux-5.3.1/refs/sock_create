<dec f='linux-5.3.1/include/linux/net.h' l='233' type='int sock_create(int family, int type, int proto, struct socket ** res)'/>
<def f='linux-5.3.1/net/socket.c' l='1467' ll='1470' type='int sock_create(int family, int type, int protocol, struct socket ** res)'/>
<dec f='linux-5.3.1/net/socket.c' l='1471' type='int sock_create(int , int , int , struct socket ** )'/>
<use f='linux-5.3.1/net/socket.c' l='1471' c='sock_create'/>
<use f='linux-5.3.1/net/socket.c' l='1471' u='a'/>
<use f='linux-5.3.1/net/socket.c' l='1511' u='c' c='__sys_socket'/>
<use f='linux-5.3.1/net/socket.c' l='1569' u='c' c='__sys_socketpair'/>
<use f='linux-5.3.1/net/socket.c' l='1573' u='c' c='__sys_socketpair'/>
<doc f='linux-5.3.1/net/socket.c' l='1456'>/**
 *	sock_create - creates a socket
 *	@family: protocol family (AF_INET, ...)
 *	@type: communication type (SOCK_STREAM, ...)
 *	@protocol: protocol (0, ...)
 *	@res: new socket
 *
 *	A wrapper around __sock_create().
 *	Returns 0 or an error. This function internally uses GFP_KERNEL.
 */</doc>
