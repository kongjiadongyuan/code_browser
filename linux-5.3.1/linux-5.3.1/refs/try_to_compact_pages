<dec f='linux-5.3.1/include/linux/compaction.h' l='94' type='enum compact_result try_to_compact_pages(gfp_t gfp_mask, unsigned int order, unsigned int alloc_flags, const struct alloc_context * ac, enum compact_priority prio, struct page ** page)'/>
<def f='linux-5.3.1/mm/compaction.c' l='2334' ll='2400' type='enum compact_result try_to_compact_pages(gfp_t gfp_mask, unsigned int order, unsigned int alloc_flags, const struct alloc_context * ac, enum compact_priority prio, struct page ** capture)'/>
<doc f='linux-5.3.1/mm/compaction.c' l='2324'>/**
 * try_to_compact_pages - Direct compact to satisfy a high-order allocation
 * @gfp_mask: The GFP mask of the current allocation
 * @order: The order of the current allocation
 * @alloc_flags: The allocation flags of the current allocation
 * @ac: The context of current allocation
 * @prio: Determines how hard direct compaction should try to succeed
 *
 * This is the main entry point for direct page compaction.
 */</doc>
<use f='linux-5.3.1/mm/page_alloc.c' l='3891' u='c' c='__alloc_pages_direct_compact'/>
