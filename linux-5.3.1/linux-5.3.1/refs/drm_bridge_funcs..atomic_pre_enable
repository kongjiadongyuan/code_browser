<dec f='linux-5.3.1/include/drm/drm_bridge.h' l='263' type='void (*)(struct drm_bridge *, struct drm_atomic_state *)'/>
<offset>576</offset>
<doc f='linux-5.3.1/include/drm/drm_bridge.h' l='241'>/**
	 * @atomic_pre_enable:
	 *
	 * This callback should enable the bridge. It is called right before
	 * the preceding element in the display pipe is enabled. If the
	 * preceding element is a bridge this means it&apos;s called before that
	 * bridge&apos;s @atomic_pre_enable or @pre_enable function. If the preceding
	 * element is a &amp;drm_encoder it&apos;s called right before the encoder&apos;s
	 * &amp;drm_encoder_helper_funcs.atomic_enable hook.
	 *
	 * The display pipe (i.e. clocks and timing signals) feeding this bridge
	 * will not yet be running when this callback is called. The bridge must
	 * not enable the display link feeding the next bridge in the chain (if
	 * there is one) when this callback is called.
	 *
	 * Note that this function will only be invoked in the context of an
	 * atomic commit. It will not be invoked from &amp;drm_bridge_pre_enable. It
	 * would be prudent to also provide an implementation of @pre_enable if
	 * you are expecting driver calls into &amp;drm_bridge_pre_enable.
	 *
	 * The @atomic_pre_enable callback is optional.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='431' u='r' c='drm_atomic_bridge_pre_enable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='432' u='r' c='drm_atomic_bridge_pre_enable'/>
