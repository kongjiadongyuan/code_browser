<dec f='linux-5.3.1/include/drm/drm_bridge.h' l='288' type='void (*)(struct drm_bridge *, struct drm_atomic_state *)'/>
<offset>640</offset>
<doc f='linux-5.3.1/include/drm/drm_bridge.h' l='266'>/**
	 * @atomic_enable:
	 *
	 * This callback should enable the bridge. It is called right after
	 * the preceding element in the display pipe is enabled. If the
	 * preceding element is a bridge this means it&apos;s called after that
	 * bridge&apos;s @atomic_enable or @enable function. If the preceding element
	 * is a &amp;drm_encoder it&apos;s called right after the encoder&apos;s
	 * &amp;drm_encoder_helper_funcs.atomic_enable hook.
	 *
	 * The bridge can assume that the display pipe (i.e. clocks and timing
	 * signals) feeding it is running when this callback is called. This
	 * callback must enable the display link feeding the next bridge in the
	 * chain if there is one.
	 *
	 * Note that this function will only be invoked in the context of an
	 * atomic commit. It will not be invoked from &amp;drm_bridge_enable. It
	 * would be prudent to also provide an implementation of @enable if
	 * you are expecting driver calls into &amp;drm_bridge_enable.
	 *
	 * The enable callback is optional.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='456' u='r' c='drm_atomic_bridge_enable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='457' u='r' c='drm_atomic_bridge_enable'/>
