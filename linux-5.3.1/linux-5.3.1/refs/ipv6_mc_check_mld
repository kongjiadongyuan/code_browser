<dec f='linux-5.3.1/include/net/addrconf.h' l='233' type='int ipv6_mc_check_mld(struct sk_buff * skb)'/>
<def f='linux-5.3.1/net/ipv6/mcast_snoop.c' l='170' ll='187' type='int ipv6_mc_check_mld(struct sk_buff * skb)'/>
<dec f='linux-5.3.1/net/ipv6/mcast_snoop.c' l='188' type='int ipv6_mc_check_mld(struct sk_buff * )'/>
<use f='linux-5.3.1/net/ipv6/mcast_snoop.c' l='188' c='ipv6_mc_check_mld'/>
<use f='linux-5.3.1/net/ipv6/mcast_snoop.c' l='188' u='a'/>
<doc f='linux-5.3.1/net/ipv6/mcast_snoop.c' l='155'>/**
 * ipv6_mc_check_mld - checks whether this is a sane MLD packet
 * @skb: the skb to validate
 *
 * Checks whether an IPv6 packet is a valid MLD packet. If so sets
 * skb transport header accordingly and returns zero.
 *
 * -EINVAL: A broken packet was detected, i.e. it violates some internet
 *  standard
 * -ENOMSG: IP header validation succeeded but it is not an MLD packet.
 * -ENOMEM: A memory allocation failure happened.
 *
 * Caller needs to set the skb network header and free any returned skb if it
 * differs from the provided skb.
 */</doc>
