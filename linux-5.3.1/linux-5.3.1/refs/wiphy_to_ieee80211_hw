<dec f='linux-5.3.1/include/net/mac80211.h' l='2561' type='struct ieee80211_hw * wiphy_to_ieee80211_hw(struct wiphy * wiphy)'/>
<doc f='linux-5.3.1/include/net/mac80211.h' l='2548'>/**
 * wiphy_to_ieee80211_hw - return a mac80211 driver hw struct from a wiphy
 *
 * @wiphy: the &amp;struct wiphy which we want to query
 *
 * mac80211 drivers can use this to get to their respective
 * &amp;struct ieee80211_hw. Drivers wishing to get to their own private
 * structure can then access it via hw-&gt;priv. Note that mac802111 drivers should
 * not use wiphy_priv() to try to get their private driver structure as this
 * is already used internally by mac80211.
 *
 * Return: The mac80211 driver hw struct of @wiphy.
 */</doc>
<def f='linux-5.3.1/net/mac80211/util.c' l='39' ll='46' type='struct ieee80211_hw * wiphy_to_ieee80211_hw(struct wiphy * wiphy)'/>
<dec f='linux-5.3.1/net/mac80211/util.c' l='47' type='struct ieee80211_hw * wiphy_to_ieee80211_hw(struct wiphy * )'/>
<use f='linux-5.3.1/net/mac80211/util.c' l='47' c='wiphy_to_ieee80211_hw'/>
<use f='linux-5.3.1/net/mac80211/util.c' l='47' u='a'/>
