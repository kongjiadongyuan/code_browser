<dec f='linux-5.3.1/include/drm/drm_connector.h' l='676' type='int (*)(struct drm_connector *, int)'/>
<offset>0</offset>
<doc f='linux-5.3.1/include/drm/drm_connector.h' l='660'>/**
	 * @dpms:
	 *
	 * Legacy entry point to set the per-connector DPMS state. Legacy DPMS
	 * is exposed as a standard property on the connector, but diverted to
	 * this callback in the drm core. Note that atomic drivers don&apos;t
	 * implement the 4 level DPMS support on the connector any more, but
	 * instead only have an on/off &quot;ACTIVE&quot; property on the CRTC object.
	 *
	 * This hook is not used by atomic drivers, remapping of the legacy DPMS
	 * property is entirely handled in the DRM core.
	 *
	 * RETURNS:
	 *
	 * 0 on success or a negative error code on failure.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client_modeset.c' l='1089' u='r' c='drm_client_modeset_dpms_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1951' u='r' c='drm_connector_set_obj_prop'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='744' u='r' c='drm_crtc_helper_set_config'/>
