<dec f='linux-5.3.1/include/linux/memblock.h' l='534' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<use f='linux-5.3.1/fs/dcache.c' l='3149' u='c' c='dcache_init_early'/>
<use f='linux-5.3.1/fs/dcache.c' l='3177' u='c' c='dcache_init'/>
<use f='linux-5.3.1/fs/inode.c' l='1978' u='c' c='inode_init_early'/>
<use f='linux-5.3.1/fs/inode.c' l='2004' u='c' c='inode_init'/>
<use f='linux-5.3.1/fs/namespace.c' l='3719' u='c' c='mnt_init'/>
<use f='linux-5.3.1/fs/namespace.c' l='3724' u='c' c='mnt_init'/>
<use f='linux-5.3.1/kernel/futex.c' l='3929' u='c' c='futex_init'/>
<def f='linux-5.3.1/mm/page_alloc.c' l='8022' ll='8128' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<doc f='linux-5.3.1/mm/page_alloc.c' l='8016'>/*
 * allocate a large system hash table from bootmem
 * - it is assumed that the hash table must contain an exact power-of-2
 *   quantity of entries
 * - limit is the number of hash buckets, not the total allocation size
 */</doc>
<use f='linux-5.3.1/net/ipv4/inet_hashtables.c' l='777' u='c' c='inet_hashinfo2_init'/>
<use f='linux-5.3.1/net/ipv4/tcp.c' l='3948' u='c' c='tcp_init'/>
<use f='linux-5.3.1/net/ipv4/tcp.c' l='3963' u='c' c='tcp_init'/>
<use f='linux-5.3.1/net/ipv4/udp.c' l='2967' u='c' c='udp_table_init'/>
