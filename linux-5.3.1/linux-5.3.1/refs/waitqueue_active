<def f='linux-5.3.1/include/linux/wait.h' l='124' ll='127' type='int waitqueue_active(struct wait_queue_head * wq_head)'/>
<use f='linux-5.3.1/include/linux/wait.h' l='160' u='c' c='wq_has_sleeper'/>
<doc f='linux-5.3.1/include/linux/wait.h' l='94'>/**
 * waitqueue_active -- locklessly test for waiters on the queue
 * @wq_head: the waitqueue to test for waiters
 *
 * returns true if the wait list is not empty
 *
 * NOTE: this function is lockless and requires care, incorrect usage _will_
 * lead to sporadic and non-obvious failure.
 *
 * Use either while holding wait_queue_head::lock or when used for wakeups
 * with an extra smp_mb() like::
 *
 *      CPU0 - waker                    CPU1 - waiter
 *
 *                                      for (;;) {
 *      @cond = true;                     prepare_to_wait(&amp;wq_head, &amp;wait, state);
 *      smp_mb();                         // smp_mb() from set_current_state()
 *      if (waitqueue_active(wq_head))         if (@cond)
 *        wake_up(wq_head);                      break;
 *                                        schedule();
 *                                      }
 *                                      finish_wait(&amp;wq_head, &amp;wait);
 *
 * Because without the explicit smp_mb() it&apos;s possible for the
 * waitqueue_active() load to get hoisted over the @cond store such that we&apos;ll
 * observe an empty wait list while the waiter might not observe @cond.
 *
 * Also note that this &apos;optimization&apos; trades a spin_lock() for an smp_mb(),
 * which (when the lock is uncontended) are of roughly equal cost.
 */</doc>
<use f='linux-5.3.1/drivers/base/power/wakeup.c' l='661' u='c' c='wakeup_source_deactivate'/>
<use f='linux-5.3.1/drivers/md/md.c' l='9510' u='c' c='md_exit'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='1701' u='c' c='tty_release'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='1705' u='c' c='tty_release'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='1711' u='c' c='tty_release'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='1715' u='c' c='tty_release'/>
<use f='linux-5.3.1/fs/aio.c' l='1157' u='c' c='aio_complete'/>
<use f='linux-5.3.1/fs/eventfd.c' l='67' u='c' c='eventfd_signal'/>
<use f='linux-5.3.1/fs/eventfd.c' l='196' u='c' c='eventfd_ctx_remove_wait_queue'/>
<use f='linux-5.3.1/fs/eventfd.c' l='240' u='c' c='eventfd_read'/>
<use f='linux-5.3.1/fs/eventfd.c' l='290' u='c' c='eventfd_write'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='747' u='c' c='ep_scan_ready_list'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='749' u='c' c='ep_scan_ready_list'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='818' u='c' c='ep_free'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1261' u='c' c='ep_poll_callback'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1280' u='c' c='ep_poll_callback'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1580' u='c' c='ep_insert'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1582' u='c' c='ep_insert'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1686' u='c' c='ep_modify'/>
<use f='linux-5.3.1/fs/eventpoll.c' l='1688' u='c' c='ep_modify'/>
<use f='linux-5.3.1/fs/io_uring.c' l='521' u='c' c='io_cqring_ev_posted'/>
<use f='linux-5.3.1/fs/io_uring.c' l='523' u='c' c='io_cqring_ev_posted'/>
<use f='linux-5.3.1/fs/io_uring.c' l='546' u='c' c='io_ring_drop_ctx_refs'/>
<use f='linux-5.3.1/fs/locks.c' l='356' u='c' c='locks_release_private'/>
<use f='linux-5.3.1/include/linux/signalfd.h' l='21' u='c' c='signalfd_notify'/>
<use f='linux-5.3.1/fs/signalfd.c' l='44' u='c' c='signalfd_cleanup'/>
<use f='linux-5.3.1/fs/splice.c' l='168' u='c' c='wakeup_pipe_readers'/>
<use f='linux-5.3.1/fs/splice.c' l='456' u='c' c='wakeup_pipe_writers'/>
<use f='linux-5.3.1/kernel/events/uprobes.c' l='1611' u='c' c='xol_free_insn_slot'/>
<use f='linux-5.3.1/kernel/printk/printk.c' l='2960' u='c' c='wake_up_klogd'/>
<use f='linux-5.3.1/kernel/relay.c' l='762' u='c' c='relay_switch_subbuf'/>
<use f='linux-5.3.1/kernel/sched/wait_bit.c' l='125' u='c' c='__wake_up_bit'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='3137' u='c' c='__cancel_work_timer'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='516' u='c' c='sbq_wake_ptr'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='619' u='c' c='sbitmap_queue_wake_all'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='654' u='c' c='sbitmap_queue_show'/>
<use f='linux-5.3.1/mm/backing-dev.c' l='980' u='c' c='clear_wb_congested'/>
<use f='linux-5.3.1/mm/filemap.c' l='1087' u='c' c='wake_up_page_bit'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3076' u='c' c='allow_direct_reclaim'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3421' u='c' c='prepare_kswapd_sleep'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3630' u='c' c='balance_pgdat'/>
<use f='linux-5.3.1/mm/vmscan.c' l='3908' u='c' c='wakeup_kswapd'/>
<use f='linux-5.3.1/net/core/sock.c' l='2952' u='c' c='release_sock'/>
<use f='linux-5.3.1/net/sunrpc/sched.c' l='331' u='c' c='rpc_complete_task'/>
<use f='linux-5.3.1/sound/core/seq/seq_fifo.c' l='66' u='c' c='snd_seq_fifo_delete'/>
<use f='linux-5.3.1/sound/core/seq/seq_fifo.c' l='132' u='c' c='snd_seq_fifo_event_in'/>
<use f='linux-5.3.1/sound/core/seq/seq_memory.c' l='195' u='c' c='snd_seq_cell_free'/>
<use f='linux-5.3.1/sound/core/seq/seq_memory.c' l='429' u='c' c='snd_seq_pool_done'/>
