<dec f='linux-5.3.1/include/linux/fs.h' l='2243' type='void deactivate_super(struct super_block * sb)'/>
<use f='linux-5.3.1/fs/block_dev.c' l='560' u='c' c='freeze_bdev'/>
<use f='linux-5.3.1/fs/block_dev.c' l='565' u='c' c='freeze_bdev'/>
<use f='linux-5.3.1/fs/devpts/inode.c' l='233' u='c' c='devpts_release'/>
<use f='linux-5.3.1/fs/fs_context.c' l='499' u='c' c='put_fs_context'/>
<use f='linux-5.3.1/fs/namespace.c' l='1102' u='c' c='cleanup_mnt'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='435' u='c' c='nfs_sb_deactive'/>
<use f='linux-5.3.1/fs/proc/proc_sysctl.c' l='294' u='c' c='proc_sys_prune_dcache'/>
<use f='linux-5.3.1/fs/proc/proc_sysctl.c' l='301' u='c' c='proc_sys_prune_dcache'/>
<def f='linux-5.3.1/fs/super.c' l='358' ll='364' type='void deactivate_super(struct super_block * s)'/>
<dec f='linux-5.3.1/fs/super.c' l='366' type='void deactivate_super(struct super_block * )'/>
<use f='linux-5.3.1/fs/super.c' l='366' c='deactivate_super'/>
<use f='linux-5.3.1/fs/super.c' l='366' u='a'/>
<doc f='linux-5.3.1/fs/super.c' l='350'>/**
 *	deactivate_super	-	drop an active reference to superblock
 *	@s: superblock to deactivate
 *
 *	Variant of deactivate_locked_super(), except that superblock is *not*
 *	locked by caller.  If we are going to drop the final active reference,
 *	lock will be acquired prior to that.
 */</doc>
