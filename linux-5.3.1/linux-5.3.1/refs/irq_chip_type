<def f='linux-5.3.1/include/linux/irq.h' l='947' ll='954'/>
<use f='linux-5.3.1/include/linux/irq.h' l='1009'/>
<use f='linux-5.3.1/include/linux/irq.h' l='1110' c='irq_data_get_chip_type'/>
<use f='linux-5.3.1/include/linux/irq.h' l='1112' c='irq_data_get_chip_type'/>
<use f='linux-5.3.1/include/linux/irq.h' l='1112' c='irq_data_get_chip_type'/>
<use f='linux-5.3.1/include/linux/irq.h' l='1112' c='irq_data_get_chip_type'/>
<size>368</size>
<doc f='linux-5.3.1/include/linux/irq.h' l='934'>/**
 * struct irq_chip_type - Generic interrupt chip instance for a flow type
 * @chip:		The real interrupt chip which provides the callbacks
 * @regs:		Register offsets for this chip
 * @handler:		Flow handler associated with this chip
 * @type:		Chip can handle these flow types
 * @mask_cache_priv:	Cached mask register private to the chip type
 * @mask_cache:		Pointer to cached mask register
 *
 * A irq_generic_chip can have several instances of irq_chip_type when
 * it requires different functions and register offsets for different
 * flow types.
 */</doc>
<mbr r='irq_chip_type::chip' o='0' t='struct irq_chip'/>
<mbr r='irq_chip_type::regs' o='2304' t='struct irq_chip_regs'/>
<mbr r='irq_chip_type::handler' o='2752' t='irq_flow_handler_t'/>
<mbr r='irq_chip_type::type' o='2816' t='u32'/>
<mbr r='irq_chip_type::mask_cache_priv' o='2848' t='u32'/>
<mbr r='irq_chip_type::mask_cache' o='2880' t='u32 *'/>
