<dec f='linux-5.3.1/include/linux/xarray.h' l='1466' type='void xas_init_marks(const struct xa_state * )'/>
<use f='linux-5.3.1/lib/xarray.c' l='802' u='c' c='xas_store'/>
<def f='linux-5.3.1/lib/xarray.c' l='932' ll='945' type='void xas_init_marks(const struct xa_state * xas)'/>
<dec f='linux-5.3.1/lib/xarray.c' l='946' type='void xas_init_marks(const struct xa_state * )'/>
<use f='linux-5.3.1/lib/xarray.c' l='946' c='xas_init_marks'/>
<use f='linux-5.3.1/lib/xarray.c' l='946' u='a'/>
<use f='linux-5.3.1/lib/xarray.c' l='1972' u='c' c='xa_destroy'/>
<doc f='linux-5.3.1/lib/xarray.c' l='921'>/**
 * xas_init_marks() - Initialise all marks for the entry
 * @xas: Array operations state.
 *
 * Initialise all marks for the entry specified by @xas.  If we&apos;re tracking
 * free entries with a mark, we need to set it on all entries.  All other
 * marks are cleared.
 *
 * This implementation is not as efficient as it could be; we may walk
 * up the tree multiple times.
 */</doc>
<use f='linux-5.3.1/mm/filemap.c' l='137' u='c' c='page_cache_delete'/>
