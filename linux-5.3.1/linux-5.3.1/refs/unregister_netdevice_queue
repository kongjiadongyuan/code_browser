<dec f='linux-5.3.1/include/linux/netdevice.h' l='2627' type='void unregister_netdevice_queue(struct net_device * dev, struct list_head * head)'/>
<use f='linux-5.3.1/include/linux/netdevice.h' l='2631' u='c' c='unregister_netdevice'/>
<def f='linux-5.3.1/net/core/dev.c' l='9289' ll='9300' type='void unregister_netdevice_queue(struct net_device * dev, struct list_head * head)'/>
<dec f='linux-5.3.1/net/core/dev.c' l='9301' type='void unregister_netdevice_queue(struct net_device * , struct list_head * )'/>
<use f='linux-5.3.1/net/core/dev.c' l='9301' c='unregister_netdevice_queue'/>
<use f='linux-5.3.1/net/core/dev.c' l='9301' u='a'/>
<use f='linux-5.3.1/net/core/dev.c' l='9783' u='c' c='default_device_exit_batch'/>
<doc f='linux-5.3.1/net/core/dev.c' l='9276'>/**
 *	unregister_netdevice_queue - remove device from the kernel
 *	@dev: device
 *	@head: list
 *
 *	This function shuts down a device interface and removes it
 *	from the kernel tables.
 *	If head not NULL, device is queued to be unregistered later.
 *
 *	Callers must hold the rtnl semaphore.  You may want
 *	unregister_netdev() instead of this.
 */</doc>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='383' u='r' c='__rtnl_link_register'/>
<use f='linux-5.3.1/net/ipv4/ip_tunnel.c' l='1014' u='c' c='ip_tunnel_dellink'/>
<use f='linux-5.3.1/net/ipv4/ip_tunnel.c' l='1085' u='c' c='ip_tunnel_destroy'/>
<use f='linux-5.3.1/net/ipv4/ip_tunnel.c' l='1097' u='c' c='ip_tunnel_destroy'/>
<use f='linux-5.3.1/net/ipv4/ipmr.c' l='720' u='c' c='vif_delete'/>
<use f='linux-5.3.1/net/ipv6/sit.c' l='1772' u='c' c='ipip6_dellink'/>
<use f='linux-5.3.1/net/ipv6/sit.c' l='1819' u='c' c='sit_destroy_tunnels'/>
<use f='linux-5.3.1/net/ipv6/sit.c' l='1832' u='c' c='sit_destroy_tunnels'/>
<use f='linux-5.3.1/net/mac80211/iface.c' l='1958' u='c' c='ieee80211_remove_interfaces'/>
