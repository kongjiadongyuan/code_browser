<dec f='linux-5.3.1/include/linux/netlink.h' l='138' type='int netlink_set_err(struct sock * ssk, __u32 portid, __u32 group, int code)'/>
<use f='linux-5.3.1/include/net/genetlink.h' l='402' u='c' c='genl_set_err'/>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='745' u='c' c='rtnl_set_sk_err'/>
<use f='linux-5.3.1/net/netfilter/nfnetlink.c' l='147' u='c' c='nfnetlink_set_err'/>
<def f='linux-5.3.1/net/netlink/af_netlink.c' l='1582' ll='1601' type='int netlink_set_err(struct sock * ssk, u32 portid, u32 group, int code)'/>
<dec f='linux-5.3.1/net/netlink/af_netlink.c' l='1602' type='int netlink_set_err(struct sock * , __u32 , __u32 , int )'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='1602' c='netlink_set_err'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='1602' u='a'/>
<doc f='linux-5.3.1/net/netlink/af_netlink.c' l='1572'>/**
 * netlink_set_err - report error to broadcast listeners
 * @ssk: the kernel netlink socket, as returned by netlink_kernel_create()
 * @portid: the PORTID of a process that we want to skip (if any)
 * @group: the broadcast group that will notice the error
 * @code: error code, must be negative (as usual in kernelspace)
 *
 * This function returns the number of broadcast listeners that have set the
 * NETLINK_NO_ENOBUFS socket option.
 */</doc>
