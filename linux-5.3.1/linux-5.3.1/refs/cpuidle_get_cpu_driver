<dec f='linux-5.3.1/include/linux/cpuidle.h' l='154' type='struct cpuidle_driver * cpuidle_get_cpu_driver(struct cpuidle_device * dev)'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='62' u='c' c='cpuidle_play_dead'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='452' u='c' c='cpuidle_enable_device'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='494' u='c' c='cpuidle_disable_device'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='515' u='c' c='__cpuidle_unregister_device'/>
<use f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='541' u='c' c='__cpuidle_register_device'/>
<def f='linux-5.3.1/drivers/cpuidle/driver.c' l='308' ll='314' type='struct cpuidle_driver * cpuidle_get_cpu_driver(struct cpuidle_device * dev)'/>
<dec f='linux-5.3.1/drivers/cpuidle/driver.c' l='315' type='struct cpuidle_driver * cpuidle_get_cpu_driver(struct cpuidle_device * )'/>
<use f='linux-5.3.1/drivers/cpuidle/driver.c' l='315' c='cpuidle_get_cpu_driver'/>
<use f='linux-5.3.1/drivers/cpuidle/driver.c' l='315' u='a'/>
<doc f='linux-5.3.1/drivers/cpuidle/driver.c' l='301'>/**
 * cpuidle_get_cpu_driver - return the driver registered for a CPU.
 * @dev: a valid pointer to a struct cpuidle_device
 *
 * Returns a struct cpuidle_driver pointer, or NULL if no driver is registered
 * for the CPU associated with @dev.
 */</doc>
<use f='linux-5.3.1/drivers/cpuidle/sysfs.c' l='460' u='c' c='cpuidle_add_state_sysfs'/>
<use f='linux-5.3.1/drivers/cpuidle/sysfs.c' l='498' u='c' c='cpuidle_remove_state_sysfs'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='132' u='c' c='cpuidle_idle_call'/>
