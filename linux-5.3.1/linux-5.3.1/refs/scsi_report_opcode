<dec f='linux-5.3.1/include/scsi/scsi_device.h' l='407' type='int scsi_report_opcode(struct scsi_device * sdev, unsigned char * buffer, unsigned int len, unsigned char opcode)'/>
<def f='linux-5.3.1/drivers/scsi/scsi.c' l='487' ll='517' type='int scsi_report_opcode(struct scsi_device * sdev, unsigned char * buffer, unsigned int len, unsigned char opcode)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi.c' l='518' type='int scsi_report_opcode(struct scsi_device * , unsigned char * , unsigned int , unsigned char )'/>
<use f='linux-5.3.1/drivers/scsi/scsi.c' l='518' c='scsi_report_opcode'/>
<use f='linux-5.3.1/drivers/scsi/scsi.c' l='518' u='a'/>
<doc f='linux-5.3.1/drivers/scsi/scsi.c' l='476'>/**
 * scsi_report_opcode - Find out if a given command opcode is supported
 * @sdev:	scsi device to query
 * @buffer:	scratch buffer (must be at least 20 bytes long)
 * @len:	length of buffer
 * @opcode:	opcode for command to look up
 *
 * Uses the REPORT SUPPORTED OPERATION CODES to look up the given
 * opcode. Returns -EINVAL if RSOC fails, 0 if the command opcode is
 * unsupported and 1 if the device claims to support the command.
 */</doc>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='2996' u='c' c='sd_read_write_same'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='3010' u='c' c='sd_read_write_same'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='3013' u='c' c='sd_read_write_same'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='3024' u='c' c='sd_read_security'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='3026' u='c' c='sd_read_security'/>
