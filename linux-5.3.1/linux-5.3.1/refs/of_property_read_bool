<def f='linux-5.3.1/include/linux/of.h' l='1174' ll='1180' type='bool of_property_read_bool(const struct device_node * np, const char * propname)'/>
<use f='linux-5.3.1/include/linux/of.h' l='1421' u='c' c='of_device_is_system_power_controller'/>
<doc f='linux-5.3.1/include/linux/of.h' l='1166'>/**
 * of_property_read_bool - Find a property
 * @np:		device node from which the property value is to be read.
 * @propname:	name of the property to be searched.
 *
 * Search for a property in a device node.
 * Returns true if the property exists false otherwise.
 */</doc>
<use f='linux-5.3.1/drivers/base/regmap/regmap.c' l='657' u='c' c='regmap_get_val_endian'/>
<use f='linux-5.3.1/drivers/base/regmap/regmap.c' l='659' u='c' c='regmap_get_val_endian'/>
<use f='linux-5.3.1/drivers/base/regmap/regmap.c' l='661' u='c' c='regmap_get_val_endian'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='265' u='c' c='of_set_phy_eee_broken'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='267' u='c' c='of_set_phy_eee_broken'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='269' u='c' c='of_set_phy_eee_broken'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='271' u='c' c='of_set_phy_eee_broken'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='273' u='c' c='of_set_phy_eee_broken'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='275' u='c' c='of_set_phy_eee_broken'/>
