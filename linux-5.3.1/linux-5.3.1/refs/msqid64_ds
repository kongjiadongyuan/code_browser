<def f='linux-5.3.1/include/uapi/asm-generic/msgbuf.h' l='24' ll='45'/>
<size>120</size>
<doc f='linux-5.3.1/include/uapi/asm-generic/msgbuf.h' l='6'>/*
 * generic msqid64_ds structure.
 *
 * Note extra padding because this structure is passed back and forth
 * between kernel and user space.
 *
 * msqid64_ds was originally meant to be architecture specific, but
 * everyone just ended up making identical copies without specific
 * optimizations, so we may just as well all use the same one.
 *
 * 64 bit architectures typically define a 64 bit __kernel_time_t,
 * so they do not need the first three padding words.
 * On big-endian systems, the padding is in the wrong place.
 *
 * Pad space is left for:
 * - 2 miscellaneous 32-bit values
 */</doc>
<mbr r='msqid64_ds::msg_perm' o='0' t='struct ipc64_perm'/>
<mbr r='msqid64_ds::msg_stime' o='384' t='__kernel_time_t'/>
<mbr r='msqid64_ds::msg_rtime' o='448' t='__kernel_time_t'/>
<mbr r='msqid64_ds::msg_ctime' o='512' t='__kernel_time_t'/>
<mbr r='msqid64_ds::msg_cbytes' o='576' t='unsigned long'/>
<mbr r='msqid64_ds::msg_qnum' o='640' t='unsigned long'/>
<mbr r='msqid64_ds::msg_qbytes' o='704' t='unsigned long'/>
<mbr r='msqid64_ds::msg_lspid' o='768' t='__kernel_pid_t'/>
<mbr r='msqid64_ds::msg_lrpid' o='800' t='__kernel_pid_t'/>
<mbr r='msqid64_ds::__unused4' o='832' t='unsigned long'/>
<mbr r='msqid64_ds::__unused5' o='896' t='unsigned long'/>
<use f='linux-5.3.1/ipc/msg.c' l='299' c='copy_msqid_to_user'/>
<use f='linux-5.3.1/ipc/msg.c' l='344' c='copy_msqid_from_user'/>
<use f='linux-5.3.1/ipc/msg.c' l='380' c='msgctl_down'/>
<use f='linux-5.3.1/ipc/msg.c' l='492' c='msgctl_stat'/>
<use f='linux-5.3.1/ipc/msg.c' l='573' c='ksys_msgctl'/>
<use f='linux-5.3.1/ipc/msg.c' l='649' c='copy_compat_msqid_from_user'/>
<use f='linux-5.3.1/ipc/msg.c' l='669' c='copy_compat_msqid_to_user'/>
<use f='linux-5.3.1/ipc/msg.c' l='708' c='compat_ksys_msgctl'/>
<size>120</size>
