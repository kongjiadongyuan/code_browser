<def f='linux-5.3.1/include/linux/rhashtable.h' l='878' ll='887' type='int rhltable_insert(struct rhltable * hlt, struct rhlist_head * list, const struct rhashtable_params params)'/>
<doc f='linux-5.3.1/include/linux/rhashtable.h' l='863'>/**
 * rhltable_insert - insert object into hash list table
 * @hlt:	hash list table
 * @list:	pointer to hash list head inside object
 * @params:	hash table parameters
 *
 * Will take the per bucket bitlock to protect against mutual mutations
 * on the same bucket. Multiple insertions may occur in parallel unless
 * they map to the same bucket.
 *
 * It is safe to call this function from atomic context.
 *
 * Will trigger an automatic deferred table resizing if residency in the
 * table grows beyond 70%.
 */</doc>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='265' u='c' c='sta_info_hash_add'/>
