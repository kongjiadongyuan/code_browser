<dec f='linux-5.3.1/include/acpi/acpixf.h' l='900' type='void acpi_bios_exception(const char * module_name, u32 line_number, acpi_status status, const char * format)'/>
<use f='linux-5.3.1/drivers/acpi/acpica/dsopcode.c' l='198' macro='1' u='c' c='acpi_ds_init_buffer_field'/>
<use f='linux-5.3.1/drivers/acpi/acpica/exoparg2.c' l='393' macro='1' u='c' c='acpi_ex_opcode_2A_1T_1R'/>
<def f='linux-5.3.1/drivers/acpi/acpica/utxferror.c' l='203' ll='228' type='void acpi_bios_exception(const char * module_name, u32 line_number, acpi_status status, const char * format)'/>
<dec f='linux-5.3.1/drivers/acpi/acpica/utxferror.c' l='230' type='void acpi_bios_exception(const char * , u32 , acpi_status , const char * )'/>
<use f='linux-5.3.1/drivers/acpi/acpica/utxferror.c' l='230' c='acpi_bios_exception'/>
<use f='linux-5.3.1/drivers/acpi/acpica/utxferror.c' l='230' u='a'/>
<doc f='linux-5.3.1/drivers/acpi/acpica/utxferror.c' l='188'>/*******************************************************************************
 *
 * FUNCTION:    acpi_bios_exception
 *
 * PARAMETERS:  module_name         - Caller&apos;s module name (for error output)
 *              line_number         - Caller&apos;s line number (for error output)
 *              status              - Status value to be decoded/formatted
 *              format              - Printf format string + additional args
 *
 * RETURN:      None
 *
 * DESCRIPTION: Print an &quot;ACPI Firmware Error&quot; message with module/line/version
 *              info as well as decoded acpi_status.
 *
 ******************************************************************************/</doc>
