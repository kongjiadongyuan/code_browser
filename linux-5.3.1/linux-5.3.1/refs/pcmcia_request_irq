<dec f='linux-5.3.1/include/pcmcia/ds.h' l='206' type='int pcmcia_request_irq(struct pcmcia_device * p_dev, irq_handler_t handler)'/>
<def f='linux-5.3.1/drivers/pcmcia/pcmcia_resource.c' l='693' ll='707' type='int pcmcia_request_irq(struct pcmcia_device * p_dev, irq_handler_t handler)'/>
<dec f='linux-5.3.1/drivers/pcmcia/pcmcia_resource.c' l='708' type='int pcmcia_request_irq(struct pcmcia_device * , irq_handler_t )'/>
<use f='linux-5.3.1/drivers/pcmcia/pcmcia_resource.c' l='708' c='pcmcia_request_irq'/>
<use f='linux-5.3.1/drivers/pcmcia/pcmcia_resource.c' l='708' u='a'/>
<doc f='linux-5.3.1/drivers/pcmcia/pcmcia_resource.c' l='682'>/**
 * pcmcia_request_irq() - attempt to request a IRQ for a PCMCIA device
 * @p_dev: the associated PCMCIA device
 * @handler: IRQ handler to register
 *
 * pcmcia_request_irq() is a wrapper around request_irq() which allows
 * the PCMCIA core to clean up the registration in pcmcia_disable_device().
 * Drivers are free to use request_irq() directly, but then they need to
 * call free_irq() themselfves, too. Also, only %IRQF_SHARED capable IRQ
 * handlers are allowed.
 */</doc>
