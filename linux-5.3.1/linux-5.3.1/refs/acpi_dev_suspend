<dec f='linux-5.3.1/include/linux/acpi.h' l='910' type='int acpi_dev_suspend(struct device * dev, bool wakeup)'/>
<def f='linux-5.3.1/drivers/acpi/device_pm.c' l='916' ll='938' type='int acpi_dev_suspend(struct device * dev, bool wakeup)'/>
<dec f='linux-5.3.1/drivers/acpi/device_pm.c' l='939' type='int acpi_dev_suspend(struct device * , bool )'/>
<use f='linux-5.3.1/drivers/acpi/device_pm.c' l='939' c='acpi_dev_suspend'/>
<use f='linux-5.3.1/drivers/acpi/device_pm.c' l='939' u='a'/>
<use f='linux-5.3.1/drivers/acpi/device_pm.c' l='972' u='c' c='acpi_subsys_runtime_suspend'/>
<use f='linux-5.3.1/drivers/acpi/device_pm.c' l='1086' u='c' c='acpi_subsys_suspend_late'/>
<use f='linux-5.3.1/drivers/acpi/device_pm.c' l='1223' u='c' c='acpi_subsys_poweroff_late'/>
<doc f='linux-5.3.1/drivers/acpi/device_pm.c' l='906'>/**
 * acpi_dev_suspend - Put device into a low-power state using ACPI.
 * @dev: Device to put into a low-power state.
 * @wakeup: Whether or not to enable wakeup for the device.
 *
 * Put the given device into a low-power state using the standard ACPI
 * mechanism.  Set up remote wakeup if desired, choose the state to put the
 * device into (this checks if remote wakeup is expected to work too), and set
 * the power state of the device.
 */</doc>
