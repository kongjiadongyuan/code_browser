<dec f='linux-5.3.1/include/linux/sem.h' l='17' type='void exit_sem(struct task_struct * tsk)'/>
<use f='linux-5.3.1/ipc/namespace.c' l='188' u='c' c='ipcns_install'/>
<def f='linux-5.3.1/ipc/sem.c' l='2297' ll='2410' type='void exit_sem(struct task_struct * tsk)'/>
<doc f='linux-5.3.1/ipc/sem.c' l='2285'>/*
 * add semadj values to semaphores, free undo structures.
 * undo structures are not freed when semaphore arrays are destroyed
 * so some of them may be out of date.
 * IMPLEMENTATION NOTE: There is some confusion over whether the
 * set of adjustments that needs to be done should be done in an atomic
 * manner or not. That is, if we are attempting to decrement the semval
 * should we queue up and wait until we can do so legally?
 * The original implementation attempted to do this (queue and wait).
 * The current implementation does not do so. The POSIX standard
 * and SVID should be consulted to determine what behavior is mandated.
 */</doc>
<use f='linux-5.3.1/kernel/exit.c' l='872' u='c' c='do_exit'/>
<use f='linux-5.3.1/kernel/fork.c' l='2277' u='c' c='copy_process'/>
<use f='linux-5.3.1/kernel/fork.c' l='2851' u='c' c='ksys_unshare'/>
