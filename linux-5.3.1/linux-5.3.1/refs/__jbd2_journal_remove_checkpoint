<dec f='linux-5.3.1/include/linux/jbd2.h' l='1289' type='int __jbd2_journal_remove_checkpoint(struct journal_head * )'/>
<use f='linux-5.3.1/fs/jbd2/checkpoint.c' l='97' u='c' c='__try_to_free_cp_buf'/>
<use f='linux-5.3.1/fs/jbd2/checkpoint.c' l='299' u='c' c='jbd2_log_do_checkpoint'/>
<use f='linux-5.3.1/fs/jbd2/checkpoint.c' l='365' u='c' c='jbd2_log_do_checkpoint'/>
<use f='linux-5.3.1/fs/jbd2/checkpoint.c' l='450' u='c' c='journal_clean_one_cp_list'/>
<def f='linux-5.3.1/fs/jbd2/checkpoint.c' l='560' ll='610' type='int __jbd2_journal_remove_checkpoint(struct journal_head * jh)'/>
<doc f='linux-5.3.1/fs/jbd2/checkpoint.c' l='542'>/*
 * journal_remove_checkpoint: called after a buffer has been committed
 * to disk (either by being write-back flushed to disk, or being
 * committed to the log).
 *
 * We cannot safely clean a transaction out of the log until all of the
 * buffer updates committed in that transaction have safely been stored
 * elsewhere on disk.  To achieve this, all of the buffers in a
 * transaction need to be maintained on the transaction&apos;s checkpoint
 * lists until they have been rewritten, at which point this function is
 * called to remove the buffer from the existing transaction&apos;s
 * checkpoint lists.
 *
 * The function returns 1 if it frees the transaction, 0 otherwise.
 * The function can free jh and bh.
 *
 * This function is called with j_list_lock held.
 */</doc>
<use f='linux-5.3.1/fs/jbd2/commit.c' l='965' u='c' c='jbd2_journal_commit_transaction'/>
<use f='linux-5.3.1/fs/jbd2/transaction.c' l='1651' u='c' c='jbd2_journal_forget'/>
<use f='linux-5.3.1/fs/jbd2/transaction.c' l='2020' u='c' c='__journal_try_to_free_buffer'/>
<use f='linux-5.3.1/fs/jbd2/transaction.c' l='2247' u='c' c='journal_unmap_buffer'/>
<use f='linux-5.3.1/fs/jbd2/transaction.c' l='2277' u='c' c='journal_unmap_buffer'/>
