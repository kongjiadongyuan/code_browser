<def f='linux-5.3.1/include/drm/drm_print.h' l='166' ll='179' type='struct drm_printer drm_coredump_printer(struct drm_print_iterator * iter)'/>
<doc f='linux-5.3.1/include/drm/drm_print.h' l='130'>/**
 * drm_coredump_printer - construct a &amp;drm_printer that can output to a buffer
 * from the read function for devcoredump
 * @iter: A pointer to a struct drm_print_iterator for the read instance
 *
 * This wrapper extends drm_printf() to work with a dev_coredumpm() callback
 * function. The passed in drm_print_iterator struct contains the buffer
 * pointer, size and offset as passed in from devcoredump.
 *
 * For example::
 *
 *	void coredump_read(char *buffer, loff_t offset, size_t count,
 *		void *data, size_t datalen)
 *	{
 *		struct drm_print_iterator iter;
 *		struct drm_printer p;
 *
 *		iter.data = buffer;
 *		iter.start = offset;
 *		iter.remain = count;
 *
 *		p = drm_coredump_printer(&amp;iter);
 *
 *		drm_printf(p, &quot;foo=%d\n&quot;, foo);
 *	}
 *
 *	void makecoredump(...)
 *	{
 *		...
 *		dev_coredumpm(dev, THIS_MODULE, data, 0, GFP_KERNEL,
 *			coredump_read, ...)
 *	}
 *
 * RETURNS:
 * The &amp;drm_printer object
 */</doc>
