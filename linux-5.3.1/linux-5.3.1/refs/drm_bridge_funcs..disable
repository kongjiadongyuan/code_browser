<dec f='linux-5.3.1/include/drm/drm_bridge.h' l='151' type='void (*)(struct drm_bridge *)'/>
<use f='linux-5.3.1/drivers/gpu/drm/bridge/panel.c' l='127' u='w'/>
<offset>256</offset>
<doc f='linux-5.3.1/include/drm/drm_bridge.h' l='135'>/**
	 * @disable:
	 *
	 * This callback should disable the bridge. It is called right before
	 * the preceding element in the display pipe is disabled. If the
	 * preceding element is a bridge this means it&apos;s called before that
	 * bridge&apos;s @disable vfunc. If the preceding element is a &amp;drm_encoder
	 * it&apos;s called right before the &amp;drm_encoder_helper_funcs.disable,
	 * &amp;drm_encoder_helper_funcs.prepare or &amp;drm_encoder_helper_funcs.dpms
	 * hook.
	 *
	 * The bridge can assume that the display pipe (i.e. clocks and timing
	 * signals) feeding it is still running when this callback is called.
	 *
	 * The disable callback is optional.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='257' u='r' c='drm_bridge_disable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='258' u='r' c='drm_bridge_disable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='377' u='r' c='drm_atomic_bridge_disable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_bridge.c' l='378' u='r' c='drm_atomic_bridge_disable'/>
