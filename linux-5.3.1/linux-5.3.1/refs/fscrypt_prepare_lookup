<def f='linux-5.3.1/include/linux/fscrypt.h' l='617' ll='629' type='int fscrypt_prepare_lookup(struct inode * dir, struct dentry * dentry, struct fscrypt_name * fname)'/>
<doc f='linux-5.3.1/include/linux/fscrypt.h' l='598'>/**
 * fscrypt_prepare_lookup - prepare to lookup a name in a possibly-encrypted directory
 * @dir: directory being searched
 * @dentry: filename being looked up
 * @fname: (output) the name to use to search the on-disk directory
 *
 * Prepare for -&gt;lookup() in a directory which may be encrypted by determining
 * the name that will actually be used to search the directory on-disk.  Lookups
 * can be done with or without the directory&apos;s encryption key; without the key,
 * filenames are presented in encrypted form.  Therefore, we&apos;ll try to set up
 * the directory&apos;s encryption key, but even without it the lookup can continue.
 *
 * This also installs a custom -&gt;d_revalidate() method which will invalidate the
 * dentry if it was created without the key and the key is later added.
 *
 * Return: 0 on success; -ENOENT if key is unavailable but the filename isn&apos;t a
 * correctly formed encoded ciphertext name, so a negative dentry should be
 * created; or another -errno code.
 */</doc>
