<dec f='linux-5.3.1/include/linux/exportfs.h' l='224' type='struct dentry * generic_fh_to_dentry(struct super_block * sb, struct fid * fid, int fh_len, int fh_type, struct inode *(*)(struct super_block *, u64, u32) get_inode)'/>
<doc f='linux-5.3.1/include/linux/exportfs.h' l='221'>/*
 * Generic helpers for filesystems.
 */</doc>
<use f='linux-5.3.1/fs/ext4/super.c' l='1207' u='c' c='ext4_fh_to_dentry'/>
<use f='linux-5.3.1/fs/fat/nfs.c' l='145' u='c' c='fat_fh_to_dentry'/>
<use f='linux-5.3.1/fs/kernfs/mount.c' l='104' u='c' c='kernfs_fh_to_dentry'/>
<def f='linux-5.3.1/fs/libfs.c' l='924' ll='941' type='struct dentry * generic_fh_to_dentry(struct super_block * sb, struct fid * fid, int fh_len, int fh_type, struct inode *(*)(struct super_block *, u64, u32) get_inode)'/>
<dec f='linux-5.3.1/fs/libfs.c' l='942' type='struct dentry * generic_fh_to_dentry(struct super_block * , struct fid * , int , int , struct inode *(*)(struct super_block *, u64, u32) )'/>
<use f='linux-5.3.1/fs/libfs.c' l='942' c='generic_fh_to_dentry'/>
<use f='linux-5.3.1/fs/libfs.c' l='942' u='a'/>
<doc f='linux-5.3.1/fs/libfs.c' l='912'>/**
 * generic_fh_to_dentry - generic helper for the fh_to_dentry export operation
 * @sb:		filesystem to do the file handle conversion on
 * @fid:	file handle to convert
 * @fh_len:	length of the file handle in bytes
 * @fh_type:	type of file handle
 * @get_inode:	filesystem callback to retrieve inode
 *
 * This function decodes @fid as long as it has one of the well-known
 * Linux filehandle types and calls @get_inode on it to retrieve the
 * inode for the object specified in the file handle.
 */</doc>
