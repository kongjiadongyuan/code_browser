<dec f='linux-5.3.1/kernel/rcu/rcu_segcblist.h' l='22' type='struct callback_head * rcu_cblist_dequeue(struct rcu_cblist * rclp)'/>
<def f='linux-5.3.1/kernel/rcu/rcu_segcblist.c' l='33' ll='45' type='struct callback_head * rcu_cblist_dequeue(struct rcu_cblist * rclp)'/>
<doc f='linux-5.3.1/kernel/rcu/rcu_segcblist.c' l='26'>/*
 * Dequeue the oldest rcu_head structure from the specified callback
 * list.  This function assumes that the callback is non-lazy, but
 * the caller can later invoke rcu_cblist_dequeued_lazy() if it
 * finds otherwise (and if it cares about laziness).  This allows
 * different users to have different ways of determining laziness.
 */</doc>
<use f='linux-5.3.1/kernel/rcu/srcutree.c' l='1181' u='c' c='srcu_invoke_callbacks'/>
<use f='linux-5.3.1/kernel/rcu/srcutree.c' l='1182' u='c' c='srcu_invoke_callbacks'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2111' u='c' c='rcu_do_batch'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2112' u='c' c='rcu_do_batch'/>
