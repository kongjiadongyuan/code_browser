<dec f='linux-5.3.1/include/linux/sunrpc/svc_xprt.h' l='132' type='struct svc_xprt * svc_find_xprt(struct svc_serv * serv, const char * xcl_name, struct net * net, const sa_family_t af, const unsigned short port)'/>
<use f='linux-5.3.1/fs/lockd/svc.c' l='197' u='c' c='create_lockd_listener'/>
<def f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='1274' ll='1301' type='struct svc_xprt * svc_find_xprt(struct svc_serv * serv, const char * xcl_name, struct net * net, const sa_family_t af, const unsigned short port)'/>
<dec f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='1302' type='struct svc_xprt * svc_find_xprt(struct svc_serv * , const char * , struct net * , const sa_family_t , const unsigned short )'/>
<use f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='1302' c='svc_find_xprt'/>
<use f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='1302' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='1258'>/**
 * svc_find_xprt - find an RPC transport instance
 * @serv: pointer to svc_serv to search
 * @xcl_name: C string containing transport&apos;s class name
 * @net: owner net pointer
 * @af: Address family of transport&apos;s local address
 * @port: transport&apos;s IP port number
 *
 * Return the transport instance pointer for the endpoint accepting
 * connections/peer traffic from the specified transport class,
 * address family and port.
 *
 * Specifying 0 for the address family or port is effectively a
 * wild-card, and will result in matching the first transport in the
 * service&apos;s list that has a matching class name.
 */</doc>
