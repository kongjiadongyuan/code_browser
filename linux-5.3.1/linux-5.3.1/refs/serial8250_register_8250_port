<dec f='linux-5.3.1/include/linux/serial_8250.h' l='145' type='int serial8250_register_8250_port(struct uart_8250_port * )'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='831' u='c' c='serial8250_probe'/>
<def f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='974' ll='1108' type='int serial8250_register_8250_port(struct uart_8250_port * up)'/>
<dec f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='1109' type='int serial8250_register_8250_port(struct uart_8250_port * )'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='1109' c='serial8250_register_8250_port'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='1109' u='a'/>
<doc f='linux-5.3.1/drivers/tty/serial/8250/8250_core.c' l='961'>/**
 *	serial8250_register_8250_port - register a serial port
 *	@up: serial port template
 *
 *	Configure the serial port specified by the request. If the
 *	port exists and is in use, it is hung up and unregistered
 *	first.
 *
 *	The port is then probed and if necessary the IRQ is autodetected
 *	If this fails an error is returned.
 *
 *	On success the port is ready to use and the line number is returned.
 */</doc>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_exar.c' l='519' u='c' c='exar_pci_probe'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_lpss.c' l='313' u='c' c='lpss8250_probe'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_mid.c' l='325' u='c' c='mid8250_probe'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pci.c' l='3701' u='c' c='pciserial_init_ports'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pnp.c' l='480' u='c' c='serial_pnp_probe'/>
