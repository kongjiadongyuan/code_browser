<dec f='linux-5.3.1/include/net/tcp.h' l='456' type='int __cookie_v4_check(const struct iphdr * iph, const struct tcphdr * th, u32 cookie)'/>
<use f='linux-5.3.1/net/core/filter.c' l='5816' u='c' c='____bpf_tcp_check_syncookie'/>
<def f='linux-5.3.1/net/ipv4/syncookies.c' l='190' ll='198' type='int __cookie_v4_check(const struct iphdr * iph, const struct tcphdr * th, u32 cookie)'/>
<dec f='linux-5.3.1/net/ipv4/syncookies.c' l='199' type='int __cookie_v4_check(const struct iphdr * , const struct tcphdr * , u32 )'/>
<use f='linux-5.3.1/net/ipv4/syncookies.c' l='199' c='__cookie_v4_check'/>
<use f='linux-5.3.1/net/ipv4/syncookies.c' l='199' u='a'/>
<use f='linux-5.3.1/net/ipv4/syncookies.c' l='306' u='c' c='cookie_v4_check'/>
<doc f='linux-5.3.1/net/ipv4/syncookies.c' l='186'>/*
 * Check if a ack sequence number is a valid syncookie.
 * Return the decoded mss if it is, or 0 if not.
 */</doc>
