<dec f='linux-5.3.1/include/net/xdp.h' l='149' type='void xdp_rxq_info_unreg(struct xdp_rxq_info * xdp_rxq)'/>
<use f='linux-5.3.1/net/core/dev.c' l='8548' u='c' c='netif_alloc_rx_queues'/>
<use f='linux-5.3.1/net/core/dev.c' l='8563' u='c' c='netif_free_rx_queues'/>
<def f='linux-5.3.1/net/core/xdp.c' l='188' ll='204' type='void xdp_rxq_info_unreg(struct xdp_rxq_info * xdp_rxq)'/>
<dec f='linux-5.3.1/net/core/xdp.c' l='205' type='void xdp_rxq_info_unreg(struct xdp_rxq_info * )'/>
<use f='linux-5.3.1/net/core/xdp.c' l='205' c='xdp_rxq_info_unreg'/>
<use f='linux-5.3.1/net/core/xdp.c' l='205' u='a'/>
<use f='linux-5.3.1/net/core/xdp.c' l='223' u='c' c='xdp_rxq_info_reg'/>
<doc f='linux-5.3.1/net/core/xdp.c' l='184'>/* This unregister operation will also cleanup and destroy the
 * allocator. The page_pool_free() operation is first called when it&apos;s
 * safe to remove, possibly deferred to a workqueue.
 */</doc>
