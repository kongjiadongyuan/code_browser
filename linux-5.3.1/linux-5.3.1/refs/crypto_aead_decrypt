<dec f='linux-5.3.1/include/crypto/aead.h' l='344' type='int crypto_aead_decrypt(struct aead_request * req)'/>
<def f='linux-5.3.1/crypto/aead.c' l='104' ll='120' type='int crypto_aead_decrypt(struct aead_request * req)'/>
<dec f='linux-5.3.1/crypto/aead.c' l='121' type='int crypto_aead_decrypt(struct aead_request * )'/>
<use f='linux-5.3.1/crypto/aead.c' l='121' c='crypto_aead_decrypt'/>
<use f='linux-5.3.1/crypto/aead.c' l='121' u='a'/>
<doc f='linux-5.3.1/include/crypto/aead.h' l='322'>/**
 * crypto_aead_decrypt() - decrypt ciphertext
 * @req: reference to the ablkcipher_request handle that holds all information
 *	 needed to perform the cipher operation
 *
 * Decrypt ciphertext data using the aead_request handle. That data structure
 * and how it is filled with data is discussed with the aead_request_*
 * functions.
 *
 * IMPORTANT NOTE The caller must concatenate the ciphertext followed by the
 *		  authentication data / tag. That authentication data / tag
 *		  must have the size defined by the crypto_aead_setauthsize
 *		  invocation.
 *
 *
 * Return: 0 if the cipher operation was successful; -EBADMSG: The AEAD
 *	   cipher operation performs the authentication of the data during the
 *	   decryption operation. Therefore, the function returns this error if
 *	   the authentication of the ciphertext was unsuccessful (i.e. the
 *	   integrity of the ciphertext or the associated data was violated);
 *	   &lt; 0 if an error occurred.
 */</doc>
<use f='linux-5.3.1/crypto/ccm.c' l='703' u='c' c='crypto_rfc4309_decrypt'/>
<use f='linux-5.3.1/crypto/echainiv.c' l='109' u='c' c='echainiv_decrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='836' u='c' c='crypto_rfc4106_decrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='1027' u='c' c='crypto_rfc4543_crypt'/>
<use f='linux-5.3.1/crypto/seqiv.c' l='135' u='c' c='seqiv_aead_decrypt'/>
<use f='linux-5.3.1/net/ipv6/esp6.c' l='675' u='c' c='esp6_input'/>
<use f='linux-5.3.1/net/mac80211/aead_api.c' l='78' u='c' c='aead_decrypt'/>
