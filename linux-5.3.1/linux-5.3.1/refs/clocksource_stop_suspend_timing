<dec f='linux-5.3.1/include/linux/clocksource.h' l='199' type='u64 clocksource_stop_suspend_timing(struct clocksource * cs, u64 now)'/>
<def f='linux-5.3.1/kernel/time/clocksource.c' l='556' ll='588' type='u64 clocksource_stop_suspend_timing(struct clocksource * cs, u64 cycle_now)'/>
<doc f='linux-5.3.1/kernel/time/clocksource.c' l='542'>/**
 * clocksource_stop_suspend_timing - Stop measuring the suspend timing
 * @cs:		current clocksource from timekeeping
 * @cycle_now:	current cycles from timekeeping
 *
 * This function will calculate the suspend time from suspend timer.
 *
 * Returns nanoseconds since suspend started, 0 if no usable suspend clocksource.
 *
 * This function is called early in the resume process from timekeeping_resume(),
 * that means there is only one cpu, no processes are running and the interrupts
 * are disabled. It is therefore possible to stop the suspend timer without
 * taking the clocksource mutex.
 */</doc>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='1706' u='c' c='timekeeping_resume'/>
