<dec f='linux-5.3.1/include/linux/genalloc.h' l='167' type='void gen_pool_free_owner(struct gen_pool * pool, unsigned long addr, size_t size, void ** owner)'/>
<use f='linux-5.3.1/include/linux/genalloc.h' l='172' u='c' c='gen_pool_free'/>
<def f='linux-5.3.1/lib/genalloc.c' l='485' ll='517' type='void gen_pool_free_owner(struct gen_pool * pool, unsigned long addr, size_t size, void ** owner)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='518' type='void gen_pool_free_owner(struct gen_pool * , unsigned long , size_t , void ** )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='518' c='gen_pool_free_owner'/>
<use f='linux-5.3.1/lib/genalloc.c' l='518' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='474'>/**
 * gen_pool_free - free allocated special memory back to the pool
 * @pool: pool to free to
 * @addr: starting address of memory to free back to pool
 * @size: size in bytes of memory to free
 * @owner: private data stashed at gen_pool_add() time
 *
 * Free previously allocated special memory back to the specified
 * pool.  Can not be used in NMI handler on architectures without
 * NMI-safe cmpxchg implementation.
 */</doc>
