<dec f='linux-5.3.1/include/linux/property.h' l='47' type='int device_property_read_string(struct device * dev, const char * propname, const char ** val)'/>
<def f='linux-5.3.1/drivers/base/property.c' l='200' ll='204' type='int device_property_read_string(struct device * dev, const char * propname, const char ** val)'/>
<dec f='linux-5.3.1/drivers/base/property.c' l='205' type='int device_property_read_string(struct device * , const char * , const char ** )'/>
<use f='linux-5.3.1/drivers/base/property.c' l='205' c='device_property_read_string'/>
<use f='linux-5.3.1/drivers/base/property.c' l='205' u='a'/>
<doc f='linux-5.3.1/drivers/base/property.c' l='185'>/**
 * device_property_read_string - return a string property of a device
 * @dev: Device to get the property of
 * @propname: Name of the property
 * @val: The value is stored here
 *
 * Function reads property @propname from the device firmware description and
 * stores the value into @val if found. The value is checked to be a string.
 *
 * Return: %0 if the property was found (success),
 *	   %-EINVAL if given arguments are not valid,
 *	   %-ENODATA if the property does not have a value,
 *	   %-EPROTO or %-EILSEQ if the property type is not a string.
 *	   %-ENXIO if no suitable firmware interface is present.
 */</doc>
<use f='linux-5.3.1/drivers/usb/common/common.c' l='85' u='c' c='usb_get_maximum_speed'/>
<use f='linux-5.3.1/drivers/usb/common/common.c' l='136' u='c' c='usb_get_dr_mode'/>
