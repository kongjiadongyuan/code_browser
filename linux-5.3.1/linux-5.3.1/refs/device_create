<dec f='linux-5.3.1/include/linux/device.h' l='1334' type='struct device * device_create(struct class * cls, struct device * parent, dev_t devt, void * drvdata, const char * fmt)'/>
<use f='linux-5.3.1/arch/x86/kernel/cpuid.c' l='132' u='c' c='cpuid_device_create'/>
<use f='linux-5.3.1/arch/x86/kernel/msr.c' l='183' u='c' c='msr_device_create'/>
<use f='linux-5.3.1/block/bsg.c' l='438' u='c' c='bsg_register_queue'/>
<def f='linux-5.3.1/drivers/base/core.c' l='2878' ll='2888' type='struct device * device_create(struct class * class, struct device * parent, dev_t devt, void * drvdata, const char * fmt)'/>
<dec f='linux-5.3.1/drivers/base/core.c' l='2889' type='struct device * device_create(struct class * , struct device * , dev_t , void * , const char * )'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2889' c='device_create'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2889' u='a'/>
<doc f='linux-5.3.1/drivers/base/core.c' l='2854'>/**
 * device_create - creates a device and registers it with sysfs
 * @class: pointer to the struct class that this device should be registered to
 * @parent: pointer to the parent struct device of this new device, if any
 * @devt: the dev_t for the char device to be added
 * @drvdata: the data to be added to the device for callbacks
 * @fmt: string for the device&apos;s name
 *
 * This function can be used by char device classes.  A struct device
 * will be created in sysfs, registered to the specified class.
 *
 * A &quot;dev&quot; file will be created, showing the dev_t for the device, if
 * the dev_t is not 0,0.
 * If a pointer to a parent struct device is passed in, the newly created
 * struct device will be a child of that device in sysfs.
 * The pointer to the struct device will be returned from the call.
 * Any further sysfs files that might be required can be created using this
 * pointer.
 *
 * Returns &amp;struct device pointer on success, or ERR_PTR() on error.
 *
 * Note: the struct class passed to this function must have previously
 * been created with a call to class_create().
 */</doc>
<use f='linux-5.3.1/drivers/char/mem.c' l='940' u='c' c='chr_dev_init'/>
<use f='linux-5.3.1/drivers/hid/hidraw.c' l='535' u='c' c='hidraw_connect'/>
<use f='linux-5.3.1/drivers/pps/pps.c' l='380' u='c' c='pps_register_cdev'/>
<use f='linux-5.3.1/drivers/scsi/sg.c' l='1536' u='c' c='sg_add_device'/>
<use f='linux-5.3.1/drivers/tty/pty.c' l='955' u='c' c='unix98_pty_init'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='3495' u='c' c='tty_init'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='715' u='c' c='vcs_make_sysfs'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='717' u='c' c='vcs_make_sysfs'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='719' u='c' c='vcs_make_sysfs'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='738' u='c' c='vcs_init'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='739' u='c' c='vcs_init'/>
<use f='linux-5.3.1/drivers/tty/vt/vc_screen.c' l='740' u='c' c='vcs_init'/>
<use f='linux-5.3.1/drivers/usb/core/file.c' l='203' u='c' c='usb_register_dev'/>
<use f='linux-5.3.1/drivers/usb/mon/mon_bin.c' l='1349' u='c' c='mon_bin_add'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbcon.c' l='3686' u='c' c='fb_console_init'/>
<use f='linux-5.3.1/drivers/video/fbdev/core/fbmem.c' l='1610' u='c' c='do_register_framebuffer'/>
