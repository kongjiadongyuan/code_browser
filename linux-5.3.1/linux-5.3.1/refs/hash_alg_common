<def f='linux-5.3.1/include/crypto/hash.h' l='42' ll='47'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='139'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='197'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='311' c='__crypto_hash_alg_common'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='314' c='__crypto_hash_alg_common'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='314' c='__crypto_hash_alg_common'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='314' c='__crypto_hash_alg_common'/>
<use f='linux-5.3.1/include/crypto/hash.h' l='317' c='crypto_hash_alg_common'/>
<size>400</size>
<doc f='linux-5.3.1/include/crypto/hash.h' l='25'>/**
 * struct hash_alg_common - define properties of message digest
 * @digestsize: Size of the result of the transformation. A buffer of this size
 *	        must be available to the @final and @finup calls, so they can
 *	        store the resulting hash into it. For various predefined sizes,
 *	        search include/crypto/ using
 *	        git grep _DIGEST_SIZE include/crypto.
 * @statesize: Size of the block for partial state of the transformation. A
 *	       buffer of this size must be passed to the @export function as it
 *	       will save the partial state of the transformation into it. On the
 *	       other side, the @import function will load the state from a
 *	       buffer of this size as well.
 * @base: Start of data structure of cipher algorithm. The common data
 *	  structure of crypto_alg contains information common to all ciphers.
 *	  The hash_alg_common data structure now adds the hash-specific
 *	  information.
 */</doc>
<mbr r='hash_alg_common::digestsize' o='0' t='unsigned int'/>
<mbr r='hash_alg_common::statesize' o='32' t='unsigned int'/>
<mbr r='hash_alg_common::base' o='64' t='struct crypto_alg'/>
<use f='linux-5.3.1/include/crypto/internal/hash.h' l='88' c='crypto_hash_alg_has_setkey'/>
<use f='linux-5.3.1/include/crypto/internal/hash.h' l='91' c='crypto_init_ahash_spawn'/>
<use f='linux-5.3.1/include/crypto/internal/hash.h' l='99' c='ahash_attr_alg'/>
<use f='linux-5.3.1/crypto/ahash.c' l='196' c='ahash_set_needkey'/>
<use f='linux-5.3.1/crypto/ahash.c' l='657' c='crypto_init_ahash_spawn'/>
<use f='linux-5.3.1/crypto/ahash.c' l='665' c='ahash_attr_alg'/>
<use f='linux-5.3.1/crypto/ahash.c' l='674' c='crypto_hash_alg_has_setkey'/>
<size>400</size>
<use f='linux-5.3.1/crypto/authenc.c' l='387' c='crypto_authenc_create'/>
<size>400</size>
<use f='linux-5.3.1/crypto/authencesn.c' l='405' c='crypto_authenc_esn_create'/>
<size>400</size>
<use f='linux-5.3.1/crypto/ccm.c' l='463' c='crypto_ccm_create_common'/>
<size>400</size>
<use f='linux-5.3.1/crypto/gcm.c' l='604' c='crypto_gcm_create_common'/>
<size>400</size>
