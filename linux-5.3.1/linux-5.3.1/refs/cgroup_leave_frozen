<dec f='linux-5.3.1/include/linux/cgroup.h' l='900' type='void cgroup_leave_frozen(bool always_leave)'/>
<def f='linux-5.3.1/kernel/cgroup/freezer.c' l='131' ll='149' type='void cgroup_leave_frozen(bool always_leave)'/>
<doc f='linux-5.3.1/kernel/cgroup/freezer.c' l='122'>/*
 * Conditionally leave frozen/stopped state. Update cgroup&apos;s counters,
 * and revisit the state of the cgroup, if necessary.
 *
 * If always_leave is not set, and the cgroup is freezing,
 * we&apos;re racing with the cgroup freezing. In this case, we don&apos;t
 * drop the frozen counter to avoid a transient switch to
 * the unfrozen state.
 */</doc>
<use f='linux-5.3.1/kernel/fork.c' l='1245' u='c' c='wait_for_vfork_done'/>
<use f='linux-5.3.1/kernel/signal.c' l='2211' u='c' c='ptrace_stop'/>
<use f='linux-5.3.1/kernel/signal.c' l='2612' u='c' c='get_signal'/>
<use f='linux-5.3.1/kernel/signal.c' l='2709' u='c' c='get_signal'/>
