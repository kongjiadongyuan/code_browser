<dec f='linux-5.3.1/include/linux/efi.h' l='1516' type='int __efivar_entry_iter(int (*)(struct efivar_entry *, void *) func, struct list_head * head, void * data, struct efivar_entry ** prev)'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='646' u='c' c='efivars_sysfs_exit'/>
<def f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1085' ll='1113' type='int __efivar_entry_iter(int (*)(struct efivar_entry *, void *) func, struct list_head * head, void * data, struct efivar_entry ** prev)'/>
<dec f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1114' type='int __efivar_entry_iter(int (*)(struct efivar_entry *, void *) , struct list_head * , void * , struct efivar_entry ** )'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1114' c='__efivar_entry_iter'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1114' u='a'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1138' u='c' c='efivar_entry_iter'/>
<doc f='linux-5.3.1/drivers/firmware/efi/vars.c' l='1063'>/**
 * __efivar_entry_iter - iterate over variable list
 * @func: callback function
 * @head: head of the variable list
 * @data: function-specific data to pass to callback
 * @prev: entry to begin iterating from
 *
 * Iterate over the list of EFI variables and call @func with every
 * entry on the list. It is safe for @func to remove entries in the
 * list via efivar_entry_delete().
 *
 * You MUST call efivar_enter_iter_begin() before this function, and
 * efivar_entry_iter_end() afterwards.
 *
 * It is possible to begin iteration from an arbitrary entry within
 * the list by passing @prev. @prev is updated on return to point to
 * the last entry passed to @func. To begin iterating from the
 * beginning of the list @prev must be %NULL.
 *
 * The restrictions for @func are the same as documented for
 * efivar_entry_iter().
 */</doc>
<use f='linux-5.3.1/fs/efivarfs/super.c' l='218' u='c' c='efivarfs_fill_super'/>
<use f='linux-5.3.1/fs/efivarfs/super.c' l='243' u='c' c='efivarfs_kill_sb'/>
