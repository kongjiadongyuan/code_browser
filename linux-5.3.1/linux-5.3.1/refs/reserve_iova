<dec f='linux-5.3.1/include/linux/iova.h' l='153' type='struct iova * reserve_iova(struct iova_domain * iovad, unsigned long pfn_lo, unsigned long pfn_hi)'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='2768' u='c' c='init_reserved_iova_ranges'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='2776' u='c' c='init_reserved_iova_ranges'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='2796' u='c' c='init_reserved_iova_ranges'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu.c' l='3211' u='c' c='amd_iommu_apply_resv_region'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='1790' u='c' c='dmar_init_reserved_ranges'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='1805' u='c' c='dmar_init_reserved_ranges'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='2664' u='c' c='iommu_domain_identity_map'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='5509' u='c' c='intel_iommu_apply_resv_region'/>
<def f='linux-5.3.1/drivers/iommu/iova.c' l='658' ll='693' type='struct iova * reserve_iova(struct iova_domain * iovad, unsigned long pfn_lo, unsigned long pfn_hi)'/>
<dec f='linux-5.3.1/drivers/iommu/iova.c' l='694' type='struct iova * reserve_iova(struct iova_domain * , unsigned long , unsigned long )'/>
<use f='linux-5.3.1/drivers/iommu/iova.c' l='694' c='reserve_iova'/>
<use f='linux-5.3.1/drivers/iommu/iova.c' l='694' u='a'/>
<use f='linux-5.3.1/drivers/iommu/iova.c' l='717' u='c' c='copy_reserved_iova'/>
<doc f='linux-5.3.1/drivers/iommu/iova.c' l='650'>/**
 * reserve_iova - reserves an iova in the given range
 * @iovad: - iova domain pointer
 * @pfn_lo: - lower page frame address
 * @pfn_hi:- higher pfn adderss
 * This function allocates reserves the address range from pfn_lo to pfn_hi so
 * that this address is not dished out as part of alloc_iova.
 */</doc>
