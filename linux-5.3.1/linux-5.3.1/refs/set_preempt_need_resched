<def f='linux-5.3.1/arch/x86/include/asm/preempt.h' l='58' ll='61' type='void set_preempt_need_resched()'/>
<doc f='linux-5.3.1/arch/x86/include/asm/preempt.h' l='49'>/*
 * We fold the NEED_RESCHED bit into the preempt count such that
 * preempt_enable() can decrement and test for needing to reschedule with a
 * single instruction.
 *
 * We invert the actual bit, so that when the decrement hits 0 we know we both
 * need to resched (the bit is cleared) and can resched (no preempt count).
 */</doc>
<use f='linux-5.3.1/include/linux/sched/idle.h' l='84' macro='1' u='c' c='current_clr_polling'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2178' u='c' c='rcu_sched_clock_irq'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='2294' u='c' c='rcu_core'/>
<use f='linux-5.3.1/kernel/rcu/tree_stall.h' l='474' u='c' c='print_cpu_stall'/>
<use f='linux-5.3.1/kernel/rcu/tree_exp.h' l='708' u='c' c='rcu_exp_need_qs'/>
<use f='linux-5.3.1/kernel/sched/core.c' l='521' u='c' c='resched_curr'/>
<use f='linux-5.3.1/kernel/sched/core.c' l='2200' macro='1' u='c' c='scheduler_ipi'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='275' macro='1' u='c' c='do_idle'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='344' macro='1' u='c' c='play_idle'/>
