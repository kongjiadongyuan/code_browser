<dec f='linux-5.3.1/include/linux/firmware.h' l='51' type='int request_firmware_direct(const struct firmware ** fw, const char * name, struct device * device)'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/microcode/amd.c' l='904' u='c' c='request_microcode_amd'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/microcode/intel.c' l='984' u='c' c='request_microcode_fw'/>
<def f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='871' ll='882' type='int request_firmware_direct(const struct firmware ** firmware_p, const char * name, struct device * device)'/>
<dec f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='883' type='int request_firmware_direct(const struct firmware ** , const char * , struct device * )'/>
<use f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='883' c='request_firmware_direct'/>
<use f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='883' u='a'/>
<doc f='linux-5.3.1/drivers/base/firmware_loader/main.c' l='860'>/**
 * request_firmware_direct() - load firmware directly without usermode helper
 * @firmware_p: pointer to firmware image
 * @name: name of firmware file
 * @device: device for which firmware is being loaded
 *
 * This function works pretty much like request_firmware(), but this doesn&apos;t
 * fall back to usermode helper even if the firmware couldn&apos;t be loaded
 * directly from fs.  Hence it&apos;s useful for loading optional firmwares, which
 * aren&apos;t always present, without extra long timeouts of udev.
 **/</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='247' u='c' c='drm_hdcp_request_srm'/>
