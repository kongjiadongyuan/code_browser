<dec f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.h' l='3153' type='unsigned int'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='1015' u='w' c='tg3_enable_ints'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='6391' u='r' c='tg3_irq_sync'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='7440' u='r' c='tg3_irq_quiesce'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='7442' u='w' c='tg3_irq_quiesce'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='10992' u='r' c='tg3_timer'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='11178' u='w' c='tg3_restart_hw'/>
<use f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.c' l='17655' u='w' c='tg3_init_one'/>
<offset>0</offset>
<doc f='linux-5.3.1/drivers/net/ethernet/broadcom/tg3.h' l='3138'>/* If the IRQ handler (which runs lockless) needs to be
	 * quiesced, the following bitmask state is used.  The
	 * SYNC flag is set by non-IRQ context code to initiate
	 * the quiescence.
	 *
	 * When the IRQ handler notices that SYNC is set, it
	 * disables interrupts and returns.
	 *
	 * When all outstanding IRQ handlers have returned after
	 * the SYNC flag has been set, the setter can be assured
	 * that interrupts will no longer get run.
	 *
	 * In this way all SMP driver locks are never acquired
	 * in hw IRQ context, only sw IRQ context or lower.
	 */</doc>
