<dec f='linux-5.3.1/include/linux/vmalloc.h' l='87' type='void * vzalloc_node(unsigned long size, int node)'/>
<use f='linux-5.3.1/lib/genalloc.c' l='190' u='c' c='gen_pool_add_owner'/>
<def f='linux-5.3.1/mm/vmalloc.c' l='2659' ll='2663' type='void * vzalloc_node(unsigned long size, int node)'/>
<dec f='linux-5.3.1/mm/vmalloc.c' l='2664' type='void * vzalloc_node(unsigned long , int )'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2664' c='vzalloc_node'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2664' u='a'/>
<doc f='linux-5.3.1/mm/vmalloc.c' l='2645'>/**
 * vzalloc_node - allocate memory on a specific node with zero fill
 * @size:	allocation size
 * @node:	numa node
 *
 * Allocate enough pages to cover @size from the page level
 * allocator and map them into contiguous kernel virtual space.
 * The memory allocated is set to zero.
 *
 * For tight control over page level allocator and protection flags
 * use __vmalloc_node() instead.
 *
 * Return: pointer to the allocated memory or %NULL on error
 */</doc>
