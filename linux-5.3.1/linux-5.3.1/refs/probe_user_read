<dec f='linux-5.3.1/include/linux/uaccess.h' l='254' type='long probe_user_read(void * dst, const void * src, size_t size)'/>
<doc f='linux-5.3.1/include/linux/uaccess.h' l='245'>/*
 * probe_user_read(): safely attempt to read from a location in user space
 * @dst: pointer to the buffer that shall take the data
 * @src: address to read from
 * @size: size of the data chunk
 *
 * Safely read from address @src to the buffer at @dst.  If a kernel fault
 * happens, handle that and return -EFAULT.
 */</doc>
<use f='linux-5.3.1/kernel/trace/trace_kprobe.c' l='937' u='c' c='probe_mem_read_user'/>
<def f='linux-5.3.1/mm/maccess.c' l='62' ll='63' type='long probe_user_read(void * dst, const void * src, size_t size)'/>
<dec f='linux-5.3.1/mm/maccess.c' l='77' type='long probe_user_read(void * , const void * , size_t )'/>
<use f='linux-5.3.1/mm/maccess.c' l='77' c='probe_user_read'/>
<use f='linux-5.3.1/mm/maccess.c' l='77' u='a'/>
<doc f='linux-5.3.1/mm/maccess.c' l='52'>/**
 * probe_user_read(): safely attempt to read from a user-space location
 * @dst: pointer to the buffer that shall take the data
 * @src: address to read from. This must be a user address.
 * @size: size of the data chunk
 *
 * Safely read from user address @src to the buffer at @dst. If a kernel fault
 * happens, handle that and return -EFAULT.
 */</doc>
