<dec f='linux-5.3.1/sound/pci/hda/hda_local.h' l='123' type='int snd_hda_codec_amp_init(struct hda_codec * codec, hda_nid_t nid, int ch, int direction, int idx, int mask, int val)'/>
<def f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1329' ll='1342' type='int snd_hda_codec_amp_init(struct hda_codec * codec, hda_nid_t nid, int ch, int dir, int idx, int mask, int val)'/>
<dec f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1343' type='int snd_hda_codec_amp_init(struct hda_codec * , hda_nid_t , int , int , int , int , int )'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1343' c='snd_hda_codec_amp_init'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1343' u='a'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1364' u='c' c='snd_hda_codec_amp_init_stereo'/>
<doc f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='1315'>/**
 * snd_hda_codec_amp_init - initialize the AMP value
 * @codec: the HDA codec
 * @nid: NID to read the AMP value
 * @ch: channel (left=0 or right=1)
 * @dir: #HDA_INPUT or #HDA_OUTPUT
 * @idx: the index value (only for input direction)
 * @mask: bit mask to set
 * @val: the bits value to set
 *
 * Works like snd_hda_codec_amp_update() but it writes the value only at
 * the first access.  If the amp was already initialized / updated beforehand,
 * this does nothing.
 */</doc>
