<def f='linux-5.3.1/include/asm-generic/atomic-instrumented.h' l='1500' ll='1506' type='bool atomic64_try_cmpxchg(atomic64_t * v, s64 * old, s64 new)'/>
<use f='linux-5.3.1/include/linux/atomic-fallback.h' l='2201' macro='1' u='c' c='atomic64_fetch_add_unless'/>
<use f='linux-5.3.1/include/linux/atomic-fallback.h' l='2251' macro='1' u='c' c='atomic64_inc_unless_negative'/>
<use f='linux-5.3.1/include/linux/atomic-fallback.h' l='2267' macro='1' u='c' c='atomic64_dec_unless_positive'/>
<use f='linux-5.3.1/include/linux/atomic-fallback.h' l='2284' macro='1' u='c' c='atomic64_dec_if_positive'/>
<use f='linux-5.3.1/include/asm-generic/atomic-long.h' l='436' macro='1' u='c' c='atomic_long_try_cmpxchg'/>
<use f='linux-5.3.1/include/asm-generic/atomic-long.h' l='442' macro='1' u='c' c='atomic_long_try_cmpxchg_acquire'/>
<use f='linux-5.3.1/include/asm-generic/atomic-long.h' l='448' macro='1' u='c' c='atomic_long_try_cmpxchg_release'/>
<use f='linux-5.3.1/include/asm-generic/atomic-long.h' l='454' macro='1' u='c' c='atomic_long_try_cmpxchg_relaxed'/>
