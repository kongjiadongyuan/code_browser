<dec f='linux-5.3.1/include/linux/skbuff.h' l='3695' type='struct sk_buff * skb_clone_sk(struct sk_buff * skb)'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='4470' ll='4488' type='struct sk_buff * skb_clone_sk(struct sk_buff * skb)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='4489' type='struct sk_buff * skb_clone_sk(struct sk_buff * )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='4489' c='skb_clone_sk'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='4489' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='4457'>/**
 * skb_clone_sk - create clone of skb, and take reference to socket
 * @skb: the skb to clone
 *
 * This function creates a clone of a buffer that holds a reference on
 * sk_refcnt.  Buffers created via this function are meant to be
 * returned using sock_queue_err_skb, or free via kfree_skb.
 *
 * When passing buffers allocated with this function to sock_queue_err_skb
 * it is necessary to wrap the call with sock_hold/sock_put in order to
 * prevent the socket from being released prior to being enqueued on
 * the sk_error_queue.
 */</doc>
<use f='linux-5.3.1/net/mac80211/tx.c' l='2720' u='c' c='ieee80211_build_hdr'/>
