<dec f='linux-5.3.1/include/acpi/acpiosxf.h' l='318' type='u64 acpi_os_get_timer()'/>
<use f='linux-5.3.1/drivers/acpi/acpica/dscontrol.c' l='87' u='c' c='acpi_ds_exec_begin_control_op'/>
<use f='linux-5.3.1/drivers/acpi/acpica/dscontrol.c' l='182' u='c' c='acpi_ds_exec_end_control_op'/>
<use f='linux-5.3.1/drivers/acpi/acpica/exdebug.c' l='82' u='c' c='acpi_ex_do_debug_object'/>
<use f='linux-5.3.1/drivers/acpi/acpica/exoparg1.c' l='69' u='c' c='acpi_ex_opcode_0A_0T_1R'/>
<def f='linux-5.3.1/drivers/acpi/osl.c' l='614' ll='618' type='u64 acpi_os_get_timer()'/>
<doc f='linux-5.3.1/drivers/acpi/osl.c' l='605'>/*
 * Support ACPI 3.0 AML Timer operand. Returns a 64-bit free-running,
 * monotonically increasing timer with 100ns granularity. Do not use
 * ktime_get() to implement this function because this function may get
 * called after timekeeping has been suspended. Note: calling this function
 * after timekeeping has been suspended may lead to unexpected results
 * because when timekeeping is suspended the jiffies counter is not
 * incremented. See also timekeeping_suspend().
 */</doc>
