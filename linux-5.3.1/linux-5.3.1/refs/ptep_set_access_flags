<dec f='linux-5.3.1/arch/x86/include/asm/pgtable.h' l='1107' type='int ptep_set_access_flags(struct vm_area_struct * vma, unsigned long address, pte_t * ptep, pte_t entry, int dirty)'/>
<use f='linux-5.3.1/include/asm-generic/hugetlb.h' l='118' u='c' c='huge_ptep_set_access_flags'/>
<def f='linux-5.3.1/arch/x86/mm/pgtable.c' l='483' ll='493' type='int ptep_set_access_flags(struct vm_area_struct * vma, unsigned long address, pte_t * ptep, pte_t entry, int dirty)'/>
<doc f='linux-5.3.1/arch/x86/mm/pgtable.c' l='476'>/*
 * Used to set accessed or dirty bits in the page table entries
 * on other architectures. On x86, the accessed and dirty bits
 * are tracked by hardware. However, do_wp_page calls this function
 * to also make the pte writeable at the same time the dirty bit is
 * set. In that case we do actually need to write the PTE.
 */</doc>
<use f='linux-5.3.1/mm/memory.c' l='1604' u='c' c='insert_pfn'/>
<use f='linux-5.3.1/mm/memory.c' l='2276' u='c' c='wp_page_reuse'/>
<use f='linux-5.3.1/mm/memory.c' l='3860' u='c' c='handle_pte_fault'/>
