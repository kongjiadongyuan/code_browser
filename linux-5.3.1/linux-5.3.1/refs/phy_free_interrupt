<dec f='linux-5.3.1/include/linux/phy.h' l='1143' type='void phy_free_interrupt(struct phy_device * phydev)'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='829' u='c' c='phy_request_interrupt'/>
<def f='linux-5.3.1/drivers/net/phy/phy.c' l='843' ll='847' type='void phy_free_interrupt(struct phy_device * phydev)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy.c' l='848' type='void phy_free_interrupt(struct phy_device * )'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='848' c='phy_free_interrupt'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='848' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/phy.c' l='836'>/**
 * phy_free_interrupt - disable and free interrupt for a PHY device
 * @phydev: target phy_device struct
 *
 * Description: Disable and free the interrupt for the given PHY.
 *   This should only be called with a valid IRQ number.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='1019' u='c' c='phy_disconnect'/>
