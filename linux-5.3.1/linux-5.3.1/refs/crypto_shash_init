<def f='linux-5.3.1/include/crypto/hash.h' l='896' ll='904' type='int crypto_shash_init(struct shash_desc * desc)'/>
<doc f='linux-5.3.1/include/crypto/hash.h' l='884'>/**
 * crypto_shash_init() - (re)initialize message digest
 * @desc: operational state handle that is already filled
 *
 * The call (re-)initializes the message digest referenced by the
 * operational state handle. Any potentially existing state created by
 * previous operations is discarded.
 *
 * Context: Any context.
 * Return: 0 if the message digest initialization was successful; &lt; 0 if an
 *	   error occurred
 */</doc>
<use f='linux-5.3.1/crypto/asymmetric_keys/pkcs7_verify.c' l='98' u='c' c='pkcs7_digest'/>
<use f='linux-5.3.1/crypto/drbg.c' l='1708' u='c' c='drbg_kcapi_hash'/>
<use f='linux-5.3.1/crypto/hmac.c' l='75' u='c' c='hmac_setkey'/>
<use f='linux-5.3.1/crypto/hmac.c' l='78' u='c' c='hmac_setkey'/>
<use f='linux-5.3.1/crypto/shash.c' l='189' u='c' c='shash_digest_unaligned'/>
<use f='linux-5.3.1/crypto/shash.c' l='237' u='c' c='shash_async_init'/>
<use f='linux-5.3.1/crypto/shash.c' l='311' u='c' c='shash_ahash_digest'/>
<use f='linux-5.3.1/net/mac80211/aes_cmac.c' l='32' u='c' c='ieee80211_aes_cmac'/>
<use f='linux-5.3.1/net/mac80211/aes_cmac.c' l='47' u='c' c='ieee80211_aes_cmac_256'/>
<use f='linux-5.3.1/net/mac80211/fils_aead.c' l='44' u='c' c='aes_s2v'/>
