<dec f='linux-5.3.1/include/linux/blkdev.h' l='1049' type='void blk_queue_chunk_sectors(struct request_queue * , unsigned int )'/>
<def f='linux-5.3.1/block/blk-settings.c' l='214' ll='218' type='void blk_queue_chunk_sectors(struct request_queue * q, unsigned int chunk_sectors)'/>
<dec f='linux-5.3.1/block/blk-settings.c' l='219' type='void blk_queue_chunk_sectors(struct request_queue * , unsigned int )'/>
<use f='linux-5.3.1/block/blk-settings.c' l='219' c='blk_queue_chunk_sectors'/>
<use f='linux-5.3.1/block/blk-settings.c' l='219' u='a'/>
<doc f='linux-5.3.1/block/blk-settings.c' l='201'>/**
 * blk_queue_chunk_sectors - set size of the chunk for this queue
 * @q:  the request queue for the device
 * @chunk_sectors:  chunk sectors in the usual 512b unit
 *
 * Description:
 *    If a driver doesn&apos;t want IOs to cross a given chunk size, it can set
 *    this limit and prevent merging across chunks. Note that the chunk size
 *    must currently be a power-of-2 in sectors. Also note that the block
 *    layer must accept a page worth of data at any offset. So if the
 *    crossing of chunks is a hard limitation in the driver, it must still be
 *    prepared to split single page bios.
 **/</doc>
