<dec f='linux-5.3.1/include/drm/drm_self_refresh_helper.h' l='14' type='void drm_self_refresh_helper_alter_state(struct drm_atomic_state * state)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='957' u='c' c='drm_atomic_helper_check'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='138' ll='168' type='void drm_self_refresh_helper_alter_state(struct drm_atomic_state * state)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='169' type='void drm_self_refresh_helper_alter_state(struct drm_atomic_state * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='169' c='drm_self_refresh_helper_alter_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='169' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='125'>/**
 * drm_self_refresh_helper_alter_state - Alters the atomic state for SR exit
 * @state: the state currently being checked
 *
 * Called at the end of atomic check. This function checks the state for flags
 * incompatible with self refresh exit and changes them. This is a bit
 * disingenuous since userspace is expecting one thing and we&apos;re giving it
 * another. However in order to keep self refresh entirely hidden from
 * userspace, this is required.
 *
 * At the end, we queue up the self refresh entry work so we can enter PSR after
 * the desired delay.
 */</doc>
