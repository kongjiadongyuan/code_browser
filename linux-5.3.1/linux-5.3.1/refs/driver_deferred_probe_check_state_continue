<dec f='linux-5.3.1/include/linux/device.h' l='347' type='int driver_deferred_probe_check_state_continue(struct device * dev)'/>
<def f='linux-5.3.1/drivers/base/dd.c' l='290' ll='299' type='int driver_deferred_probe_check_state_continue(struct device * dev)'/>
<doc f='linux-5.3.1/drivers/base/dd.c' l='275'>/**
 * driver_deferred_probe_check_state_continue() - check deferred probe state
 * @dev: device to check
 *
 * Returns -ETIMEDOUT if deferred probe debug timeout has expired, or
 * -EPROBE_DEFER otherwise.
 *
 * Drivers or subsystems can opt-in to calling this function instead of
 * directly returning -EPROBE_DEFER.
 *
 * This is similar to driver_deferred_probe_check_state(), but it allows the
 * subsystem to keep deferring probe after built-in drivers have had a chance
 * to probe. One scenario where that is useful is if built-in drivers rely on
 * resources that are provided by modular drivers.
 */</doc>
