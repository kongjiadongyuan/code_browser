<dec f='linux-5.3.1/include/linux/connector.h' l='67' type='int cn_add_callback(struct cb_id * id, const char * name, void (*)(struct cn_msg *, struct netlink_skb_parms *) callback)'/>
<use f='linux-5.3.1/drivers/connector/cn_proc.c' l='387' u='c' c='cn_proc_init'/>
<doc f='linux-5.3.1/include/linux/connector.h' l='57'>/**
 * cn_add_callback() - Registers new callback with connector core.
 *
 * @id:		unique connector&apos;s user identifier.
 *		It must be registered in connector.h for legal
 *		in-kernel users.
 * @name:	connector&apos;s callback symbolic name.
 * @callback:	connector&apos;s callback.
 * 		parameters are %cn_msg and the sender&apos;s credentials
 */</doc>
<def f='linux-5.3.1/drivers/connector/connector.c' l='196' ll='211' type='int cn_add_callback(struct cb_id * id, const char * name, void (*)(struct cn_msg *, struct netlink_skb_parms *) callback)'/>
<dec f='linux-5.3.1/drivers/connector/connector.c' l='212' type='int cn_add_callback(struct cb_id * , const char * , void (*)(struct cn_msg *, struct netlink_skb_parms *) )'/>
<use f='linux-5.3.1/drivers/connector/connector.c' l='212' c='cn_add_callback'/>
<use f='linux-5.3.1/drivers/connector/connector.c' l='212' u='a'/>
<doc f='linux-5.3.1/drivers/connector/connector.c' l='190'>/*
 * Callback add routing - adds callback with given ID and name.
 * If there is registered callback with the same ID it will not be added.
 *
 * May sleep.
 */</doc>
