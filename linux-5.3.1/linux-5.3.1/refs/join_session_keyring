<dec f='linux-5.3.1/security/keys/internal.h' l='168' type='long join_session_keyring(const char * name)'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='309' u='c' c='keyctl_join_session_keyring'/>
<use f='linux-5.3.1/security/keys/process_keys.c' l='674' u='c' c='lookup_user_key'/>
<use f='linux-5.3.1/security/keys/process_keys.c' l='685' u='c' c='lookup_user_key'/>
<def f='linux-5.3.1/security/keys/process_keys.c' l='838' ll='906' type='long join_session_keyring(const char * name)'/>
<doc f='linux-5.3.1/security/keys/process_keys.c' l='827'>/*
 * Join the named keyring as the session keyring if possible else attempt to
 * create a new one of that name and join that.
 *
 * If the name is NULL, an empty anonymous keyring will be installed as the
 * session keyring.
 *
 * Named session keyrings are joined with a semaphore held to prevent the
 * keyrings from going away whilst the attempt is made to going them and also
 * to prevent a race in creating compatible session keyrings.
 */</doc>
