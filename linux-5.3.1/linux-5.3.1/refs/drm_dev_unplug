<dec f='linux-5.3.1/include/drm/drm_drv.h' l='743' type='void drm_dev_unplug(struct drm_device * dev)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='503' ll='515' type='void drm_dev_unplug(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='516' type='void drm_dev_unplug(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='516' c='drm_dev_unplug'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='516' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='493'>/**
 * drm_dev_unplug - unplug a DRM device
 * @dev: DRM device
 *
 * This unplugs a hotpluggable DRM device, which makes it inaccessible to
 * userspace operations. Entry-points can use drm_dev_enter() and
 * drm_dev_exit() to protect device resources in a race free manner. This
 * essentially unregisters the device like drm_dev_unregister(), but can be
 * called while there are still open users of @dev.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='1797' u='c' c='i915_driver_unregister'/>
