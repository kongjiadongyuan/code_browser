<dec f='linux-5.3.1/include/linux/rcutree.h' l='43' type='void rcu_idle_enter()'/>
<def f='linux-5.3.1/kernel/rcu/tree.c' l='594' ll='598' type='void rcu_idle_enter()'/>
<doc f='linux-5.3.1/kernel/rcu/tree.c' l='583'>/**
 * rcu_idle_enter - inform RCU that current CPU is entering idle
 *
 * Enter idle mode, in other words, -leave- the mode in which RCU
 * read-side critical sections can occur.  (Though RCU read-side
 * critical sections can occur in irq handlers in idle, a possibility
 * handled by irq_enter() and irq_exit().)
 *
 * If you add or remove a call to rcu_idle_enter(), be sure to test with
 * CONFIG_RCU_EQS_DEBUG=y.
 */</doc>
<use f='linux-5.3.1/kernel/sched/idle.c' l='57' u='c' c='cpu_idle_poll'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='152' u='c' c='cpuidle_idle_call'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='170' u='c' c='cpuidle_idle_call'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='182' u='c' c='cpuidle_idle_call'/>
<use f='linux-5.3.1/kernel/sched/idle.c' l='199' u='c' c='cpuidle_idle_call'/>
