<def f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='80' ll='85'/>
<use f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1648'/>
<use f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1684'/>
<use f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1721'/>
<use f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1727'/>
<size>32</size>
<doc f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='65'>/*
 * i915_user_extension: Base class for defining a chain of extensions
 *
 * Many interfaces need to grow over time. In most cases we can simply
 * extend the struct and have userspace pass in more data. Another option,
 * as demonstrated by Vulkan&apos;s approach to providing extensions for forward
 * and backward compatibility, is to use a list of optional structs to
 * provide those extra details.
 *
 * The key advantage to using an extension chain is that it allows us to
 * redefine the interface more easily than an ever growing struct of
 * increasing complexity, and for large parts of that interface to be
 * entirely optional. The downside is more pointer chasing; chasing across
 * the __user boundary with pointers encapsulated inside u64.
 */</doc>
<mbr r='i915_user_extension::next_extension' o='0' t='__u64'/>
<mbr r='i915_user_extension::name' o='64' t='__u32'/>
<mbr r='i915_user_extension::flags' o='96' t='__u32'/>
<mbr r='i915_user_extension::rsvd' o='128' t='__u32 [4]'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_user_extensions.h' l='12'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_user_extensions.h' l='15' c='i915_user_extensions'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='1415' c='set_engines__load_balance'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='1507' c='set_engines__bond'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='1886' c='create_setparam'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='2069' c='create_clone'/>
<size>32</size>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_user_extensions.c' l='16' c='i915_user_extensions'/>
<size>32</size>
