<dec f='linux-5.3.1/include/linux/jbd2.h' l='1375' type='int jbd2_journal_forget(handle_t * , struct buffer_head * )'/>
<use f='linux-5.3.1/fs/ext4/ext4_jbd2.c' l='220' u='c' c='__ext4_forget'/>
<dec f='linux-5.3.1/fs/jbd2/journal.c' l='68' type='int jbd2_journal_forget(handle_t * , struct buffer_head * )'/>
<use f='linux-5.3.1/fs/jbd2/journal.c' l='68' c='jbd2_journal_forget'/>
<use f='linux-5.3.1/fs/jbd2/journal.c' l='68' u='a'/>
<use f='linux-5.3.1/fs/jbd2/revoke.c' l='388' u='c' c='jbd2_journal_revoke'/>
<def f='linux-5.3.1/fs/jbd2/transaction.c' l='1524' ll='1680' type='int jbd2_journal_forget(handle_t * handle, struct buffer_head * bh)'/>
<doc f='linux-5.3.1/fs/jbd2/transaction.c' l='1507'>/**
 * void jbd2_journal_forget() - bforget() for potentially-journaled buffers.
 * @handle: transaction handle
 * @bh:     bh to &apos;forget&apos;
 *
 * We can only do the bforget if there are no commits pending against the
 * buffer.  If the buffer is dirty in the current running transaction we
 * can safely unlink it.
 *
 * bh may not be a journalled buffer at all - it may be a non-JBD
 * buffer which came off the hashtable.  Check for this.
 *
 * Decrements bh-&gt;b_count by one.
 *
 * Allow this call even if the handle has aborted --- it may be part of
 * the caller&apos;s cleanup after an abort.
 */</doc>
