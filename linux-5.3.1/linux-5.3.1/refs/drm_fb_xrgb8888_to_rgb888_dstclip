<dec f='linux-5.3.1/include/drm/drm_format_helper.h' l='25' type='void drm_fb_xrgb8888_to_rgb888_dstclip(void * dst, unsigned int dst_pitch, void * vaddr, struct drm_framebuffer * fb, struct drm_rect * clip)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='245' ll='268' type='void drm_fb_xrgb8888_to_rgb888_dstclip(void * dst, unsigned int dst_pitch, void * vaddr, struct drm_framebuffer * fb, struct drm_rect * clip)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='269' type='void drm_fb_xrgb8888_to_rgb888_dstclip(void * , unsigned int , void * , struct drm_framebuffer * , struct drm_rect * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='269' c='drm_fb_xrgb8888_to_rgb888_dstclip'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='269' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_format_helper.c' l='231'>/**
 * drm_fb_xrgb8888_to_rgb888_dstclip - Convert XRGB8888 to RGB888 clip buffer
 * @dst: RGB565 destination buffer (iomem)
 * @dst_pitch: destination buffer pitch
 * @vaddr: XRGB8888 source buffer
 * @fb: DRM framebuffer
 * @clip: Clip rectangle area to copy
 *
 * Drivers can use this function for RGB888 devices that don&apos;t natively
 * support XRGB8888.
 *
 * This function applies clipping on dst, i.e. the destination is a
 * full (iomem) framebuffer but only the clip rect content is copied over.
 */</doc>
