<dec f='linux-5.3.1/include/linux/sched/sysctl.h' l='23' type='unsigned int'/>
<def f='linux-5.3.1/kernel/sched/fair.c' l='40' type='unsigned int'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='176' macro='1' u='w' c='update_sysctl'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='683' u='r' c='__sched_period'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='3893' u='r' c='place_entity'/>
<doc f='linux-5.3.1/kernel/sched/fair.c' l='27'>/*
 * Targeted preemption latency for CPU-bound tasks:
 *
 * NOTE: this latency value is not the same as the concept of
 * &apos;timeslice length&apos; - timeslices in CFS are of variable length
 * and have no persistent notion like in traditional, time-slice
 * based scheduling concepts.
 *
 * (to see the precise effective timeslice length of your workload,
 *  run vmstat and monitor the context-switches (cs) field)
 *
 * (default: 6ms * (1 + ilog(ncpus)), units: nanoseconds)
 */</doc>
