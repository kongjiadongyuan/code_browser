<dec f='linux-5.3.1/include/drm/drm_writeback.h' l='140' type='int drm_writeback_connector_init(struct drm_device * dev, struct drm_writeback_connector * wb_connector, const struct drm_connector_funcs * con_funcs, const struct drm_encoder_helper_funcs * enc_helper_funcs, const u32 * formats, int n_formats)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='174' ll='241' type='int drm_writeback_connector_init(struct drm_device * dev, struct drm_writeback_connector * wb_connector, const struct drm_connector_funcs * con_funcs, const struct drm_encoder_helper_funcs * enc_helper_funcs, const u32 * formats, int n_formats)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='242' type='int drm_writeback_connector_init(struct drm_device * , struct drm_writeback_connector * , const struct drm_connector_funcs * , const struct drm_encoder_helper_funcs * , const u32 * , int )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='242' c='drm_writeback_connector_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='242' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='153'>/**
 * drm_writeback_connector_init - Initialize a writeback connector and its properties
 * @dev: DRM device
 * @wb_connector: Writeback connector to initialize
 * @con_funcs: Connector funcs vtable
 * @enc_helper_funcs: Encoder helper funcs vtable to be used by the internal encoder
 * @formats: Array of supported pixel formats for the writeback engine
 * @n_formats: Length of the formats array
 *
 * This function creates the writeback-connector-specific properties if they
 * have not been already created, initializes the connector as
 * type DRM_MODE_CONNECTOR_WRITEBACK, and correctly initializes the property
 * values. It will also create an internal encoder associated with the
 * drm_writeback_connector and set it to use the @enc_helper_funcs vtable for
 * the encoder helper.
 *
 * Drivers should always use this function instead of drm_connector_init() to
 * set up writeback connectors.
 *
 * Returns: 0 on success, or a negative error code
 */</doc>
