<def f='linux-5.3.1/fs/ext4/extents_status.h' l='117' ll='120'/>
<size>32</size>
<doc f='linux-5.3.1/fs/ext4/extents_status.h' l='81'>/*
 * Pending cluster reservations for bigalloc file systems
 *
 * A cluster with a pending reservation is a logical cluster shared by at
 * least one extent in the extents status tree with delayed and unwritten
 * status and at least one other written or unwritten extent.  The
 * reservation is said to be pending because a cluster reservation would
 * have to be taken in the event all blocks in the cluster shared with
 * written or unwritten extents were deleted while the delayed and
 * unwritten blocks remained.
 *
 * The set of pending cluster reservations is an auxiliary data structure
 * used with the extents status tree to implement reserved cluster/block
 * accounting for bigalloc file systems.  The set is kept in memory and
 * records all pending cluster reservations.
 *
 * Its primary function is to avoid the need to read extents from the
 * disk when invalidating pages as a result of a truncate, punch hole, or
 * collapse range operation.  Page invalidation requires a decrease in the
 * reserved cluster count if it results in the removal of all delayed
 * and unwritten extents (blocks) from a cluster that is not shared with a
 * written or unwritten extent, and no decrease otherwise.  Determining
 * whether the cluster is shared can be done by searching for a pending
 * reservation on it.
 *
 * Secondarily, it provides a potentially faster method for determining
 * whether the reserved cluster count should be increased when a physical
 * cluster is deallocated as a result of a truncate, punch hole, or
 * collapse range operation.  The necessary information is also present
 * in the extents status tree, but might be more rapidly accessed in
 * the pending reservation set in many cases due to smaller size.
 *
 * The pending cluster reservation set is implemented as a red-black tree
 * with the goal of minimizing per page search time overhead.
 */</doc>
<mbr r='pending_reservation::rb_node' o='0' t='struct rb_node'/>
<mbr r='pending_reservation::lclu' o='192' t='ext4_lblk_t'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1401' c='ext4_init_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1427' c='__get_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1432' c='__get_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1438' c='__get_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1438' c='__get_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1438' c='__get_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1465' c='__insert_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1473' c='__insert_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1473' c='__insert_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1473' c='__insert_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1511' c='__remove_pending'/>
<use f='linux-5.3.1/fs/ext4/extents_status.c' l='1801' c='ext4_es_remove_blks'/>
<size>32</size>
