<dec f='linux-5.3.1/include/linux/inet.h' l='56' type='int inet_pton_with_scope(struct net * net, unsigned short af, const char * src, const char * port, struct __kernel_sockaddr_storage * addr)'/>
<def f='linux-5.3.1/net/core/utils.c' l='369' ll='399' type='int inet_pton_with_scope(struct net * net, __kernel_sa_family_t af, const char * src, const char * port, struct __kernel_sockaddr_storage * addr)'/>
<dec f='linux-5.3.1/net/core/utils.c' l='400' type='int inet_pton_with_scope(struct net * , unsigned short , const char * , const char * , struct __kernel_sockaddr_storage * )'/>
<use f='linux-5.3.1/net/core/utils.c' l='400' c='inet_pton_with_scope'/>
<use f='linux-5.3.1/net/core/utils.c' l='400' u='a'/>
<doc f='linux-5.3.1/net/core/utils.c' l='359'>/**
 * inet_pton_with_scope - convert an IPv4/IPv6 and port to socket address
 * @net: net namespace (used for scope handling)
 * @af: address family, AF_INET, AF_INET6 or AF_UNSPEC for either
 * @src: the start of the address string
 * @port: the start of the port string (or NULL for none)
 * @addr: output socket address
 *
 * Return zero on success, return errno when any error occurs.
 */</doc>
