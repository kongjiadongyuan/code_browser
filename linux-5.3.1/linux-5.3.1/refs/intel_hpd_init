<dec f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.h' l='22' type='void intel_hpd_init(struct drm_i915_private * dev_priv)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='4333' u='c' c='intel_finish_reset'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display_power.c' l='1054' u='c' c='vlv_display_power_well_init'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='536' ll='558' type='void intel_hpd_init(struct drm_i915_private * dev_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='522'>/**
 * intel_hpd_init - initializes and enables hpd support
 * @dev_priv: i915 device instance
 *
 * This function enables the hotplug support. It requires that interrupts have
 * already been enabled with intel_irq_init_hw(). From this point on hotplug and
 * poll request can run concurrently to other code, so locking rules must be
 * obeyed.
 *
 * This is a separate step from interrupt enabling to simplify the locking rules
 * in the driver load and resume code.
 *
 * Also see: intel_hpd_poll_init(), which enables connector polling
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='744' u='c' c='i915_load_modeset_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='2284' u='c' c='i915_drm_resume'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='3064' u='c' c='intel_runtime_resume'/>
