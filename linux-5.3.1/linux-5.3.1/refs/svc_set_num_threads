<dec f='linux-5.3.1/include/linux/sunrpc/svc.h' l='505' type='int svc_set_num_threads(struct svc_serv * , struct svc_pool * , int )'/>
<def f='linux-5.3.1/net/sunrpc/svc.c' l='779' ll='796' type='int svc_set_num_threads(struct svc_serv * serv, struct svc_pool * pool, int nrservs)'/>
<dec f='linux-5.3.1/net/sunrpc/svc.c' l='797' type='int svc_set_num_threads(struct svc_serv * , struct svc_pool * , int )'/>
<use f='linux-5.3.1/net/sunrpc/svc.c' l='797' c='svc_set_num_threads'/>
<use f='linux-5.3.1/net/sunrpc/svc.c' l='797' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/svc.c' l='765'>/*
 * Create or destroy enough new threads to make the number
 * of threads the given number.  If `pool&apos; is non-NULL, applies
 * only to threads in that pool, otherwise round-robins between
 * all pools.  Caller must ensure that mutual exclusion between this and
 * server startup or shutdown.
 *
 * Destroying threads relies on the service threads filling in
 * rqstp-&gt;rq_task, which only the nfs ones do.  Assumes the serv
 * has been created using svc_create_pooled().
 *
 * Based on code that used to be in nfsd_svc() but tweaked
 * to be pool-aware.
 */</doc>
