<dec f='linux-5.3.1/include/sound/hdaudio.h' l='133' type='int snd_hdac_read_parm_uncached(struct hdac_device * codec, hda_nid_t nid, int parm)'/>
<def f='linux-5.3.1/sound/hda/hdac_device.c' l='307' ll='316' type='int snd_hdac_read_parm_uncached(struct hdac_device * codec, hda_nid_t nid, int parm)'/>
<dec f='linux-5.3.1/sound/hda/hdac_device.c' l='317' type='int snd_hdac_read_parm_uncached(struct hdac_device * , hda_nid_t , int )'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='317' c='snd_hdac_read_parm_uncached'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='317' u='a'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='356' u='c' c='snd_hdac_get_sub_nodes'/>
<doc f='linux-5.3.1/sound/hda/hdac_device.c' l='298'>/**
 * snd_hdac_read_parm_uncached - read a codec parameter without caching
 * @codec: the codec object
 * @nid: NID to read a parameter
 * @parm: parameter to read
 *
 * Returns -1 for error.  If you need to distinguish the error more
 * strictly, use snd_hdac_read() directly.
 */</doc>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='309' u='c' c='snd_hda_get_num_devices'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='426' u='c' c='read_widget_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_amp_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_pcm_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_pcm_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_pin_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_vol_knob'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_power_state'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_proc_caps'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_gpio'/>
<use f='linux-5.3.1/sound/pci/hda/hda_proc.c' l='23' u='c' c='print_codec_info'/>
