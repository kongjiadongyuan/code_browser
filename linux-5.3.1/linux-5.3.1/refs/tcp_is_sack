<def f='linux-5.3.1/include/net/tcp.h' l='1127' ll='1130' type='int tcp_is_sack(const struct tcp_sock * tp)'/>
<use f='linux-5.3.1/include/net/tcp.h' l='1134' u='c' c='tcp_is_reno'/>
<doc f='linux-5.3.1/include/net/tcp.h' l='1120'>/* These functions determine how the current flow behaves in respect of SACK
 * handling. SACK is negotiated with the peer, and therefore it can vary
 * between different flows.
 *
 * tcp_is_sack - SACK enabled
 * tcp_is_reno - No SACK
 */</doc>
<use f='linux-5.3.1/net/ipv4/tcp.c' l='3230' u='c' c='tcp_get_info'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='2191' u='c' c='tcp_mark_head_lost'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='2220' u='c' c='tcp_mark_head_lost'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='2249' u='c' c='tcp_update_scoreboard'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='2440' u='c' c='tcp_try_undo_loss'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3126' u='c' c='tcp_clean_rtx_queue'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3245' u='c' c='tcp_clean_rtx_queue'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3631' u='c' c='tcp_ack'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4153' u='c' c='tcp_fin'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4186' u='c' c='tcp_dsack_set'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4232' u='c' c='tcp_send_dupack'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4522' u='c' c='tcp_data_queue_ofo'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='4619' u='c' c='tcp_data_queue_ofo'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='5206' u='c' c='__tcp_ack_snd_check'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='5423' u='c' c='tcp_validate_incoming'/>
<use f='linux-5.3.1/net/ipv4/tcp_output.c' l='2482' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-5.3.1/net/ipv4/tcp_timer.c' l='489' u='c' c='tcp_retransmit_timer'/>
<use f='linux-5.3.1/net/ipv4/tcp_timer.c' l='497' u='c' c='tcp_retransmit_timer'/>
