<dec f='linux-5.3.1/include/scsi/scsi_transport_spi.h' l='140' type='void spi_dv_device(struct scsi_device * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='392' u='c' c='child_iter'/>
<def f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='993' ll='1051' type='void spi_dv_device(struct scsi_device * sdev)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='1052' type='void spi_dv_device(struct scsi_device * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='1052' c='spi_dv_device'/>
<use f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='1052' u='a'/>
<use f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='1067' u='c' c='spi_dv_device_work_wrapper'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_transport_spi.c' l='984'>/**	spi_dv_device - Do Domain Validation on the device
 *	@sdev:		scsi device to validate
 *
 *	Performs the domain validation on the given device in the
 *	current execution thread.  Since DV operations may sleep,
 *	the current thread must have user context.  Also no SCSI
 *	related locks that would deadlock I/O issued by the DV may
 *	be held.
 */</doc>
