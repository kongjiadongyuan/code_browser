<dec f='linux-5.3.1/include/linux/genalloc.h' l='162' type='void * gen_pool_dma_zalloc(struct gen_pool * pool, size_t size, dma_addr_t * dma)'/>
<def f='linux-5.3.1/lib/genalloc.c' l='417' ll='420' type='void * gen_pool_dma_zalloc(struct gen_pool * pool, size_t size, dma_addr_t * dma)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='421' type='void * gen_pool_dma_zalloc(struct gen_pool * , size_t , dma_addr_t * )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='421' c='gen_pool_dma_zalloc'/>
<use f='linux-5.3.1/lib/genalloc.c' l='421' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='403'>/**
 * gen_pool_dma_zalloc - allocate special zeroed memory from the pool for
 * DMA usage
 * @pool: pool to allocate from
 * @size: number of bytes to allocate from the pool
 * @dma: dma-view physical address return value.  Use %NULL if unneeded.
 *
 * Allocate the requested number of zeroed bytes from the specified pool.
 * Uses the pool allocation function (with first-fit algorithm by default).
 * Can not be used in NMI handler on architectures without
 * NMI-safe cmpxchg implementation.
 *
 * Return: virtual address of the allocated zeroed memory, or %NULL on failure
 */</doc>
