<dec f='linux-5.3.1/include/net/cfg80211.h' l='6777' type='void cfg80211_cac_event(struct net_device * netdev, const struct cfg80211_chan_def * chandef, enum nl80211_radar_event event, gfp_t gfp)'/>
<doc f='linux-5.3.1/include/net/cfg80211.h' l='6766'>/**
 * cfg80211_cac_event - Channel availability check (CAC) event
 * @netdev: network device
 * @chandef: chandef for the current channel
 * @event: type of event
 * @gfp: context flags
 *
 * This function is called when a Channel availability check (CAC) is finished
 * or aborted. This must be called to notify the completion of a CAC process,
 * also by full-MAC drivers.
 */</doc>
<use f='linux-5.3.1/net/mac80211/cfg.c' l='1182' u='c' c='ieee80211_stop_ap'/>
<use f='linux-5.3.1/net/mac80211/iface.c' l='906' u='c' c='ieee80211_do_stop'/>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='1825' u='c' c='ieee80211_dfs_cac_timer_work'/>
<use f='linux-5.3.1/net/mac80211/util.c' l='3257' u='c' c='ieee80211_dfs_cac_cancel'/>
<def f='linux-5.3.1/net/wireless/mlme.c' l='868' ll='908' type='void cfg80211_cac_event(struct net_device * netdev, const struct cfg80211_chan_def * chandef, enum nl80211_radar_event event, gfp_t gfp)'/>
<dec f='linux-5.3.1/net/wireless/mlme.c' l='909' type='void cfg80211_cac_event(struct net_device * , const struct cfg80211_chan_def * , enum nl80211_radar_event , gfp_t )'/>
<use f='linux-5.3.1/net/wireless/mlme.c' l='909' c='cfg80211_cac_event'/>
<use f='linux-5.3.1/net/wireless/mlme.c' l='909' u='a'/>
