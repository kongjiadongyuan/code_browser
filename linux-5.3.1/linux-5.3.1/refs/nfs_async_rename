<dec f='linux-5.3.1/fs/nfs/internal.h' l='555' type='struct rpc_task * nfs_async_rename(struct inode * old_dir, struct inode * new_dir, struct dentry * old_dentry, struct dentry * new_dentry, void (*)(struct rpc_task *, struct nfs_renamedata *) complete)'/>
<doc f='linux-5.3.1/fs/nfs/internal.h' l='553'>/* unlink.c */</doc>
<use f='linux-5.3.1/fs/nfs/dir.c' l='2083' u='c' c='nfs_rename'/>
<def f='linux-5.3.1/fs/nfs/unlink.c' l='332' ll='384' type='struct rpc_task * nfs_async_rename(struct inode * old_dir, struct inode * new_dir, struct dentry * old_dentry, struct dentry * new_dentry, void (*)(struct rpc_task *, struct nfs_renamedata *) complete)'/>
<use f='linux-5.3.1/fs/nfs/unlink.c' l='485' u='c' c='nfs_sillyrename'/>
<doc f='linux-5.3.1/fs/nfs/unlink.c' l='322'>/**
 * nfs_async_rename - perform an asynchronous rename operation
 * @old_dir: directory that currently holds the dentry to be renamed
 * @new_dir: target directory for the rename
 * @old_dentry: original dentry to be renamed
 * @new_dentry: dentry to which the old_dentry should be renamed
 * @complete: Function to run on successful completion
 *
 * It&apos;s expected that valid references to the dentries and inodes are held
 */</doc>
