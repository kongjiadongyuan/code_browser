<dec f='linux-5.3.1/include/linux/blk-mq.h' l='317' type='void blk_mq_quiesce_queue(struct request_queue * q)'/>
<def f='linux-5.3.1/block/blk-mq.c' l='233' ll='249' type='void blk_mq_quiesce_queue(struct request_queue * q)'/>
<dec f='linux-5.3.1/block/blk-mq.c' l='250' type='void blk_mq_quiesce_queue(struct request_queue * )'/>
<use f='linux-5.3.1/block/blk-mq.c' l='250' c='blk_mq_quiesce_queue'/>
<use f='linux-5.3.1/block/blk-mq.c' l='250' u='a'/>
<use f='linux-5.3.1/block/blk-mq.c' l='3139' u='c' c='blk_mq_update_nr_requests'/>
<doc f='linux-5.3.1/block/blk-mq.c' l='224'>/**
 * blk_mq_quiesce_queue() - wait until all ongoing dispatches have finished
 * @q: request queue.
 *
 * Note: this function does not prevent that the struct request end_io()
 * callback function is invoked. Once this function is returned, we make
 * sure no dispatch can happen until the queue is unquiesced via
 * blk_mq_unquiesce_queue().
 */</doc>
<use f='linux-5.3.1/block/blk-sysfs.c' l='482' u='c' c='queue_wb_lat_store'/>
<use f='linux-5.3.1/block/elevator.c' l='644' u='c' c='elevator_switch'/>
<use f='linux-5.3.1/drivers/md/dm-rq.c' l='76' u='c' c='dm_stop_queue'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='2650' u='c' c='scsi_internal_device_block'/>
