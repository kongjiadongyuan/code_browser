<dec f='linux-5.3.1/include/linux/semaphore.h' l='42' type='int down_timeout(struct semaphore * sem, long jiffies)'/>
<use f='linux-5.3.1/drivers/acpi/osl.c' l='1242' u='c' c='acpi_os_wait_semaphore'/>
<def f='linux-5.3.1/kernel/locking/semaphore.c' l='155' ll='168' type='int down_timeout(struct semaphore * sem, long timeout)'/>
<dec f='linux-5.3.1/kernel/locking/semaphore.c' l='169' type='int down_timeout(struct semaphore * , long )'/>
<use f='linux-5.3.1/kernel/locking/semaphore.c' l='169' c='down_timeout'/>
<use f='linux-5.3.1/kernel/locking/semaphore.c' l='169' u='a'/>
<doc f='linux-5.3.1/kernel/locking/semaphore.c' l='145'>/**
 * down_timeout - acquire the semaphore within a specified time
 * @sem: the semaphore to be acquired
 * @timeout: how long to wait before failing
 *
 * Attempts to acquire the semaphore.  If no more tasks are allowed to
 * acquire the semaphore, calling this function will put the task to sleep.
 * If the semaphore is not released within the specified number of jiffies,
 * this function returns -ETIME.  It returns 0 if the semaphore was acquired.
 */</doc>
