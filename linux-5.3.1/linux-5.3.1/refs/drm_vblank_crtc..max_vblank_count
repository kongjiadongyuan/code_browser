<dec f='linux-5.3.1/include/drm/drm_vblank.h' l='150' type='u32'/>
<offset>832</offset>
<doc f='linux-5.3.1/include/drm/drm_vblank.h' l='131'>/**
	 * @max_vblank_count:
	 *
	 * Maximum value of the vblank registers for this crtc. This value +1
	 * will result in a wrap-around of the vblank register. It is used
	 * by the vblank core to handle wrap-arounds.
	 *
	 * If set to zero the vblank core will try to guess the elapsed vblanks
	 * between times when the vblank interrupt is disabled through
	 * high-precision timestamps. That approach is suffering from small
	 * races and imprecision over longer time periods, hence exposing a
	 * hardware vblank counter is always recommended.
	 *
	 * This is the runtime configurable per-crtc maximum set through
	 * drm_crtc_set_max_vblank_count(). If this is used the driver
	 * must leave the device wide &amp;drm_device.max_vblank_count at zero.
	 *
	 * If non-zero, &amp;drm_crtc_funcs.get_vblank_counter must be set.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='118' u='r' c='drm_max_vblank_count'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='1252' u='w' c='drm_crtc_set_max_vblank_count'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='13567' u='r' c='intel_crtc_get_vblank_counter'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='947' u='r' c='i915_get_vblank_counter'/>
