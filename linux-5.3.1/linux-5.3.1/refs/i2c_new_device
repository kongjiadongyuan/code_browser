<dec f='linux-5.3.1/include/linux/i2c.h' l='443' type='struct i2c_client * i2c_new_device(struct i2c_adapter * adap, const struct i2c_board_info * info)'/>
<doc f='linux-5.3.1/include/linux/i2c.h' l='438'>/* Add-on boards should register/unregister their devices; e.g. a board
 * with integrated I2C, a config eeprom, sensors, and a codec that&apos;s
 * used in conjunction with the primary hardware.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_encoder_slave.c' l='64' u='c' c='drm_i2c_encoder_init'/>
<use f='linux-5.3.1/drivers/i2c/busses/i2c-i801.c' l='1138' u='c' c='dmi_check_onboard_device'/>
<use f='linux-5.3.1/drivers/i2c/busses/i2c-i801.c' l='1292' u='c' c='register_dell_lis3lv02d_i2c_device'/>
<use f='linux-5.3.1/drivers/i2c/busses/i2c-i801.c' l='1308' u='c' c='i801_probe_optional_slaves'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-acpi.c' l='227' u='c' c='i2c_acpi_register_device'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-acpi.c' l='471' u='c' c='i2c_acpi_new_device'/>
<def f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='817' ll='824' type='struct i2c_client * i2c_new_device(struct i2c_adapter * adap, const struct i2c_board_info * info)'/>
<dec f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='825' type='struct i2c_client * i2c_new_device(struct i2c_adapter * , const struct i2c_board_info * )'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='825' c='i2c_new_device'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='825' u='a'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='1200' u='c' c='i2c_scan_static_board_info'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='2214' u='c' c='i2c_detect_address'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='2313' u='c' c='i2c_new_probed_device'/>
<doc f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='803'>/**
 * i2c_new_device - instantiate an i2c device
 * @adap: the adapter managing the device
 * @info: describes one I2C device; bus_num is ignored
 * Context: can sleep
 *
 * This deprecated function has the same functionality as
 * @i2c_new_client_device, it just returns NULL instead of an ERR_PTR in case of
 * an error for compatibility with current I2C API. It will be removed once all
 * users are converted.
 *
 * This returns the new i2c client, which may be saved for later use with
 * i2c_unregister_device(); or NULL to indicate an error.
 */</doc>
<use f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='696' u='c' c='i2c_setup_smbus_alert'/>
