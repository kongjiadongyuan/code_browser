<dec f='linux-5.3.1/include/linux/connector.h' l='122' type='int cn_netlink_send(struct cn_msg * msg, u32 portid, u32 group, gfp_t gfp_mask)'/>
<use f='linux-5.3.1/drivers/connector/cn_proc.c' l='57' u='c' c='send_msg'/>
<doc f='linux-5.3.1/include/linux/connector.h' l='101'>/**
 * cn_netlink_send_mult - Sends message to the specified groups.
 *
 * @msg:	message header(with attached data).
 * @portid:	destination port.
 *		If non-zero the message will be sent to the given port,
 *		which should be set to the original sender.
 * @group:	destination group.
 * 		If @portid and @group is zero, then appropriate group will
 *		be searched through all registered connector users, and
 *		message will be delivered to the group which was created
 *		for user with the same ID as in @msg.
 *		If @group is not zero, then message will be delivered
 *		to the specified group.
 * @gfp_mask:	GFP mask.
 *
 * It can be safely called from softirq context, but may silently
 * fail under strong memory pressure.
 *
 * If there are no listeners for given group %-ESRCH can be returned.
 */</doc>
<def f='linux-5.3.1/drivers/connector/connector.c' l='121' ll='125' type='int cn_netlink_send(struct cn_msg * msg, u32 portid, u32 __group, gfp_t gfp_mask)'/>
<dec f='linux-5.3.1/drivers/connector/connector.c' l='126' type='int cn_netlink_send(struct cn_msg * , u32 , u32 , gfp_t )'/>
<use f='linux-5.3.1/drivers/connector/connector.c' l='126' c='cn_netlink_send'/>
<use f='linux-5.3.1/drivers/connector/connector.c' l='126' u='a'/>
<doc f='linux-5.3.1/drivers/connector/connector.c' l='120'>/* same as cn_netlink_send_mult except msg-&gt;len is used for len */</doc>
