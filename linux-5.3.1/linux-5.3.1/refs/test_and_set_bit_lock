<def f='linux-5.3.1/include/asm-generic/bitops-instrumented.h' l='170' ll='174' type='bool test_and_set_bit_lock(long nr, volatile unsigned long * addr)'/>
<use f='linux-5.3.1/include/linux/bit_spinlock.h' l='27' u='c' c='bit_spin_lock'/>
<use f='linux-5.3.1/include/linux/bit_spinlock.h' l='45' u='c' c='bit_spin_trylock'/>
<use f='linux-5.3.1/include/linux/pagemap.h' l='460' u='c' c='trylock_page'/>
<doc f='linux-5.3.1/include/asm-generic/bitops-instrumented.h' l='161'>/**
 * test_and_set_bit_lock - Set a bit and return its old value, for lock
 * @nr: Bit to set
 * @addr: Address to count from
 *
 * This operation is atomic and provides acquire barrier semantics if
 * the returned value is 0.
 * It can be used to implement bit locks.
 */</doc>
<use f='linux-5.3.1/include/linux/buffer_head.h' l='359' u='c' c='trylock_buffer'/>
<use f='linux-5.3.1/drivers/rtc/dev.c' l='27' u='c' c='rtc_dev_open'/>
<use f='linux-5.3.1/fs/ext4/resize.c' l='50' u='c' c='ext4_resize_begin'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='128' u='c' c='__sbitmap_get_word'/>
<use f='linux-5.3.1/mm/filemap.c' l='1169' u='c' c='wait_on_page_bit_common'/>
