<dec f='linux-5.3.1/include/drm/drm_crtc.h' l='845' type='u32 (*)(struct drm_crtc *)'/>
<offset>1280</offset>
<doc f='linux-5.3.1/include/drm/drm_crtc.h' l='821'>/**
	 * @get_vblank_counter:
	 *
	 * Driver callback for fetching a raw hardware vblank counter for the
	 * CRTC. It&apos;s meant to be used by new drivers as the replacement of
	 * &amp;drm_driver.get_vblank_counter hook.
	 *
	 * This callback is optional. If a device doesn&apos;t have a hardware
	 * counter, the driver can simply leave the hook as NULL. The DRM core
	 * will account for missed vblank events while interrupts where disabled
	 * based on system timestamps.
	 *
	 * Wraparound handling and loss of events due to modesetting is dealt
	 * with in the DRM core code, as long as drivers call
	 * drm_crtc_vblank_off() and drm_crtc_vblank_on() when disabling or
	 * enabling a CRTC.
	 *
	 * See also &amp;drm_device.vblank_disable_immediate and
	 * &amp;drm_device.max_vblank_count.
	 *
	 * Returns:
	 *
	 * Raw vblank counter value.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='139' u='r' c='__get_vblank_counter'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_vblank.c' l='140' u='r' c='__get_vblank_counter'/>
