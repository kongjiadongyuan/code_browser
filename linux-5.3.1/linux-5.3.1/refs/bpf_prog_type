<def f='linux-5.3.1/include/uapi/linux/bpf.h' l='147' ll='174'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='432'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='753' c='bpf_prog_get_type_dev'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='853' c='bpf_prog_get_type_path'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='881' c='bpf_prog_get_type'/>
<use f='linux-5.3.1/include/linux/bpf.h' l='886' c='bpf_prog_get_ok'/>
<use f='linux-5.3.1/include/linux/bpf-cgroup.h' l='343' c='cgroup_bpf_prog_attach'/>
<use f='linux-5.3.1/include/linux/bpf-cgroup.h' l='350' c='cgroup_bpf_prog_detach'/>
<doc f='linux-5.3.1/include/uapi/linux/bpf.h' l='139'>/* Note that tracing related programs such as
 * BPF_PROG_TYPE_{KPROBE,TRACEPOINT,PERF_EVENT,RAW_TRACEPOINT}
 * are not subject to a stable API since kernel internal data
 * structures can change from release to release and may
 * therefore break existing tracing BPF programs. Tracing BPF
 * programs correspond to /a/ specific kernel which is to be
 * analyzed, and not /a/ specific kernel /and/ all future ones.
 */</doc>
<use f='linux-5.3.1/include/linux/filter.h' l='532'/>
