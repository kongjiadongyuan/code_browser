<dec f='linux-5.3.1/fs/proc/internal.h' l='168' type='bool proc_fill_cache(struct file * , struct dir_context * , const char * , unsigned int , instantiate_t * , struct task_struct * , const void * )'/>
<def f='linux-5.3.1/fs/proc/base.c' l='1882' ll='1916' type='bool proc_fill_cache(struct file * file, struct dir_context * ctx, const char * name, unsigned int len, instantiate_t * instantiate, struct task_struct * task, const void * ptr)'/>
<use f='linux-5.3.1/fs/proc/base.c' l='2237' u='c' c='proc_map_files_readdir'/>
<use f='linux-5.3.1/fs/proc/base.c' l='2520' u='c' c='proc_pident_readdir'/>
<use f='linux-5.3.1/fs/proc/base.c' l='3349' u='c' c='proc_pid_readdir'/>
<use f='linux-5.3.1/fs/proc/base.c' l='3675' u='c' c='proc_task_readdir'/>
<doc f='linux-5.3.1/fs/proc/base.c' l='1870'>/*
 * Fill a directory entry.
 *
 * If possible create the dcache entry and derive our inode number and
 * file type from dcache entry.
 *
 * Since all of the proc inode numbers are dynamically generated, the inode
 * numbers do not exist until the inode is cache.  This means creating the
 * the dcache entry in readdir is necessary to keep the inode numbers
 * reported by readdir in sync with the inode numbers reported
 * by stat.
 */</doc>
<use f='linux-5.3.1/fs/proc/fd.c' l='261' u='c' c='proc_readfd_common'/>
<use f='linux-5.3.1/fs/proc/namespaces.c' l='126' u='c' c='proc_ns_dir_readdir'/>
