<dec f='linux-5.3.1/include/linux/vmalloc.h' l='86' type='void * vmalloc_node(unsigned long size, int node)'/>
<use f='linux-5.3.1/crypto/scompress.c' l='93' u='c' c='crypto_scomp_alloc_scratches'/>
<use f='linux-5.3.1/crypto/scompress.c' l='97' u='c' c='crypto_scomp_alloc_scratches'/>
<def f='linux-5.3.1/mm/vmalloc.c' l='2638' ll='2642' type='void * vmalloc_node(unsigned long size, int node)'/>
<dec f='linux-5.3.1/mm/vmalloc.c' l='2643' type='void * vmalloc_node(unsigned long , int )'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2643' c='vmalloc_node'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2643' u='a'/>
<doc f='linux-5.3.1/mm/vmalloc.c' l='2625'>/**
 * vmalloc_node - allocate memory on a specific node
 * @size:	  allocation size
 * @node:	  numa node
 *
 * Allocate enough pages to cover @size from the page level
 * allocator and map them into contiguous kernel virtual space.
 *
 * For tight control over page level allocator and protection flags
 * use __vmalloc() instead.
 *
 * Return: pointer to the allocated memory or %NULL on error
 */</doc>
