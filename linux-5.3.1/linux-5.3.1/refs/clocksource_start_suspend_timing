<dec f='linux-5.3.1/include/linux/clocksource.h' l='198' type='void clocksource_start_suspend_timing(struct clocksource * cs, u64 start_cycles)'/>
<def f='linux-5.3.1/kernel/time/clocksource.c' l='518' ll='540' type='void clocksource_start_suspend_timing(struct clocksource * cs, u64 start_cycles)'/>
<doc f='linux-5.3.1/kernel/time/clocksource.c' l='505'>/**
 * clocksource_start_suspend_timing - Start measuring the suspend timing
 * @cs:			current clocksource from timekeeping
 * @start_cycles:	current cycles from timekeeping
 *
 * This function will save the start cycle values of suspend timer to calculate
 * the suspend time when resuming system.
 *
 * This function is called late in the suspend process from timekeeping_suspend(),
 * that means processes are freezed, non-boot cpus and interrupts are disabled
 * now. It is therefore possible to start the suspend timer without taking the
 * clocksource mutex.
 */</doc>
<use f='linux-5.3.1/kernel/time/timekeeping.c' l='1769' u='c' c='timekeeping_suspend'/>
