<dec f='linux-5.3.1/include/crypto/aead.h' l='320' type='int crypto_aead_encrypt(struct aead_request * req)'/>
<def f='linux-5.3.1/crypto/aead.c' l='87' ll='101' type='int crypto_aead_encrypt(struct aead_request * req)'/>
<dec f='linux-5.3.1/crypto/aead.c' l='102' type='int crypto_aead_encrypt(struct aead_request * )'/>
<use f='linux-5.3.1/crypto/aead.c' l='102' c='crypto_aead_encrypt'/>
<use f='linux-5.3.1/crypto/aead.c' l='102' u='a'/>
<doc f='linux-5.3.1/include/crypto/aead.h' l='301'>/**
 * crypto_aead_encrypt() - encrypt plaintext
 * @req: reference to the aead_request handle that holds all information
 *	 needed to perform the cipher operation
 *
 * Encrypt plaintext data using the aead_request handle. That data structure
 * and how it is filled with data is discussed with the aead_request_*
 * functions.
 *
 * IMPORTANT NOTE The encryption operation creates the authentication data /
 *		  tag. That data is concatenated with the created ciphertext.
 *		  The ciphertext memory size is therefore the given number of
 *		  block cipher blocks + the size defined by the
 *		  crypto_aead_setauthsize invocation. The caller must ensure
 *		  that sufficient memory is available for the ciphertext and
 *		  the authentication tag.
 *
 * Return: 0 if the cipher operation was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux-5.3.1/crypto/ccm.c' l='693' u='c' c='crypto_rfc4309_encrypt'/>
<use f='linux-5.3.1/crypto/echainiv.c' l='82' u='c' c='echainiv_encrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='826' u='c' c='crypto_rfc4106_encrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='1027' u='c' c='crypto_rfc4543_crypt'/>
<use f='linux-5.3.1/crypto/seqiv.c' l='105' u='c' c='seqiv_aead_encrypt'/>
<use f='linux-5.3.1/net/ipv6/esp6.c' l='400' u='c' c='esp6_output_tail'/>
<use f='linux-5.3.1/net/mac80211/aead_api.c' l='43' u='c' c='aead_encrypt'/>
<use f='linux-5.3.1/net/mac80211/aes_gmac.c' l='50' u='c' c='ieee80211_aes_gmac'/>
