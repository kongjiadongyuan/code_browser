<dec f='linux-5.3.1/include/linux/mm.h' l='2336' type='void set_mm_exe_file(struct mm_struct * mm, struct file * new_exe_file)'/>
<use f='linux-5.3.1/fs/exec.c' l='1274' u='c' c='flush_old_exec'/>
<use f='linux-5.3.1/kernel/fork.c' l='1066' u='c' c='__mmput'/>
<def f='linux-5.3.1/kernel/fork.c' l='1118' ll='1134' type='void set_mm_exe_file(struct mm_struct * mm, struct file * new_exe_file)'/>
<doc f='linux-5.3.1/kernel/fork.c' l='1107'>/**
 * set_mm_exe_file - change a reference to the mm&apos;s executable file
 *
 * This changes mm&apos;s executable file (shown as symlink /proc/[pid]/exe).
 *
 * Main users are mmput() and sys_execve(). Callers prevent concurrent
 * invocations: in mmput() nobody alive left, in execve task is single
 * threaded. sys_prctl(PR_SET_MM_MAP/EXE_FILE) also needs to set the
 * mm-&gt;exe_file, but does so without using set_mm_exe_file() in order
 * to do avoid the need for any locks.
 */</doc>
