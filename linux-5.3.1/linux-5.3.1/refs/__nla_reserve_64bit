<dec f='linux-5.3.1/include/net/netlink.h' l='448' type='struct nlattr * __nla_reserve_64bit(struct sk_buff * skb, int attrtype, int attrlen, int padattr)'/>
<def f='linux-5.3.1/lib/nlattr.c' l='664' ll='671' type='struct nlattr * __nla_reserve_64bit(struct sk_buff * skb, int attrtype, int attrlen, int padattr)'/>
<dec f='linux-5.3.1/lib/nlattr.c' l='672' type='struct nlattr * __nla_reserve_64bit(struct sk_buff * , int , int , int )'/>
<use f='linux-5.3.1/lib/nlattr.c' l='672' c='__nla_reserve_64bit'/>
<use f='linux-5.3.1/lib/nlattr.c' l='672' u='a'/>
<use f='linux-5.3.1/lib/nlattr.c' l='737' u='c' c='nla_reserve_64bit'/>
<use f='linux-5.3.1/lib/nlattr.c' l='796' u='c' c='__nla_put_64bit'/>
<doc f='linux-5.3.1/lib/nlattr.c' l='650'>/**
 * __nla_reserve_64bit - reserve room for attribute on the skb and align it
 * @skb: socket buffer to reserve room on
 * @attrtype: attribute type
 * @attrlen: length of attribute payload
 * @padattr: attribute type for the padding
 *
 * Adds a netlink attribute header to a socket buffer and reserves
 * room for the payload but does not copy it. It also ensure that this
 * attribute will have a 64-bit aligned nla_data() area.
 *
 * The caller is responsible to ensure that the skb provides enough
 * tailroom for the attribute header and payload.
 */</doc>
