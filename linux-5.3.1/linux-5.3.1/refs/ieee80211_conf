<def f='linux-5.3.1/include/net/mac80211.h' l='1496' ll='1508'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='2459'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='6009' c='conf_is_ht20'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='6015' c='conf_is_ht40_minus'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='6022' c='conf_is_ht40_plus'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='6029' c='conf_is_ht40'/>
<use f='linux-5.3.1/include/net/mac80211.h' l='6035' c='conf_is_ht'/>
<size>56</size>
<doc f='linux-5.3.1/include/net/mac80211.h' l='1462'>/**
 * struct ieee80211_conf - configuration of the device
 *
 * This struct indicates how the driver shall configure the hardware.
 *
 * @flags: configuration flags defined above
 *
 * @listen_interval: listen interval in units of beacon interval
 * @ps_dtim_period: The DTIM period of the AP we&apos;re connected to, for use
 *	in power saving. Power saving will not be enabled until a beacon
 *	has been received and the DTIM period is known.
 * @dynamic_ps_timeout: The dynamic powersave timeout (in ms), see the
 *	powersave documentation below. This variable is valid only when
 *	the CONF_PS flag is set.
 *
 * @power_level: requested transmit power (in dBm), backward compatibility
 *	value only that is set to the minimum of all interfaces
 *
 * @chandef: the channel definition to tune to
 * @radar_enabled: whether radar detection is enabled
 *
 * @long_frame_max_tx_count: Maximum number of transmissions for a &quot;long&quot; frame
 *	(a frame not RTS protected), called &quot;dot11LongRetryLimit&quot; in 802.11,
 *	but actually means the number of transmissions not the number of retries
 * @short_frame_max_tx_count: Maximum number of transmissions for a &quot;short&quot;
 *	frame, called &quot;dot11ShortRetryLimit&quot; in 802.11, but actually means the
 *	number of transmissions not the number of retries
 *
 * @smps_mode: spatial multiplexing powersave mode; note that
 *	%IEEE80211_SMPS_STATIC is used when the device is not
 *	configured for an HT channel.
 *	Note that this is only valid if channel contexts are not used,
 *	otherwise each channel context has the number of chains listed.
 */</doc>
<mbr r='ieee80211_conf::flags' o='0' t='u32'/>
<mbr r='ieee80211_conf::power_level' o='32' t='int'/>
<mbr r='ieee80211_conf::dynamic_ps_timeout' o='64' t='int'/>
<mbr r='ieee80211_conf::listen_interval' o='96' t='u16'/>
<mbr r='ieee80211_conf::ps_dtim_period' o='112' t='u8'/>
<mbr r='ieee80211_conf::long_frame_max_tx_count' o='120' t='u8'/>
<mbr r='ieee80211_conf::short_frame_max_tx_count' o='128' t='u8'/>
<mbr r='ieee80211_conf::chandef' o='192' t='struct cfg80211_chan_def'/>
<mbr r='ieee80211_conf::radar_enabled' o='384' t='bool'/>
<mbr r='ieee80211_conf::smps_mode' o='416' t='enum ieee80211_smps_mode'/>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='1591' c='ieee80211_enable_ps'/>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='1619' c='ieee80211_change_ps'/>
<size>56</size>
