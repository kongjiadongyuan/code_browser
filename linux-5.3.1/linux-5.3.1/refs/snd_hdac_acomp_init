<dec f='linux-5.3.1/include/sound/hda_component.h' l='21' type='int snd_hdac_acomp_init(struct hdac_bus * bus, const struct drm_audio_component_audio_ops * aops, int (*)(struct device *, int, void *) match_master, size_t extra_size)'/>
<def f='linux-5.3.1/sound/hda/hdac_component.c' l='280' ll='315' type='int snd_hdac_acomp_init(struct hdac_bus * bus, const struct drm_audio_component_audio_ops * aops, int (*)(struct device *, int, void *) match_master, size_t extra_size)'/>
<dec f='linux-5.3.1/sound/hda/hdac_component.c' l='316' type='int snd_hdac_acomp_init(struct hdac_bus * , const struct drm_audio_component_audio_ops * , int (*)(struct device *, int, void *) , size_t )'/>
<use f='linux-5.3.1/sound/hda/hdac_component.c' l='316' c='snd_hdac_acomp_init'/>
<use f='linux-5.3.1/sound/hda/hdac_component.c' l='316' u='a'/>
<doc f='linux-5.3.1/sound/hda/hdac_component.c' l='262'>/**
 * snd_hdac_acomp_init - Initialize audio component
 * @bus: HDA core bus
 * @match_master: match function for finding components
 * @extra_size: Extra bytes to allocate
 *
 * This function is supposed to be used only by a HD-audio controller
 * driver that needs the interaction with graphics driver.
 *
 * This function initializes and sets up the audio component to communicate
 * with graphics driver.
 *
 * Unlike snd_hdac_i915_init(), this function doesn&apos;t synchronize with the
 * binding with the DRM component.  Each caller needs to sync via master_bind
 * audio_ops.
 *
 * Returns zero for success or a negative error code.
 */</doc>
<use f='linux-5.3.1/sound/hda/hdac_i915.c' l='130' u='c' c='snd_hdac_i915_init'/>
