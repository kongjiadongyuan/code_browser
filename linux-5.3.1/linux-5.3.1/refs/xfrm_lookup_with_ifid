<dec f='linux-5.3.1/include/net/dst.h' l='497' type='struct dst_entry * xfrm_lookup_with_ifid(struct net * net, struct dst_entry * dst_orig, const struct flowi * fl, const struct sock * sk, int flags, u32 if_id)'/>
<def f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3017' ll='3162' type='struct dst_entry * xfrm_lookup_with_ifid(struct net * net, struct dst_entry * dst_orig, const struct flowi * fl, const struct sock * sk, int flags, u32 if_id)'/>
<dec f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3163' type='struct dst_entry * xfrm_lookup_with_ifid(struct net * , struct dst_entry * , const struct flowi * , const struct sock * , int , u32 )'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3163' c='xfrm_lookup_with_ifid'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3163' u='a'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3174' u='c' c='xfrm_lookup'/>
<doc f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='3009'>/* Finds/creates a bundle for given flow and if_id
 *
 * At the moment we eat a raw IP route. Mostly to speed up lookups
 * on interfaces with disabled IPsec.
 *
 * xfrm_lookup uses an if_id of 0 by default, and is provided for
 * compatibility
 */</doc>
