<dec f='linux-5.3.1/include/drm/drm_property.h' l='261' type='struct drm_property * drm_property_create_object(struct drm_device * dev, u32 flags, const char * name, uint32_t type)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_config.c' l='280' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_config.c' l='298' u='c' c='drm_mode_create_standard_properties'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='332' ll='350' type='struct drm_property * drm_property_create_object(struct drm_device * dev, u32 flags, const char * name, uint32_t type)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='351' type='struct drm_property * drm_property_create_object(struct drm_device * , u32 , const char * , uint32_t )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='351' c='drm_property_create_object'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='351' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_property.c' l='314'>/**
 * drm_property_create_object - create a new object property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 * @type: object type from DRM_MODE_OBJECT_* defines
 *
 * This creates a new generic drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * Userspace is only allowed to set this to any property value of the given
 * @type. Only useful for atomic properties, which is enforced.
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_writeback.c' l='119' u='c' c='create_writeback_properties'/>
