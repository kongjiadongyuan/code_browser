<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.h' l='197' type='enum forcewake_domains intel_uncore_forcewake_for_reg(struct intel_uncore * uncore, i915_reg_t reg, unsigned int op)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_engine_cs.c' l='1020' u='c' c='read_subslice_reg'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_engine_cs.c' l='1022' u='c' c='read_subslice_reg'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_workarounds.c' l='937' u='c' c='wal_get_fw_for_rmw'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_guc.c' l='70' u='c' c='intel_guc_init_send_regs'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_pm.c' l='9894' u='c' c='intel_rc6_residency_ns'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1811' u='c' c='__intel_wait_for_register'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1944' ll='1962' type='enum forcewake_domains intel_uncore_forcewake_for_reg(struct intel_uncore * uncore, i915_reg_t reg, unsigned int op)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1930'>/**
 * intel_uncore_forcewake_for_reg - which forcewake domains are needed to access
 * 				    a register
 * @uncore: pointer to struct intel_uncore
 * @reg: register in question
 * @op: operation bitmask of FW_REG_READ and/or FW_REG_WRITE
 *
 * Returns a set of forcewake domains required to be taken with for example
 * intel_uncore_forcewake_get for the specified register to be accessible in the
 * specified mode (read, write or read/write) with raw mmio accessors.
 *
 * NOTE: On Gen6 and Gen7 write forcewake domain (FORCEWAKE_RENDER) requires the
 * callers to do FIFO management on their own or risk losing writes.
 */</doc>
