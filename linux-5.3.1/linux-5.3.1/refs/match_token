<def f='linux-5.3.1/include/linux/parser.h' l='13' ll='16'/>
<use f='linux-5.3.1/include/linux/parser.h' l='18'/>
<dec f='linux-5.3.1/include/linux/parser.h' l='29' type='int match_token(char * , const struct match_token * table, substring_t * args)'/>
<use f='linux-5.3.1/fs/autofs/inode.c' l='159' u='c' c='parse_options'/>
<size>16</size>
<doc f='linux-5.3.1/include/linux/parser.h' l='12'>/* associates an integer enumerator with a pattern string. */</doc>
<mbr r='match_token::token' o='0' t='int'/>
<mbr r='match_token::pattern' o='64' t='const char *'/>
<use f='linux-5.3.1/fs/debugfs/inode.c' l='88' u='c' c='debugfs_parse_options'/>
<use f='linux-5.3.1/fs/devpts/inode.c' l='275' u='c' c='parse_mount_options'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='2059' u='c' c='parse_options'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='2147' c='token2str'/>
<size>16</size>
<use f='linux-5.3.1/fs/fat/inode.c' l='1158' u='c' c='parse_options'/>
<use f='linux-5.3.1/fs/fat/inode.c' l='1161' u='c' c='parse_options'/>
<use f='linux-5.3.1/fs/fat/inode.c' l='1163' u='c' c='parse_options'/>
<use f='linux-5.3.1/fs/isofs/inode.c' l='370' u='c' c='parse_options'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='518' u='c' c='nfs_idmap_prepare_message'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1102' u='c' c='nfs_parse_security_flavors'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1154' u='c' c='nfs_parse_version_string'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1255' u='c' c='nfs_parse_mount_options'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1468' u='c' c='nfs_parse_mount_options'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1508' u='c' c='nfs_parse_mount_options'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1577' u='c' c='nfs_parse_mount_options'/>
<use f='linux-5.3.1/fs/nfs/super.c' l='1606' u='c' c='nfs_parse_mount_options'/>
<use f='linux-5.3.1/fs/ramfs/inode.c' l='201' u='c' c='ramfs_parse_options'/>
<use f='linux-5.3.1/fs/tracefs/inode.c' l='176' u='c' c='tracefs_parse_options'/>
<use f='linux-5.3.1/kernel/events/core.c' l='9241' u='c' c='perf_event_parse_addr_filter'/>
<def f='linux-5.3.1/lib/parser.c' l='105' ll='113' type='int match_token(char * s, const struct match_token * table, substring_t * args)'/>
<use f='linux-5.3.1/lib/parser.c' l='107' c='match_token'/>
<dec f='linux-5.3.1/lib/parser.c' l='114' type='int match_token(char * , const struct match_token * , substring_t * )'/>
<use f='linux-5.3.1/lib/parser.c' l='114' c='match_token'/>
<use f='linux-5.3.1/lib/parser.c' l='114' u='a'/>
<size>16</size>
<doc f='linux-5.3.1/lib/parser.c' l='91'>/**
 * match_token: - Find a token (and optional args) in a string
 * @s: the string to examine for token/argument pairs
 * @table: match_table_t describing the set of allowed option tokens and the
 * arguments that may be associated with them. Must be terminated with a
 * &amp;struct match_token whose pattern is set to the NULL pointer.
 * @args: array of %MAX_OPT_ARGS &amp;substring_t elements. Used to return match
 * locations.
 *
 * Description: Detects which if any of a set of token strings has been passed
 * to it. Tokens can include up to MAX_OPT_ARGS instances of basic c-style
 * format identifiers which will be taken into account when matching the
 * tokens, and whose locations will be returned in the @args array.
 */</doc>
<use f='linux-5.3.1/security/keys/keyctl_pkey.c' l='48' u='c' c='keyctl_pkey_params_parse'/>
