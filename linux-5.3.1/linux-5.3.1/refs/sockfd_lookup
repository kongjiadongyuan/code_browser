<dec f='linux-5.3.1/include/linux/net.h' l='241' type='struct socket * sockfd_lookup(int fd, int * err)'/>
<use f='linux-5.3.1/net/compat.c' l='372' u='c' c='__compat_sys_setsockopt'/>
<use f='linux-5.3.1/net/compat.c' l='405' u='c' c='__compat_sys_getsockopt'/>
<def f='linux-5.3.1/net/socket.c' l='461' ll='476' type='struct socket * sockfd_lookup(int fd, int * err)'/>
<dec f='linux-5.3.1/net/socket.c' l='477' type='struct socket * sockfd_lookup(int , int * )'/>
<use f='linux-5.3.1/net/socket.c' l='477' c='sockfd_lookup'/>
<use f='linux-5.3.1/net/socket.c' l='477' u='a'/>
<doc f='linux-5.3.1/net/socket.c' l='448'>/**
 *	sockfd_lookup - Go from a file number to its socket slot
 *	@fd: file handle
 *	@err: pointer to an error code return
 *
 *	The file handle passed in is locked and the socket it is bound
 *	to is returned. If an error occurs the err pointer is overwritten
 *	with a negative errno code and NULL is returned. The function checks
 *	for both invalid handles and passing a handle which is not a socket.
 *
 *	On a success the socket object pointer is returned.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/svcsock.c' l='1317' u='c' c='svc_alien_sock'/>
<use f='linux-5.3.1/net/sunrpc/svcsock.c' l='1346' u='c' c='svc_addsock'/>
