<dec f='linux-5.3.1/include/linux/vmalloc.h' l='146' type='struct vm_struct * remove_vm_area(const void * addr)'/>
<use f='linux-5.3.1/arch/x86/mm/ioremap.c' l='456' u='c' c='iounmap'/>
<def f='linux-5.3.1/mm/vmalloc.c' l='2140' ll='2162' type='struct vm_struct * remove_vm_area(const void * addr)'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2182' u='c' c='vm_remove_mappings'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='2415' u='c' c='__vmalloc_area_node'/>
<use f='linux-5.3.1/mm/vmalloc.c' l='3107' u='c' c='free_vm_area'/>
<doc f='linux-5.3.1/mm/vmalloc.c' l='2130'>/**
 * remove_vm_area - find and remove a continuous kernel virtual area
 * @addr:	    base address
 *
 * Search for the kernel VM area starting at @addr, and remove it.
 * This function returns the found VM area, but using it is NOT safe
 * on SMP machines, except for its size or flags.
 *
 * Return: pointer to the found area or %NULL on faulure
 */</doc>
