<def f='linux-5.3.1/kernel/locking/qspinlock.c' l='80' ll='85'/>
<use f='linux-5.3.1/kernel/locking/qspinlock.c' l='107'/>
<use f='linux-5.3.1/kernel/locking/qspinlock.c' l='135' c='grab_mcs_node'/>
<size>16</size>
<doc f='linux-5.3.1/kernel/locking/qspinlock.c' l='70'>/*
 * On 64-bit architectures, the mcs_spinlock structure will be 16 bytes in
 * size and four of them will fit nicely in one 64-byte cacheline. For
 * pvqspinlock, however, we need more space for extra data. To accommodate
 * that, we insert two more long words to pad it up to 32 bytes. IOW, only
 * two of them can fit in a cacheline in this case. That is OK as it is rare
 * to have more than 2 levels of slowpath nesting in actual use. We don&apos;t
 * want to penalize pvqspinlocks to optimize for a rare case in native
 * qspinlocks.
 */</doc>
