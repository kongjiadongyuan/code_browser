<dec f='linux-5.3.1/include/linux/percpu-refcount.h' l='120' type='void percpu_ref_reinit(struct percpu_ref * ref)'/>
<use f='linux-5.3.1/fs/io_uring.c' l='3505' u='c' c='__io_uring_register'/>
<def f='linux-5.3.1/lib/percpu-refcount.c' l='367' ll='372' type='void percpu_ref_reinit(struct percpu_ref * ref)'/>
<dec f='linux-5.3.1/lib/percpu-refcount.c' l='373' type='void percpu_ref_reinit(struct percpu_ref * )'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='373' c='percpu_ref_reinit'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='373' u='a'/>
<doc f='linux-5.3.1/lib/percpu-refcount.c' l='356'>/**
 * percpu_ref_reinit - re-initialize a percpu refcount
 * @ref: perpcu_ref to re-initialize
 *
 * Re-initialize @ref so that it&apos;s in the same state as when it finished
 * percpu_ref_init() ignoring %PERCPU_REF_INIT_DEAD.  @ref must have been
 * initialized successfully and reached 0 but not exited.
 *
 * Note that percpu_ref_tryget[_live]() are safe to perform on @ref while
 * this function is in progress.
 */</doc>
