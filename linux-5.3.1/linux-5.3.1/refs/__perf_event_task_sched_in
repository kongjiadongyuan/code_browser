<dec f='linux-5.3.1/include/linux/perf_event.h' l='880' type='void __perf_event_task_sched_in(struct task_struct * prev, struct task_struct * task)'/>
<use f='linux-5.3.1/include/linux/perf_event.h' l='1136' u='c' c='perf_event_task_sched_in'/>
<def f='linux-5.3.1/kernel/events/core.c' l='3473' ll='3502' type='void __perf_event_task_sched_in(struct task_struct * prev, struct task_struct * task)'/>
<doc f='linux-5.3.1/kernel/events/core.c' l='3462'>/*
 * Called from scheduler to add the events of the current task
 * with interrupts disabled.
 *
 * We restore the event value and then enable it.
 *
 * This does not protect us against NMI, but enable()
 * sets the enabled bit in the control field of event _before_
 * accessing the event control register. If a NMI hits, then it will
 * keep the event running.
 */</doc>
