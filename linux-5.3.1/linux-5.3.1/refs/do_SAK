<dec f='linux-5.3.1/include/linux/tty.h' l='502' type='void do_SAK(struct tty_struct * tty)'/>
<use f='linux-5.3.1/include/linux/serial_core.h' l='535' u='c' c='uart_handle_break'/>
<def f='linux-5.3.1/drivers/tty/tty_io.c' l='2946' ll='2951' type='void do_SAK(struct tty_struct * tty)'/>
<dec f='linux-5.3.1/drivers/tty/tty_io.c' l='2953' type='void do_SAK(struct tty_struct * )'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='2953' c='do_SAK'/>
<use f='linux-5.3.1/drivers/tty/tty_io.c' l='2953' u='a'/>
<doc f='linux-5.3.1/drivers/tty/tty_io.c' l='2940'>/*
 * The tq handling here is a little racy - tty-&gt;SAK_work may already be queued.
 * Fortunately we don&apos;t need to worry, because if -&gt;SAK_work is already queued,
 * the values which we write to it will be identical to the values which it
 * already has. --akpm
 */</doc>
