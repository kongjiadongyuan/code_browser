<dec f='linux-5.3.1/arch/x86/include/asm/setup.h' l='49' type='unsigned long __startup_64(unsigned long physaddr, struct boot_params * bp)'/>
<def f='linux-5.3.1/arch/x86/kernel/head64.c' l='113' ll='262' type='unsigned long __startup_64(unsigned long physaddr, struct boot_params * bp)'/>
<doc f='linux-5.3.1/arch/x86/kernel/head64.c' l='107'>/* Code in __startup_64() can be relocated during execution, but the compiler
 * doesn&apos;t have to generate PC-relative relocations when accessing globals from
 * that function. Clang actually does not generate them, which leads to
 * boot-time crashes. To work around this problem, every global pointer must
 * be adjusted using fixup_pointer().
 */</doc>
