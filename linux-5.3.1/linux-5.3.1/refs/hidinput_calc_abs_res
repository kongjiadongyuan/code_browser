<dec f='linux-5.3.1/include/linux/hid.h' l='884' type='__s32 hidinput_calc_abs_res(const struct hid_field * field, __u16 code)'/>
<def f='linux-5.3.1/drivers/hid/hid-input.c' l='199' ll='280' type='__s32 hidinput_calc_abs_res(const struct hid_field * field, __u16 code)'/>
<dec f='linux-5.3.1/drivers/hid/hid-input.c' l='281' type='__s32 hidinput_calc_abs_res(const struct hid_field * , __u16 )'/>
<use f='linux-5.3.1/drivers/hid/hid-input.c' l='281' c='hidinput_calc_abs_res'/>
<use f='linux-5.3.1/drivers/hid/hid-input.c' l='281' u='a'/>
<use f='linux-5.3.1/drivers/hid/hid-input.c' l='1185' u='c' c='hidinput_configure_usage'/>
<doc f='linux-5.3.1/drivers/hid/hid-input.c' l='184'>/**
 * hidinput_calc_abs_res - calculate an absolute axis resolution
 * @field: the HID report field to calculate resolution for
 * @code: axis code
 *
 * The formula is:
 *                         (logical_maximum - logical_minimum)
 * resolution = ----------------------------------------------------------
 *              (physical_maximum - physical_minimum) * 10 ^ unit_exponent
 *
 * as seen in the HID specification v1.11 6.2.2.7 Global Items.
 *
 * Only exponent 1 length units are processed. Centimeters and inches are
 * converted to millimeters. Degrees are converted to radians.
 */</doc>
