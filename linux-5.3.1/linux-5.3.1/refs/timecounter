<def f='linux-5.3.1/include/linux/timecounter.h' l='55' ll='61'/>
<use f='linux-5.3.1/include/linux/timecounter.h' l='84' c='timecounter_adjtime'/>
<use f='linux-5.3.1/include/linux/timecounter.h' l='99' c='timecounter_init'/>
<use f='linux-5.3.1/include/linux/timecounter.h' l='111' c='timecounter_read'/>
<use f='linux-5.3.1/include/linux/timecounter.h' l='127' c='timecounter_cyc2time'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/e1000.h' l='327'/>
<size>40</size>
<doc f='linux-5.3.1/include/linux/timecounter.h' l='37'>/**
 * struct timecounter - layer above a %struct cyclecounter which counts nanoseconds
 *	Contains the state needed by timecounter_read() to detect
 *	cycle counter wrap around. Initialize with
 *	timecounter_init(). Also used to convert cycle counts into the
 *	corresponding nanosecond counts with timecounter_cyc2time(). Users
 *	of this code are responsible for initializing the underlying
 *	cycle counter hardware, locking issues and reading the time
 *	more often than the cycle counter wraps around. The nanosecond
 *	counter will only wrap around after ~585 years.
 *
 * @cc:			the cycle counter used by this instance
 * @cycle_last:		most recent cycle counter value seen by
 *			timecounter_read()
 * @nsec:		continuously increasing count
 * @mask:		bit mask for maintaining the &apos;frac&apos; field
 * @frac:		accumulated fractional nanoseconds
 */</doc>
<mbr r='timecounter::cc' o='0' t='const struct cyclecounter *'/>
<mbr r='timecounter::cycle_last' o='64' t='u64'/>
<mbr r='timecounter::nsec' o='128' t='u64'/>
<mbr r='timecounter::mask' o='192' t='u64'/>
<mbr r='timecounter::frac' o='256' t='u64'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='8' c='timecounter_init'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='31' c='timecounter_read_delta'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='52' c='timecounter_read'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='79' c='timecounter_cyc2time'/>
<size>40</size>
<use f='linux-5.3.1/include/sound/hdaudio.h' l='511'/>
<size>40</size>
<use f='linux-5.3.1/sound/hda/hdac_stream.c' l='524' c='azx_timecounter_init'/>
<size>40</size>
