<dec f='linux-5.3.1/include/scsi/scsi_eh.h' l='15' type='void scsi_report_bus_reset(struct Scsi_Host * , int )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='806' u='c' c='scsi_try_host_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='836' u='c' c='scsi_try_bus_reset'/>
<def f='linux-5.3.1/drivers/scsi/scsi_error.c' l='2269' ll='2277' type='void scsi_report_bus_reset(struct Scsi_Host * shost, int channel)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_error.c' l='2278' type='void scsi_report_bus_reset(struct Scsi_Host * , int )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='2278' c='scsi_report_bus_reset'/>
<use f='linux-5.3.1/drivers/scsi/scsi_error.c' l='2278' u='a'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_error.c' l='2248'>/*
 * Function:    scsi_report_bus_reset()
 *
 * Purpose:     Utility function used by low-level drivers to report that
 *		they have observed a bus reset on the bus being handled.
 *
 * Arguments:   shost       - Host in question
 *		channel     - channel on which reset was observed.
 *
 * Returns:     Nothing
 *
 * Lock status: Host lock must be held.
 *
 * Notes:       This only needs to be called if the reset is one which
 *		originates from an unknown location.  Resets originated
 *		by the mid-level itself don&apos;t need to call this, but there
 *		should be no harm.
 *
 *		The main purpose of this is to make sure that a CHECK_CONDITION
 *		is properly treated.
 */</doc>
<use f='linux-5.3.1/drivers/usb/storage/scsiglue.c' l='515' u='c' c='usb_stor_report_bus_reset'/>
