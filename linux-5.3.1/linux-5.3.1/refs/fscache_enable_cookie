<def f='linux-5.3.1/include/linux/fscache.h' l='831' ll='841' type='void fscache_enable_cookie(struct fscache_cookie * cookie, const void * aux_data, loff_t object_size, bool (*)(void *) can_enable, void * data)'/>
<doc f='linux-5.3.1/include/linux/fscache.h' l='815'>/**
 * fscache_enable_cookie - Reenable a cookie
 * @cookie: The cookie representing the cache object
 * @aux_data: The updated auxiliary data for the cookie (may be NULL)
 * @object_size: Current size of object
 * @can_enable: A function to permit enablement once lock is held
 * @data: Data for can_enable()
 *
 * Reenable a previously disabled cookie, allowing it to accept further alloc,
 * read, write, invalidate, update or acquire operations.  An attempt will be
 * made to immediately reattach the cookie to a backing object.  If @aux_data
 * is set, the auxiliary data attached to the cookie will be updated.
 *
 * The can_enable() function is called (if not NULL) once the enablement lock
 * is held to rule on whether enablement is still permitted to go ahead.
 */</doc>
