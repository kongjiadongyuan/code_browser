<def f='linux-5.3.1/include/net/cfg80211.h' l='2040' ll='2049'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5537' c='cfg80211_inform_bss_frame_data'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5548' c='cfg80211_inform_bss_width_frame'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5563' c='cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5650' c='cfg80211_inform_bss_data'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5665' c='cfg80211_inform_bss_width'/>
<def f='linux-5.3.1/include/net/cfg80211.h' l='5676' ll='5693' type='struct cfg80211_bss * cfg80211_inform_bss(struct wiphy * wiphy, struct ieee80211_channel * rx_channel, enum cfg80211_bss_frame_type ftype, const u8 * bssid, u64 tsf, u16 capability, u16 beacon_interval, const u8 * ie, size_t ielen, s32 signal, gfp_t gfp)'/>
<use f='linux-5.3.1/include/net/cfg80211.h' l='5684' c='cfg80211_inform_bss'/>
<size>48</size>
<doc f='linux-5.3.1/include/net/cfg80211.h' l='2020'>/**
 * struct cfg80211_inform_bss - BSS inform data
 * @chan: channel the frame was received on
 * @scan_width: scan width that was used
 * @signal: signal strength value, according to the wiphy&apos;s
 *	signal type
 * @boottime_ns: timestamp (CLOCK_BOOTTIME) when the information was
 *	received; should match the time when the frame was actually
 *	received by the device (not just by the host, in case it was
 *	buffered on the device) and be accurate to about 10ms.
 *	If the frame isn&apos;t buffered, just passing the return value of
 *	ktime_get_boottime_ns() is likely appropriate.
 * @parent_tsf: the time at the start of reception of the first octet of the
 *	timestamp field of the frame. The time is the TSF of the BSS specified
 *	by %parent_bssid.
 * @parent_bssid: the BSS according to which %parent_tsf is set. This is set to
 *	the BSS that requested the scan in which the beacon/probe was received.
 * @chains: bitmask for filled values in @chain_signal.
 * @chain_signal: per-chain signal strength of last received BSS in dBm.
 */</doc>
<mbr r='cfg80211_inform_bss::chan' o='0' t='struct ieee80211_channel *'/>
<mbr r='cfg80211_inform_bss::scan_width' o='64' t='enum nl80211_bss_scan_width'/>
<mbr r='cfg80211_inform_bss::signal' o='96' t='s32'/>
<mbr r='cfg80211_inform_bss::boottime_ns' o='128' t='u64'/>
<mbr r='cfg80211_inform_bss::parent_tsf' o='192' t='u64'/>
<mbr r='cfg80211_inform_bss::parent_bssid' o='256' t='u8 [6]'/>
<mbr r='cfg80211_inform_bss::chains' o='304' t='u8'/>
<mbr r='cfg80211_inform_bss::chain_signal' o='312' t='s8 [4]'/>
<use f='linux-5.3.1/net/mac80211/ibss.c' l='233' c='__ieee80211_sta_join_ibss'/>
<size>48</size>
<use f='linux-5.3.1/net/mac80211/scan.c' l='146' c='ieee80211_bss_info_update'/>
<size>48</size>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='trace_cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='trace_cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='trace_cfg80211_inform_bss_frame_rcuidle'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='trace_cfg80211_inform_bss_frame_rcuidle'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='register_trace_cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='register_trace_prio_cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='unregister_trace_cfg80211_inform_bss_frame'/>
<use f='linux-5.3.1/net/wireless/trace.h' l='3211' c='check_trace_callback_type_cfg80211_inform_bss_frame'/>
<size>48</size>
<use f='linux-5.3.1/net/wireless/scan.c' l='1358' c='cfg80211_inform_single_bss_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1532' c='cfg80211_parse_mbssid_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1650' c='cfg80211_inform_bss_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1672' c='cfg80211_parse_mbssid_frame_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1777' c='cfg80211_inform_single_bss_frame_data'/>
<use f='linux-5.3.1/net/wireless/scan.c' l='1868' c='cfg80211_inform_bss_frame_data'/>
<size>48</size>
