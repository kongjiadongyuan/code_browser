<dec f='linux-5.3.1/include/linux/i2c.h' l='143' type='s32 i2c_smbus_read_byte_data(const struct i2c_client * client, u8 command)'/>
<use f='linux-5.3.1/drivers/base/regmap/regmap-i2c.c' l='25' u='c' c='regmap_smbus_byte_reg_read'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-acpi.c' l='609' u='c' c='i2c_acpi_space_handler'/>
<def f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='128' ll='137' type='s32 i2c_smbus_read_byte_data(const struct i2c_client * client, u8 command)'/>
<dec f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='138' type='s32 i2c_smbus_read_byte_data(const struct i2c_client * , u8 )'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='138' c='i2c_smbus_read_byte_data'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='138' u='a'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='657' u='c' c='i2c_smbus_read_i2c_block_data_or_emulated'/>
<doc f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='120'>/**
 * i2c_smbus_read_byte_data - SMBus &quot;read byte&quot; protocol
 * @client: Handle to slave device
 * @command: Byte interpreted by slave
 *
 * This executes the SMBus &quot;read byte&quot; protocol, returning negative errno
 * else a data byte received from the device.
 */</doc>
