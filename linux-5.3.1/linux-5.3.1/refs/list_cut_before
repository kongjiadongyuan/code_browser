<def f='linux-5.3.1/include/linux/list.h' l='385' ll='399' type='void list_cut_before(struct list_head * list, struct list_head * head, struct list_head * entry)'/>
<doc f='linux-5.3.1/include/linux/list.h' l='371'>/**
 * list_cut_before - cut a list into two, before given entry
 * @list: a new list to add all removed entries
 * @head: a list with entries
 * @entry: an entry within head, could be the head itself
 *
 * This helper moves the initial part of @head, up to but
 * excluding @entry, from @head to @list.  You should pass
 * in @entry an element you know is on @head.  @list should
 * be an empty list or a list you do not care about losing
 * its data.
 * If @entry == @head, all entries on @head are moved to
 * @list.
 */</doc>
<use f='linux-5.3.1/mm/compaction.c' l='1196' u='c' c='move_freelist_head'/>
<use f='linux-5.3.1/net/core/dev.c' l='5138' u='c' c='__netif_receive_skb_list'/>
