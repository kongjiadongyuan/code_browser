<dec f='linux-5.3.1/include/linux/net.h' l='240' type='struct file * sock_alloc_file(struct socket * sock, int flags, const char * dname)'/>
<def f='linux-5.3.1/net/socket.c' l='390' ll='408' type='struct file * sock_alloc_file(struct socket * sock, int flags, const char * dname)'/>
<dec f='linux-5.3.1/net/socket.c' l='409' type='struct file * sock_alloc_file(struct socket * , int , const char * )'/>
<use f='linux-5.3.1/net/socket.c' l='409' c='sock_alloc_file'/>
<use f='linux-5.3.1/net/socket.c' l='409' u='a'/>
<use f='linux-5.3.1/net/socket.c' l='420' u='c' c='sock_map_fd'/>
<use f='linux-5.3.1/net/socket.c' l='1593' u='c' c='__sys_socketpair'/>
<use f='linux-5.3.1/net/socket.c' l='1600' u='c' c='__sys_socketpair'/>
<use f='linux-5.3.1/net/socket.c' l='1743' u='c' c='__sys_accept4'/>
<doc f='linux-5.3.1/net/socket.c' l='378'>/**
 *	sock_alloc_file - Bind a &amp;socket to a &amp;file
 *	@sock: socket
 *	@flags: file status flags
 *	@dname: protocol name
 *
 *	Returns the &amp;file bound with @sock, implicitly storing it
 *	in sock-&gt;file. If dname is %NULL, sets to &quot;&quot;.
 *	On failure the return is a ERR pointer (see linux/err.h).
 *	This function uses GFP_KERNEL internally.
 */</doc>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='1913' u='c' c='xs_create_sock'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='1976' u='c' c='xs_local_setup_socket'/>
