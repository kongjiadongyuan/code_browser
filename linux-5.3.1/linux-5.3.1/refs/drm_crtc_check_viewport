<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc_internal.h' l='65' type='int drm_crtc_check_viewport(const struct drm_crtc * crtc, int x, int y, const struct drm_display_mode * mode, const struct drm_framebuffer * fb)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='492' ll='509' type='int drm_crtc_check_viewport(const struct drm_crtc * crtc, int x, int y, const struct drm_display_mode * mode, const struct drm_framebuffer * fb)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='510' type='int drm_crtc_check_viewport(const struct drm_crtc * , int , int , const struct drm_display_mode * , const struct drm_framebuffer * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='510' c='drm_crtc_check_viewport'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='510' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='640' u='c' c='drm_mode_setcrtc'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='483'>/**
 * drm_crtc_check_viewport - Checks that a framebuffer is big enough for the
 *     CRTC viewport
 * @crtc: CRTC that framebuffer will be displayed on
 * @x: x panning
 * @y: y panning
 * @mode: mode that framebuffer will be displayed under
 * @fb: framebuffer to check size of
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_plane.c' l='1150' u='c' c='drm_mode_page_flip_ioctl'/>
