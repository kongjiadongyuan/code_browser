<dec f='linux-5.3.1/include/linux/nfs_fs.h' l='481' type='ssize_t nfs_file_direct_read(struct kiocb * iocb, struct iov_iter * iter)'/>
<use f='linux-5.3.1/fs/nfs/direct.c' l='275' u='c' c='nfs_direct_IO'/>
<def f='linux-5.3.1/fs/nfs/direct.c' l='563' ll='626' type='ssize_t nfs_file_direct_read(struct kiocb * iocb, struct iov_iter * iter)'/>
<doc f='linux-5.3.1/fs/nfs/direct.c' l='544'>/**
 * nfs_file_direct_read - file direct read operation for NFS files
 * @iocb: target I/O control block
 * @iter: vector of user buffers into which to read data
 *
 * We use this function for direct reads instead of calling
 * generic_file_aio_read() in order to avoid gfar&apos;s check to see if
 * the request starts before the end of the file.  For that check
 * to work, we must generate a GETATTR before each direct read, and
 * even then there is a window between the GETATTR and the subsequent
 * READ where the file size could change.  Our preference is simply
 * to do all reads the application wants, and the server will take
 * care of managing the end of file boundary.
 *
 * This function also eliminates unnecessarily updating the file&apos;s
 * atime locally, as the NFS server sets the file&apos;s atime, and this
 * client must read the updated atime from the server back into its
 * cache.
 */</doc>
<use f='linux-5.3.1/fs/nfs/file.c' l='161' u='c' c='nfs_file_read'/>
