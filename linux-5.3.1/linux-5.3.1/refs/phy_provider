<def f='linux-5.3.1/include/linux/phy/phy.h' l='149' ll='156'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='462' c='__of_phy_provider_register'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='470' c='__devm_of_phy_provider_register'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='478' c='of_phy_provider_unregister'/>
<use f='linux-5.3.1/include/linux/phy/phy.h' l='483' c='devm_of_phy_provider_unregister'/>
<size>48</size>
<doc f='linux-5.3.1/include/linux/phy/phy.h' l='141'>/**
 * struct phy_provider - represents the phy provider
 * @dev: phy provider device
 * @children: can be used to override the default (dev-&gt;of_node) child node
 * @owner: the module owner having of_xlate
 * @list: to maintain a linked list of PHY providers
 * @of_xlate: function pointer to obtain phy instance from phy pointer
 */</doc>
<mbr r='phy_provider::dev' o='0' t='struct device *'/>
<mbr r='phy_provider::children' o='64' t='struct device_node *'/>
<mbr r='phy_provider::owner' o='128' t='struct module *'/>
<mbr r='phy_provider::list' o='192' t='struct list_head'/>
<mbr r='phy_provider::of_xlate' o='320' t='struct phy *(*)(struct device *, struct of_phandle_args *)'/>
