<dec f='linux-5.3.1/include/linux/sched/task.h' l='91' type='long _do_fork(struct kernel_clone_args * kargs)'/>
<use f='linux-5.3.1/arch/x86/ia32/sys_ia32.c' l='253' u='c' c='__do_compat_sys_x86_clone'/>
<def f='linux-5.3.1/kernel/fork.c' l='2344' ll='2408' type='long _do_fork(struct kernel_clone_args * args)'/>
<use f='linux-5.3.1/kernel/fork.c' l='2458' u='c' c='kernel_thread'/>
<use f='linux-5.3.1/kernel/fork.c' l='2469' u='c' c='__x64_sys_fork'/>
<use f='linux-5.3.1/kernel/fork.c' l='2485' u='c' c='__x64_sys_vfork'/>
<use f='linux-5.3.1/kernel/fork.c' l='2526' u='c' c='__do_sys_clone'/>
<use f='linux-5.3.1/kernel/fork.c' l='2625' u='c' c='__do_sys_clone3'/>
<doc f='linux-5.3.1/kernel/fork.c' l='2336'>/*
 *  Ok, this is the main fork-routine.
 *
 * It copies the process, and if successful kick-starts
 * it and waits for it to finish using the VM if required.
 *
 * args-&gt;exit_signal is expected to be checked for sanity by the caller.
 */</doc>
