<dec f='linux-5.3.1/include/linux/skbuff.h' l='4042' type='void * skb_ext_add(struct sk_buff * skb, enum skb_ext_id id)'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='6016' ll='6047' type='void * skb_ext_add(struct sk_buff * skb, enum skb_ext_id id)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='6048' type='void * skb_ext_add(struct sk_buff * , enum skb_ext_id )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='6048' c='skb_ext_add'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='6048' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='6002'>/**
 * skb_ext_add - allocate space for given extension, COW if needed
 * @skb: buffer
 * @id: extension to allocate space for
 *
 * Allocates enough space for the given extension.
 * If the extension is already present, a pointer to that extension
 * is returned.
 *
 * If the skb was cloned, COW applies and the returned memory can be
 * modified without changing the extension space of clones buffers.
 *
 * Returns pointer to the extension or NULL on allocation failure.
 */</doc>
<use f='linux-5.3.1/net/xfrm/xfrm_input.c' l='118' u='c' c='secpath_set'/>
