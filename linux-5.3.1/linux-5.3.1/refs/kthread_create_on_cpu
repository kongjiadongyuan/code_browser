<dec f='linux-5.3.1/include/linux/kthread.h' l='29' type='struct task_struct * kthread_create_on_cpu(int (*)(void *) threadfn, void * data, unsigned int cpu, const char * namefmt)'/>
<use f='linux-5.3.1/fs/io_uring.c' l='2746' u='c' c='io_sq_offload_start'/>
<def f='linux-5.3.1/kernel/kthread.c' l='447' ll='462' type='struct task_struct * kthread_create_on_cpu(int (*)(void *) threadfn, void * data, unsigned int cpu, const char * namefmt)'/>
<doc f='linux-5.3.1/kernel/kthread.c' l='436'>/**
 * kthread_create_on_cpu - Create a cpu bound kthread
 * @threadfn: the function to run until signal_pending(current).
 * @data: data ptr for @threadfn.
 * @cpu: The cpu on which the thread should be bound,
 * @namefmt: printf-style name for the thread. Format is restricted
 *	     to &quot;name.*%u&quot;. Code fills in cpu number.
 *
 * Description: This helper function creates and names a kernel thread
 * The thread will be woken and put into park mode.
 */</doc>
<use f='linux-5.3.1/kernel/smpboot.c' l='185' u='c' c='__smpboot_create_thread'/>
