<dec f='linux-5.3.1/include/scsi/scsi_cmnd.h' l='167' type='blk_status_t scsi_init_io(struct scsi_cmnd * cmd)'/>
<def f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1020' ll='1068' type='blk_status_t scsi_init_io(struct scsi_cmnd * cmd)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1069' type='blk_status_t scsi_init_io(struct scsi_cmnd * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1069' c='scsi_init_io'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1069' u='a'/>
<use f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1165' u='c' c='scsi_setup_scsi_cmnd'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_lib.c' l='1009'>/*
 * Function:    scsi_init_io()
 *
 * Purpose:     SCSI I/O initialize function.
 *
 * Arguments:   cmd   - Command descriptor we wish to initialize
 *
 * Returns:     BLK_STS_OK on success
 *		BLK_STS_RESOURCE if the failure is retryable
 *		BLK_STS_IOERR if the failure is fatal
 */</doc>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='855' u='c' c='sd_setup_unmap_cmnd'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='886' u='c' c='sd_setup_write_same16_cmnd'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='917' u='c' c='sd_setup_write_same10_cmnd'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='1058' u='c' c='sd_setup_write_same_cmnd'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='1175' u='c' c='sd_setup_read_write_cmnd'/>
<use f='linux-5.3.1/drivers/scsi/sr.c' l='395' u='c' c='sr_init_command'/>
