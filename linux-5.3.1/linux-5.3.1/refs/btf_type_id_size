<dec f='linux-5.3.1/include/linux/btf.h' l='43' type='const struct btf_type * btf_type_id_size(const struct btf * btf, u32 * type_id, u32 * ret_size)'/>
<doc f='linux-5.3.1/include/linux/btf.h' l='22'>/* Figure out the size of a type_id.  If type_id is a modifier
 * (e.g. const), it will be resolved to find out the type with size.
 *
 * For example:
 * In describing &quot;const void *&quot;,  type_id is &quot;const&quot; and &quot;const&quot;
 * refers to &quot;void *&quot;.  The return type will be &quot;void *&quot;.
 *
 * If type_id is a simple &quot;int&quot;, then return type will be &quot;int&quot;.
 *
 * @btf: struct btf object
 * @type_id: Find out the size of type_id. The type_id of the return
 *           type is set to *type_id.
 * @ret_size: It can be NULL.  If not NULL, the size of the return
 *            type is set to *ret_size.
 * Return: The btf_type (resolved to another type with size info if needed).
 *         NULL is returned if type_id itself does not have size info
 *         (e.g. void) or it cannot be resolved to another type that
 *         has size info.
 *         *type_id and *ret_size will not be changed in the
 *         NULL return case.
 */</doc>
