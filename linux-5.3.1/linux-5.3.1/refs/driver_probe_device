<dec f='linux-5.3.1/drivers/base/base.h' l='124' type='int driver_probe_device(struct device_driver * drv, struct device * dev)'/>
<def f='linux-5.3.1/drivers/base/dd.c' l='691' ll='717' type='int driver_probe_device(struct device_driver * drv, struct device * dev)'/>
<use f='linux-5.3.1/drivers/base/dd.c' l='816' u='c' c='__device_attach_driver'/>
<use f='linux-5.3.1/drivers/base/dd.c' l='983' u='c' c='device_driver_attach'/>
<use f='linux-5.3.1/drivers/base/dd.c' l='1005' u='c' c='__driver_attach_async_helper'/>
<doc f='linux-5.3.1/drivers/base/dd.c' l='678'>/**
 * driver_probe_device - attempt to bind device &amp; driver together
 * @drv: driver to bind a device to
 * @dev: device to try to bind to the driver
 *
 * This function returns -ENODEV if the device is not registered,
 * 1 if the device is bound successfully and 0 otherwise.
 *
 * This function must be called with @dev lock held.  When called for a
 * USB interface, @dev-&gt;parent lock must be held as well.
 *
 * If the device has a parent, runtime-resume the parent before driver probing.
 */</doc>
