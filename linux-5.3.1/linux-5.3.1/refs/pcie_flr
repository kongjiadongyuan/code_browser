<dec f='linux-5.3.1/include/linux/pci.h' l='1189' type='int pcie_flr(struct pci_dev * dev)'/>
<def f='linux-5.3.1/drivers/pci/pci.c' l='4501' ll='4519' type='int pcie_flr(struct pci_dev * dev)'/>
<dec f='linux-5.3.1/drivers/pci/pci.c' l='4520' type='int pcie_flr(struct pci_dev * )'/>
<use f='linux-5.3.1/drivers/pci/pci.c' l='4520' c='pcie_flr'/>
<use f='linux-5.3.1/drivers/pci/pci.c' l='4520' u='a'/>
<use f='linux-5.3.1/drivers/pci/pci.c' l='4866' u='c' c='__pci_reset_function_locked'/>
<doc f='linux-5.3.1/drivers/pci/pci.c' l='4493'>/**
 * pcie_flr - initiate a PCIe function level reset
 * @dev: device to reset
 *
 * Initiate a function level reset on @dev.  The caller should ensure the
 * device supports FLR before calling this function, e.g. by using the
 * pcie_has_flr() helper.
 */</doc>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='3607' u='c' c='reset_intel_82599_sfp_virtfn'/>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='3710' u='c' c='reset_chelsio_generic_dev'/>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='3802' u='c' c='nvme_disable_and_flr'/>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='3821' u='c' c='delay_250ms_after_flr'/>
