<def f='linux-5.3.1/include/linux/spinlock.h' l='429' ll='432' type='int spin_is_locked(spinlock_t * lock)'/>
<doc f='linux-5.3.1/include/linux/spinlock.h' l='411'>/**
 * spin_is_locked() - Check whether a spinlock is locked.
 * @lock: Pointer to the spinlock.
 *
 * This function is NOT required to provide any memory ordering
 * guarantees; it could be used for debugging purposes or, when
 * additional synchronization is needed, accompanied with other
 * constructs (memory barriers) enforcing the synchronization.
 *
 * Returns: 1 if @lock is locked, 0 otherwise.
 *
 * Note that the function only tells you that the spinlock is
 * seen to be locked, not that it is locked on your CPU.
 *
 * Further, on CONFIG_SMP=n builds with CONFIG_DEBUG_SPINLOCK=n,
 * the return value is always 0 (see include/linux/spinlock_up.h).
 * Therefore you should not rely heavily on the return value.
 */</doc>
<use f='linux-5.3.1/include/net/sch_generic.h' l='140' u='c' c='qdisc_is_running'/>
<use f='linux-5.3.1/include/net/sock.h' l='1589' u='c' c='sock_allow_reclassification'/>
