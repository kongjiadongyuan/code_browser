<dec f='linux-5.3.1/include/linux/phy.h' l='662' type='const struct phy_setting * phy_lookup_setting(int speed, int duplex, const unsigned long * mask, bool exact)'/>
<def f='linux-5.3.1/drivers/net/phy/phy-core.c' l='163' ll='192' type='const struct phy_setting * phy_lookup_setting(int speed, int duplex, const unsigned long * mask, bool exact)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-core.c' l='193' type='const struct phy_setting * phy_lookup_setting(int , int , const unsigned long * , bool )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='193' c='phy_lookup_setting'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='193' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-core.c' l='146'>/**
 * phy_lookup_setting - lookup a PHY setting
 * @speed: speed to match
 * @duplex: duplex to match
 * @mask: allowed link modes
 * @exact: an exact match is required
 *
 * Search the settings array for a setting that matches the speed and
 * duplex, and which is supported.
 *
 * If @exact is unset, either an exact match or %NULL for no match will
 * be returned.
 *
 * If @exact is set, an exact match, the fastest supported setting at
 * or below the specified speed, the slowest supported setting, or if
 * they all fail, %NULL will be returned.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='196' u='c' c='phy_find_valid'/>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='228' u='c' c='phy_check_valid'/>
