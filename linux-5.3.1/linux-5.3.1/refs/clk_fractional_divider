<def f='linux-5.3.1/include/linux/clk-provider.h' l='640' ll='654'/>
<size>72</size>
<doc f='linux-5.3.1/include/linux/clk-provider.h' l='618'>/**
 * struct clk_fractional_divider - adjustable fractional divider clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @reg:	register containing the divider
 * @mshift:	shift to the numerator bit field
 * @mwidth:	width of the numerator bit field
 * @nshift:	shift to the denominator bit field
 * @nwidth:	width of the denominator bit field
 * @lock:	register lock
 *
 * Clock with adjustable fractional divider affecting its output frequency.
 *
 * Flags:
 * CLK_FRAC_DIVIDER_ZERO_BASED - by default the numerator and denominator
 *	is the value read from the register. If CLK_FRAC_DIVIDER_ZERO_BASED
 *	is set then the numerator and denominator are both the value read
 *	plus one.
 * CLK_FRAC_DIVIDER_BIG_ENDIAN - By default little endian register accesses are
 *	used for the divider register.  Setting this flag makes the register
 *	accesses big endian.
 */</doc>
<mbr r='clk_fractional_divider::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_fractional_divider::reg' o='192' t='void *'/>
<mbr r='clk_fractional_divider::mshift' o='256' t='u8'/>
<mbr r='clk_fractional_divider::mwidth' o='264' t='u8'/>
<mbr r='clk_fractional_divider::mmask' o='288' t='u32'/>
<mbr r='clk_fractional_divider::nshift' o='320' t='u8'/>
<mbr r='clk_fractional_divider::nwidth' o='328' t='u8'/>
<mbr r='clk_fractional_divider::nmask' o='352' t='u32'/>
<mbr r='clk_fractional_divider::flags' o='384' t='u8'/>
<mbr r='clk_fractional_divider::approximation' o='448' t='void (*)(struct clk_hw *, unsigned long, unsigned long *, unsigned long *, unsigned long *)'/>
<mbr r='clk_fractional_divider::lock' o='512' t='spinlock_t *'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='17' c='clk_fd_readl'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='25' c='clk_fd_writel'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='36' c='clk_fd_recalc_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='36' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='36' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='36' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='75' c='clk_fd_general_approximation'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='75' macro='1' c='clk_fd_general_approximation'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='75' macro='1' c='clk_fd_general_approximation'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='75' macro='1' c='clk_fd_general_approximation'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='95' c='clk_fd_round_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='95' macro='1' c='clk_fd_round_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='95' macro='1' c='clk_fd_round_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='95' macro='1' c='clk_fd_round_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='116' c='clk_fd_set_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='116' macro='1' c='clk_fd_set_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='116' macro='1' c='clk_fd_set_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='116' macro='1' c='clk_fd_set_rate'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='160' c='clk_hw_register_fractional_divider'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='215' c='clk_hw_unregister_fractional_divider'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='217' macro='1' c='clk_hw_unregister_fractional_divider'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='217' macro='1' c='clk_hw_unregister_fractional_divider'/>
<use f='linux-5.3.1/drivers/clk/clk-fractional-divider.c' l='217' macro='1' c='clk_hw_unregister_fractional_divider'/>
<size>72</size>
