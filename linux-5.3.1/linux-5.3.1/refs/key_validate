<dec f='linux-5.3.1/include/linux/key.h' l='348' type='int key_validate(const struct key * key)'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/restrict.c' l='204' u='c' c='key_or_keyring_common'/>
<use f='linux-5.3.1/fs/nfs/nfs4idmap.c' l='325' u='c' c='nfs_idmap_get_key'/>
<use f='linux-5.3.1/net/dns_resolver/dns_query.c' l='140' u='c' c='dns_query'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='853' u='c' c='keyctl_read_key'/>
<def f='linux-5.3.1/security/keys/permission.c' l='85' ll='105' type='int key_validate(const struct key * key)'/>
<dec f='linux-5.3.1/security/keys/permission.c' l='106' type='int key_validate(const struct key * )'/>
<use f='linux-5.3.1/security/keys/permission.c' l='106' c='key_validate'/>
<use f='linux-5.3.1/security/keys/permission.c' l='106' u='a'/>
<doc f='linux-5.3.1/security/keys/permission.c' l='77'>/**
 * key_validate - Validate a key.
 * @key: The key to be validated.
 *
 * Check that a key is valid, returning 0 if the key is okay, -ENOKEY if the
 * key is invalidated, -EKEYREVOKED if the key&apos;s type has been removed or if
 * the key has been revoked or -EKEYEXPIRED if the key has expired.
 */</doc>
<use f='linux-5.3.1/security/keys/process_keys.c' l='559' u='c' c='search_process_keyrings_rcu'/>
<use f='linux-5.3.1/security/keys/process_keys.c' l='793' u='c' c='lookup_user_key'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='199' u='c' c='call_sbin_request_key'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='671' u='c' c='wait_for_key_construction'/>
