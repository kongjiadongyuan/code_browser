<dec f='linux-5.3.1/arch/x86/include/asm/text-patching.h' l='54' type='void text_poke_bp(void * addr, const void * opcode, size_t len, void * handler)'/>
<def f='linux-5.3.1/arch/x86/kernel/alternative.c' l='1101' ll='1117' type='void text_poke_bp(void * addr, const void * opcode, size_t len, void * handler)'/>
<doc f='linux-5.3.1/arch/x86/kernel/alternative.c' l='1090'>/**
 * text_poke_bp() -- update instructions on live kernel on SMP
 * @addr:	address to patch
 * @opcode:	opcode of new instruction
 * @len:	length to copy
 * @handler:	address to jump to when the temporary breakpoint is hit
 *
 * Update a single instruction with the vector in the stack, avoiding
 * dynamically allocated memory. This function should be used when it is
 * not possible to allocate memory.
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/jump_label.c' l='92' u='c' c='__jump_label_transform'/>
<use f='linux-5.3.1/arch/x86/kernel/kprobes/opt.c' l='440' u='c' c='arch_optimize_kprobes'/>
<use f='linux-5.3.1/arch/x86/kernel/kprobes/opt.c' l='455' u='c' c='arch_unoptimize_kprobe'/>
