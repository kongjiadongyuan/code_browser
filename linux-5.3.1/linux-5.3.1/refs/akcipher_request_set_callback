<def f='linux-5.3.1/include/crypto/akcipher.h' l='224' ll='232' type='void akcipher_request_set_callback(struct akcipher_request * req, u32 flgs, crypto_completion_t cmpl, void * data)'/>
<doc f='linux-5.3.1/include/crypto/akcipher.h' l='213'>/**
 * akcipher_request_set_callback() - Sets an asynchronous callback.
 *
 * Callback will be called when an asynchronous operation on a given
 * request is finished.
 *
 * @req:	request that the callback will be set for
 * @flgs:	specify for instance if the operation may backlog
 * @cmpl:	callback which will be called
 * @data:	private data used by the caller
 */</doc>
<use f='linux-5.3.1/crypto/asymmetric_keys/public_key.c' l='214' u='c' c='software_key_eds_op'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/public_key.c' l='306' u='c' c='public_key_verify_signature'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='262' u='c' c='pkcs1pad_encrypt'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='363' u='c' c='pkcs1pad_decrypt'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='421' u='c' c='pkcs1pad_sign'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='551' u='c' c='pkcs1pad_verify'/>
