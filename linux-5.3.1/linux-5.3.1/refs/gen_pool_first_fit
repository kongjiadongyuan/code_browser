<dec f='linux-5.3.1/include/linux/genalloc.h' l='183' type='unsigned long gen_pool_first_fit(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool, unsigned long start_addr)'/>
<use f='linux-5.3.1/lib/genalloc.c' l='160' u='r' c='gen_pool_create'/>
<use f='linux-5.3.1/lib/genalloc.c' l='625' u='r' c='gen_pool_set_algo'/>
<def f='linux-5.3.1/lib/genalloc.c' l='643' ll='648' type='unsigned long gen_pool_first_fit(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool, unsigned long start_addr)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='649' type='unsigned long gen_pool_first_fit(unsigned long * , unsigned long , unsigned long , unsigned int , void * , struct gen_pool * , unsigned long )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='649' c='gen_pool_first_fit'/>
<use f='linux-5.3.1/lib/genalloc.c' l='649' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='633'>/**
 * gen_pool_first_fit - find the first available region
 * of memory matching the size requirement (no alignment constraint)
 * @map: The address to base the search on
 * @size: The bitmap size in bits
 * @start: The bitnumber to start searching at
 * @nr: The number of zeroed bits we&apos;re looking for
 * @data: additional data - unused
 * @pool: pool to find the fit region memory from
 */</doc>
