<def f='linux-5.3.1/include/linux/dmaengine.h' l='1109' ll='1118' type='int dma_maxpq(struct dma_device * dma, enum dma_ctrl_flags flags)'/>
<doc f='linux-5.3.1/include/linux/dmaengine.h' l='1096'>/* dma_maxpq - reduce maxpq in the face of continued operations
 * @dma - dma device with PQ capability
 * @flags - to check if DMA_PREP_CONTINUE and DMA_PREP_PQ_DISABLE_P are set
 *
 * When an engine does not support native continuation we need 3 extra
 * source slots to reuse P and Q with the following coefficients:
 * 1/ {00} * P : remove P from Q&apos;, but use it as a source for P&apos;
 * 2/ {01} * Q : use Q to continue Q&apos; calculation
 * 3/ {00} * Q : subtract Q from P&apos; to cancel (2)
 *
 * In the case where P is disabled we only need 1 extra source:
 * 1/ {01} * Q : use Q to continue Q&apos; calculation
 */</doc>
