<dec f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_batch_pool.h' l='24' type='struct drm_i915_gem_object * i915_gem_batch_pool_get(struct i915_gem_batch_pool * pool, size_t size)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c' l='1210' u='c' c='__reloc_gpu_alloc'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c' l='2018' u='c' c='eb_parse'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_batch_pool.c' l='77' ll='140' type='struct drm_i915_gem_object * i915_gem_batch_pool_get(struct i915_gem_batch_pool * pool, size_t size)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_batch_pool.c' l='64'>/**
 * i915_gem_batch_pool_get() - allocate a buffer from the pool
 * @pool: the batch buffer pool
 * @size: the minimum desired size of the returned buffer
 *
 * Returns an inactive buffer from @pool with at least @size bytes,
 * with the pages pinned. The caller must i915_gem_object_unpin_pages()
 * on the returned object.
 *
 * Note: Callers must hold the struct_mutex
 *
 * Return: the buffer object or an error pointer
 */</doc>
