<dec f='linux-5.3.1/include/linux/pm_qos.h' l='156' type='int dev_pm_qos_add_notifier(struct device * dev, struct notifier_block * notifier, enum dev_pm_qos_req_type type)'/>
<def f='linux-5.3.1/drivers/base/power/qos.c' l='540' ll='576' type='int dev_pm_qos_add_notifier(struct device * dev, struct notifier_block * notifier, enum dev_pm_qos_req_type type)'/>
<dec f='linux-5.3.1/drivers/base/power/qos.c' l='577' type='int dev_pm_qos_add_notifier(struct device * , struct notifier_block * , enum dev_pm_qos_req_type )'/>
<use f='linux-5.3.1/drivers/base/power/qos.c' l='577' c='dev_pm_qos_add_notifier'/>
<use f='linux-5.3.1/drivers/base/power/qos.c' l='577' u='a'/>
<doc f='linux-5.3.1/drivers/base/power/qos.c' l='526'>/**
 * dev_pm_qos_add_notifier - sets notification entry for changes to target value
 * of per-device PM QoS constraints
 *
 * @dev: target device for the constraint
 * @notifier: notifier block managed by caller.
 * @type: request type.
 *
 * Will register the notifier into a notification chain that gets called
 * upon changes to the target value for the device.
 *
 * If the device&apos;s constraints object doesn&apos;t exist when this routine is called,
 * it will be created (or error code will be returned if that fails).
 */</doc>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='1208' u='c' c='cpufreq_policy_alloc'/>
<use f='linux-5.3.1/drivers/cpufreq/cpufreq.c' l='1216' u='c' c='cpufreq_policy_alloc'/>
