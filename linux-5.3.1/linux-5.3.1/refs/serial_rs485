<def f='linux-5.3.1/include/uapi/linux/serial.h' l='117' ll='133'/>
<use f='linux-5.3.1/include/linux/serial_core.h' l='134'/>
<use f='linux-5.3.1/include/linux/serial_core.h' l='253'/>
<use f='linux-5.3.1/include/linux/serial_core.h' l='546' c='uart_get_rs485_mode'/>
<size>32</size>
<doc f='linux-5.3.1/include/uapi/linux/serial.h' l='110'>/*
 * Serial interface for controlling RS485 settings on chips with suitable
 * support. Set with TIOCSRS485 and get with TIOCGRS485 if supported by your
 * platform. The set function returns the new state, with any unsupported bits
 * reverted appropriately.
 */</doc>
<mbr r='serial_rs485::flags' o='0' t='__u32'/>
<mbr r='serial_rs485::delay_rts_before_send' o='32' t='__u32'/>
<mbr r='serial_rs485::delay_rts_after_send' o='64' t='__u32'/>
<mbr r='serial_rs485::padding' o='96' t='__u32 [5]'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_exar.c' l='104'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_exar.c' l='277' c='generic_rs485_config'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_exar.c' l='305' c='iot2040_rs485_config'/>
<size>32</size>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pci.c' l='1452' c='pci_fintek_rs485_config'/>
<size>32</size>
<use f='linux-5.3.1/drivers/tty/serial/serial_core.c' l='1279' c='uart_get_rs485_config'/>
<use f='linux-5.3.1/drivers/tty/serial/serial_core.c' l='1282' c='uart_get_rs485_config'/>
<use f='linux-5.3.1/drivers/tty/serial/serial_core.c' l='1295' c='uart_set_rs485_config'/>
<use f='linux-5.3.1/drivers/tty/serial/serial_core.c' l='1297' c='uart_set_rs485_config'/>
<use f='linux-5.3.1/drivers/tty/serial/serial_core.c' l='3092' c='uart_get_rs485_mode'/>
<size>32</size>
