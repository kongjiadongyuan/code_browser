<dec f='linux-5.3.1/arch/x86/include/asm/mce.h' l='229' type='bool machine_check_poll(enum mcp_flags flags, mce_banks_t * b)'/>
<def f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='692' ll='795' type='bool machine_check_poll(enum mcp_flags flags, mce_banks_t * b)'/>
<dec f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='796' type='bool machine_check_poll(enum mcp_flags , mce_banks_t * )'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='796' c='machine_check_poll'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='796' u='a'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='1417' u='c' c='mce_timer_fn'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='1546' u='c' c='__mcheck_cpu_init_generic'/>
<doc f='linux-5.3.1/arch/x86/kernel/cpu/mce/core.c' l='677'>/*
 * Poll for corrected events or events that happened before reset.
 * Those are just logged through /dev/mcelog.
 *
 * This is executed in standard interrupt context.
 *
 * Note: spec recommends to panic for fatal unsignalled
 * errors here. However this would be quite problematic --
 * we would need to reimplement the Monarch handling and
 * it would mess up the exclusion between exception handler
 * and poll handler -- * so we skip this for now.
 * These cases should not happen anyways, or only when the CPU
 * is already totally * confused. In this case it&apos;s likely it will
 * not fully execute the machine check handler either.
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/intel.c' l='136' u='c' c='mce_intel_cmci_poll'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/intel.c' l='256' u='c' c='intel_threshold_interrupt'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mce/intel.c' l='348' u='c' c='cmci_recheck'/>
