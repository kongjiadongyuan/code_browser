<dec f='linux-5.3.1/include/drm/drm_atomic_uapi.h' l='42' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * state, const struct drm_display_mode * mode)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1367' u='c' c='__drm_atomic_helper_set_config'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='1385' u='c' c='__drm_atomic_helper_set_config'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='64' ll='98' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * state, const struct drm_display_mode * mode)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='99' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * , const struct drm_display_mode * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='99' c='drm_atomic_set_mode_for_crtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='99' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='53'>/**
 * drm_atomic_set_mode_for_crtc - set mode for CRTC
 * @state: the CRTC whose incoming state to update
 * @mode: kernel-internal mode to use for the CRTC, or NULL to disable
 *
 * Set a mode (originating from the kernel) on the desired CRTC state and update
 * the enable property.
 *
 * RETURNS:
 * Zero on success, error code on failure. Cannot return -EDEADLK.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='882' u='c' c='atomic_remove_fb'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='6935' u='c' c='intel_crtc_disable_noatomic'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='11027' u='c' c='intel_get_load_detect_pipe'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='16579' u='c' c='intel_modeset_readout_hw_state'/>
