<dec f='linux-5.3.1/include/linux/libata.h' l='1861' type='int ata_sff_prereset(struct ata_link * link, unsigned long deadline)'/>
<use f='linux-5.3.1/drivers/ata/ata_piix.c' l='544' u='c' c='piix_pata_prereset'/>
<use f='linux-5.3.1/drivers/ata/libata-sff.c' l='39'/>
<use f='linux-5.3.1/drivers/ata/libata-sff.c' l='39'/>
<def f='linux-5.3.1/drivers/ata/libata-sff.c' l='1721' ll='1746' type='int ata_sff_prereset(struct ata_link * link, unsigned long deadline)'/>
<dec f='linux-5.3.1/drivers/ata/libata-sff.c' l='1747' type='int ata_sff_prereset(struct ata_link * , unsigned long )'/>
<use f='linux-5.3.1/drivers/ata/libata-sff.c' l='1747' c='ata_sff_prereset'/>
<use f='linux-5.3.1/drivers/ata/libata-sff.c' l='1747' u='a'/>
<doc f='linux-5.3.1/drivers/ata/libata-sff.c' l='1706'>/**
 *	ata_sff_prereset - prepare SFF link for reset
 *	@link: SFF link to be reset
 *	@deadline: deadline jiffies for the operation
 *
 *	SFF link @link is about to be reset.  Initialize it.  It first
 *	calls ata_std_prereset() and wait for !BSY if the port is
 *	being softreset.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
<use f='linux-5.3.1/drivers/ata/pata_amd.c' l='145' u='c' c='amd_pre_reset'/>
<use f='linux-5.3.1/drivers/ata/pata_amd.c' l='343' u='c' c='nv_pre_reset'/>
<use f='linux-5.3.1/drivers/ata/pata_oldpiix.c' l='50' u='c' c='oldpiix_pre_reset'/>
