<dec f='linux-5.3.1/include/linux/llist.h' l='197' type='bool llist_add_batch(struct llist_node * new_first, struct llist_node * new_last, struct llist_head * head)'/>
<use f='linux-5.3.1/include/linux/llist.h' l='209' u='c' c='llist_add'/>
<def f='linux-5.3.1/lib/llist.c' l='26' ll='36' type='bool llist_add_batch(struct llist_node * new_first, struct llist_node * new_last, struct llist_head * head)'/>
<dec f='linux-5.3.1/lib/llist.c' l='37' type='bool llist_add_batch(struct llist_node * , struct llist_node * , struct llist_head * )'/>
<use f='linux-5.3.1/lib/llist.c' l='37' c='llist_add_batch'/>
<use f='linux-5.3.1/lib/llist.c' l='37' u='a'/>
<doc f='linux-5.3.1/lib/llist.c' l='18'>/**
 * llist_add_batch - add several linked entries in batch
 * @new_first:	first entry in batch to be added
 * @new_last:	last entry in batch to be added
 * @head:	the head for your lock-less list
 *
 * Return whether list is empty before adding.
 */</doc>
