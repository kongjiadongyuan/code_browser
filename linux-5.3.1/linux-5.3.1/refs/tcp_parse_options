<dec f='linux-5.3.1/include/net/tcp.h' l='412' type='void tcp_parse_options(const struct net * net, const struct sk_buff * skb, struct tcp_options_received * opt_rx, int estab, struct tcp_fastopen_cookie * foc)'/>
<use f='linux-5.3.1/net/ipv4/syncookies.c' l='316' u='c' c='cookie_v4_check'/>
<def f='linux-5.3.1/net/ipv4/tcp_input.c' l='3789' ll='3904' type='void tcp_parse_options(const struct net * net, const struct sk_buff * skb, struct tcp_options_received * opt_rx, int estab, struct tcp_fastopen_cookie * foc)'/>
<dec f='linux-5.3.1/net/ipv4/tcp_input.c' l='3905' type='void tcp_parse_options(const struct net * , const struct sk_buff * , struct tcp_options_received * , int , struct tcp_fastopen_cookie * )'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3905' c='tcp_parse_options'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3905' u='a'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='3945' u='c' c='tcp_fast_parse_options'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='5746' u='c' c='tcp_rcv_fastopen_synack'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='5827' u='c' c='tcp_rcv_synsent_state_process'/>
<use f='linux-5.3.1/net/ipv4/tcp_input.c' l='6510' u='c' c='tcp_conn_request'/>
<doc f='linux-5.3.1/net/ipv4/tcp_input.c' l='3785'>/* Look for tcp options. Normally only called on SYN and SYNACK packets.
 * But, this can also be called on packets in the established flow when
 * the fast version below fails.
 */</doc>
<use f='linux-5.3.1/net/ipv4/tcp_minisocks.c' l='101' u='c' c='tcp_timewait_state_process'/>
<use f='linux-5.3.1/net/ipv4/tcp_minisocks.c' l='575' u='c' c='tcp_check_req'/>
<use f='linux-5.3.1/net/ipv6/syncookies.c' l='160' u='c' c='cookie_v6_check'/>
