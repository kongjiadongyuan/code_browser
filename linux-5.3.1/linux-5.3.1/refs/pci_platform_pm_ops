<def f='linux-5.3.1/drivers/pci/pci.h' l='69' ll='78'/>
<use f='linux-5.3.1/drivers/pci/pci.h' l='80' c='pci_set_platform_pm'/>
<size>64</size>
<doc f='linux-5.3.1/drivers/pci/pci.h' l='42'>/**
 * struct pci_platform_pm_ops - Firmware PM callbacks
 *
 * @bridge_d3: Does the bridge allow entering into D3
 *
 * @is_manageable: returns &apos;true&apos; if given device is power manageable by the
 *		   platform firmware
 *
 * @set_state: invokes the platform firmware to set the device&apos;s power state
 *
 * @get_state: queries the platform firmware for a device&apos;s current power state
 *
 * @refresh_state: asks the platform to refresh the device&apos;s power state data
 *
 * @choose_state: returns PCI power state of given device preferred by the
 *		  platform; to be used during system-wide transitions from a
 *		  sleeping state to the working state and vice versa
 *
 * @set_wakeup: enables/disables wakeup capability for the device
 *
 * @need_resume: returns &apos;true&apos; if the given device (which is currently
 *		 suspended) needs to be resumed to be configured for system
 *		 wakeup.
 *
 * If given platform is generally capable of power managing PCI devices, all of
 * these callbacks are mandatory.
 */</doc>
<mbr r='pci_platform_pm_ops::bridge_d3' o='0' t='bool (*)(struct pci_dev *)'/>
<mbr r='pci_platform_pm_ops::is_manageable' o='64' t='bool (*)(struct pci_dev *)'/>
<mbr r='pci_platform_pm_ops::set_state' o='128' t='int (*)(struct pci_dev *, pci_power_t)'/>
<mbr r='pci_platform_pm_ops::get_state' o='192' t='pci_power_t (*)(struct pci_dev *)'/>
<mbr r='pci_platform_pm_ops::refresh_state' o='256' t='void (*)(struct pci_dev *)'/>
<mbr r='pci_platform_pm_ops::choose_state' o='320' t='pci_power_t (*)(struct pci_dev *)'/>
<mbr r='pci_platform_pm_ops::set_wakeup' o='384' t='int (*)(struct pci_dev *, bool)'/>
<mbr r='pci_platform_pm_ops::need_resume' o='448' t='bool (*)(struct pci_dev *)'/>
<use f='linux-5.3.1/drivers/pci/pci-acpi.c' l='755'/>
<size>64</size>
<use f='linux-5.3.1/drivers/pci/pci.c' l='753'/>
<use f='linux-5.3.1/drivers/pci/pci.c' l='755' c='pci_set_platform_pm'/>
<size>64</size>
