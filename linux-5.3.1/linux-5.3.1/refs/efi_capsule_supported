<dec f='linux-5.3.1/include/linux/efi.h' l='1541' type='int efi_capsule_supported(efi_guid_t guid, u32 flags, size_t size, int * reset)'/>
<def f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='85' ll='107' type='int efi_capsule_supported(efi_guid_t guid, u32 flags, size_t size, int * reset)'/>
<dec f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='108' type='int efi_capsule_supported(efi_guid_t , u32 , size_t , int * )'/>
<use f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='108' c='efi_capsule_supported'/>
<use f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='108' u='a'/>
<use f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='225' u='c' c='efi_capsule_update'/>
<doc f='linux-5.3.1/drivers/firmware/efi/capsule.c' l='72'>/**
 * efi_capsule_supported - does the firmware support the capsule?
 * @guid: vendor guid of capsule
 * @flags: capsule flags
 * @size: size of capsule data
 * @reset: the reset type required for this capsule
 *
 * Check whether a capsule with @flags is supported by the firmware
 * and that @size doesn&apos;t exceed the maximum size for a capsule.
 *
 * No attempt is made to check @reset against the reset type required
 * by any pending capsules because of the races involved.
 */</doc>
