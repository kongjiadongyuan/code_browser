<dec f='linux-5.3.1/security/selinux/include/netlabel.h' l='29' type='void selinux_netlbl_err(struct sk_buff * skb, u16 family, int error, int gateway)'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='4982' u='c' c='selinux_socket_sock_rcv_skb'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='4989' u='c' c='selinux_socket_sock_rcv_skb'/>
<use f='linux-5.3.1/security/selinux/hooks.c' l='5540' u='c' c='selinux_ip_forward'/>
<def f='linux-5.3.1/security/selinux/netlabel.c' l='141' ll='144' type='void selinux_netlbl_err(struct sk_buff * skb, u16 family, int error, int gateway)'/>
<doc f='linux-5.3.1/security/selinux/netlabel.c' l='128'>/**
 * selinux_netlbl_err - Handle a NetLabel packet error
 * @skb: the packet
 * @error: the error code
 * @gateway: true if host is acting as a gateway, false otherwise
 *
 * Description:
 * When a packet is dropped due to a call to avc_has_perm() pass the error
 * code to the NetLabel subsystem so any protocol specific processing can be
 * done.  This is safe to call even if you are unsure if NetLabel labeling is
 * present on the packet, NetLabel is smart enough to only act when it should.
 *
 */</doc>
