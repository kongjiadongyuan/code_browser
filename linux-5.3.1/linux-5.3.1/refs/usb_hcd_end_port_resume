<dec f='linux-5.3.1/include/linux/usb/hcd.h' l='509' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<def f='linux-5.3.1/drivers/usb/core/hcd.c' l='1059' ll='1067' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<dec f='linux-5.3.1/drivers/usb/core/hcd.c' l='1068' type='void usb_hcd_end_port_resume(struct usb_bus * , int )'/>
<use f='linux-5.3.1/drivers/usb/core/hcd.c' l='1068' c='usb_hcd_end_port_resume'/>
<use f='linux-5.3.1/drivers/usb/core/hcd.c' l='1068' u='a'/>
<doc f='linux-5.3.1/drivers/usb/core/hcd.c' l='1048'>/*
 * usb_hcd_end_port_resume - a root-hub port has stopped sending a resume signal
 * @bus: the bus which the root hub belongs to
 * @portnum: the port which is being resumed
 *
 * HCDs should call this function when they know that a resume signal has
 * stopped being sent to a root-hub port.  The root hub will be allowed to
 * autosuspend again.
 *
 * The bus&apos;s private lock must be held by the caller.
 */</doc>
<use f='linux-5.3.1/drivers/usb/host/ehci-hub.c' l='1057' u='c' c='ehci_hub_control'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-hub.c' l='1133' u='c' c='ehci_hub_control'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hub.c' l='119' u='c' c='uhci_finish_suspend'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-hub.c' l='887' u='c' c='xhci_handle_usb2_port_link_resume'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-hub.c' l='1059' u='c' c='xhci_get_port_status'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-hub.c' l='1406' u='c' c='xhci_hub_control'/>
