<dec f='linux-5.3.1/include/net/route.h' l='215' type='unsigned int inet_addr_type_dev_table(struct net * net, const struct net_device * dev, __be32 addr)'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='239' u='c' c='arp_constructor'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='349' u='c' c='arp_solicit'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='357' u='c' c='arp_solicit'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='664' u='c' c='arp_is_garp'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='806' u='c' c='arp_process'/>
<use f='linux-5.3.1/net/ipv4/arp.c' l='884' u='c' c='arp_process'/>
<def f='linux-5.3.1/net/ipv4/fib_frontend.c' l='269' ll='276' type='unsigned int inet_addr_type_dev_table(struct net * net, const struct net_device * dev, __be32 addr)'/>
<dec f='linux-5.3.1/net/ipv4/fib_frontend.c' l='277' type='unsigned int inet_addr_type_dev_table(struct net * , const struct net_device * , __be32 )'/>
<use f='linux-5.3.1/net/ipv4/fib_frontend.c' l='277' c='inet_addr_type_dev_table'/>
<use f='linux-5.3.1/net/ipv4/fib_frontend.c' l='277' u='a'/>
<use f='linux-5.3.1/net/ipv4/fib_frontend.c' l='1306' u='c' c='fib_del_ifaddr'/>
<doc f='linux-5.3.1/net/ipv4/fib_frontend.c' l='266'>/* inet_addr_type with dev == NULL but using the table from a dev
 * if one is associated
 */</doc>
<use f='linux-5.3.1/net/ipv4/fib_semantics.c' l='1077' u='c' c='fib_check_nh_v4_gw'/>
<use f='linux-5.3.1/net/ipv4/icmp.c' l='505' u='c' c='icmp_route_lookup'/>
<use f='linux-5.3.1/net/ipv4/icmp.c' l='877' u='c' c='icmp_unreach'/>
<use f='linux-5.3.1/net/ipv4/netfilter.c' l='32' u='c' c='ip_route_me_harder'/>
<use f='linux-5.3.1/net/ipv6/af_inet6.c' l='332' u='c' c='__inet6_bind'/>
