<def f='linux-5.3.1/include/crypto/akcipher.h' l='246' ll='256' type='void akcipher_request_set_crypt(struct akcipher_request * req, struct scatterlist * src, struct scatterlist * dst, unsigned int src_len, unsigned int dst_len)'/>
<doc f='linux-5.3.1/include/crypto/akcipher.h' l='234'>/**
 * akcipher_request_set_crypt() - Sets request parameters
 *
 * Sets parameters required by crypto operation
 *
 * @req:	public key request
 * @src:	ptr to input scatter list
 * @dst:	ptr to output scatter list or NULL for verify op
 * @src_len:	size of the src input scatter list to be processed
 * @dst_len:	size of the dst output scatter list or size of signature
 *		portion in @src for verify op
 */</doc>
<use f='linux-5.3.1/crypto/asymmetric_keys/public_key.c' l='211' u='c' c='software_key_eds_op'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/public_key.c' l='303' u='c' c='public_key_verify_signature'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='266' u='c' c='pkcs1pad_encrypt'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='367' u='c' c='pkcs1pad_decrypt'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='425' u='c' c='pkcs1pad_sign'/>
<use f='linux-5.3.1/crypto/rsa-pkcs1pad.c' l='555' u='c' c='pkcs1pad_verify'/>
