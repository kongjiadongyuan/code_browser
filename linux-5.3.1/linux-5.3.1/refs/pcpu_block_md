<def f='linux-5.3.1/mm/percpu-internal.h' l='19' ll='32'/>
<use f='linux-5.3.1/mm/percpu-internal.h' l='42'/>
<use f='linux-5.3.1/mm/percpu-internal.h' l='47'/>
<use f='linux-5.3.1/mm/percpu.c' l='235' c='pcpu_chunk_slot'/>
<use f='linux-5.3.1/mm/percpu.c' l='336' c='pcpu_next_hint'/>
<use f='linux-5.3.1/mm/percpu.c' l='369' c='pcpu_next_md_free_region'/>
<use f='linux-5.3.1/mm/percpu.c' l='424' c='pcpu_next_fit_region'/>
<use f='linux-5.3.1/mm/percpu.c' l='603' c='pcpu_block_update'/>
<use f='linux-5.3.1/mm/percpu.c' l='691' c='pcpu_block_update_scan'/>
<use f='linux-5.3.1/mm/percpu.c' l='720' c='pcpu_chunk_refresh_hint'/>
<use f='linux-5.3.1/mm/percpu.c' l='750' c='pcpu_block_refresh_hint'/>
<use f='linux-5.3.1/mm/percpu.c' l='787' c='pcpu_block_update_hint_alloc'/>
<use f='linux-5.3.1/mm/percpu.c' l='789' c='pcpu_block_update_hint_alloc'/>
<use f='linux-5.3.1/mm/percpu.c' l='789' c='pcpu_block_update_hint_alloc'/>
<use f='linux-5.3.1/mm/percpu.c' l='789' c='pcpu_block_update_hint_alloc'/>
<use f='linux-5.3.1/mm/percpu.c' l='935' c='pcpu_block_update_hint_free'/>
<use f='linux-5.3.1/mm/percpu.c' l='935' c='pcpu_block_update_hint_free'/>
<use f='linux-5.3.1/mm/percpu.c' l='935' c='pcpu_block_update_hint_free'/>
<use f='linux-5.3.1/mm/percpu.c' l='1080' c='pcpu_find_block_fit'/>
<use f='linux-5.3.1/mm/percpu.c' l='1189' c='pcpu_alloc_area'/>
<use f='linux-5.3.1/mm/percpu.c' l='1245' c='pcpu_free_area'/>
<use f='linux-5.3.1/mm/percpu.c' l='1272' c='pcpu_init_md_block'/>
<use f='linux-5.3.1/mm/percpu.c' l='1284' c='pcpu_init_md_blocks'/>
<size>32</size>
<doc f='linux-5.3.1/mm/percpu-internal.h' l='8'>/*
 * pcpu_block_md is the metadata block struct.
 * Each chunk&apos;s bitmap is split into a number of full blocks.
 * All units are in terms of bits.
 *
 * The scan hint is the largest known contiguous area before the contig hint.
 * It is not necessarily the actual largest contig hint though.  There is an
 * invariant that the scan_hint_start &gt; contig_hint_start iff
 * scan_hint == contig_hint.  This is necessary because when scanning forward,
 * we don&apos;t know if a new contig hint would be better than the current one.
 */</doc>
<mbr r='pcpu_block_md::scan_hint' o='0' t='int'/>
<mbr r='pcpu_block_md::scan_hint_start' o='32' t='int'/>
<mbr r='pcpu_block_md::contig_hint' o='64' t='int'/>
<mbr r='pcpu_block_md::contig_hint_start' o='96' t='int'/>
<mbr r='pcpu_block_md::left_free' o='128' t='int'/>
<mbr r='pcpu_block_md::right_free' o='160' t='int'/>
<mbr r='pcpu_block_md::first_free' o='192' t='int'/>
<mbr r='pcpu_block_md::nr_bits' o='224' t='int'/>
