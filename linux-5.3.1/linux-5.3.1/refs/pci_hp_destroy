<dec f='linux-5.3.1/include/linux/pci_hotplug.h' l='80' type='void pci_hp_destroy(struct hotplug_slot * slot)'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='416' u='c' c='__pci_hp_register'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='507' u='c' c='pci_hp_deregister'/>
<def f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='551' ll='558' type='void pci_hp_destroy(struct hotplug_slot * slot)'/>
<dec f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='559' type='void pci_hp_destroy(struct hotplug_slot * )'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='559' c='pci_hp_destroy'/>
<use f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='559' u='a'/>
<doc f='linux-5.3.1/drivers/pci/hotplug/pci_hotplug_core.c' l='540'>/**
 * pci_hp_destroy - remove hotplug slot from in-kernel use
 * @slot: pointer to the &amp;struct hotplug_slot to destroy
 *
 * Destroy a PCI slot used by a hotplug driver.  Once this has been called,
 * the driver may no longer invoke hotplug_slot_name() to get the slot&apos;s
 * unique name.  The driver no longer needs to handle a -&gt;reset_slot callback
 * from this point on.
 *
 * Returns 0 on success or a negative int on error.
 */</doc>
