<dec f='linux-5.3.1/include/linux/kernel.h' l='321' type='int kstrtoull(const char * s, unsigned int base, unsigned long long * res)'/>
<use f='linux-5.3.1/include/linux/kernel.h' l='348' u='c' c='kstrtoul'/>
<use f='linux-5.3.1/include/linux/kernel.h' l='387' u='c' c='kstrtou64'/>
<dec f='linux-5.3.1/arch/x86/boot/string.h' l='32' type='int kstrtoull(const char * s, unsigned int base, unsigned long long * res)'/>
<use f='linux-5.3.1/arch/x86/boot/compressed/acpi.c' l='41' u='c' c='get_acpi_rsdp'/>
<def f='linux-5.3.1/arch/x86/boot/string.c' l='332' ll='337' type='int kstrtoull(const char * s, unsigned int base, unsigned long long * res)'/>
<doc f='linux-5.3.1/arch/x86/boot/string.c' l='316'>/**
 * kstrtoull - convert a string to an unsigned long long
 * @s: The start of the string. The string must be null-terminated, and may also
 *  include a single newline before its terminating null. The first character
 *  may also be a plus sign, but not a minus sign.
 * @base: The number base to use. The maximum supported base is 16. If base is
 *  given as 0, then the base of the string is automatically detected with the
 *  conventional semantics - If it begins with 0x the number will be parsed as a
 *  hexadecimal (case insensitive), if it otherwise begins with 0, it will be
 *  parsed as an octal number. Otherwise it will be parsed as a decimal.
 * @res: Where to write the result of the conversion on success.
 *
 * Returns 0 on success, -ERANGE on overflow and -EINVAL on parsing error.
 * Used as a replacement for the obsolete simple_strtoull. Return code must
 * be checked.
 */</doc>
<use f='linux-5.3.1/block/kyber-iosched.c' l='875' u='c' c='kyber_read_lat_store'/>
<use f='linux-5.3.1/block/kyber-iosched.c' l='875' u='c' c='kyber_write_lat_store'/>
<use f='linux-5.3.1/drivers/cpuidle/sysfs.c' l='267' u='c' c='store_state_disable'/>
<use f='linux-5.3.1/drivers/md/md.c' l='3084' u='c' c='offset_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='3112' u='c' c='new_offset_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='3179' u='c' c='strict_blocks_to_sectors'/>
<use f='linux-5.3.1/drivers/md/md.c' l='3287' u='c' c='recovery_start_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='3353' u='c' c='ppl_sector_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='4098' u='c' c='resync_start_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='4844' u='c' c='min_sync_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='4889' u='c' c='max_sync_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='4933' u='c' c='suspend_lo_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='4970' u='c' c='suspend_hi_store'/>
<use f='linux-5.3.1/drivers/md/md.c' l='5012' u='c' c='reshape_position_store'/>
<use f='linux-5.3.1/drivers/scsi/scsi_devinfo.c' l='370' u='c' c='scsi_dev_info_list_add_keyed'/>
<use f='linux-5.3.1/fs/ext4/sysfs.c' l='105' u='c' c='reserved_clusters_store'/>
<use f='linux-5.3.1/fs/fs_parser.c' l='186' u='c' c='fs_parse'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='3768' u='c' c='cgroup_file_write'/>
<use f='linux-5.3.1/kernel/params.c' l='234' u='c' c='param_set_ullong'/>
<use f='linux-5.3.1/kernel/power/hibernate.c' l='1091' u='c' c='resume_offset_store'/>
<use f='linux-5.3.1/kernel/trace/blktrace.c' l='1803' u='c' c='sysfs_blk_trace_attr_store'/>
<use f='linux-5.3.1/kernel/trace/blktrace.c' l='1810' u='c' c='sysfs_blk_trace_attr_store'/>
<use f='linux-5.3.1/kernel/trace/trace_events_filter.c' l='1360' u='c' c='parse_pred'/>
<def f='linux-5.3.1/lib/kstrtox.c' l='121' ll='126' type='int kstrtoull(const char * s, unsigned int base, unsigned long long * res)'/>
<dec f='linux-5.3.1/lib/kstrtox.c' l='127' type='int kstrtoull(const char * , unsigned int , unsigned long long * )'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='127' c='kstrtoull'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='127' u='a'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='158' u='c' c='kstrtoll'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='175' u='c' c='_kstrtoul'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='222' u='c' c='kstrtouint'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='268' u='c' c='kstrtou16'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='298' u='c' c='kstrtou8'/>
<use f='linux-5.3.1/lib/kstrtox.c' l='401' u='c' c='kstrtoull_from_user'/>
<doc f='linux-5.3.1/lib/kstrtox.c' l='105'>/**
 * kstrtoull - convert a string to an unsigned long long
 * @s: The start of the string. The string must be null-terminated, and may also
 *  include a single newline before its terminating null. The first character
 *  may also be a plus sign, but not a minus sign.
 * @base: The number base to use. The maximum supported base is 16. If base is
 *  given as 0, then the base of the string is automatically detected with the
 *  conventional semantics - If it begins with 0x the number will be parsed as a
 *  hexadecimal (case insensitive), if it otherwise begins with 0, it will be
 *  parsed as an octal number. Otherwise it will be parsed as a decimal.
 * @res: Where to write the result of the conversion on success.
 *
 * Returns 0 on success, -ERANGE on overflow and -EINVAL on parsing error.
 * Used as a replacement for the obsolete simple_strtoull. Return code must
 * be checked.
 */</doc>
<use f='linux-5.3.1/lib/parser.c' l='169' u='c' c='match_u64int'/>
