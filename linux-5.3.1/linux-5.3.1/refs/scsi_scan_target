<dec f='linux-5.3.1/include/scsi/scsi_device.h' l='420' type='void scsi_scan_target(struct device * parent, unsigned int channel, unsigned int id, u64 lun, enum scsi_scan_mode rescan)'/>
<def f='linux-5.3.1/drivers/scsi/scsi_scan.c' l='1602' ll='1623' type='void scsi_scan_target(struct device * parent, unsigned int channel, unsigned int id, u64 lun, enum scsi_scan_mode rescan)'/>
<dec f='linux-5.3.1/drivers/scsi/scsi_scan.c' l='1624' type='void scsi_scan_target(struct device * , unsigned int , unsigned int , u64 , enum scsi_scan_mode )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_scan.c' l='1624' c='scsi_scan_target'/>
<use f='linux-5.3.1/drivers/scsi/scsi_scan.c' l='1624' u='a'/>
<doc f='linux-5.3.1/drivers/scsi/scsi_scan.c' l='1584'>/**
 * scsi_scan_target - scan a target id, possibly including all LUNs on the target.
 * @parent:	host to scan
 * @channel:	channel to scan
 * @id:		target id to scan
 * @lun:	Specific LUN to scan or SCAN_WILD_CARD
 * @rescan:	passed to LUN scanning routines; SCSI_SCAN_INITIAL for
 *              no rescan, SCSI_SCAN_RESCAN to rescan existing LUNs,
 *              and SCSI_SCAN_MANUAL to force scanning even if
 *              &apos;scan=manual&apos; is set.
 *
 * Description:
 *     Scan the target id on @parent, @channel, and @id. Scan at least LUN 0,
 *     and possibly all LUNs on the target id.
 *
 *     First try a REPORT LUN scan, if that does not scan the target, do a
 *     sequential scan of LUNs on the target id.
 **/</doc>
