<dec f='linux-5.3.1/include/net/mac80211.h' l='5066' type='void ieee80211_set_key_rx_seq(struct ieee80211_key_conf * keyconf, int tid, struct ieee80211_key_seq * seq)'/>
<doc f='linux-5.3.1/include/net/mac80211.h' l='5049'>/**
 * ieee80211_set_key_rx_seq - set key RX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @tid: The TID, or -1 for the management frame value (CCMP/GCMP only);
 *	the value on TID 0 is also used for non-QoS frames. For
 *	CMAC, only TID 0 is valid.
 * @seq: new sequence data
 *
 * This function allows a driver to set the current RX IV/PNs for the
 * given key. This is useful when resuming from WoWLAN sleep and GTK
 * rekey may have been done while suspended. It should not be called
 * if IV checking is done by the device and not by mac80211.
 *
 * Note that this function may only be called when no RX processing
 * can be done concurrently.
 */</doc>
<def f='linux-5.3.1/net/mac80211/key.c' l='1167' ll='1220' type='void ieee80211_set_key_rx_seq(struct ieee80211_key_conf * keyconf, int tid, struct ieee80211_key_seq * seq)'/>
<dec f='linux-5.3.1/net/mac80211/key.c' l='1221' type='void ieee80211_set_key_rx_seq(struct ieee80211_key_conf * , int , struct ieee80211_key_seq * )'/>
<use f='linux-5.3.1/net/mac80211/key.c' l='1221' c='ieee80211_set_key_rx_seq'/>
<use f='linux-5.3.1/net/mac80211/key.c' l='1221' u='a'/>
