<dec f='linux-5.3.1/include/sound/hdaudio.h' l='179' type='int snd_hdac_power_up_pm(struct hdac_device * codec)'/>
<def f='linux-5.3.1/sound/hda/hdac_device.c' l='594' ll='599' type='int snd_hdac_power_up_pm(struct hdac_device * codec)'/>
<dec f='linux-5.3.1/sound/hda/hdac_device.c' l='600' type='int snd_hdac_power_up_pm(struct hdac_device * )'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='600' c='snd_hdac_power_up_pm'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='600' u='a'/>
<doc f='linux-5.3.1/sound/hda/hdac_device.c' l='583'>/**
 * snd_hdac_power_up_pm - power up the codec
 * @codec: the codec object
 *
 * This function can be called in a recursive code path like init code
 * which may be called by PM suspend/resume again.  OTOH, if a power-up
 * call must wake up the sleeper (e.g. in a kctl callback), use
 * snd_hdac_power_up() instead.
 *
 * Returns zero if successful, or a negative error code.
 */</doc>
<use f='linux-5.3.1/sound/hda/hdac_regmap.c' l='448' u='c' c='snd_hdac_regmap_write_raw'/>
<use f='linux-5.3.1/sound/hda/hdac_regmap.c' l='474' u='c' c='__snd_hdac_regmap_read_raw'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='48' macro='1' u='c' c='codec_exec_verb'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3436' macro='1' u='c' c='snd_hda_check_amp_list_power'/>
