<dec f='linux-5.3.1/include/linux/sunrpc/svc.h' l='516' type='void svc_wake_up(struct svc_serv * )'/>
<use f='linux-5.3.1/fs/lockd/svclock.c' l='754' u='c' c='nlmsvc_grant_deferred'/>
<use f='linux-5.3.1/fs/lockd/svclock.c' l='783' u='c' c='nlmsvc_notify_blocked'/>
<use f='linux-5.3.1/fs/lockd/svclock.c' l='918' u='c' c='nlmsvc_grant_callback'/>
<def f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='540' ll='563' type='void svc_wake_up(struct svc_serv * serv)'/>
<dec f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='564' type='void svc_wake_up(struct svc_serv * )'/>
<use f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='564' c='svc_wake_up'/>
<use f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='564' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/svc_xprt.c' l='533'>/*
 * Some svc_serv&apos;s will have occasional work to do, even when a xprt is not
 * waiting to be serviced. This function is there to &quot;kick&quot; a task in one of
 * those services so that it can wake up and do that work. Note that we only
 * bother with pool 0 as we don&apos;t need to wake up more than one thread for
 * this purpose.
 */</doc>
