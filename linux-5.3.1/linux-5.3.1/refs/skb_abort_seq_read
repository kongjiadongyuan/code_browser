<dec f='linux-5.3.1/include/linux/skbuff.h' l='1168' type='void skb_abort_seq_read(struct skb_seq_state * st)'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='3533' ll='3537' type='void skb_abort_seq_read(struct skb_seq_state * st)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='3538' type='void skb_abort_seq_read(struct skb_seq_state * )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3538' c='skb_abort_seq_read'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3538' u='a'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='3551' u='c' c='skb_ts_finish'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='3526'>/**
 * skb_abort_seq_read - Abort a sequential read of skb data
 * @st: state variable
 *
 * Must be called if skb_seq_read() was not called until it
 * returned 0.
 */</doc>
