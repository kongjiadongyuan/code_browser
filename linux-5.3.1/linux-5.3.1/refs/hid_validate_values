<dec f='linux-5.3.1/include/linux/hid.h' l='893' type='struct hid_report * hid_validate_values(struct hid_device * hid, unsigned int type, unsigned int id, unsigned int field_index, unsigned int report_counts)'/>
<def f='linux-5.3.1/drivers/hid/hid-core.c' l='908' ll='956' type='struct hid_report * hid_validate_values(struct hid_device * hid, unsigned int type, unsigned int id, unsigned int field_index, unsigned int report_counts)'/>
<dec f='linux-5.3.1/drivers/hid/hid-core.c' l='957' type='struct hid_report * hid_validate_values(struct hid_device * , unsigned int , unsigned int , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='957' c='hid_validate_values'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='957' u='a'/>
<doc f='linux-5.3.1/drivers/hid/hid-core.c' l='896'>/**
 * hid_validate_values - validate existing device report&apos;s value indexes
 *
 * @device: hid device
 * @type: which report type to examine
 * @id: which report ID to examine (0 for first)
 * @field_index: which report field to examine
 * @report_counts: expected number of values
 *
 * Validate the number of values in a given field of a given report, after
 * parsing.
 */</doc>
<use f='linux-5.3.1/drivers/hid/hid-lg4ff.c' l='1270' u='c' c='lg4ff_init'/>
<use f='linux-5.3.1/drivers/hid/hid-lgff.c' l='125' u='c' c='lgff_init'/>
<use f='linux-5.3.1/drivers/hid/hid-sony.c' l='1970' u='c' c='sony_leds_init'/>
