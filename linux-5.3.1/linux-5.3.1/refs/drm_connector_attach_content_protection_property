<dec f='linux-5.3.1/include/drm/drm_hdcp.h' l='293' type='int drm_connector_attach_content_protection_property(struct drm_connector * connector)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='362' ll='381' type='int drm_connector_attach_content_protection_property(struct drm_connector * connector)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='382' type='int drm_connector_attach_content_protection_property(struct drm_connector * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='382' c='drm_connector_attach_content_protection_property'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='382' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_hdcp.c' l='347'>/**
 * drm_connector_attach_content_protection_property - attach content protection
 * property
 *
 * @connector: connector to attach CP property on.
 *
 * This is used to add support for content protection on select connectors.
 * Content Protection is intentionally vague to allow for different underlying
 * technologies, however it is most implemented by HDCP.
 *
 * The content protection will be set to &amp;drm_connector_state.content_protection
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hdcp.c' l='1833' u='c' c='intel_hdcp_init'/>
