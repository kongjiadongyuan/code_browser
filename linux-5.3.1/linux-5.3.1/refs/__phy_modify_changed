<dec f='linux-5.3.1/include/linux/phy.h' l='781' type='int __phy_modify_changed(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<def f='linux-5.3.1/drivers/net/phy/phy-core.c' l='456' ll='472' type='int __phy_modify_changed(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-core.c' l='473' type='int __phy_modify_changed(struct phy_device * , u32 , u16 , u16 )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='473' c='__phy_modify_changed'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='473' u='a'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='493' u='c' c='phy_modify_changed'/>
<use f='linux-5.3.1/drivers/net/phy/phy-core.c' l='515' u='c' c='__phy_modify'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-core.c' l='444'>/**
 * __phy_modify_changed() - Convenience function for modifying a PHY register
 * @phydev: a pointer to a &amp;struct phy_device
 * @regnum: register number
 * @mask: bit mask of bits to clear
 * @set: bit mask of bits to set
 *
 * Unlocked helper function which allows a PHY register to be modified as
 * new register value = (old register value &amp; ~mask) | set
 *
 * Returns negative errno, 0 if there was no change, and 1 in case of change
 */</doc>
