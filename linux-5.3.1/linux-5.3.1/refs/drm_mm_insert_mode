<def f='linux-5.3.1/include/drm/drm_mm.h' l='68' ll='144'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='238'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='410' c='drm_mm_insert_node_in_range'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='433' c='drm_mm_insert_node_generic'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='508' c='drm_mm_scan_init_with_range'/>
<use f='linux-5.3.1/include/drm/drm_mm.h' l='534' c='drm_mm_scan_init'/>
<doc f='linux-5.3.1/include/drm/drm_mm.h' l='57'>/**
 * enum drm_mm_insert_mode - control search and allocation behaviour
 *
 * The &amp;struct drm_mm range manager supports finding a suitable modes using
 * a number of search trees. These trees are oranised by size, by address and
 * in most recent eviction order. This allows the user to find either the
 * smallest hole to reuse, the lowest or highest address to reuse, or simply
 * reuse the most recent eviction that fits. When allocating the &amp;drm_mm_node
 * from within the hole, the &amp;drm_mm_insert_mode also dictate whether to
 * allocate the lowest matching address or the highest.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='344' c='first_hole'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='367' c='next_hole'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='469' c='drm_mm_insert_node_in_range'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mm.c' l='687' c='drm_mm_scan_init_with_range'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_evict.c' l='107' c='i915_gem_evict_something'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_gtt.c' l='4041' c='i915_gem_gtt_insert'/>
