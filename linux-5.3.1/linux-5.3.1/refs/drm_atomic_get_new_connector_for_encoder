<dec f='linux-5.3.1/include/drm/drm_atomic.h' l='466' type='struct drm_connector * drm_atomic_get_new_connector_for_encoder(struct drm_atomic_state * state, struct drm_encoder * encoder)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='902' ll='916' type='struct drm_connector * drm_atomic_get_new_connector_for_encoder(struct drm_atomic_state * state, struct drm_encoder * encoder)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='917' type='struct drm_connector * drm_atomic_get_new_connector_for_encoder(struct drm_atomic_state * , struct drm_encoder * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='917' c='drm_atomic_get_new_connector_for_encoder'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='917' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='885'>/**
 * drm_atomic_get_new_connector_for_encoder - Get new connector for an encoder
 * @state: Atomic state
 * @encoder: The encoder to fetch the connector state for
 *
 * This function finds and returns the connector that will be connected to
 * @encoder as specified by the @state.
 *
 * If there is no connector in @state which will have @encoder connected to it,
 * this function will return NULL. While this may seem like an invalid use case,
 * it is sometimes useful to differentiate commits which have no connectors
 * attached to @encoder vs ones that do (and to inspect their state). This is
 * especially true in disable hooks because the pipeline will change.
 *
 * Returns: The new connector connected to @encoder, or NULL if the encoder is
 * not connected.
 */</doc>
