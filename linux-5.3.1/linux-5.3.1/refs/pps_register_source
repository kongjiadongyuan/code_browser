<dec f='linux-5.3.1/include/linux/pps_kernel.h' l='85' type='struct pps_device * pps_register_source(struct pps_source_info * info, int default_params)'/>
<doc f='linux-5.3.1/include/linux/pps_kernel.h' l='81'>/*
 * Exported functions
 */</doc>
<def f='linux-5.3.1/drivers/pps/kapi.c' l='65' ll='126' type='struct pps_device * pps_register_source(struct pps_source_info * info, int default_params)'/>
<dec f='linux-5.3.1/drivers/pps/kapi.c' l='127' type='struct pps_device * pps_register_source(struct pps_source_info * , int )'/>
<use f='linux-5.3.1/drivers/pps/kapi.c' l='127' c='pps_register_source'/>
<use f='linux-5.3.1/drivers/pps/kapi.c' l='127' u='a'/>
<doc f='linux-5.3.1/drivers/pps/kapi.c' l='53'>/* pps_register_source - add a PPS source in the system
 * @info: the PPS info struct
 * @default_params: the default PPS parameters of the new source
 *
 * This function is used to add a new PPS source in the system. The new
 * source is described by info&apos;s fields and it will have, as default PPS
 * parameters, the ones specified into default_params.
 *
 * The function returns, in case of success, the PPS device. Otherwise
 * ERR_PTR(errno).
 */</doc>
<use f='linux-5.3.1/drivers/ptp/ptp_clock.c' l='255' u='c' c='ptp_clock_register'/>
