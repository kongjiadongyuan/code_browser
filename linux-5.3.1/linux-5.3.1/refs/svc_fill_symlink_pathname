<dec f='linux-5.3.1/include/linux/sunrpc/svc.h' l='523' type='char * svc_fill_symlink_pathname(struct svc_rqst * rqstp, struct kvec * first, void * p, size_t total)'/>
<def f='linux-5.3.1/net/sunrpc/svc.c' l='1687' ll='1723' type='char * svc_fill_symlink_pathname(struct svc_rqst * rqstp, struct kvec * first, void * p, size_t total)'/>
<dec f='linux-5.3.1/net/sunrpc/svc.c' l='1724' type='char * svc_fill_symlink_pathname(struct svc_rqst * , struct kvec * , void * , size_t )'/>
<use f='linux-5.3.1/net/sunrpc/svc.c' l='1724' c='svc_fill_symlink_pathname'/>
<use f='linux-5.3.1/net/sunrpc/svc.c' l='1724' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/svc.c' l='1676'>/**
 * svc_fill_symlink_pathname - Construct pathname argument for VFS symlink call
 * @rqstp: svc_rqst to operate on
 * @first: buffer containing first section of pathname
 * @p: buffer containing remaining section of pathname
 * @total: total length of the pathname argument
 *
 * The VFS symlink API demands a NUL-terminated pathname in mapped memory.
 * Returns pointer to a NUL-terminated string, or an ERR_PTR. Caller must free
 * the returned string.
 */</doc>
