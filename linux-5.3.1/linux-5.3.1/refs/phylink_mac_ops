<def f='linux-5.3.1/include/linux/phylink.h' l='83' ll='97'/>
<use f='linux-5.3.1/include/linux/phylink.h' l='237' c='phylink_create'/>
<size>48</size>
<doc f='linux-5.3.1/include/linux/phylink.h' l='72'>/**
 * struct phylink_mac_ops - MAC operations structure.
 * @validate: Validate and update the link configuration.
 * @mac_link_state: Read the current link state from the hardware.
 * @mac_config: configure the MAC for the selected mode and state.
 * @mac_an_restart: restart 802.3z BaseX autonegotiation.
 * @mac_link_down: take the link down.
 * @mac_link_up: allow the link to come up.
 *
 * The individual methods are described more fully below.
 */</doc>
<mbr r='phylink_mac_ops::validate' o='0' t='void (*)(struct phylink_config *, unsigned long *, struct phylink_link_state *)'/>
<mbr r='phylink_mac_ops::mac_link_state' o='64' t='int (*)(struct phylink_config *, struct phylink_link_state *)'/>
<mbr r='phylink_mac_ops::mac_config' o='128' t='void (*)(struct phylink_config *, unsigned int, const struct phylink_link_state *)'/>
<mbr r='phylink_mac_ops::mac_an_restart' o='192' t='void (*)(struct phylink_config *)'/>
<mbr r='phylink_mac_ops::mac_link_down' o='256' t='void (*)(struct phylink_config *, unsigned int, phy_interface_t)'/>
<mbr r='phylink_mac_ops::mac_link_up' o='320' t='void (*)(struct phylink_config *, unsigned int, phy_interface_t, struct phy_device *)'/>
