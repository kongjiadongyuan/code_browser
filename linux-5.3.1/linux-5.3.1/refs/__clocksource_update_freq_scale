<dec f='linux-5.3.1/include/linux/clocksource.h' l='213' type='void __clocksource_update_freq_scale(struct clocksource * cs, u32 scale, u32 freq)'/>
<use f='linux-5.3.1/include/linux/clocksource.h' l='236' u='c' c='__clocksource_update_freq_hz'/>
<use f='linux-5.3.1/include/linux/clocksource.h' l='241' u='c' c='__clocksource_update_freq_khz'/>
<def f='linux-5.3.1/kernel/time/clocksource.c' l='851' ll='904' type='void __clocksource_update_freq_scale(struct clocksource * cs, u32 scale, u32 freq)'/>
<dec f='linux-5.3.1/kernel/time/clocksource.c' l='905' type='void __clocksource_update_freq_scale(struct clocksource * , u32 , u32 )'/>
<use f='linux-5.3.1/kernel/time/clocksource.c' l='905' c='__clocksource_update_freq_scale'/>
<use f='linux-5.3.1/kernel/time/clocksource.c' l='905' u='a'/>
<use f='linux-5.3.1/kernel/time/clocksource.c' l='925' u='c' c='__clocksource_register_scale'/>
<doc f='linux-5.3.1/kernel/time/clocksource.c' l='839'>/**
 * __clocksource_update_freq_scale - Used update clocksource with new freq
 * @cs:		clocksource to be registered
 * @scale:	Scale factor multiplied against freq to get clocksource hz
 * @freq:	clocksource frequency (cycles per second) divided by scale
 *
 * This should only be called from the clocksource-&gt;enable() method.
 *
 * This *SHOULD NOT* be called directly! Please use the
 * __clocksource_update_freq_hz() or __clocksource_update_freq_khz() helper
 * functions.
 */</doc>
