<def f='linux-5.3.1/include/crypto/skcipher.h' l='551' ll='559' type='void skcipher_request_set_callback(struct skcipher_request * req, u32 flags, crypto_completion_t compl, void * data)'/>
<doc f='linux-5.3.1/include/crypto/skcipher.h' l='526'>/**
 * skcipher_request_set_callback() - set asynchronous callback function
 * @req: request handle
 * @flags: specify zero or an ORing of the flags
 *	   CRYPTO_TFM_REQ_MAY_BACKLOG the request queue may back log and
 *	   increase the wait queue beyond the initial maximum size;
 *	   CRYPTO_TFM_REQ_MAY_SLEEP the request processing may sleep
 * @compl: callback function pointer to be registered with the request handle
 * @data: The data pointer refers to memory that is not used by the kernel
 *	  crypto API, but provided to the callback function for it to use. Here,
 *	  the caller can provide a reference to memory the callback function can
 *	  operate on. As the callback function is invoked asynchronously to the
 *	  related functionality, it may need to access data structures of the
 *	  related functionality which can be referenced using this pointer. The
 *	  callback function can access the memory via the &quot;data&quot; field in the
 *	  crypto_async_request data structure provided to the callback function.
 *
 * This function allows setting the callback function that is triggered once the
 * cipher operation completes.
 *
 * The callback function is registered with the skcipher_request handle and
 * must comply with the following template::
 *
 *	void callback_function(struct crypto_async_request *req, int error)
 */</doc>
<use f='linux-5.3.1/crypto/authenc.c' l='194' u='c' c='crypto_authenc_copy_assoc'/>
<use f='linux-5.3.1/crypto/authenc.c' l='228' u='c' c='crypto_authenc_encrypt'/>
<use f='linux-5.3.1/crypto/authenc.c' l='266' u='c' c='crypto_authenc_decrypt_tail'/>
<use f='linux-5.3.1/crypto/authencesn.c' l='184' u='c' c='crypto_authenc_esn_copy'/>
<use f='linux-5.3.1/crypto/authencesn.c' l='218' u='c' c='crypto_authenc_esn_encrypt'/>
<use f='linux-5.3.1/crypto/authencesn.c' l='264' u='c' c='crypto_authenc_esn_decrypt_tail'/>
<use f='linux-5.3.1/crypto/ccm.c' l='318' u='c' c='crypto_ccm_encrypt'/>
<use f='linux-5.3.1/crypto/ccm.c' l='383' u='c' c='crypto_ccm_decrypt'/>
<use f='linux-5.3.1/crypto/ctr.c' l='215' u='c' c='crypto_rfc3686_crypt'/>
<use f='linux-5.3.1/crypto/echainiv.c' l='48' u='c' c='echainiv_encrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='127' u='c' c='crypto_gcm_setkey'/>
<use f='linux-5.3.1/crypto/gcm.c' l='478' u='c' c='crypto_gcm_encrypt'/>
<use f='linux-5.3.1/crypto/gcm.c' l='516' u='c' c='gcm_dec_hash_continue'/>
<use f='linux-5.3.1/crypto/gcm.c' l='1040' u='c' c='crypto_rfc4543_copy_src_to_dst'/>
<use f='linux-5.3.1/crypto/seqiv.c' l='74' u='c' c='seqiv_aead_encrypt'/>
