<def f='linux-5.3.1/include/linux/oom.h' l='101' ll='106' type='vm_fault_t check_stable_address_space(struct mm_struct * mm)'/>
<doc f='linux-5.3.1/include/linux/oom.h' l='88'>/*
 * Checks whether a page fault on the given mm is still reliable.
 * This is no longer true if the oom reaper started to reap the
 * address space which is reflected by MMF_UNSTABLE flag set in
 * the mm. At that moment any !shared mapping would lose the content
 * and could cause a memory corruption (zero pages instead of the
 * original content).
 *
 * User should call this before establishing a page table entry for
 * a !shared mapping and under the proper page table lock.
 *
 * Return 0 when the PF is safe VM_FAULT_SIGBUS otherwise.
 */</doc>
<use f='linux-5.3.1/mm/memory.c' l='2979' u='c' c='do_anonymous_page'/>
<use f='linux-5.3.1/mm/memory.c' l='3017' u='c' c='do_anonymous_page'/>
<use f='linux-5.3.1/mm/memory.c' l='3341' u='c' c='finish_fault'/>
