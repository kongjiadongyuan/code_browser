<dec f='linux-5.3.1/include/linux/kernfs.h' l='369' type='__poll_t kernfs_generic_poll(struct kernfs_open_file * of, struct poll_table_struct * pt)'/>
<def f='linux-5.3.1/fs/kernfs/file.c' l='834' ll='845' type='__poll_t kernfs_generic_poll(struct kernfs_open_file * of, poll_table * wait)'/>
<use f='linux-5.3.1/fs/kernfs/file.c' l='859' u='c' c='kernfs_fop_poll'/>
<doc f='linux-5.3.1/fs/kernfs/file.c' l='820'>/*
 * Kernfs attribute files are pollable.  The idea is that you read
 * the content and then you use &apos;poll&apos; or &apos;select&apos; to wait for
 * the content to change.  When the content changes (assuming the
 * manager for the kobject supports notification), poll will
 * return EPOLLERR|EPOLLPRI, and select will return the fd whether
 * it is waiting for read, write, or exceptions.
 * Once poll/select indicates that the value has changed, you
 * need to close and re-open the file, or seek to 0 and read again.
 * Reminder: this only works for attributes which actively support
 * it, and it is not possible to test an attribute from userspace
 * to see if it supports poll (Neither &apos;poll&apos; nor &apos;select&apos; return
 * an appropriate error code).  When in doubt, set a suitable timeout value.
 */</doc>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='3790' u='c' c='cgroup_file_poll'/>
