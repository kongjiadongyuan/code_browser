<dec f='linux-5.3.1/include/linux/semaphore.h' l='40' type='int down_killable(struct semaphore * sem)'/>
<def f='linux-5.3.1/kernel/locking/semaphore.c' l='101' ll='114' type='int down_killable(struct semaphore * sem)'/>
<dec f='linux-5.3.1/kernel/locking/semaphore.c' l='115' type='int down_killable(struct semaphore * )'/>
<use f='linux-5.3.1/kernel/locking/semaphore.c' l='115' c='down_killable'/>
<use f='linux-5.3.1/kernel/locking/semaphore.c' l='115' u='a'/>
<doc f='linux-5.3.1/kernel/locking/semaphore.c' l='91'>/**
 * down_killable - acquire the semaphore unless killed
 * @sem: the semaphore to be acquired
 *
 * Attempts to acquire the semaphore.  If no more tasks are allowed to
 * acquire the semaphore, calling this function will put the task to sleep.
 * If the sleep is interrupted by a fatal signal, this function will return
 * -EINTR.  If the semaphore is successfully acquired, this function returns
 * 0.
 */</doc>
