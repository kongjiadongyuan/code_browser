<dec f='linux-5.3.1/include/net/cfg80211.h' l='5416' type='void wiphy_apply_custom_regulatory(struct wiphy * wiphy, const struct ieee80211_regdomain * regd)'/>
<doc f='linux-5.3.1/include/net/cfg80211.h' l='5401'>/**
 * wiphy_apply_custom_regulatory - apply a custom driver regulatory domain
 * @wiphy: the wireless device we want to process the regulatory domain on
 * @regd: the custom regulatory domain to use for this wiphy
 *
 * Drivers can sometimes have custom regulatory domains which do not apply
 * to a specific country. Drivers can use this to apply such custom regulatory
 * domains. This routine must be called prior to wiphy registration. The
 * custom regulatory domain will be trusted completely and as such previous
 * default channel settings will be disregarded. If no rule is found for a
 * channel on the regulatory domain the channel will be disabled.
 * Drivers using this for a wiphy should also set the wiphy flag
 * REGULATORY_CUSTOM_REG or cfg80211 will set it for the wiphy
 * that called this helper.
 */</doc>
<def f='linux-5.3.1/net/wireless/reg.c' l='2332' ll='2354' type='void wiphy_apply_custom_regulatory(struct wiphy * wiphy, const struct ieee80211_regdomain * regd)'/>
<dec f='linux-5.3.1/net/wireless/reg.c' l='2355' type='void wiphy_apply_custom_regulatory(struct wiphy * , const struct ieee80211_regdomain * )'/>
<use f='linux-5.3.1/net/wireless/reg.c' l='2355' c='wiphy_apply_custom_regulatory'/>
<use f='linux-5.3.1/net/wireless/reg.c' l='2355' u='a'/>
<doc f='linux-5.3.1/net/wireless/reg.c' l='2331'>/* Used by drivers prior to wiphy registration */</doc>
