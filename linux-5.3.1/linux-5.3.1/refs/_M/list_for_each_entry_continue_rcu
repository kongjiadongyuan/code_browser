<dec f='linux-5.3.1/include/linux/rculist.h' l='408'/>
<doc f='linux-5.3.1/include/linux/rculist.h' l='390'>/**
 * list_for_each_entry_continue_rcu - continue iteration over list of given type
 * @pos:	the type * to use as a loop cursor.
 * @head:	the head for your list.
 * @member:	the name of the list_head within the struct.
 *
 * Continue to iterate over list of given type, continuing after
 * the current position which must have been in the list when the RCU read
 * lock was taken.
 * This would typically require either that you obtained the node from a
 * previous walk of the list in the same RCU read-side critical section, or
 * that you held some sort of non-RCU reference (such as a reference count)
 * to keep the node alive *and* in the list.
 *
 * This iterator is similar to list_for_each_entry_from_rcu() except
 * this starts after the given position and that one starts at the given
 * position.
 */</doc>
<use f='linux-5.3.1/drivers/base/power/wakeup.c' l='1049' u='c'/>
<use f='linux-5.3.1/drivers/md/md-bitmap.c' l='199' u='c'/>
