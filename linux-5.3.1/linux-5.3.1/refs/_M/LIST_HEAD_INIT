<dec f='linux-5.3.1/include/linux/list.h' l='21'/>
<doc f='linux-5.3.1/include/linux/list.h' l='11'>/*
 * Simple doubly linked list implementation.
 *
 * Some of the internal functions (&quot;__xxx&quot;) are useful when
 * manipulating whole lists rather than single entries, as
 * sometimes we already know the next/prev entries and we can
 * generate better code by using them directly rather than
 * using the generic single-entry routines.
 */</doc>
<use f='linux-5.3.1/arch/x86/events/intel/uncore.c' l='17' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/nmi.c' l='53' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/nmi.c' l='57' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/nmi.c' l='61' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/nmi.c' l='65' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/tsc.c' l='1125' u='c'/>
<use f='linux-5.3.1/arch/x86/kernel/tsc.c' l='1145' u='c'/>
<use f='linux-5.3.1/block/blk-rq-qos.c' l='234' u='c'/>
<use f='linux-5.3.1/drivers/firmware/efi/efi.c' l='85' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='20' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='23' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='30' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='84' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='87' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='90' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='97' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='98' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='101' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='102' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='114' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='124' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='125' u='c'/>
<use f='linux-5.3.1/init/init_task.c' l='132' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='40' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='41' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='42' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='43' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='44' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='45' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='46' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='52' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='53' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='54' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='55' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='56' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='57' u='c'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='58' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='740' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='741' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='742' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='743' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='744' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='745' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='746' u='c'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='747' u='c'/>
<use f='linux-5.3.1/kernel/fork.c' l='1560' u='c'/>
<use f='linux-5.3.1/kernel/fork.c' l='1561' u='c'/>
<use f='linux-5.3.1/kernel/kprobes.c' l='121' u='c'/>
<use f='linux-5.3.1/kernel/kprobes.c' l='299' u='c'/>
<use f='linux-5.3.1/kernel/sched/fair.c' l='8842' u='c'/>
<use f='linux-5.3.1/kernel/sched/wait_bit.c' l='184' u='c'/>
<use f='linux-5.3.1/kernel/user.c' l='67' u='c'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='2765' u='c'/>
<use f='linux-5.3.1/mm/init-mm.c' l='36' u='c'/>
<use f='linux-5.3.1/net/core/net_namespace.c' l='48' u='c'/>
<use f='linux-5.3.1/net/sunrpc/auth_null.c' l='138' u='c'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='3195' u='c'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='3203' u='c'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='3211' u='c'/>
<use f='linux-5.3.1/net/sunrpc/xprtsock.c' l='3219' u='c'/>
<dec f='linux-5.3.1/tools/include/linux/list.h' l='20'/>
<doc f='linux-5.3.1/tools/include/linux/list.h' l='10'>/*
 * Simple doubly linked list implementation.
 *
 * Some of the internal functions (&quot;__xxx&quot;) are useful when
 * manipulating whole lists rather than single entries, as
 * sometimes we already know the next/prev entries and we can
 * generate better code by using them directly rather than
 * using the generic single-entry routines.
 */</doc>
