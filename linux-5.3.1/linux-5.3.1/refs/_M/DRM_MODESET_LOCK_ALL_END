<dec f='linux-5.3.1/include/drm/drm_modeset_lock.h' l='182'/>
<doc f='linux-5.3.1/include/drm/drm_modeset_lock.h' l='164'>/**
 * DRM_MODESET_LOCK_ALL_END - Helper to release and cleanup modeset locks
 * @ctx: local modeset acquire context, will be dereferenced
 * @ret: local ret/err/etc variable to track error status
 *
 * The other side of DRM_MODESET_LOCK_ALL_BEGIN(). It will bounce back to BEGIN
 * if ret is -EDEADLK.
 *
 * It&apos;s important that you use the same ret variable for begin and end so
 * deadlock conditions are properly handled.
 *
 * Returns:
 * ret will be untouched unless it is -EDEADLK on entry. That means that if you
 * successfully acquire the locks, ret will be whatever your code sets it to. If
 * there is a deadlock or other failure with acquire or backoff, ret will be set
 * to that failure. In both of these cases the code between BEGIN/END will not
 * be run, so the failure will reflect the inability to grab the locks.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='3034' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='3174' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='3255' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_color_mgmt.c' l='287' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='731' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_plane.c' l='785' u='c'/>
