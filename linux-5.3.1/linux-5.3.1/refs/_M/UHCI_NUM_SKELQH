<dec f='linux-5.3.1/drivers/usb/host/uhci-hcd.h' l='329'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.h' l='398' u='c'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-q.c' l='1761' u='c'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='541' u='c'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='633' u='c'/>
<use f='linux-5.3.1/drivers/usb/host/uhci-hcd.c' l='683' u='c'/>
<doc f='linux-5.3.1/drivers/usb/host/uhci-hcd.h' l='288'>/*
 * The UHCI driver uses QHs with Interrupt, Control and Bulk URBs for
 * automatic queuing. To make it easy to insert entries into the schedule,
 * we have a skeleton of QHs for each predefined Interrupt latency.
 * Asynchronous QHs (low-speed control, full-speed control, and bulk)
 * go onto the period-1 interrupt list, since they all get accessed on
 * every frame.
 *
 * When we want to add a new QH, we add it to the list starting from the
 * appropriate skeleton QH.  For instance, the schedule can look like this:
 *
 * skel int128 QH
 * dev 1 interrupt QH
 * dev 5 interrupt QH
 * skel int64 QH
 * skel int32 QH
 * ...
 * skel int1 + async QH
 * dev 5 low-speed control QH
 * dev 1 bulk QH
 * dev 2 bulk QH
 *
 * There is a special terminating QH used to keep full-speed bandwidth
 * reclamation active when no full-speed control or bulk QHs are linked
 * into the schedule.  It has an inactive TD (to work around a PIIX bug,
 * see the Intel errata) and it points back to itself.
 *
 * There&apos;s a special skeleton QH for Isochronous QHs which never appears
 * on the schedule.  Isochronous TDs go on the schedule before the
 * the skeleton QHs.  The hardware accesses them directly rather than
 * through their QH, which is used only for bookkeeping purposes.
 * While the UHCI spec doesn&apos;t forbid the use of QHs for Isochronous,
 * it doesn&apos;t use them either.  And the spec says that queues never
 * advance on an error completion status, which makes them totally
 * unsuitable for Isochronous transfers.
 *
 * There&apos;s also a special skeleton QH used for QHs which are in the process
 * of unlinking and so may still be in use by the hardware.  It too never
 * appears on the schedule.
 */</doc>
