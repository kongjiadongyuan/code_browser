<dec f='linux-5.3.1/include/linux/rbtree.h' l='109'/>
<doc f='linux-5.3.1/include/linux/rbtree.h' l='92'>/**
 * rbtree_postorder_for_each_entry_safe - iterate in post-order over rb_root of
 * given type allowing the backing memory of @pos to be invalidated
 *
 * @pos:	the &apos;type *&apos; to use as a loop cursor.
 * @n:		another &apos;type *&apos; to use as temporary storage
 * @root:	&apos;rb_root *&apos; of the rbtree.
 * @field:	the name of the rb_node field within &apos;type&apos;.
 *
 * rbtree_postorder_for_each_entry_safe() provides a similar guarantee as
 * list_for_each_entry_safe() and allows the iteration to continue independent
 * of changes to @pos by the body of the loop.
 *
 * Note, however, that it cannot handle other modifications that re-order the
 * rbtree it is iterating over. This includes calling rb_erase() on @pos, as
 * rb_erase() may rebalance the tree, causing us to miss some nodes.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='39' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='216' u='c'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_active.c' l='249' u='c'/>
<use f='linux-5.3.1/drivers/iommu/iova.c' l='597' u='c'/>
<use f='linux-5.3.1/fs/ext4/block_validity.c' l='235' u='c'/>
<use f='linux-5.3.1/fs/ext4/dir.c' l='400' u='c'/>
<use f='linux-5.3.1/kernel/trace/trace_stat.c' l='51' u='c'/>
