<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.h' l='180' type='intel_wakeref_t intel_runtime_pm_get_noresume(struct intel_runtime_pm * rpm)'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.c' l='458' ll='466' type='intel_wakeref_t intel_runtime_pm_get_noresume(struct intel_runtime_pm * rpm)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.c' l='439'>/**
 * intel_runtime_pm_get_noresume - grab a runtime pm reference
 * @rpm: the intel_runtime_pm structure
 *
 * This function grabs a device-level runtime pm reference (mostly used for GEM
 * code to ensure the GTT or GT is on).
 *
 * It will _not_ power up the device but instead only check that it&apos;s powered
 * on.  Therefore it is only valid to call this functions from contexts where
 * the device is known to be powered up and where trying to power it up would
 * result in hilarity and deadlocks. That pretty much means only the system
 * suspend/resume code where this is used to grab runtime pm references for
 * delayed setup down in work items.
 *
 * Any runtime pm reference obtained by this function must have a symmetric
 * call to intel_runtime_pm_put() to release the reference again.
 *
 * Returns: the wakeref cookie to pass to intel_runtime_pm_put()
 */</doc>
