<dec f='linux-5.3.1/include/linux/completion.h' l='104' type='void wait_for_completion_io(struct completion * )'/>
<use f='linux-5.3.1/block/bio.c' l='988' u='c' c='submit_bio_wait'/>
<use f='linux-5.3.1/block/blk-exec.c' l='91' u='c' c='blk_execute_rq'/>
<use f='linux-5.3.1/drivers/md/dm-io.c' l='458' u='c' c='sync_io'/>
<def f='linux-5.3.1/kernel/sched/completion.c' l='167' ll='170' type='void wait_for_completion_io(struct completion * x)'/>
<dec f='linux-5.3.1/kernel/sched/completion.c' l='171' type='void wait_for_completion_io(struct completion * )'/>
<use f='linux-5.3.1/kernel/sched/completion.c' l='171' c='wait_for_completion_io'/>
<use f='linux-5.3.1/kernel/sched/completion.c' l='171' u='a'/>
<doc f='linux-5.3.1/kernel/sched/completion.c' l='159'>/**
 * wait_for_completion_io: - waits for completion of a task
 * @x:  holds the state of this particular completion
 *
 * This waits to be signaled for completion of a specific task. It is NOT
 * interruptible and there is no timeout. The caller is accounted as waiting
 * for IO (which traditionally means blkio only).
 */</doc>
