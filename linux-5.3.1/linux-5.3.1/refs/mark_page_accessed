<dec f='linux-5.3.1/include/linux/swap.h' l='337' type='void mark_page_accessed(struct page * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='640' u='c' c='drm_gem_put_pages'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_phys.c' l='122' u='c' c='i915_gem_object_put_pages_phys'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_shmem.c' l='314' u='c' c='shmem_put_pages'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_userptr.c' l='669' u='c' c='i915_gem_userptr_put_pages'/>
<use f='linux-5.3.1/fs/buffer.c' l='60' u='c' c='touch_buffer'/>
<use f='linux-5.3.1/fs/iomap/buffered-io.c' l='931' u='c' c='iomap_zero'/>
<use f='linux-5.3.1/mm/filemap.c' l='1658' u='c' c='pagecache_get_page'/>
<use f='linux-5.3.1/mm/filemap.c' l='2156' u='c' c='generic_file_buffered_read'/>
<use f='linux-5.3.1/mm/filemap.c' l='2897' u='c' c='do_read_cache_page'/>
<use f='linux-5.3.1/mm/gup.c' l='285' u='c' c='follow_page_pte'/>
<use f='linux-5.3.1/mm/memory.c' l='1056' u='c' c='zap_pte_range'/>
<use f='linux-5.3.1/mm/shmem.c' l='1695' u='c' c='shmem_swapin_page'/>
<use f='linux-5.3.1/mm/shmem.c' l='1767' u='c' c='shmem_getpage_gfp'/>
<use f='linux-5.3.1/mm/shmem.c' l='2585' u='c' c='shmem_file_read_iter'/>
<use f='linux-5.3.1/mm/shmem.c' l='3135' u='c' c='shmem_put_link'/>
<def f='linux-5.3.1/mm/swap.c' l='372' ll='396' type='void mark_page_accessed(struct page * page)'/>
<dec f='linux-5.3.1/mm/swap.c' l='397' type='void mark_page_accessed(struct page * )'/>
<use f='linux-5.3.1/mm/swap.c' l='397' c='mark_page_accessed'/>
<use f='linux-5.3.1/mm/swap.c' l='397' u='a'/>
<doc f='linux-5.3.1/mm/swap.c' l='362'>/*
 * Mark a page as having seen activity.
 *
 * inactive,unreferenced	-&gt;	inactive,referenced
 * inactive,referenced		-&gt;	active,unreferenced
 * active,unreferenced		-&gt;	active,referenced
 *
 * When a newly allocated page is not yet visible, so safe for non-atomic ops,
 * __SetPageReferenced(page) may be substituted for mark_page_accessed(page).
 */</doc>
