<dec f='linux-5.3.1/include/linux/xarray.h' l='359' type='unsigned int xa_extract(struct xarray * , void ** dst, unsigned long start, unsigned long max, unsigned int n, xa_mark_t )'/>
<def f='linux-5.3.1/lib/xarray.c' l='1938' ll='1949' type='unsigned int xa_extract(struct xarray * xa, void ** dst, unsigned long start, unsigned long max, unsigned int n, xa_mark_t filter)'/>
<dec f='linux-5.3.1/lib/xarray.c' l='1950' type='unsigned int xa_extract(struct xarray * , void ** , unsigned long , unsigned long , unsigned int , xa_mark_t )'/>
<use f='linux-5.3.1/lib/xarray.c' l='1950' c='xa_extract'/>
<use f='linux-5.3.1/lib/xarray.c' l='1950' u='a'/>
<doc f='linux-5.3.1/lib/xarray.c' l='1910'>/**
 * xa_extract() - Copy selected entries from the XArray into a normal array.
 * @xa: The source XArray to copy from.
 * @dst: The buffer to copy entries into.
 * @start: The first index in the XArray eligible to be selected.
 * @max: The last index in the XArray eligible to be selected.
 * @n: The maximum number of entries to copy.
 * @filter: Selection criterion.
 *
 * Copies up to @n entries that match @filter from the XArray.  The
 * copied entries will have indices between @start and @max, inclusive.
 *
 * The @filter may be an XArray mark value, in which case entries which are
 * marked with that mark will be copied.  It may also be %XA_PRESENT, in
 * which case all entries which are not %NULL will be copied.
 *
 * The entries returned may not represent a snapshot of the XArray at a
 * moment in time.  For example, if another thread stores to index 5, then
 * index 10, calling xa_extract() may return the old contents of index 5
 * and the new contents of index 10.  Indices not modified while this
 * function is running will not be skipped.
 *
 * If you need stronger guarantees, holding the xa_lock across calls to this
 * function will prevent concurrent modification.
 *
 * Context: Any context.  Takes and releases the RCU lock.
 * Return: The number of entries copied.
 */</doc>
