<def f='linux-5.3.1/kernel/trace/trace.h' l='1398' ll='1418' type='bool __event_trigger_test_discard(struct trace_event_file * file, struct ring_buffer * buffer, struct ring_buffer_event * event, void * entry, enum event_trigger_type * tt)'/>
<use f='linux-5.3.1/kernel/trace/trace.h' l='1441' u='c' c='event_trigger_unlock_commit'/>
<use f='linux-5.3.1/kernel/trace/trace.h' l='1473' u='c' c='event_trigger_unlock_commit_regs'/>
<doc f='linux-5.3.1/kernel/trace/trace.h' l='1385'>/*
 * Helper function for event_trigger_unlock_commit{_regs}().
 * If there are event triggers attached to this event that requires
 * filtering against its fields, then they wil be called as the
 * entry already holds the field information of the current event.
 *
 * It also checks if the event should be discarded or not.
 * It is to be discarded if the event is soft disabled and the
 * event was only recorded to process triggers, or if the event
 * filter is active and this event did not match the filters.
 *
 * Returns true if the event is discarded, false otherwise.
 */</doc>
