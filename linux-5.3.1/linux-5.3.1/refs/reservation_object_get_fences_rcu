<dec f='linux-5.3.1/include/linux/reservation.h' l='282' type='int reservation_object_get_fences_rcu(struct reservation_object * obj, struct dma_fence ** pfence_excl, unsigned int * pshared_count, struct dma_fence *** pshared)'/>
<def f='linux-5.3.1/drivers/dma-buf/reservation.c' l='330' ll='420' type='int reservation_object_get_fences_rcu(struct reservation_object * obj, struct dma_fence ** pfence_excl, unsigned int * pshared_count, struct dma_fence *** pshared)'/>
<dec f='linux-5.3.1/drivers/dma-buf/reservation.c' l='421' type='int reservation_object_get_fences_rcu(struct reservation_object * , struct dma_fence ** , unsigned int * , struct dma_fence *** )'/>
<use f='linux-5.3.1/drivers/dma-buf/reservation.c' l='421' c='reservation_object_get_fences_rcu'/>
<use f='linux-5.3.1/drivers/dma-buf/reservation.c' l='421' u='a'/>
<doc f='linux-5.3.1/drivers/dma-buf/reservation.c' l='317'>/**
 * reservation_object_get_fences_rcu - Get an object&apos;s shared and exclusive
 * fences without update side lock held
 * @obj: the reservation object
 * @pfence_excl: the returned exclusive fence (or NULL)
 * @pshared_count: the number of shared fences returned
 * @pshared: the array of shared fence ptrs returned (array is krealloc&apos;d to
 * the required size, and must be freed by caller)
 *
 * Retrieve all fences from the reservation object. If the pointer for the
 * exclusive fence is not specified the fence is put into the array of the
 * shared fences as well. Returns either zero or -ENOMEM.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem.c' l='1418' u='c' c='drm_gem_fence_array_add_implicit'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_wait.c' l='47' u='c' c='i915_gem_object_wait_reservation'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_wait.c' l='147' u='c' c='i915_gem_object_wait_priority'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_request.c' l='1030' u='c' c='i915_request_await_object'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_sw_fence.c' l='529' u='c' c='i915_sw_fence_await_reservation'/>
