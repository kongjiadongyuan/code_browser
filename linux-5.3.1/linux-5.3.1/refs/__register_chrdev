<dec f='linux-5.3.1/include/linux/fs.h' l='2638' type='int __register_chrdev(unsigned int major, unsigned int baseminor, unsigned int count, const char * name, const struct file_operations * fops)'/>
<use f='linux-5.3.1/include/linux/fs.h' l='2649' u='c' c='register_chrdev'/>
<use f='linux-5.3.1/arch/x86/kernel/cpuid.c' l='152' u='c' c='cpuid_init'/>
<use f='linux-5.3.1/arch/x86/kernel/msr.c' l='203' u='c' c='msr_init'/>
<def f='linux-5.3.1/fs/char_dev.c' l='268' ll='300' type='int __register_chrdev(unsigned int major, unsigned int baseminor, unsigned int count, const char * name, const struct file_operations * fops)'/>
<dec f='linux-5.3.1/fs/char_dev.c' l='681' type='int __register_chrdev(unsigned int , unsigned int , unsigned int , const char * , const struct file_operations * )'/>
<use f='linux-5.3.1/fs/char_dev.c' l='681' c='__register_chrdev'/>
<use f='linux-5.3.1/fs/char_dev.c' l='681' u='a'/>
<doc f='linux-5.3.1/fs/char_dev.c' l='247'>/**
 * __register_chrdev() - create and register a cdev occupying a range of minors
 * @major: major device number or 0 for dynamic allocation
 * @baseminor: first of the requested range of minor numbers
 * @count: the number of minor numbers required
 * @name: name of this range of devices
 * @fops: file operations associated with this devices
 *
 * If @major == 0 this functions will dynamically allocate a major and return
 * its number.
 *
 * If @major &gt; 0 this function will attempt to reserve a device with the given
 * major number and will return zero on success.
 *
 * Returns a -ve errno on failure.
 *
 * The name of this device has nothing to do with the name of the device in
 * /dev. It only helps to keep track of the different owners of devices. If
 * your module name has only one type of devices it&apos;s ok to use e.g. the name
 * of the module here.
 */</doc>
