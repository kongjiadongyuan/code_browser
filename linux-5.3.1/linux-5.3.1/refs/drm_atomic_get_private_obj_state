<dec f='linux-5.3.1/include/drm/drm_atomic.h' l='453' type='struct drm_private_state * drm_atomic_get_private_obj_state(struct drm_atomic_state * state, struct drm_private_obj * obj)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='760' ll='803' type='struct drm_private_state * drm_atomic_get_private_obj_state(struct drm_atomic_state * state, struct drm_private_obj * obj)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='804' type='struct drm_private_state * drm_atomic_get_private_obj_state(struct drm_atomic_state * , struct drm_private_obj * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='804' c='drm_atomic_get_private_obj_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='804' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_atomic.c' l='747'>/**
 * drm_atomic_get_private_obj_state - get private object state
 * @state: global atomic state
 * @obj: private object to get the state for
 *
 * This function returns the private object state for the given private object,
 * allocating the state if needed. It will also grab the relevant private
 * object lock to make sure that the state is consistent.
 *
 * RETURNS:
 *
 * Either the allocated state or the error code encoded into a pointer.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3804' u='c' c='drm_atomic_get_mst_topology_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3804' u='c' c='drm_atomic_get_mst_topology_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3804' u='c' c='drm_atomic_get_mst_topology_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_bw.h' l='33' u='c' c='intel_atomic_get_bw_state'/>
