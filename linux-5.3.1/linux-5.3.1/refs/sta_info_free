<dec f='linux-5.3.1/net/mac80211/sta_info.h' l='742' type='void sta_info_free(struct ieee80211_local * local, struct sta_info * sta)'/>
<use f='linux-5.3.1/net/mac80211/cfg.c' l='1562' u='c' c='ieee80211_add_station'/>
<use f='linux-5.3.1/net/mac80211/ibss.c' l='718' u='c' c='ieee80211_ibss_disconnect'/>
<use f='linux-5.3.1/net/mac80211/mlme.c' l='5025' u='c' c='ieee80211_prep_connection'/>
<use f='linux-5.3.1/net/mac80211/ocb.c' l='221' u='c' c='ieee80211_ocb_leave'/>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='156' u='c' c='cleanup_single_sta'/>
<def f='linux-5.3.1/net/mac80211/sta_info.c' l='244' ll='259' type='void sta_info_free(struct ieee80211_local * local, struct sta_info * sta)'/>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='702' u='c' c='sta_info_insert_rcu'/>
<doc f='linux-5.3.1/net/mac80211/sta_info.c' l='233'>/**
 * sta_info_free - free STA
 *
 * @local: pointer to the global information
 * @sta: STA info to free
 *
 * This function must undo everything done by sta_info_alloc()
 * that may happen before sta_info_insert(). It may only be
 * called when sta_info_insert() has not been attempted (and
 * if that fails, the station is freed anyway.)
 */</doc>
