<dec f='linux-5.3.1/include/net/secure_seq.h' l='10' type='u32 secure_tcp_seq(__be32 saddr, __be32 daddr, __be16 sport, __be16 dport)'/>
<def f='linux-5.3.1/net/core/secure_seq.c' l='133' ll='143' type='u32 secure_tcp_seq(__be32 saddr, __be32 daddr, __be16 sport, __be16 dport)'/>
<dec f='linux-5.3.1/net/core/secure_seq.c' l='144' type='u32 secure_tcp_seq(__be32 , __be32 , __be16 , __be16 )'/>
<use f='linux-5.3.1/net/core/secure_seq.c' l='144' c='secure_tcp_seq'/>
<use f='linux-5.3.1/net/core/secure_seq.c' l='144' u='a'/>
<doc f='linux-5.3.1/net/core/secure_seq.c' l='128'>/* secure_tcp_seq_and_tsoff(a, b, 0, d) == secure_ipv4_port_ephemeral(a, b, d),
 * but fortunately, `sport&apos; cannot be 0 in any circumstances. If this changes,
 * it would be easy enough to have the former function use siphash_4u32, passing
 * the arguments as separate u32.
 */</doc>
<use f='linux-5.3.1/net/ipv4/tcp_ipv4.c' l='95' u='c' c='tcp_v4_init_seq'/>
<use f='linux-5.3.1/net/ipv4/tcp_ipv4.c' l='294' u='c' c='tcp_v4_connect'/>
