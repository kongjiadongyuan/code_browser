<dec f='linux-5.3.1/include/linux/rhashtable-types.h' l='130' type='int rhashtable_init(struct rhashtable * ht, const struct rhashtable_params * params)'/>
<use f='linux-5.3.1/ipc/util.c' l='119' u='c' c='ipc_init_ids'/>
<def f='linux-5.3.1/lib/rhashtable.c' l='1008' ll='1067' type='int rhashtable_init(struct rhashtable * ht, const struct rhashtable_params * params)'/>
<dec f='linux-5.3.1/lib/rhashtable.c' l='1068' type='int rhashtable_init(struct rhashtable * , const struct rhashtable_params * )'/>
<use f='linux-5.3.1/lib/rhashtable.c' l='1068' c='rhashtable_init'/>
<use f='linux-5.3.1/lib/rhashtable.c' l='1068' u='a'/>
<use f='linux-5.3.1/lib/rhashtable.c' l='1083' u='c' c='rhltable_init'/>
<doc f='linux-5.3.1/lib/rhashtable.c' l='966'>/**
 * rhashtable_init - initialize a new hash table
 * @ht:		hash table to be initialized
 * @params:	configuration parameters
 *
 * Initializes a new hash table based on the provided configuration
 * parameters. A table can be configured either with a variable or
 * fixed length key:
 *
 * Configuration Example 1: Fixed length keys
 * struct test_obj {
 *	int			key;
 *	void *			my_member;
 *	struct rhash_head	node;
 * };
 *
 * struct rhashtable_params params = {
 *	.head_offset = offsetof(struct test_obj, node),
 *	.key_offset = offsetof(struct test_obj, key),
 *	.key_len = sizeof(int),
 *	.hashfn = jhash,
 * };
 *
 * Configuration Example 2: Variable length keys
 * struct test_obj {
 *	[...]
 *	struct rhash_head	node;
 * };
 *
 * u32 my_hash_fn(const void *data, u32 len, u32 seed)
 * {
 *	struct test_obj *obj = data;
 *
 *	return [... hash ...];
 * }
 *
 * struct rhashtable_params params = {
 *	.head_offset = offsetof(struct test_obj, node),
 *	.hashfn = jhash,
 *	.obj_hashfn = my_hash_fn,
 * };
 */</doc>
<use f='linux-5.3.1/net/core/xdp.c' l='265' u='c' c='__mem_id_init_hash_table'/>
<use f='linux-5.3.1/net/ipv4/inet_fragment.c' l='176' u='c' c='fqdir_init'/>
<use f='linux-5.3.1/net/netlink/af_netlink.c' l='2765' u='c' c='netlink_proto_init'/>
<use f='linux-5.3.1/net/sched/cls_api.c' l='3336' u='c' c='tc_filter_init'/>
<use f='linux-5.3.1/net/xfrm/xfrm_policy.c' l='4016' u='c' c='xfrm_policy_init'/>
