<dec f='linux-5.3.1/include/linux/swap.h' l='415' type='struct page * lookup_swap_cache(swp_entry_t entry, struct vm_area_struct * vma, unsigned long addr)'/>
<use f='linux-5.3.1/mm/memory.c' l='2759' u='c' c='do_swap_page'/>
<use f='linux-5.3.1/mm/shmem.c' l='1629' u='c' c='shmem_swapin_page'/>
<def f='linux-5.3.1/mm/swap_state.c' l='310' ll='357' type='struct page * lookup_swap_cache(swp_entry_t entry, struct vm_area_struct * vma, unsigned long addr)'/>
<doc f='linux-5.3.1/mm/swap_state.c' l='304'>/*
 * Lookup a swap entry in the swap cache. A found page will be returned
 * unlocked and with its refcount incremented - we rely on the kernel
 * lock getting page table operations atomic even if we drop the page
 * lock before returning.
 */</doc>
