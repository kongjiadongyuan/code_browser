<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.h' l='181' type='intel_wakeref_t intel_runtime_pm_get_raw(struct intel_runtime_pm * rpm)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display_power.c' l='1846' u='c' c='intel_display_power_put_async_work'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display_power.c' l='1897' u='c' c='__intel_display_power_put_async'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.c' l='385' ll='388' type='intel_wakeref_t intel_runtime_pm_get_raw(struct intel_runtime_pm * rpm)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_runtime_pm.c' l='368'>/**
 * intel_runtime_pm_get_raw - grab a raw runtime pm reference
 * @rpm: the intel_runtime_pm structure
 *
 * This is the unlocked version of intel_display_power_is_enabled() and should
 * only be used from error capture and recovery code where deadlocks are
 * possible.
 * This function grabs a device-level runtime pm reference (mostly used for
 * asynchronous PM management from display code) and ensures that it is powered
 * up. Raw references are not considered during wakelock assert checks.
 *
 * Any runtime pm reference obtained by this function must have a symmetric
 * call to intel_runtime_pm_put_raw() to release the reference again.
 *
 * Returns: the wakeref cookie to pass to intel_runtime_pm_put_raw(), evaluates
 * as True if the wakeref was acquired, or False otherwise.
 */</doc>
