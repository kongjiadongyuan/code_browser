<dec f='linux-5.3.1/include/linux/memblock.h' l='147' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<use f='linux-5.3.1/include/linux/memblock.h' l='418' u='c' c='memblock_free_late'/>
<use f='linux-5.3.1/mm/memblock.c' l='386' u='c' c='memblock_discard'/>
<use f='linux-5.3.1/mm/memblock.c' l='393' u='c' c='memblock_discard'/>
<def f='linux-5.3.1/mm/memblock.c' l='1566' ll='1581' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<doc f='linux-5.3.1/mm/memblock.c' l='1557'>/**
 * __memblock_free_late - free pages directly to buddy allocator
 * @base: phys starting address of the  boot memory block
 * @size: size of the boot memory block in bytes
 *
 * This is only useful when the memblock allocator has already been torn
 * down, but we are still initializing the system.  Pages are released directly
 * to the buddy allocator.
 */</doc>
