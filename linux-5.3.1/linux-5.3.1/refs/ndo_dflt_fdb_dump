<dec f='linux-5.3.1/include/linux/rtnetlink.h' l='113' type='int ndo_dflt_fdb_dump(struct sk_buff * skb, struct netlink_callback * cb, struct net_device * dev, struct net_device * filter_dev, int * idx)'/>
<def f='linux-5.3.1/net/core/rtnetlink.c' l='3881' ll='3900' type='int ndo_dflt_fdb_dump(struct sk_buff * skb, struct netlink_callback * cb, struct net_device * dev, struct net_device * filter_dev, int * idx)'/>
<dec f='linux-5.3.1/net/core/rtnetlink.c' l='3901' type='int ndo_dflt_fdb_dump(struct sk_buff * , struct netlink_callback * , struct net_device * , struct net_device * , int * )'/>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='3901' c='ndo_dflt_fdb_dump'/>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='3901' u='a'/>
<use f='linux-5.3.1/net/core/rtnetlink.c' l='4069' u='c' c='rtnl_fdb_dump'/>
<doc f='linux-5.3.1/net/core/rtnetlink.c' l='3870'>/**
 * ndo_dflt_fdb_dump - default netdevice operation to dump an FDB table.
 * @skb: socket buffer to store message in
 * @cb: netlink callback
 * @dev: netdevice
 * @filter_dev: ignored
 * @idx: the number of FDB table entries dumped is added to *@idx
 *
 * Default netdevice operation to dump the existing unicast address list.
 * Returns number of addresses from list put in skb.
 */</doc>
