<dec f='linux-5.3.1/include/linux/fs.h' l='3281' type='int __generic_file_fsync(struct file * , loff_t , loff_t , int )'/>
<use f='linux-5.3.1/fs/ext4/fsync.c' l='120' u='c' c='ext4_sync_file'/>
<use f='linux-5.3.1/fs/fat/file.c' l='199' u='c' c='fat_file_fsync'/>
<def f='linux-5.3.1/fs/libfs.c' l='989' ll='1018' type='int __generic_file_fsync(struct file * file, loff_t start, loff_t end, int datasync)'/>
<dec f='linux-5.3.1/fs/libfs.c' l='1019' type='int __generic_file_fsync(struct file * , loff_t , loff_t , int )'/>
<use f='linux-5.3.1/fs/libfs.c' l='1019' c='__generic_file_fsync'/>
<use f='linux-5.3.1/fs/libfs.c' l='1019' u='a'/>
<use f='linux-5.3.1/fs/libfs.c' l='1037' u='c' c='generic_file_fsync'/>
<doc f='linux-5.3.1/fs/libfs.c' l='977'>/**
 * __generic_file_fsync - generic fsync implementation for simple filesystems
 *
 * @file:	file to synchronize
 * @start:	start offset in bytes
 * @end:	end offset in bytes (inclusive)
 * @datasync:	only synchronize essential metadata if true
 *
 * This is a generic implementation of the fsync method for simple
 * filesystems which track all non-inode metadata in the buffers list
 * hanging off the address_space structure.
 */</doc>
