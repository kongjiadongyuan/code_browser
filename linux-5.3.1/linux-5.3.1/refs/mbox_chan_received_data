<dec f='linux-5.3.1/include/linux/mailbox_controller.h' l='131' type='void mbox_chan_received_data(struct mbox_chan * chan, void * data)'/>
<doc f='linux-5.3.1/include/linux/mailbox_controller.h' l='131'>/* atomic */</doc>
<def f='linux-5.3.1/drivers/mailbox/mailbox.c' l='150' ll='155' type='void mbox_chan_received_data(struct mbox_chan * chan, void * mssg)'/>
<dec f='linux-5.3.1/drivers/mailbox/mailbox.c' l='156' type='void mbox_chan_received_data(struct mbox_chan * , void * )'/>
<use f='linux-5.3.1/drivers/mailbox/mailbox.c' l='156' c='mbox_chan_received_data'/>
<use f='linux-5.3.1/drivers/mailbox/mailbox.c' l='156' u='a'/>
<doc f='linux-5.3.1/drivers/mailbox/mailbox.c' l='140'>/**
 * mbox_chan_received_data - A way for controller driver to push data
 *				received from remote to the upper layer.
 * @chan: Pointer to the mailbox channel on which RX happened.
 * @mssg: Client specific message typecasted as void *
 *
 * After startup and before shutdown any data received on the chan
 * is passed on to the API via atomic mbox_chan_received_data().
 * The controller should ACK the RX only after this call returns.
 */</doc>
<use f='linux-5.3.1/drivers/mailbox/pcc.c' l='190' u='c' c='pcc_mbox_irq'/>
