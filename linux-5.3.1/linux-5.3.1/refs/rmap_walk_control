<def f='linux-5.3.1/include/linux/rmap.h' l='262' ll='273'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='275' c='rmap_walk'/>
<use f='linux-5.3.1/include/linux/rmap.h' l='276' c='rmap_walk_locked'/>
<size>40</size>
<doc f='linux-5.3.1/include/linux/rmap.h' l='253'>/*
 * rmap_walk_control: To control rmap traversing for specific needs
 *
 * arg: passed to rmap_one() and invalid_vma()
 * rmap_one: executed on each vma where page is mapped
 * done: for checking traversing termination condition
 * anon_lock: for getting anon_lock by optimized way rather than default
 * invalid_vma: for skipping uninterested vma
 */</doc>
<mbr r='rmap_walk_control::arg' o='0' t='void *'/>
<mbr r='rmap_walk_control::rmap_one' o='64' t='bool (*)(struct page *, struct vm_area_struct *, unsigned long, void *)'/>
<mbr r='rmap_walk_control::done' o='128' t='int (*)(struct page *)'/>
<mbr r='rmap_walk_control::anon_lock' o='192' t='struct anon_vma *(*)(struct page *)'/>
<mbr r='rmap_walk_control::invalid_vma' o='256' t='bool (*)(struct vm_area_struct *, void *)'/>
<use f='linux-5.3.1/include/linux/ksm.h' l='84' c='rmap_walk_ksm'/>
<size>40</size>
<use f='linux-5.3.1/mm/migrate.c' l='290' c='remove_migration_ptes'/>
<size>40</size>
<use f='linux-5.3.1/mm/rmap.c' l='846' c='page_referenced'/>
<use f='linux-5.3.1/mm/rmap.c' l='972' c='page_mkclean'/>
<use f='linux-5.3.1/mm/rmap.c' l='1710' c='try_to_unmap'/>
<use f='linux-5.3.1/mm/rmap.c' l='1753' c='try_to_munlock'/>
<use f='linux-5.3.1/mm/rmap.c' l='1777' c='rmap_walk_anon_lock'/>
<use f='linux-5.3.1/mm/rmap.c' l='1812' c='rmap_walk_anon'/>
<use f='linux-5.3.1/mm/rmap.c' l='1864' c='rmap_walk_file'/>
<use f='linux-5.3.1/mm/rmap.c' l='1906' c='rmap_walk'/>
<use f='linux-5.3.1/mm/rmap.c' l='1917' c='rmap_walk_locked'/>
<size>40</size>
