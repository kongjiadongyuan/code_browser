<dec f='linux-5.3.1/include/linux/kthread.h' l='9' type='struct task_struct * kthread_create_on_node(int (*)(void *) threadfn, void * data, int node, const char * namefmt)'/>
<use f='linux-5.3.1/crypto/algboss.c' l='187' macro='1' u='c' c='cryptomgr_schedule_probe'/>
<use f='linux-5.3.1/crypto/algboss.c' l='250' macro='1' u='c' c='cryptomgr_schedule_test'/>
<use f='linux-5.3.1/drivers/base/devtmpfs.c' l='430' macro='1' u='c' c='devtmpfs_init'/>
<use f='linux-5.3.1/drivers/block/loop.c' l='895' macro='1' u='c' c='loop_prepare_queue'/>
<use f='linux-5.3.1/drivers/char/hw_random/core.c' l='450' macro='1' u='c' c='start_khwrngd'/>
<use f='linux-5.3.1/drivers/md/md.c' l='7636' macro='1' u='c' c='md_register_thread'/>
<use f='linux-5.3.1/drivers/pcmcia/cs.c' l='169' macro='1' u='c' c='pcmcia_register_socket'/>
<use f='linux-5.3.1/drivers/scsi/hosts.c' l='479' macro='1' u='c' c='scsi_host_alloc'/>
<use f='linux-5.3.1/drivers/usb/storage/usb.c' l='790' macro='1' u='c' c='usb_stor_acquire_resources'/>
<use f='linux-5.3.1/fs/ext4/mmp.c' l='378' macro='1' u='c' c='ext4_multi_mount_protect'/>
<use f='linux-5.3.1/fs/ext4/super.c' l='3211' macro='1' u='c' c='ext4_run_lazyinit_thread'/>
<use f='linux-5.3.1/fs/io_uring.c' l='2750' macro='1' u='c' c='io_sq_offload_start'/>
<use f='linux-5.3.1/fs/jbd2/journal.c' l='279' macro='1' u='c' c='jbd2_journal_start_thread'/>
<use f='linux-5.3.1/fs/lockd/clntlock.c' l='220' macro='1' u='c' c='nlmclnt_recovery'/>
<use f='linux-5.3.1/fs/lockd/svc.c' l='400' macro='1' u='c' c='lockd_start_svc'/>
<use f='linux-5.3.1/fs/nfs/nfs4state.c' l='1240' macro='1' u='c' c='nfs4_schedule_state_manager'/>
<use f='linux-5.3.1/kernel/audit.c' l='975' macro='1' u='c' c='audit_send_reply'/>
<use f='linux-5.3.1/kernel/audit.c' l='1600' macro='1' u='c' c='audit_init'/>
<use f='linux-5.3.1/kernel/audit_tree.c' l='791' macro='1' u='c' c='audit_launch_prune'/>
<use f='linux-5.3.1/kernel/auditfilter.c' l='1180' macro='1' u='c' c='audit_list_rules_send'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='1240' macro='1' u='c' c='setup_irq_thread'/>
<use f='linux-5.3.1/kernel/irq/manage.c' l='1243' macro='1' u='c' c='setup_irq_thread'/>
<def f='linux-5.3.1/kernel/kthread.c' l='379' ll='392' type='struct task_struct * kthread_create_on_node(int (*)(void *) threadfn, void * data, int node, const char * namefmt)'/>
<dec f='linux-5.3.1/kernel/kthread.c' l='393' type='struct task_struct * kthread_create_on_node(int (*)(void *) , void * , int , const char * )'/>
<use f='linux-5.3.1/kernel/kthread.c' l='393' c='kthread_create_on_node'/>
<use f='linux-5.3.1/kernel/kthread.c' l='393' u='a'/>
<use f='linux-5.3.1/kernel/kthread.c' l='453' u='c' c='kthread_create_on_cpu'/>
<doc f='linux-5.3.1/kernel/kthread.c' l='356'>/**
 * kthread_create_on_node - create a kthread.
 * @threadfn: the function to run until signal_pending(current).
 * @data: data ptr for @threadfn.
 * @node: task and thread structures for the thread are allocated on this node
 * @namefmt: printf-style name for the thread.
 *
 * Description: This helper function creates and names a kernel
 * thread.  The thread will be stopped: use wake_up_process() to start
 * it.  See also kthread_run().  The new thread has SCHED_NORMAL policy and
 * is affine to all CPUs.
 *
 * If thread is going to be bound on a particular cpu, give its node
 * in @node, to get NUMA affinity for kthread stack, or else give NUMA_NO_NODE.
 * When woken, the thread will run @threadfn() with @data as its
 * argument. @threadfn() can either call do_exit() directly if it is a
 * standalone thread for which no one will call kthread_stop(), or
 * return when &apos;kthread_should_stop()&apos; is true (which means
 * kthread_stop() has been called).  The return value should be zero
 * or a negative error number; it will be passed to kthread_stop().
 *
 * Returns a task_struct or ERR_PTR(-ENOMEM) or ERR_PTR(-EINTR).
 */</doc>
<use f='linux-5.3.1/kernel/power/swap.c' l='723' macro='1' u='c' c='save_image_lzo'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='747' macro='1' u='c' c='save_image_lzo'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='1216' macro='1' u='c' c='load_image_lzo'/>
<use f='linux-5.3.1/kernel/power/swap.c' l='1240' macro='1' u='c' c='load_image_lzo'/>
<use f='linux-5.3.1/kernel/rcu/tree.c' l='3234' macro='1' u='c' c='rcu_spawn_gp_kthread'/>
<use f='linux-5.3.1/kernel/time/clocksource.c' l='142' macro='1' u='c' c='clocksource_watchdog_work'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='1929' u='c' c='create_worker'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='4196' macro='1' u='c' c='init_rescuer'/>
<use f='linux-5.3.1/mm/compaction.c' l='2679' macro='1' u='c' c='kcompactd_run'/>
<use f='linux-5.3.1/mm/oom_kill.c' l='676' macro='1' u='c' c='oom_init'/>
<use f='linux-5.3.1/mm/vmscan.c' l='4004' macro='1' u='c' c='kswapd_run'/>
<use f='linux-5.3.1/net/sunrpc/svc.c' l='726' u='c' c='svc_start_kthreads'/>
