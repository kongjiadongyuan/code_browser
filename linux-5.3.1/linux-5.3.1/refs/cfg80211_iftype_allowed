<dec f='linux-5.3.1/include/net/cfg80211.h' l='7334' type='bool cfg80211_iftype_allowed(struct wiphy * wiphy, enum nl80211_iftype iftype, bool is_4addr, u8 check_swif)'/>
<doc f='linux-5.3.1/include/net/cfg80211.h' l='7323'>/**
 * cfg80211_iftype_allowed - check whether the interface can be allowed
 * @wiphy: the wiphy
 * @iftype: interface type
 * @is_4addr: use_4addr flag, must be &apos;0&apos; when check_swif is &apos;1&apos;
 * @check_swif: check iftype against software interfaces
 *
 * Check whether the interface is allowed to operate; additionally, this API
 * can be used to check iftype against the software interfaces when
 * check_swif is &apos;1&apos;.
 */</doc>
<use f='linux-5.3.1/net/mac80211/util.c' l='3799' u='c' c='ieee80211_check_combinations'/>
<use f='linux-5.3.1/net/mac80211/util.c' l='3834' u='c' c='ieee80211_check_combinations'/>
<use f='linux-5.3.1/net/wireless/core.c' l='1413' u='c' c='cfg80211_netdev_notifier_call'/>
<use f='linux-5.3.1/net/wireless/nl80211.c' l='3487' u='c' c='nl80211_new_interface'/>
<use f='linux-5.3.1/net/wireless/util.c' l='1705' u='c' c='cfg80211_iter_combinations'/>
<use f='linux-5.3.1/net/wireless/util.c' l='1727' u='c' c='cfg80211_iter_combinations'/>
<def f='linux-5.3.1/net/wireless/util.c' l='2081' ll='2101' type='bool cfg80211_iftype_allowed(struct wiphy * wiphy, enum nl80211_iftype iftype, bool is_4addr, u8 check_swif)'/>
<dec f='linux-5.3.1/net/wireless/util.c' l='2102' type='bool cfg80211_iftype_allowed(struct wiphy * , enum nl80211_iftype , bool , u8 )'/>
<use f='linux-5.3.1/net/wireless/util.c' l='2102' c='cfg80211_iftype_allowed'/>
<use f='linux-5.3.1/net/wireless/util.c' l='2102' u='a'/>
