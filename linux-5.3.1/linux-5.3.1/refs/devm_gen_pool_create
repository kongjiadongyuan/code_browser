<dec f='linux-5.3.1/include/linux/genalloc.h' l='205' type='struct gen_pool * devm_gen_pool_create(struct device * dev, int min_alloc_order, int nid, const char * name)'/>
<use f='linux-5.3.1/drivers/usb/core/hcd.c' l='2924' u='c' c='usb_hcd_setup_local_mem'/>
<def f='linux-5.3.1/lib/genalloc.c' l='821' ll='857' type='struct gen_pool * devm_gen_pool_create(struct device * dev, int min_alloc_order, int nid, const char * name)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='858' type='struct gen_pool * devm_gen_pool_create(struct device * , int , int , const char * )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='858' c='devm_gen_pool_create'/>
<use f='linux-5.3.1/lib/genalloc.c' l='858' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='810'>/**
 * devm_gen_pool_create - managed gen_pool_create
 * @dev: device that provides the gen_pool
 * @min_alloc_order: log base 2 of number of bytes each bitmap bit represents
 * @nid: node selector for allocated gen_pool, %NUMA_NO_NODE for all nodes
 * @name: name of a gen_pool or NULL, identifies a particular gen_pool on device
 *
 * Create a new special memory pool that can be used to manage special purpose
 * memory not managed by the regular kmalloc/kfree interface. The pool will be
 * automatically destroyed by the device management code.
 */</doc>
