<def f='linux-5.3.1/include/linux/quota.h' l='97' ll='117' type='struct kqid make_kqid(struct user_namespace * from, enum quota_type type, qid_t qid)'/>
<doc f='linux-5.3.1/include/linux/quota.h' l='83'>/**
 *	make_kqid - Map a user-namespace, type, qid tuple into a kqid.
 *	@from: User namespace that the qid is in
 *	@type: The type of quota
 *	@qid: Quota identifier
 *
 *	Maps a user-namespace, type qid tuple into a kernel internal
 *	kqid, and returns that kqid.
 *
 *	When there is no mapping defined for the user-namespace, type,
 *	qid tuple an invalid kqid is returned.  Callers are expected to
 *	test for and handle handle invalid kqids being returned.
 *	Invalid kqids may be tested for using qid_valid().
 */</doc>
<use f='linux-5.3.1/fs/quota/quota.c' l='209' u='c' c='quota_getquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='235' u='c' c='quota_getnextquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='286' u='c' c='quota_setquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='571' u='c' c='quota_setxquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='632' u='c' c='quota_getxquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='659' u='c' c='quota_getnextxquota'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='731' u='c' c='qtree_get_next_id'/>
<use f='linux-5.3.1/fs/quota/quota_v2.c' l='246' u='c' c='v2r0_is_id'/>
<use f='linux-5.3.1/fs/quota/quota_v2.c' l='299' u='c' c='v2r1_is_id'/>
