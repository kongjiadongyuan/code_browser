<dec f='linux-5.3.1/include/linux/property.h' l='374' type='int fwnode_graph_parse_endpoint(const struct fwnode_handle * fwnode, struct fwnode_endpoint * endpoint)'/>
<use f='linux-5.3.1/drivers/base/property.c' l='992' u='c' c='fwnode_graph_get_remote_node'/>
<use f='linux-5.3.1/drivers/base/property.c' l='1054' u='c' c='fwnode_graph_get_endpoint_by_id'/>
<def f='linux-5.3.1/drivers/base/property.c' l='1094' ll='1100' type='int fwnode_graph_parse_endpoint(const struct fwnode_handle * fwnode, struct fwnode_endpoint * endpoint)'/>
<dec f='linux-5.3.1/drivers/base/property.c' l='1101' type='int fwnode_graph_parse_endpoint(const struct fwnode_handle * , struct fwnode_endpoint * )'/>
<use f='linux-5.3.1/drivers/base/property.c' l='1101' c='fwnode_graph_parse_endpoint'/>
<use f='linux-5.3.1/drivers/base/property.c' l='1101' u='a'/>
<doc f='linux-5.3.1/drivers/base/property.c' l='1085'>/**
 * fwnode_graph_parse_endpoint - parse common endpoint node properties
 * @fwnode: pointer to endpoint fwnode_handle
 * @endpoint: pointer to the fwnode endpoint data structure
 *
 * Parse @fwnode representing a graph endpoint node and store the
 * information in @endpoint. The caller must hold a reference to
 * @fwnode.
 */</doc>
