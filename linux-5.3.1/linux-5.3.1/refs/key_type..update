<dec f='linux-5.3.1/include/linux/key-type.h' l='100' type='int (*)(struct key *, struct key_preparsed_payload *)'/>
<offset>448</offset>
<doc f='linux-5.3.1/include/linux/key-type.h' l='95'>/* update a key of this type (optional)
	 * - this method should call key_payload_reserve() to recalculate the
	 *   quota consumption
	 * - the key must be locked against read when modifying
	 */</doc>
<use f='linux-5.3.1/security/keys/key.c' l='760' u='r' c='__key_update'/>
<use f='linux-5.3.1/security/keys/key.c' l='765' u='r' c='__key_update'/>
<use f='linux-5.3.1/security/keys/key.c' l='904' u='r' c='key_create_or_update'/>
<use f='linux-5.3.1/security/keys/key.c' l='919' u='r' c='key_create_or_update'/>
<use f='linux-5.3.1/security/keys/key.c' l='999' u='r' c='key_update'/>
<use f='linux-5.3.1/security/keys/key.c' l='1015' u='r' c='key_update'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='389' u='r' c='construct_alloc_key'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='28' u='w'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='48' u='w'/>
