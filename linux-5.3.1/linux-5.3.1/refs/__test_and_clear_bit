<def f='linux-5.3.1/include/asm-generic/bitops-instrumented.h' l='197' ll='201' type='bool __test_and_clear_bit(long nr, volatile unsigned long * addr)'/>
<use f='linux-5.3.1/include/asm-generic/bitops/le.h' l='95' u='c' c='__test_and_clear_bit_le'/>
<doc f='linux-5.3.1/include/asm-generic/bitops-instrumented.h' l='189'>/**
 * __test_and_clear_bit - Clear a bit and return its old value
 * @nr: Bit to clear
 * @addr: Address to count from
 *
 * This operation is non-atomic. If two instances of this operation race, one
 * can appear to succeed but actually fail.
 */</doc>
<use f='linux-5.3.1/arch/x86/events/intel/core.c' l='2375' u='c' c='handle_pmi_common'/>
<use f='linux-5.3.1/arch/x86/events/intel/core.c' l='2384' u='c' c='handle_pmi_common'/>
<use f='linux-5.3.1/arch/x86/events/intel/p4.c' l='1014' u='c' c='p4_pmu_handle_irq'/>
<use f='linux-5.3.1/arch/x86/events/intel/uncore.c' l='525' u='c' c='uncore_pmu_event_stop'/>
<use f='linux-5.3.1/arch/x86/kernel/process.c' l='388' u='c' c='amd_set_core_ssb_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_sw_fence.c' l='267' u='c' c='__i915_sw_fence_clear_checked_bit'/>
<use f='linux-5.3.1/drivers/input/ff-memless.c' l='364' u='c' c='ml_get_combo_effect'/>
<use f='linux-5.3.1/drivers/input/input.c' l='924' u='c' c='input_set_keycode'/>
<use f='linux-5.3.1/fs/nfs/nfs4client.c' l='238' u='c' c='nfs4_destroy_callback'/>
<use f='linux-5.3.1/fs/nfs/nfs4client.c' l='244' u='c' c='nfs4_shutdown_client'/>
<use f='linux-5.3.1/fs/nfs/nfs4client.c' l='248' u='c' c='nfs4_shutdown_client'/>
<use f='linux-5.3.1/kernel/time/timer.c' l='1383' u='c' c='__collect_expired_timers'/>
<use f='linux-5.3.1/lib/xarray.c' l='99' u='c' c='node_clear_mark'/>
<use f='linux-5.3.1/mm/mmap.c' l='3596' u='c' c='vm_unlock_anon_vma'/>
<use f='linux-5.3.1/net/rfkill/input.c' l='124' u='c' c='rfkill_op_handler'/>
<use f='linux-5.3.1/net/rfkill/input.c' l='125' u='c' c='rfkill_op_handler'/>
<def f='linux-5.3.1/tools/include/asm-generic/bitops/non-atomic.h' l='77' ll='85' type='int __test_and_clear_bit(int nr, volatile unsigned long * addr)'/>
<doc f='linux-5.3.1/tools/include/asm-generic/bitops/non-atomic.h' l='68'>/**
 * __test_and_clear_bit - Clear a bit and return its old value
 * @nr: Bit to clear
 * @addr: Address to count from
 *
 * This operation is non-atomic and can be reordered.
 * If two examples of this operation race, one can appear to succeed
 * but actually fail.  You must protect multiple accesses with a lock.
 */</doc>
