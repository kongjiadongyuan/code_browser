<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc_internal.h' l='90' type='int drm_mode_getresources(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_crtc_internal.h' l='89'>/* IOCTLs */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='649'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='649'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='649'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='649'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_mode_config.c' l='88' ll='169' type='int drm_mode_getresources(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_mode_config.c' l='74'>/**
 * drm_mode_getresources - get graphics configuration
 * @dev: drm device for the ioctl
 * @data: data pointer for the ioctl
 * @file_priv: drm file for the ioctl call
 *
 * Construct a set of configuration description structures and return
 * them to the user, including CRTC, connector and framebuffer configuration.
 *
 * Called by the user via ioctl.
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
