<dec f='linux-5.3.1/include/net/genetlink.h' l='153' type='int genl_register_family(struct genl_family * family)'/>
<use f='linux-5.3.1/drivers/acpi/event.c' l='150' u='c' c='acpi_event_genetlink_init'/>
<use f='linux-5.3.1/drivers/thermal/thermal_core.c' l='1536' u='c' c='genetlink_init'/>
<use f='linux-5.3.1/fs/quota/netlink.c' l='98' u='c' c='quota_init'/>
<use f='linux-5.3.1/kernel/taskstats.c' l='703' u='c' c='taskstats_init'/>
<use f='linux-5.3.1/net/ipv4/tcp_metrics.c' l='1028' u='c' c='tcp_metrics_init'/>
<use f='linux-5.3.1/net/ipv6/seg6.c' l='439' u='c' c='seg6_init'/>
<use f='linux-5.3.1/net/netlabel/netlabel_calipso.c' l='362' u='c' c='netlbl_calipso_genl_init'/>
<use f='linux-5.3.1/net/netlabel/netlabel_cipso_v4.c' l='783' u='c' c='netlbl_cipsov4_genl_init'/>
<use f='linux-5.3.1/net/netlabel/netlabel_mgmt.c' l='844' u='c' c='netlbl_mgmt_genl_init'/>
<use f='linux-5.3.1/net/netlabel/netlabel_unlabeled.c' l='1387' u='c' c='netlbl_unlabel_genl_init'/>
<def f='linux-5.3.1/net/netlink/genetlink.c' l='322' ll='393' type='int genl_register_family(struct genl_family * family)'/>
<dec f='linux-5.3.1/net/netlink/genetlink.c' l='394' type='int genl_register_family(struct genl_family * )'/>
<use f='linux-5.3.1/net/netlink/genetlink.c' l='394' c='genl_register_family'/>
<use f='linux-5.3.1/net/netlink/genetlink.c' l='394' u='a'/>
<use f='linux-5.3.1/net/netlink/genetlink.c' l='1075' u='c' c='genl_init'/>
<doc f='linux-5.3.1/net/netlink/genetlink.c' l='310'>/**
 * genl_register_family - register a generic netlink family
 * @family: generic netlink family
 *
 * Registers the specified family after validating it first. Only one
 * family may be registered with the same family name or identifier.
 *
 * The family&apos;s ops, multicast groups and module pointer must already
 * be assigned.
 *
 * Return 0 on success or a negative error code.
 */</doc>
<use f='linux-5.3.1/net/wireless/nl80211.c' l='16787' u='c' c='nl80211_init'/>
