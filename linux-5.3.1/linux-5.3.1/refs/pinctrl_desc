<def f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='130' ll='144'/>
<use f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='148' c='pinctrl_register_and_init'/>
<use f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='154' c='pinctrl_register'/>
<use f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='160' c='devm_pinctrl_register_and_init'/>
<use f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='166' c='devm_pinctrl_register'/>
<size>64</size>
<doc f='linux-5.3.1/include/linux/pinctrl/pinctrl.h' l='105'>/**
 * struct pinctrl_desc - pin controller descriptor, register this to pin
 * control subsystem
 * @name: name for the pin controller
 * @pins: an array of pin descriptors describing all the pins handled by
 *	this pin controller
 * @npins: number of descriptors in the array, usually just ARRAY_SIZE()
 *	of the pins field above
 * @pctlops: pin control operation vtable, to support global concepts like
 *	grouping of pins, this is optional.
 * @pmxops: pinmux operations vtable, if you support pinmuxing in your driver
 * @confops: pin config operations vtable, if you support pin configuration in
 *	your driver
 * @owner: module providing the pin controller, used for refcounting
 * @num_custom_params: Number of driver-specific custom parameters to be parsed
 *	from the hardware description
 * @custom_params: List of driver_specific custom parameters to be parsed from
 *	the hardware description
 * @custom_conf_items: Information how to print @params in debugfs, must be
 *	the same size as the @custom_params, i.e. @num_custom_params
 * @link_consumers: If true create a device link between pinctrl and its
 *	consumers (i.e. the devices requesting pin control states). This is
 *	sometimes necessary to ascertain the right suspend/resume order for
 *	example.
 */</doc>
<mbr r='pinctrl_desc::name' o='0' t='const char *'/>
<mbr r='pinctrl_desc::pins' o='64' t='const struct pinctrl_pin_desc *'/>
<mbr r='pinctrl_desc::npins' o='128' t='unsigned int'/>
<mbr r='pinctrl_desc::pctlops' o='192' t='const struct pinctrl_ops *'/>
<mbr r='pinctrl_desc::pmxops' o='256' t='const struct pinmux_ops *'/>
<mbr r='pinctrl_desc::confops' o='320' t='const struct pinconf_ops *'/>
<mbr r='pinctrl_desc::owner' o='384' t='struct module *'/>
<mbr r='pinctrl_desc::link_consumers' o='448' t='bool'/>
