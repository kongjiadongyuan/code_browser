<dec f='linux-5.3.1/include/linux/clk.h' l='150' type='int clk_set_duty_cycle(struct clk * clk, unsigned int num, unsigned int den)'/>
<doc f='linux-5.3.1/include/linux/clk.h' l='141'>/**
 * clk_set_duty_cycle - adjust the duty cycle ratio of a clock signal
 * @clk: clock signal source
 * @num: numerator of the duty cycle ratio to be applied
 * @den: denominator of the duty cycle ratio to be applied
 *
 * Adjust the duty cycle of a clock signal by the specified ratio. Returns 0 on
 * success, -EERROR otherwise.
 */</doc>
<def f='linux-5.3.1/drivers/clk/clk.c' l='2758' ll='2786' type='int clk_set_duty_cycle(struct clk * clk, unsigned int num, unsigned int den)'/>
<dec f='linux-5.3.1/drivers/clk/clk.c' l='2787' type='int clk_set_duty_cycle(struct clk * , unsigned int , unsigned int )'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='2787' c='clk_set_duty_cycle'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='2787' u='a'/>
<doc f='linux-5.3.1/drivers/clk/clk.c' l='2747'>/**
 * clk_set_duty_cycle - adjust the duty cycle ratio of a clock signal
 * @clk: clock signal source
 * @num: numerator of the duty cycle ratio to be applied
 * @den: denominator of the duty cycle ratio to be applied
 *
 * Apply the duty cycle ratio if the ratio is valid and the clock can
 * perform this operation
 *
 * Returns (0) on success, a negative errno otherwise.
 */</doc>
