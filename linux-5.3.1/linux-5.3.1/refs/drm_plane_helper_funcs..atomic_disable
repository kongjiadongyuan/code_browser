<dec f='linux-5.3.1/include/drm/drm_modeset_helper_vtables.h' l='1195' type='void (*)(struct drm_plane *, struct drm_plane_state *)'/>
<offset>256</offset>
<doc f='linux-5.3.1/include/drm/drm_modeset_helper_vtables.h' l='1173'>/**
	 * @atomic_disable:
	 *
	 * Drivers should use this function to unconditionally disable a plane.
	 * This hook is called in-between the
	 * &amp;drm_crtc_helper_funcs.atomic_begin and
	 * drm_crtc_helper_funcs.atomic_flush callbacks. It is an alternative to
	 * @atomic_update, which will be called for disabling planes, too, if
	 * the @atomic_disable hook isn&apos;t implemented.
	 *
	 * This hook is also useful to disable planes in preparation of a modeset,
	 * by calling drm_atomic_helper_disable_planes_on_crtc() from the
	 * &amp;drm_crtc_helper_funcs.disable hook.
	 *
	 * Note that the power state of the display pipe when this function is
	 * called depends upon the exact helpers and calling sequence the driver
	 * has picked. See drm_atomic_helper_commit_planes() for a discussion of
	 * the tradeoffs and variants of plane commit helpers.
	 *
	 * This callback is used by the atomic modeset helpers and by the
	 * transitional plane helpers, but it is optional.
	 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2450' u='r' c='drm_atomic_helper_commit_planes'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2459' u='r' c='drm_atomic_helper_commit_planes'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2532' u='r' c='drm_atomic_helper_commit_planes_on_crtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2533' u='r' c='drm_atomic_helper_commit_planes_on_crtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2579' u='r' c='drm_atomic_helper_disable_planes_on_crtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2580' u='r' c='drm_atomic_helper_disable_planes_on_crtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_helper.c' l='2581' u='r' c='drm_atomic_helper_disable_planes_on_crtc'/>
