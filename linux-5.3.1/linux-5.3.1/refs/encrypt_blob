<dec f='linux-5.3.1/include/crypto/public_key.h' l='75' type='int encrypt_blob(struct kernel_pkey_params * , const void * , void * )'/>
<def f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='80' ll='85' type='int encrypt_blob(struct kernel_pkey_params * params, const void * data, void * enc)'/>
<dec f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='86' type='int encrypt_blob(struct kernel_pkey_params * , const void * , void * )'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='86' c='encrypt_blob'/>
<use f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='86' u='a'/>
<doc f='linux-5.3.1/crypto/asymmetric_keys/signature.c' l='67'>/**
 * encrypt_blob - Encrypt data using an asymmetric key
 * @params: Various parameters
 * @data: Data blob to be encrypted, length params-&gt;data_len
 * @enc: Encrypted data buffer, length params-&gt;enc_len
 *
 * Encrypt the specified data blob using the private key specified by
 * params-&gt;key.  The encrypted data is wrapped in an encoding if
 * params-&gt;encoding is specified (eg. &quot;pkcs1&quot;).
 *
 * Returns the length of the data placed in the encrypted data buffer or an
 * error.
 */</doc>
