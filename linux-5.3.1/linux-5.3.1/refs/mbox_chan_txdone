<dec f='linux-5.3.1/include/linux/mailbox_controller.h' l='132' type='void mbox_chan_txdone(struct mbox_chan * chan, int r)'/>
<doc f='linux-5.3.1/include/linux/mailbox_controller.h' l='132'>/* atomic */</doc>
<use f='linux-5.3.1/drivers/acpi/cppc_acpi.c' l='320' u='c' c='send_pcc_cmd'/>
<def f='linux-5.3.1/drivers/mailbox/mailbox.c' l='168' ll='177' type='void mbox_chan_txdone(struct mbox_chan * chan, int r)'/>
<dec f='linux-5.3.1/drivers/mailbox/mailbox.c' l='178' type='void mbox_chan_txdone(struct mbox_chan * , int )'/>
<use f='linux-5.3.1/drivers/mailbox/mailbox.c' l='178' c='mbox_chan_txdone'/>
<use f='linux-5.3.1/drivers/mailbox/mailbox.c' l='178' u='a'/>
<doc f='linux-5.3.1/drivers/mailbox/mailbox.c' l='158'>/**
 * mbox_chan_txdone - A way for controller driver to notify the
 *			framework that the last TX has completed.
 * @chan: Pointer to the mailbox chan on which TX happened.
 * @r: Status of last TX - OK or ERROR
 *
 * The controller that has IRQ for TX ACK calls this atomic API
 * to tick the TX state machine. It works only if txdone_irq
 * is set by the controller.
 */</doc>
