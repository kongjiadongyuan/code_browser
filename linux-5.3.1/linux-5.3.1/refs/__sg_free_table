<dec f='linux-5.3.1/include/linux/scatterlist.h' l='269' type='void __sg_free_table(struct sg_table * , unsigned int , unsigned int , sg_free_fn * )'/>
<def f='linux-5.3.1/lib/scatterlist.c' l='192' ll='231' type='void __sg_free_table(struct sg_table * table, unsigned int max_ents, unsigned int nents_first_chunk, sg_free_fn * free_fn)'/>
<dec f='linux-5.3.1/lib/scatterlist.c' l='232' type='void __sg_free_table(struct sg_table * , unsigned int , unsigned int , sg_free_fn * )'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='232' c='__sg_free_table'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='232' u='a'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='241' u='c' c='sg_free_table'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='362' u='c' c='sg_alloc_table'/>
<doc f='linux-5.3.1/lib/scatterlist.c' l='178'>/**
 * __sg_free_table - Free a previously mapped sg table
 * @table:	The sg table header to use
 * @max_ents:	The maximum number of entries per single scatterlist
 * @nents_first_chunk: Number of entries int the (preallocated) first
 * 	scatterlist chunk, 0 means no such preallocated first chunk
 * @free_fn:	Free function
 *
 *  Description:
 *    Free an sg table previously allocated and setup with
 *    __sg_alloc_table().  The @max_ents value must be identical to
 *    that previously used with __sg_alloc_table().
 *
 **/</doc>
<use f='linux-5.3.1/lib/sg_pool.c' l='93' u='c' c='sg_free_table_chained'/>
