<dec f='linux-5.3.1/include/linux/ioport.h' l='289' type='int walk_iomem_res_desc(unsigned long desc, unsigned long flags, u64 start, u64 end, void * arg, int (*)(struct resource *, void *) func)'/>
<use f='linux-5.3.1/arch/x86/kernel/machine_kexec_64.c' l='63' u='c' c='map_acpi_tables'/>
<use f='linux-5.3.1/arch/x86/kernel/machine_kexec_64.c' l='69' u='c' c='map_acpi_tables'/>
<def f='linux-5.3.1/kernel/resource.c' l='431' ll='435' type='int walk_iomem_res_desc(unsigned long desc, unsigned long flags, u64 start, u64 end, void * arg, int (*)(struct resource *, void *) func)'/>
<dec f='linux-5.3.1/kernel/resource.c' l='436' type='int walk_iomem_res_desc(unsigned long , unsigned long , u64 , u64 , void * , int (*)(struct resource *, void *) )'/>
<use f='linux-5.3.1/kernel/resource.c' l='436' c='walk_iomem_res_desc'/>
<use f='linux-5.3.1/kernel/resource.c' l='436' u='a'/>
<doc f='linux-5.3.1/kernel/resource.c' l='415'>/**
 * Walks through iomem resources and calls func() with matching resource
 * ranges. This walks through whole tree and not just first level children.
 * All the memory ranges which overlap start,end and also match flags and
 * desc are valid candidates.
 *
 * @desc: I/O resource descriptor. Use IORES_DESC_NONE to skip @desc check.
 * @flags: I/O resource flags
 * @start: start addr
 * @end: end addr
 * @arg: function argument for the callback @func
 * @func: callback function that is called for each qualifying resource area
 *
 * NOTE: For a new descriptor search, define a new IORES_DESC in
 * &lt;linux/ioport.h&gt; and set it in &apos;desc&apos; of a target resource entry.
 */</doc>
