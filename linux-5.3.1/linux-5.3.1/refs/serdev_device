<use f='linux-5.3.1/include/linux/serdev.h' l='28'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='29'/>
<def f='linux-5.3.1/include/linux/serdev.h' l='41' ll='48'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='50' c='to_serdev_device'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='52' c='to_serdev_device'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='52' c='to_serdev_device'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='52' c='to_serdev_device'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='64'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='65'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='106'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='115' c='serdev_device_get_drvdata'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='120' c='serdev_device_set_drvdata'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='129' c='serdev_device_put'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='135' c='serdev_device_set_client_ops'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='163' c='serdev_device_alloc'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='164' c='serdev_device_add'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='165' c='serdev_device_remove'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='173' c='serdev_controller_write_wakeup'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='185' c='serdev_controller_receive_buf'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='232' c='serdev_device_open'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='236' c='serdev_device_close'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='237' c='serdev_device_set_baudrate'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='241' c='serdev_device_set_flow_control'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='242' c='serdev_device_write_buf'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='248' c='serdev_device_wait_until_sent'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='249' c='serdev_device_get_tiocm'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='253' c='serdev_device_set_tiocm'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='257' c='serdev_device_write'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='262' c='serdev_device_write_flush'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='263' c='serdev_device_write_room'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='273' c='serdev_device_get_cts'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='279' c='serdev_device_wait_for_cts'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='295' c='serdev_device_set_rts'/>
<use f='linux-5.3.1/include/linux/serdev.h' l='303' c='serdev_device_set_parity'/>
<size>800</size>
<doc f='linux-5.3.1/include/linux/serdev.h' l='32'>/**
 * struct serdev_device - Basic representation of an serdev device
 * @dev:	Driver model representation of the device.
 * @nr:		Device number on serdev bus.
 * @ctrl:	serdev controller managing this device.
 * @ops:	Device operations.
 * @write_comp	Completion used by serdev_device_write() internally
 * @write_lock	Lock to serialize access when writing data
 */</doc>
<mbr r='serdev_device::dev' o='0' t='struct device'/>
<mbr r='serdev_device::nr' o='5696' t='int'/>
<mbr r='serdev_device::ctrl' o='5760' t='struct serdev_controller *'/>
<mbr r='serdev_device::ops' o='5824' t='const struct serdev_device_ops *'/>
<mbr r='serdev_device::write_comp' o='5888' t='struct completion'/>
<mbr r='serdev_device::write_lock' o='6144' t='struct mutex'/>
