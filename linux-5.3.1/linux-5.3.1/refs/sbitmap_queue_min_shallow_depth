<dec f='linux-5.3.1/include/linux/sbitmap.h' l='486' type='void sbitmap_queue_min_shallow_depth(struct sbitmap_queue * sbq, unsigned int min_shallow_depth)'/>
<doc f='linux-5.3.1/include/linux/sbitmap.h' l='472'>/**
 * sbitmap_queue_min_shallow_depth() - Inform a &amp;struct sbitmap_queue of the
 * minimum shallow depth that will be used.
 * @sbq: Bitmap queue in question.
 * @min_shallow_depth: The minimum shallow depth that will be passed to
 * sbitmap_queue_get_shallow() or __sbitmap_queue_get_shallow().
 *
 * sbitmap_queue_clear() batches wakeups as an optimization. The batch size
 * depends on the depth of the bitmap. Since the shallow allocation functions
 * effectively operate with a different depth, the shallow depth must be taken
 * into account when calculating the batch size. This function must be called
 * with the minimum shallow depth that will be used. Failure to do so can result
 * in missed wakeups.
 */</doc>
<use f='linux-5.3.1/block/kyber-iosched.c' l='505' u='c' c='kyber_init_hctx'/>
<def f='linux-5.3.1/lib/sbitmap.c' l='497' ll='502' type='void sbitmap_queue_min_shallow_depth(struct sbitmap_queue * sbq, unsigned int min_shallow_depth)'/>
<dec f='linux-5.3.1/lib/sbitmap.c' l='503' type='void sbitmap_queue_min_shallow_depth(struct sbitmap_queue * , unsigned int )'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='503' c='sbitmap_queue_min_shallow_depth'/>
<use f='linux-5.3.1/lib/sbitmap.c' l='503' u='a'/>
