<dec f='linux-5.3.1/include/linux/trace_events.h' l='40' type='const char * trace_print_hex_seq(struct trace_seq * p, const unsigned char * buf, int len, bool concatenate)'/>
<use f='linux-5.3.1/include/trace/events/scsi.h' l='200' macro='1' u='c' c='trace_raw_output_scsi_dispatch_cmd_start'/>
<use f='linux-5.3.1/include/trace/events/scsi.h' l='242' macro='1' u='c' c='trace_raw_output_scsi_dispatch_cmd_error'/>
<use f='linux-5.3.1/include/trace/events/scsi.h' l='287' macro='1' u='c' c='trace_raw_output_scsi_cmd_done_timeout_template'/>
<def f='linux-5.3.1/kernel/trace/trace_output.c' l='216' ll='229' type='const char * trace_print_hex_seq(struct trace_seq * p, const unsigned char * buf, int buf_len, bool concatenate)'/>
<dec f='linux-5.3.1/kernel/trace/trace_output.c' l='230' type='const char * trace_print_hex_seq(struct trace_seq * , const unsigned char * , int , bool )'/>
<use f='linux-5.3.1/kernel/trace/trace_output.c' l='230' c='trace_print_hex_seq'/>
<use f='linux-5.3.1/kernel/trace/trace_output.c' l='230' u='a'/>
<doc f='linux-5.3.1/kernel/trace/trace_output.c' l='205'>/**
 * trace_print_hex_seq - print buffer as hex sequence
 * @p: trace seq struct to write to
 * @buf: The buffer to print
 * @buf_len: Length of @buf in bytes
 * @concatenate: Print @buf as single hex string or with spacing
 *
 * Prints the passed buffer as a hex sequence either as a whole,
 * single hex string if @concatenate is true or with spacing after
 * each byte in case @concatenate is false.
 */</doc>
