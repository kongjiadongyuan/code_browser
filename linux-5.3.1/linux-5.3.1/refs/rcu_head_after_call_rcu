<def f='linux-5.3.1/include/linux/rcupdate.h' l='879' ll='888' type='bool rcu_head_after_call_rcu(struct callback_head * rhp, rcu_callback_t f)'/>
<doc f='linux-5.3.1/include/linux/rcupdate.h' l='866'>/**
 * rcu_head_after_call_rcu - Has this rcu_head been passed to call_rcu()?
 * @rhp: The rcu_head structure to test.
 * @f: The function passed to call_rcu() along with @rhp.
 *
 * Returns @true if the @rhp has been passed to call_rcu() with @func,
 * and @false otherwise.  Emits a warning in any other case, including
 * the case where @rhp has already been invoked after a grace period.
 * Calls to this function must not race with callback invocation.  One way
 * to avoid such races is to enclose the call to rcu_head_after_call_rcu()
 * in an RCU read-side critical section that includes a read-side fetch
 * of the pointer to the structure containing @rhp.
 */</doc>
<use f='linux-5.3.1/lib/rhashtable.c' l='935' u='c' c='rhashtable_walk_stop'/>
