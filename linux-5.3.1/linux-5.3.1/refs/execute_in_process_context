<dec f='linux-5.3.1/include/linux/workqueue.h' l='455' type='int execute_in_process_context(work_func_t fn, struct execute_work * )'/>
<use f='linux-5.3.1/drivers/scsi/scsi_sysfs.c' l='489' u='c' c='scsi_device_dev_release'/>
<def f='linux-5.3.1/kernel/workqueue.c' l='3312' ll='3323' type='int execute_in_process_context(work_func_t fn, struct execute_work * ew)'/>
<dec f='linux-5.3.1/kernel/workqueue.c' l='3324' type='int execute_in_process_context(work_func_t , struct execute_work * )'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='3324' c='execute_in_process_context'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='3324' u='a'/>
<doc f='linux-5.3.1/kernel/workqueue.c' l='3300'>/**
 * execute_in_process_context - reliably execute the routine with user context
 * @fn:		the function to execute
 * @ew:		guaranteed storage for the execute work structure (must
 *		be available when the work executes)
 *
 * Executes the function immediately if process context is available,
 * otherwise schedules the function for delayed execution.
 *
 * Return:	0 - function was executed
 *		1 - function was scheduled for execution
 */</doc>
