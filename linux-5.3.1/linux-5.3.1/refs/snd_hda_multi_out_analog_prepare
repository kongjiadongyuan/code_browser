<dec f='linux-5.3.1/sound/pci/hda/hda_local.h' l='248' type='int snd_hda_multi_out_analog_prepare(struct hda_codec * codec, struct hda_multi_out * mout, unsigned int stream_tag, unsigned int format, struct snd_pcm_substream * substream)'/>
<def f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3724' ll='3792' type='int snd_hda_multi_out_analog_prepare(struct hda_codec * codec, struct hda_multi_out * mout, unsigned int stream_tag, unsigned int format, struct snd_pcm_substream * substream)'/>
<dec f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3793' type='int snd_hda_multi_out_analog_prepare(struct hda_codec * , struct hda_multi_out * , unsigned int , unsigned int , struct snd_pcm_substream * )'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3793' c='snd_hda_multi_out_analog_prepare'/>
<use f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3793' u='a'/>
<doc f='linux-5.3.1/sound/pci/hda/hda_codec.c' l='3713'>/**
 * snd_hda_multi_out_analog_prepare - Preapre the analog outputs.
 * @codec: the HDA codec
 * @mout: hda_multi_out object
 * @stream_tag: stream tag to assign
 * @format: format id to assign
 * @substream: PCM substream to assign
 *
 * Set up the i/o for analog out.
 * When the digital out is available, copy the front out to digital out, too.
 */</doc>
