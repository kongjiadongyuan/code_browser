<dec f='linux-5.3.1/include/linux/clk-provider.h' l='392' type='struct clk_hw * clk_hw_register_gate(struct device * dev, const char * name, const char * parent_name, unsigned long flags, void * reg, u8 bit_idx, u8 clk_gate_flags, spinlock_t * lock)'/>
<def f='linux-5.3.1/drivers/clk/clk-gate.c' l='137' ll='180' type='struct clk_hw * clk_hw_register_gate(struct device * dev, const char * name, const char * parent_name, unsigned long flags, void * reg, u8 bit_idx, u8 clk_gate_flags, spinlock_t * lock)'/>
<dec f='linux-5.3.1/drivers/clk/clk-gate.c' l='181' type='struct clk_hw * clk_hw_register_gate(struct device * , const char * , const char * , unsigned long , void * , u8 , u8 , spinlock_t * )'/>
<use f='linux-5.3.1/drivers/clk/clk-gate.c' l='181' c='clk_hw_register_gate'/>
<use f='linux-5.3.1/drivers/clk/clk-gate.c' l='181' u='a'/>
<use f='linux-5.3.1/drivers/clk/clk-gate.c' l='190' u='c' c='clk_register_gate'/>
<doc f='linux-5.3.1/drivers/clk/clk-gate.c' l='126'>/**
 * clk_hw_register_gate - register a gate clock with the clock framework
 * @dev: device that is registering this clock
 * @name: name of this clock
 * @parent_name: name of this clock&apos;s parent
 * @flags: framework-specific flags for this clock
 * @reg: register address to control gating of this clock
 * @bit_idx: which bit in the register controls gating of this clock
 * @clk_gate_flags: gate-specific flags for this clock
 * @lock: shared register lock for this clock
 */</doc>
