<dec f='linux-5.3.1/include/net/mac80211.h' l='3890' type='int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *)'/>
<offset>2944</offset>
<doc f='linux-5.3.1/include/net/mac80211.h' l='3862'>/**
	 * @ampdu_action:
	 * Perform a certain A-MPDU action.
	 * The RA/TID combination determines the destination and TID we want
	 * the ampdu action to be performed for. The action is defined through
	 * ieee80211_ampdu_mlme_action.
	 * When the action is set to %IEEE80211_AMPDU_TX_OPERATIONAL the driver
	 * may neither send aggregates containing more subframes than @buf_size
	 * nor send aggregates in a way that lost frames would exceed the
	 * buffer size. If just limiting the aggregate size, this would be
	 * possible with a buf_size of 8:
	 *
	 * - ``TX: 1.....7``
	 * - ``RX:  2....7`` (lost frame #1)
	 * - ``TX:        8..1...``
	 *
	 * which is invalid since #1 was now re-transmitted well past the
	 * buffer size of 8. Correct ways to retransmit #1 would be:
	 *
	 * - ``TX:        1   or``
	 * - ``TX:        18  or``
	 * - ``TX:        81``
	 *
	 * Even ``189`` would be wrong since 1 could be lost again.
	 *
	 * Returns a negative error code on failure.
	 * The callback can sleep.
	 */</doc>
<use f='linux-5.3.1/net/mac80211/agg-tx.c' l='577' u='r' c='ieee80211_start_tx_ba_session'/>
<use f='linux-5.3.1/net/mac80211/agg-tx.c' l='826' u='r' c='ieee80211_stop_tx_ba_session'/>
<use f='linux-5.3.1/net/mac80211/driver-ops.c' l='337' u='r' c='drv_ampdu_action'/>
<use f='linux-5.3.1/net/mac80211/driver-ops.c' l='338' u='r' c='drv_ampdu_action'/>
