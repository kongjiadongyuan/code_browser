<dec f='linux-5.3.1/include/sound/pcm.h' l='954' type='int snd_interval_list(struct snd_interval * i, unsigned int count, const unsigned int * list, unsigned int mask)'/>
<def f='linux-5.3.1/sound/core/pcm_lib.c' l='993' ll='1015' type='int snd_interval_list(struct snd_interval * i, unsigned int count, const unsigned int * list, unsigned int mask)'/>
<dec f='linux-5.3.1/sound/core/pcm_lib.c' l='1016' type='int snd_interval_list(struct snd_interval * , unsigned int , const unsigned int * , unsigned int )'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1016' c='snd_interval_list'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1016' u='a'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1244' u='c' c='snd_pcm_hw_rule_list'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1451' u='c' c='snd_pcm_hw_rule_pow2'/>
<use f='linux-5.3.1/sound/core/pcm_lib.c' l='1480' u='c' c='snd_pcm_hw_rule_noresample_func'/>
<doc f='linux-5.3.1/sound/core/pcm_lib.c' l='979'>/**
 * snd_interval_list - refine the interval value from the list
 * @i: the interval value to refine
 * @count: the number of elements in the list
 * @list: the value list
 * @mask: the bit-mask to evaluate
 *
 * Refines the interval value from the list.
 * When mask is non-zero, only the elements corresponding to bit 1 are
 * evaluated.
 *
 * Return: Positive if the value is changed, zero if it&apos;s not changed, or a
 * negative error code.
 */</doc>
<use f='linux-5.3.1/sound/core/pcm_native.c' l='2185' u='c' c='snd_pcm_hw_rule_rate'/>
