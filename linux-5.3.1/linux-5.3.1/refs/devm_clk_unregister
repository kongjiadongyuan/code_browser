<dec f='linux-5.3.1/include/linux/clk-provider.h' l='800' type='void devm_clk_unregister(struct device * dev, struct clk * clk)'/>
<def f='linux-5.3.1/drivers/clk/clk.c' l='3923' ll='3926' type='void devm_clk_unregister(struct device * dev, struct clk * clk)'/>
<dec f='linux-5.3.1/drivers/clk/clk.c' l='3927' type='void devm_clk_unregister(struct device * , struct clk * )'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='3927' c='devm_clk_unregister'/>
<use f='linux-5.3.1/drivers/clk/clk.c' l='3927' u='a'/>
<doc f='linux-5.3.1/drivers/clk/clk.c' l='3915'>/**
 * devm_clk_unregister - resource managed clk_unregister()
 * @clk: clock to unregister
 *
 * Deallocate a clock allocated with devm_clk_register(). Normally
 * this function will not need to be called and the resource management
 * code will ensure that the resource is freed.
 */</doc>
