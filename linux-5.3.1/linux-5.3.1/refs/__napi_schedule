<dec f='linux-5.3.1/include/linux/netdevice.h' l='421' type='void __napi_schedule(struct napi_struct * n)'/>
<use f='linux-5.3.1/include/linux/netdevice.h' l='441' u='c' c='napi_schedule'/>
<use f='linux-5.3.1/include/linux/netdevice.h' l='460' u='c' c='napi_reschedule'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e100.c' l='2214' u='c' c='e100_intr'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3775' u='c' c='e1000_intr'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1809' u='c' c='e1000_intr_msi'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1890' u='c' c='e1000_intr'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1960' u='c' c='e1000_intr_msix_rx'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='3663' u='c' c='nv_nic_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/nvidia/forcedeth.c' l='3696' u='c' c='nv_nic_irq_optimized'/>
<use f='linux-5.3.1/drivers/net/ethernet/realtek/8139too.c' l='2194' u='c' c='rtl8139_interrupt'/>
<def f='linux-5.3.1/net/core/dev.c' l='5972' ll='5979' type='void __napi_schedule(struct napi_struct * n)'/>
<dec f='linux-5.3.1/net/core/dev.c' l='5980' type='void __napi_schedule(struct napi_struct * )'/>
<use f='linux-5.3.1/net/core/dev.c' l='5980' c='__napi_schedule'/>
<use f='linux-5.3.1/net/core/dev.c' l='5980' u='a'/>
<use f='linux-5.3.1/net/core/dev.c' l='6079' u='c' c='napi_complete_done'/>
<use f='linux-5.3.1/net/core/dev.c' l='6129' u='c' c='busy_poll_stop'/>
<doc f='linux-5.3.1/net/core/dev.c' l='5965'>/**
 * __napi_schedule - schedule for receive
 * @n: entry to schedule
 *
 * The entry&apos;s receive function will be scheduled to run.
 * Consider using __napi_schedule_irqoff() if hard irqs are masked.
 */</doc>
