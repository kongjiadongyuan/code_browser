<dec f='linux-5.3.1/include/net/mac80211.h' l='5439' type='struct ieee80211_sta * ieee80211_find_sta_by_ifaddr(struct ieee80211_hw * hw, const u8 * addr, const u8 * localaddr)'/>
<doc f='linux-5.3.1/include/net/mac80211.h' l='5417'>/**
 * ieee80211_find_sta_by_ifaddr - find a station on hardware
 *
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 * @addr: remote station&apos;s address
 * @localaddr: local address (vif-&gt;sdata-&gt;vif.addr). Use NULL for &apos;any&apos;.
 *
 * Return: The station, if found. %NULL otherwise.
 *
 * Note: This function must be called under RCU lock and the
 * resulting pointer is only valid under RCU lock as well.
 *
 * NOTE: You may pass NULL for localaddr, but then you will just get
 *      the first STA that matches the remote address &apos;addr&apos;.
 *      We can have multiple STA associated with multiple
 *      logical stations (e.g. consider a station connecting to another
 *      BSSID on the same AP hardware without disconnecting first).
 *      In this case, the result of this method with localaddr NULL
 *      is not reliable.
 *
 * DO NOT USE THIS FUNCTION with localaddr NULL if at all possible.
 */</doc>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='522' u='c' c='sta_info_insert_check'/>
<def f='linux-5.3.1/net/mac80211/sta_info.c' l='1221' ll='1243' type='struct ieee80211_sta * ieee80211_find_sta_by_ifaddr(struct ieee80211_hw * hw, const u8 * addr, const u8 * localaddr)'/>
<dec f='linux-5.3.1/net/mac80211/sta_info.c' l='1244' type='struct ieee80211_sta * ieee80211_find_sta_by_ifaddr(struct ieee80211_hw * , const u8 * , const u8 * )'/>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='1244' c='ieee80211_find_sta_by_ifaddr'/>
<use f='linux-5.3.1/net/mac80211/sta_info.c' l='1244' u='a'/>
