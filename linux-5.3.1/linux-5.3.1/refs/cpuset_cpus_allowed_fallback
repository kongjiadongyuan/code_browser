<dec f='linux-5.3.1/include/linux/cpuset.h' l='59' type='void cpuset_cpus_allowed_fallback(struct task_struct * p)'/>
<def f='linux-5.3.1/kernel/cgroup/cpuset.c' l='3210' ll='3234' type='void cpuset_cpus_allowed_fallback(struct task_struct * tsk)'/>
<doc f='linux-5.3.1/kernel/cgroup/cpuset.c' l='3198'>/**
 * cpuset_cpus_allowed_fallback - final fallback before complete catastrophe.
 * @tsk: pointer to task_struct with which the scheduler is struggling
 *
 * Description: In the case that the scheduler cannot find an allowed cpu in
 * tsk-&gt;cpus_allowed, we fall back to task_cs(tsk)-&gt;cpus_allowed. In legacy
 * mode however, this value is the same as task_cs(tsk)-&gt;effective_cpus,
 * which will not contain a sane cpumask during cases such as cpu hotplugging.
 * This is the absolute last resort for the scheduler and it is only used if
 * _every_ other avenue has been traveled.
 **/</doc>
<use f='linux-5.3.1/kernel/sched/core.c' l='1948' u='c' c='select_fallback_rq'/>
