<dec f='linux-5.3.1/include/linux/bitmap.h' l='177' type='int bitmap_parse_user(const char * ubuf, unsigned int ulen, unsigned long * dst, int nbits)'/>
<use f='linux-5.3.1/include/linux/cpumask.h' l='609' u='c' c='cpumask_parse_user'/>
<use f='linux-5.3.1/include/linux/nodemask.h' l='336' u='c' c='__nodemask_parse_user'/>
<def f='linux-5.3.1/lib/bitmap.c' l='442' ll='451' type='int bitmap_parse_user(const char * ubuf, unsigned int ulen, unsigned long * maskp, int nmaskbits)'/>
<dec f='linux-5.3.1/lib/bitmap.c' l='452' type='int bitmap_parse_user(const char * , unsigned int , unsigned long * , int )'/>
<use f='linux-5.3.1/lib/bitmap.c' l='452' c='bitmap_parse_user'/>
<use f='linux-5.3.1/lib/bitmap.c' l='452' u='a'/>
<doc f='linux-5.3.1/lib/bitmap.c' l='427'>/**
 * bitmap_parse_user - convert an ASCII hex string in a user buffer into a bitmap
 *
 * @ubuf: pointer to user buffer containing string.
 * @ulen: buffer size in bytes.  If string is smaller than this
 *    then it must be terminated with a \0.
 * @maskp: pointer to bitmap array that will contain result.
 * @nmaskbits: size of bitmap, in bits.
 *
 * Wrapper for __bitmap_parse(), providing it with user buffer.
 *
 * We cannot have this as an inline function in bitmap.h because it needs
 * linux/uaccess.h to get the access_ok() declaration and this causes
 * cyclic dependencies.
 */</doc>
