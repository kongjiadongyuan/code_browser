<dec f='linux-5.3.1/include/linux/phy.h' l='1101' type='int genphy_c45_read_link(struct phy_device * phydev)'/>
<def f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='216' ll='263' type='int genphy_c45_read_link(struct phy_device * phydev)'/>
<dec f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='264' type='int genphy_c45_read_link(struct phy_device * )'/>
<use f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='264' c='genphy_c45_read_link'/>
<use f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='264' u='a'/>
<use f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='503' u='c' c='genphy_c45_read_status'/>
<doc f='linux-5.3.1/drivers/net/phy/phy-c45.c' l='208'>/**
 * genphy_c45_read_link - read the overall link status from the MMDs
 * @phydev: target phy_device struct
 *
 * Read the link status from the specified MMDs, and if they all indicate
 * that the link is up, set phydev-&gt;link to 1.  If an error is encountered,
 * a negative errno will be returned, otherwise zero.
 */</doc>
