<def f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='39' ll='47'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='50' c='dyn_event_register'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='62'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='68' c='dyn_event_init'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='98' c='dyn_events_release_all'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='99' c='dyn_event_release'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.c' l='21' c='dyn_event_register'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.c' l='34' c='dyn_event_release'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.c' l='76' c='create_dyn_event'/>
<use f='linux-5.3.1/kernel/trace/trace_dynevent.c' l='142' c='dyn_events_release_all'/>
<size>56</size>
<doc f='linux-5.3.1/kernel/trace/trace_dynevent.h' l='18'>/**
 * struct dyn_event_operations - Methods for each type of dynamic events
 *
 * These methods must be set for each type, since there is no default method.
 * Before using this for dyn_event_init(), it must be registered by
 * dyn_event_register().
 *
 * @create: Parse and create event method. This is invoked when user passes
 *  a event definition to dynamic_events interface. This must not destruct
 *  the arguments and return -ECANCELED if given arguments doesn&apos;t match its
 *  command prefix.
 * @show: Showing method. This is invoked when user reads the event definitions
 *  via dynamic_events interface.
 * @is_busy: Check whether given event is busy so that it can not be deleted.
 *  Return true if it is busy, otherwides false.
 * @free: Delete the given event. Return 0 if success, otherwides error.
 * @match: Check whether given event and system name match this event.
 *  Return true if it matches, otherwides false.
 *
 * Except for @create, these methods are called under holding event_mutex.
 */</doc>
<mbr r='dyn_event_operations::list' o='0' t='struct list_head'/>
<mbr r='dyn_event_operations::create' o='128' t='int (*)(int, const char **)'/>
<mbr r='dyn_event_operations::show' o='192' t='int (*)(struct seq_file *, struct dyn_event *)'/>
<mbr r='dyn_event_operations::is_busy' o='256' t='bool (*)(struct dyn_event *)'/>
<mbr r='dyn_event_operations::free' o='320' t='int (*)(struct dyn_event *)'/>
<mbr r='dyn_event_operations::match' o='384' t='bool (*)(const char *, const char *, struct dyn_event *)'/>
<use f='linux-5.3.1/kernel/trace/trace_kprobe.c' l='44'/>
<size>56</size>
<use f='linux-5.3.1/kernel/trace/trace_uprobe.c' l='49'/>
<size>56</size>
