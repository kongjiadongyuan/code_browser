<dec f='linux-5.3.1/include/linux/pm_runtime.h' l='57' type='void pm_runtime_clean_up_links(struct device * dev)'/>
<use f='linux-5.3.1/drivers/base/dd.c' l='1106' u='c' c='__device_release_driver'/>
<def f='linux-5.3.1/drivers/base/power/runtime.c' l='1636' ll='1652' type='void pm_runtime_clean_up_links(struct device * dev)'/>
<doc f='linux-5.3.1/drivers/base/power/runtime.c' l='1619'>/**
 * pm_runtime_clean_up_links - Prepare links to consumers for driver removal.
 * @dev: Device whose driver is going to be removed.
 *
 * Check links from this device to any consumers and if any of them have active
 * runtime PM references to the device, drop the usage counter of the device
 * (as many times as needed).
 *
 * Links with the DL_FLAG_STATELESS flag set are ignored.
 *
 * Since the device is guaranteed to be runtime-active at the point this is
 * called, nothing else needs to be done here.
 *
 * Moreover, this is called after device_links_busy() has returned &apos;false&apos;, so
 * the status of each link is guaranteed to be DL_STATE_SUPPLIER_UNBIND and
 * therefore rpm_active can&apos;t be manipulated concurrently.
 */</doc>
