<dec f='linux-5.3.1/arch/x86/include/asm/text-patching.h' l='52' type='void * text_poke_kgdb(void * addr, const void * opcode, size_t len)'/>
<def f='linux-5.3.1/arch/x86/kernel/alternative.c' l='929' ll='932' type='void * text_poke_kgdb(void * addr, const void * opcode, size_t len)'/>
<doc f='linux-5.3.1/arch/x86/kernel/alternative.c' l='915'>/**
 * text_poke_kgdb - Update instructions on a live kernel by kgdb
 * @addr: address to modify
 * @opcode: source of the copy
 * @len: length to copy
 *
 * Only atomic text poke/set should be allowed when not doing early patching.
 * It means the size must be writable atomically and the address must be aligned
 * in a way that permits an atomic write. It also makes sure we fit on a single
 * page.
 *
 * Context: should only be used by kgdb, which ensures no other core is running,
 *	    despite the fact it does not hold the text_mutex.
 */</doc>
