<dec f='linux-5.3.1/include/linux/fs.h' l='2704' type='int filemap_fdatawait_range_keep_errors(struct address_space * mapping, loff_t start_byte, loff_t end_byte)'/>
<use f='linux-5.3.1/fs/jbd2/commit.c' l='272' u='c' c='journal_finish_inode_data_buffers'/>
<def f='linux-5.3.1/mm/filemap.c' l='566' ll='571' type='int filemap_fdatawait_range_keep_errors(struct address_space * mapping, loff_t start_byte, loff_t end_byte)'/>
<dec f='linux-5.3.1/mm/filemap.c' l='572' type='int filemap_fdatawait_range_keep_errors(struct address_space * , loff_t , loff_t )'/>
<use f='linux-5.3.1/mm/filemap.c' l='572' c='filemap_fdatawait_range_keep_errors'/>
<use f='linux-5.3.1/mm/filemap.c' l='572' u='a'/>
<doc f='linux-5.3.1/mm/filemap.c' l='552'>/**
 * filemap_fdatawait_range_keep_errors - wait for writeback to complete
 * @mapping:		address space structure to wait for
 * @start_byte:		offset in bytes where the range starts
 * @end_byte:		offset in bytes where the range ends (inclusive)
 *
 * Walk the list of under-writeback pages of the given address space in the
 * given range and wait for all of them.  Unlike filemap_fdatawait_range(),
 * this function does not clear error status of the address space.
 *
 * Use this function if callers don&apos;t handle errors themselves.  Expected
 * call sites are system-wide / filesystem-wide data flushers: e.g. sync(2),
 * fsfreeze(8)
 */</doc>
