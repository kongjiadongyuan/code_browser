<dec f='linux-5.3.1/drivers/gpu/drm/drm_crtc_internal.h' l='219' type='int drm_mode_dirtyfb_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='574' ll='640' type='int drm_mode_dirtyfb_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='555'>/**
 * drm_mode_dirtyfb_ioctl - flush frontbuffer rendering on an FB
 * @dev: drm device for the ioctl
 * @data: data pointer for the ioctl
 * @file_priv: drm file for the ioctl call
 *
 * Lookup the FB and flush out the damaged area supplied by userspace as a clip
 * rectangle list. Generic userspace which does frontbuffer rendering must call
 * this ioctl to flush out the changes on manual-update display outputs, e.g.
 * usb display-link, mipi manual update panels or edp panel self refresh modes.
 *
 * Modesetting drivers which always update the frontbuffer do not need to
 * implement the corresponding &amp;drm_framebuffer_funcs.dirty callback.
 *
 * Called by the user via ioctl.
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='674'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='674'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='674'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='674'/>
