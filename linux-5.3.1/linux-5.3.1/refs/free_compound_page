<dec f='linux-5.3.1/include/linux/mm.h' l='808' type='void free_compound_page(struct page * page)'/>
<use f='linux-5.3.1/fs/io_uring.c' l='2813' u='c' c='io_mem_free'/>
<use f='linux-5.3.1/mm/page_alloc.c' l='307'/>
<use f='linux-5.3.1/mm/page_alloc.c' l='307'/>
<def f='linux-5.3.1/mm/page_alloc.c' l='671' ll='674' type='void free_compound_page(struct page * page)'/>
<doc f='linux-5.3.1/mm/page_alloc.c' l='656'>/*
 * Higher-order pages are called &quot;compound pages&quot;.  They are structured thusly:
 *
 * The first PAGE_SIZE page is called the &quot;head page&quot; and have PG_head set.
 *
 * The remaining PAGE_SIZE pages are called &quot;tail pages&quot;. PageTail() is encoded
 * in bit 0 of page-&gt;compound_head. The rest of bits is pointer to head page.
 *
 * The first tail page&apos;s -&gt;compound_dtor holds the offset in array of compound
 * page destructors. See compound_page_dtors.
 *
 * The first tail page&apos;s -&gt;compound_order holds the order of allocation.
 * This usage means that zero-order pages may not be compound.
 */</doc>
