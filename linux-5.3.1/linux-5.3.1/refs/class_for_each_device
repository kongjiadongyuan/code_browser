<dec f='linux-5.3.1/include/linux/device.h' l='467' type='int class_for_each_device(struct class * class, struct device * start, void * data, int (*)(struct device *, void *) fn)'/>
<def f='linux-5.3.1/drivers/base/class.c' l='351' ll='375' type='int class_for_each_device(struct class * class, struct device * start, void * data, int (*)(struct device *, void *) fn)'/>
<dec f='linux-5.3.1/drivers/base/class.c' l='376' type='int class_for_each_device(struct class * , struct device * , void * , int (*)(struct device *, void *) )'/>
<use f='linux-5.3.1/drivers/base/class.c' l='376' c='class_for_each_device'/>
<use f='linux-5.3.1/drivers/base/class.c' l='376' u='a'/>
<doc f='linux-5.3.1/drivers/base/class.c' l='333'>/**
 * class_for_each_device - device iterator
 * @class: the class we&apos;re iterating
 * @start: the device to start with in the list, if any.
 * @data: data for the callback
 * @fn: function to be called for each device
 *
 * Iterate over @class&apos;s list of devices, and call @fn for each,
 * passing it @data.  If @start is set, the list iteration will start
 * there, otherwise if it is NULL, the iteration starts at the
 * beginning of the list.
 *
 * We check the return of @fn each time. If it returns anything
 * other than 0, we break out and return that value.
 *
 * @fn is allowed to do anything including calling back into class
 * code.  There&apos;s no locking restriction.
 */</doc>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='95' u='c' c='power_supply_changed_work'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='332' u='c' c='power_supply_am_i_supplied'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='364' u='c' c='power_supply_is_system_supplied'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='407' u='c' c='power_supply_set_input_current_limit_from_supplier'/>
