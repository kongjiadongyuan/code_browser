<dec f='linux-5.3.1/include/linux/stop_machine.h' l='136' type='int stop_machine_cpuslocked(cpu_stop_fn_t fn, void * data, const struct cpumask * cpus)'/>
<doc f='linux-5.3.1/include/linux/stop_machine.h' l='127'>/**
 * stop_machine_cpuslocked: freeze the machine on all CPUs and run this function
 * @fn: the function to run
 * @data: the data ptr for the @fn()
 * @cpus: the cpus to run the @fn() on (NULL = any online cpu)
 *
 * Same as above. Must be called from with in a cpus_read_lock() protected
 * region. Avoids nested calls to cpus_read_lock().
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/cpu/microcode/core.c' l='604' u='c' c='microcode_reload_late'/>
<use f='linux-5.3.1/arch/x86/kernel/cpu/mtrr/mtrr.c' l='250' u='c' c='set_mtrr_cpuslocked'/>
<use f='linux-5.3.1/kernel/cpu.c' l='888' u='c' c='takedown_cpu'/>
<def f='linux-5.3.1/kernel/stop_machine.c' l='591' ll='625' type='int stop_machine_cpuslocked(cpu_stop_fn_t fn, void * data, const struct cpumask * cpus)'/>
<use f='linux-5.3.1/kernel/stop_machine.c' l='633' u='c' c='stop_machine'/>
