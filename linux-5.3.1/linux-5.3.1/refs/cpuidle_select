<dec f='linux-5.3.1/include/linux/cpuidle.h' l='129' type='int cpuidle_select(struct cpuidle_driver * drv, struct cpuidle_device * dev, bool * stop_tick)'/>
<def f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='312' ll='316' type='int cpuidle_select(struct cpuidle_driver * drv, struct cpuidle_device * dev, bool * stop_tick)'/>
<doc f='linux-5.3.1/drivers/cpuidle/cpuidle.c' l='299'>/**
 * cpuidle_select - ask the cpuidle framework to choose an idle state
 *
 * @drv: the cpuidle driver
 * @dev: the cpuidle device
 * @stop_tick: indication on whether or not to stop the tick
 *
 * Returns the index of the idle state.  The return value must not be negative.
 *
 * The memory location pointed to by @stop_tick is expected to be written the
 * &apos;false&apos; boolean value if the scheduler tick should not be stopped before
 * entering the returned state.
 */</doc>
<use f='linux-5.3.1/kernel/sched/idle.c' l='192' u='c' c='cpuidle_idle_call'/>
