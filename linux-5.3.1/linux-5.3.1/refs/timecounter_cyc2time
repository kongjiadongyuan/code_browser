<dec f='linux-5.3.1/include/linux/timecounter.h' l='127' type='u64 timecounter_cyc2time(struct timecounter * tc, u64 cycle_tstamp)'/>
<doc f='linux-5.3.1/include/linux/timecounter.h' l='113'>/**
 * timecounter_cyc2time - convert a cycle counter to same
 *                        time base as values returned by
 *                        timecounter_read()
 * @tc:		Pointer to time counter.
 * @cycle_tstamp:	a value returned by tc-&gt;cc-&gt;read()
 *
 * Cycle counts that are converted correctly as long as they
 * fall into the interval [-1/2 max cycle count, +1/2 max cycle count],
 * with &quot;max cycle count&quot; == cs-&gt;mask+1.
 *
 * This allows conversion of cycle counter values which were generated
 * in the past.
 */</doc>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='502' u='c' c='e1000e_systim_to_hwtstamp'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/ptp.c' l='133' u='c' c='e1000e_phc_get_syncdevicetime'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/ptp.c' l='186' u='c' c='e1000e_phc_gettimex'/>
<def f='linux-5.3.1/kernel/time/timecounter.c' l='79' ll='98' type='u64 timecounter_cyc2time(struct timecounter * tc, u64 cycle_tstamp)'/>
<dec f='linux-5.3.1/kernel/time/timecounter.c' l='99' type='u64 timecounter_cyc2time(struct timecounter * , u64 )'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='99' c='timecounter_cyc2time'/>
<use f='linux-5.3.1/kernel/time/timecounter.c' l='99' u='a'/>
