<dec f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.h' l='209' type='void intel_uncore_forcewake_get__locked(struct intel_uncore * uncore, enum forcewake_domains domains)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.h' l='206'>/* Like above but the caller must manage the uncore.lock itself.
 * Must be used with I915_READ_FW and friends.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_engine_cs.c' l='1027' u='c' c='read_subslice_reg'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gt/intel_workarounds.c' l='974' u='c' c='wa_list_apply'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_pm.c' l='9897' u='c' c='intel_rc6_residency_ns'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='605' u='c' c='intel_uncore_forcewake_user_get'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='652' ll='661' type='void intel_uncore_forcewake_get__locked(struct intel_uncore * uncore, enum forcewake_domains fw_domains)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1818' u='c' c='__intel_wait_for_register'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='644'>/**
 * intel_uncore_forcewake_get__locked - grab forcewake domain references
 * @uncore: the intel_uncore structure
 * @fw_domains: forcewake domains to get reference on
 *
 * See intel_uncore_forcewake_get(). This variant places the onus
 * on the caller to explicitly handle the dev_priv-&gt;uncore.lock spinlock.
 */</doc>
