<dec f='linux-5.3.1/include/drm/drm_framebuffer.h' l='221' type='struct drm_framebuffer * drm_framebuffer_lookup(struct drm_device * dev, struct drm_file * file_priv, uint32_t id)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='525' u='c' c='drm_atomic_plane_set_property'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='755' u='c' c='drm_atomic_connector_set_property'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='381' u='c' c='drm_client_buffer_addfb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc.c' l='589' u='c' c='drm_mode_setcrtc'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='438' u='c' c='drm_mode_rmfb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='515' u='c' c='drm_mode_getfb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='588' u='c' c='drm_mode_dirtyfb_ioctl'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='762' ll='773' type='struct drm_framebuffer * drm_framebuffer_lookup(struct drm_device * dev, struct drm_file * file_priv, uint32_t id)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='774' type='struct drm_framebuffer * drm_framebuffer_lookup(struct drm_device * , struct drm_file * , uint32_t )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='774' c='drm_framebuffer_lookup'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='774' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='752'>/**
 * drm_framebuffer_lookup - look up a drm framebuffer and grab a reference
 * @dev: drm device
 * @file_priv: drm file to check for lease against.
 * @id: id of the fb object
 *
 * If successful, this grabs an additional reference to the framebuffer -
 * callers need to make sure to eventually unreference the returned framebuffer
 * again, using drm_framebuffer_put().
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_plane.c' l='814' u='c' c='drm_mode_setplane'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_plane.c' l='1135' u='c' c='drm_mode_page_flip_ioctl'/>
