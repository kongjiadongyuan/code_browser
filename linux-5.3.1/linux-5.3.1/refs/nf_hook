<def f='linux-5.3.1/include/linux/netfilter.h' l='209' ll='265' type='int nf_hook(u_int8_t pf, unsigned int hook, struct net * net, struct sock * sk, struct sk_buff * skb, struct net_device * indev, struct net_device * outdev, int (*)(struct net *, struct sock *, struct sk_buff *) okfn)'/>
<use f='linux-5.3.1/include/linux/netfilter.h' l='293' u='c' c='NF_HOOK_COND'/>
<use f='linux-5.3.1/include/linux/netfilter.h' l='303' u='c' c='NF_HOOK'/>
<use f='linux-5.3.1/include/linux/netfilter.h' l='320' u='c' c='NF_HOOK_LIST'/>
<doc f='linux-5.3.1/include/linux/netfilter.h' l='202'>/**
 *	nf_hook - call a netfilter hook
 *
 *	Returns 1 if the hook has allowed the packet to pass.  The function
 *	okfn must be invoked by the caller in this case.  Any other return
 *	value indicates the packet has been consumed by the hook.
 */</doc>
<use f='linux-5.3.1/net/ipv4/ip_output.c' l='114' u='c' c='__ip_local_out'/>
<use f='linux-5.3.1/net/ipv6/output_core.c' l='167' u='c' c='__ip6_local_out'/>
<use f='linux-5.3.1/net/xfrm/xfrm_output.c' l='514' u='c' c='xfrm_output_resume'/>
