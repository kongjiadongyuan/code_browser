<dec f='linux-5.3.1/include/drm/drm_drv.h' l='738' type='void drm_dev_get(struct drm_device * dev)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client.c' l='102' u='c' c='drm_client_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='249' u='c' c='drm_minor_acquire'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='865' ll='869' type='void drm_dev_get(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='870' type='void drm_dev_get(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='870' c='drm_dev_get'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='870' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='853'>/**
 * drm_dev_get - Take reference of a DRM device
 * @dev: device to take reference of or NULL
 *
 * This increases the ref-count of @dev by one. You *must* already own a
 * reference when calling this. Use drm_dev_put() to drop this reference
 * again.
 *
 * This function never fails. However, this function does not provide *any*
 * guarantee whether the device is alive or running. It only provides a
 * reference to the object and the memory associated with it.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_prime.c' l='325' u='c' c='drm_gem_dmabuf_export'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_perf.c' l='2666' u='c' c='i915_perf_open_ioctl_locked'/>
