<def f='linux-5.3.1/include/net/fq.h' l='29' ll='36'/>
<use f='linux-5.3.1/include/net/fq.h' l='68'/>
<use f='linux-5.3.1/include/net/fq.h' l='85'/>
<use f='linux-5.3.1/include/net/fq.h' l='89'/>
<use f='linux-5.3.1/include/net/fq.h' l='95'/>
<use f='linux-5.3.1/include/net/fq.h' l='99'/>
<use f='linux-5.3.1/net/mac80211/ieee80211_i.h' l='842'/>
<size>72</size>
<doc f='linux-5.3.1/include/net/fq.h' l='12'>/**
 * struct fq_flow - per traffic flow queue
 *
 * @tin: owner of this flow. Used to manage collisions, i.e. when a packet
 *	hashes to an index which points to a flow that is already owned by a
 *	different tin the packet is destined to. In such case the implementer
 *	must provide a fallback flow
 * @flowchain: can be linked to fq_tin&apos;s new_flows or old_flows. Used for DRR++
 *	(deficit round robin) based round robin queuing similar to the one
 *	found in net/sched/sch_fq_codel.c
 * @backlogchain: can be linked to other fq_flow and fq. Used to keep track of
 *	fat flows and efficient head-dropping if packet limit is reached
 * @queue: sk_buff queue to hold packets
 * @backlog: number of bytes pending in the queue. The number of packets can be
 *	found in @queue.qlen
 * @deficit: used for DRR++
 */</doc>
<mbr r='fq_flow::tin' o='0' t='struct fq_tin *'/>
<mbr r='fq_flow::flowchain' o='64' t='struct list_head'/>
<mbr r='fq_flow::backlogchain' o='192' t='struct list_head'/>
<mbr r='fq_flow::queue' o='320' t='struct sk_buff_head'/>
<mbr r='fq_flow::backlog' o='512' t='u32'/>
<mbr r='fq_flow::deficit' o='544' t='int'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='15' c='fq_adjust_removal'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='27' c='fq_rejigger_backlog'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='29' c='fq_rejigger_backlog'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='46' c='fq_flow_dequeue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='66' c='fq_tin_dequeue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='80' c='fq_tin_dequeue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='80' c='fq_tin_dequeue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='80' c='fq_tin_dequeue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='116' c='fq_flow_classify'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='121' c='fq_flow_classify'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='140' c='fq_recalc_backlog'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='142' c='fq_recalc_backlog'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='162' c='fq_tin_enqueue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='188' c='fq_tin_enqueue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='188' c='fq_tin_enqueue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='188' c='fq_tin_enqueue'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='209' c='fq_flow_filter'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='237' c='fq_tin_filter'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='248' c='fq_flow_reset'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='272' c='fq_tin_reset'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='282' c='fq_tin_reset'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='282' c='fq_tin_reset'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='282' c='fq_tin_reset'/>
<use f='linux-5.3.1/include/net/fq_impl.h' l='290' c='fq_flow_init'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='1304' c='codel_dequeue_func'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='1334' c='fq_tin_dequeue_func'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='1372' c='fq_skb_free_func'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='1381' c='fq_flow_get_default_func'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='1410' c='fq_vlan_filter_func'/>
<use f='linux-5.3.1/net/mac80211/tx.c' l='3218' c='ieee80211_amsdu_aggregate'/>
<size>72</size>
