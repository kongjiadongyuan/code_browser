<dec f='linux-5.3.1/include/linux/refcount.h' l='50' type='void refcount_inc_checked(refcount_t * r)'/>
<def f='linux-5.3.1/lib/refcount.c' l='154' ll='157' type='void refcount_inc_checked(refcount_t * r)'/>
<dec f='linux-5.3.1/lib/refcount.c' l='158' type='void refcount_inc_checked(refcount_t * )'/>
<use f='linux-5.3.1/lib/refcount.c' l='158' c='refcount_inc_checked'/>
<use f='linux-5.3.1/lib/refcount.c' l='158' u='a'/>
<doc f='linux-5.3.1/lib/refcount.c' l='142'>/**
 * refcount_inc_checked - increment a refcount
 * @r: the refcount to increment
 *
 * Similar to atomic_inc(), but will saturate at UINT_MAX and WARN.
 *
 * Provides no memory ordering, it is assumed the caller already has a
 * reference on the object.
 *
 * Will WARN if the refcount is 0, as this represents a possible use-after-free
 * condition.
 */</doc>
