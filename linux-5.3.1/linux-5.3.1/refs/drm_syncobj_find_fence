<dec f='linux-5.3.1/include/drm/drm_syncobj.h' l='122' type='int drm_syncobj_find_fence(struct drm_file * file_private, u32 handle, u64 point, u64 flags, struct dma_fence ** fence)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='239' ll='297' type='int drm_syncobj_find_fence(struct drm_file * file_private, u32 handle, u64 point, u64 flags, struct dma_fence ** fence)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='298' type='int drm_syncobj_find_fence(struct drm_file * , u32 , u64 , u64 , struct dma_fence ** )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='298' c='drm_syncobj_find_fence'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='298' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='546' u='c' c='drm_syncobj_export_sync_file'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='699' u='c' c='drm_syncobj_transfer_to_timeline'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='729' u='c' c='drm_syncobj_transfer_to_binary'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_syncobj.c' l='224'>/**
 * drm_syncobj_find_fence - lookup and reference the fence in a sync object
 * @file_private: drm file private pointer
 * @handle: sync object handle to lookup.
 * @point: timeline point
 * @flags: DRM_SYNCOBJ_WAIT_FLAGS_WAIT_FOR_SUBMIT or not
 * @fence: out parameter for the fence
 *
 * This is just a convenience function that combines drm_syncobj_find() and
 * drm_syncobj_fence_get().
 *
 * Returns 0 on success or a negative error value on failure. On success @fence
 * contains a reference to the fence, which must be released by calling
 * dma_fence_put().
 */</doc>
