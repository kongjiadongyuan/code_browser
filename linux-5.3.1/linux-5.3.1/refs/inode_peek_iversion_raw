<def f='linux-5.3.1/include/linux/iversion.h' l='109' ll='113' type='u64 inode_peek_iversion_raw(const struct inode * inode)'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='128' u='c' c='inode_set_max_iversion_raw'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='213' u='c' c='inode_maybe_inc_iversion'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='254' u='c' c='inode_iversion_need_inc'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='288' u='c' c='inode_peek_iversion'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='309' u='c' c='inode_query_iversion'/>
<use f='linux-5.3.1/include/linux/iversion.h' l='342' u='c' c='inode_eq_iversion_raw'/>
<doc f='linux-5.3.1/include/linux/iversion.h' l='98'>/**
 * inode_peek_iversion_raw - grab a &quot;raw&quot; iversion value
 * @inode: inode from which i_version should be read
 *
 * Grab a &quot;raw&quot; inode-&gt;i_version value and return it. The i_version is not
 * flagged or converted in any way. This is mostly used to access a self-managed
 * i_version.
 *
 * With those filesystems, we want to treat the i_version as an entirely
 * opaque value.
 */</doc>
<use f='linux-5.3.1/fs/ext4/inode.c' l='4830' u='c' c='ext4_inode_peek_iversion'/>
<use f='linux-5.3.1/fs/ext4/xattr.c' l='318' u='c' c='ext4_xattr_inode_get_ref'/>
<use f='linux-5.3.1/fs/nfs/delegation.c' l='363' u='c' c='nfs_inode_set_delegation'/>
<use f='linux-5.3.1/fs/nfs/inode.c' l='1731' u='c' c='nfs_post_op_update_inode_force_wcc_locked'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='1142' u='c' c='update_changeattr_locked'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='1147' u='c' c='update_changeattr_locked'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='2616' u='c' c='_nfs4_proc_open'/>
