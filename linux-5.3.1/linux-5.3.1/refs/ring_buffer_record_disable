<dec f='linux-5.3.1/include/linux/ring_buffer.h' l='163' type='void ring_buffer_record_disable(struct ring_buffer * buffer)'/>
<def f='linux-5.3.1/kernel/trace/ring_buffer.c' l='3195' ll='3198' type='void ring_buffer_record_disable(struct ring_buffer * buffer)'/>
<dec f='linux-5.3.1/kernel/trace/ring_buffer.c' l='3199' type='void ring_buffer_record_disable(struct ring_buffer * )'/>
<use f='linux-5.3.1/kernel/trace/ring_buffer.c' l='3199' c='ring_buffer_record_disable'/>
<use f='linux-5.3.1/kernel/trace/ring_buffer.c' l='3199' u='a'/>
<doc f='linux-5.3.1/kernel/trace/ring_buffer.c' l='3186'>/**
 * ring_buffer_record_disable - stop all writes into the buffer
 * @buffer: The ring buffer to stop writes to.
 *
 * This prevents all writes to the buffer. Any attempt to write
 * to the buffer after this will fail and return NULL.
 *
 * The caller should call synchronize_rcu() after this.
 */</doc>
<use f='linux-5.3.1/kernel/trace/trace.c' l='1864' u='c' c='tracing_reset'/>
<use f='linux-5.3.1/kernel/trace/trace.c' l='1881' u='c' c='tracing_reset_online_cpus'/>
<use f='linux-5.3.1/kernel/trace/trace.c' l='2079' u='c' c='tracing_stop'/>
<use f='linux-5.3.1/kernel/trace/trace.c' l='2108' u='c' c='tracing_stop_tr'/>
