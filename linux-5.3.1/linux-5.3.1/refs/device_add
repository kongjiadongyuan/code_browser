<dec f='linux-5.3.1/include/linux/device.h' l='1258' type='int device_add(struct device * dev)'/>
<use f='linux-5.3.1/block/genhd.c' l='616' u='c' c='register_disk'/>
<use f='linux-5.3.1/block/partition-generic.c' l='378' u='c' c='add_partition'/>
<use f='linux-5.3.1/drivers/acpi/scan.c' l='695' u='c' c='acpi_device_add'/>
<use f='linux-5.3.1/drivers/ata/libata-transport.c' l='294' u='c' c='ata_tport_add'/>
<use f='linux-5.3.1/drivers/ata/libata-transport.c' l='424' u='c' c='ata_tlink_add'/>
<use f='linux-5.3.1/drivers/ata/libata-transport.c' l='675' u='c' c='ata_tdev_add'/>
<use f='linux-5.3.1/drivers/base/attribute_container.c' l='351' u='c' c='attribute_container_add_class_device'/>
<def f='linux-5.3.1/drivers/base/core.c' l='2062' ll='2214' type='int device_add(struct device * dev)'/>
<dec f='linux-5.3.1/drivers/base/core.c' l='2215' type='int device_add(struct device * )'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2215' c='device_add'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2215' u='a'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2238' u='c' c='device_register'/>
<use f='linux-5.3.1/drivers/base/core.c' l='2809' u='c' c='device_create_groups_vargs'/>
<doc f='linux-5.3.1/drivers/base/core.c' l='2035'>/**
 * device_add - add device to device hierarchy.
 * @dev: device.
 *
 * This is part 2 of device_register(), though may be called
 * separately _iff_ device_initialize() has been called separately.
 *
 * This adds @dev to the kobject hierarchy via kobject_add(), adds it
 * to the global and sibling lists for the device, then
 * adds it to the other relevant subsystems of the driver model.
 *
 * Do not call this routine or device_register() more than once for
 * any device structure.  The driver model core is not designed to work
 * with devices that get unregistered and then spring back to life.
 * (Among other things, it&apos;s very hard to guarantee that all references
 * to the previous incarnation of @dev have been dropped.)  Allocate
 * and register a fresh new struct device instead.
 *
 * NOTE: _Never_ directly free @dev after calling this function, even
 * if it returned an error! Always use put_device() to give up your
 * reference instead.
 *
 * Rule of thumb is: if device_add() succeeds, you should call
 * device_del() when you want to get rid of it. If device_add() has
 * *not* succeeded, use *only* put_device() to drop the reference
 * count.
 */</doc>
<use f='linux-5.3.1/drivers/base/cpu.c' l='438' u='c' c='__cpu_device_create'/>
<use f='linux-5.3.1/drivers/base/platform.c' l='458' u='c' c='platform_device_add'/>
<use f='linux-5.3.1/drivers/edac/edac_mc_sysfs.c' l='420' u='c' c='edac_create_csrow_object'/>
<use f='linux-5.3.1/drivers/edac/edac_mc_sysfs.c' l='655' u='c' c='edac_create_dimm_object'/>
<use f='linux-5.3.1/drivers/edac/edac_mc_sysfs.c' l='937' u='c' c='edac_create_sysfs_mci_device'/>
<use f='linux-5.3.1/drivers/edac/edac_mc_sysfs.c' l='1057' u='c' c='edac_mc_sysfs_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_drv.c' l='196' u='c' c='drm_minor_register'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mipi_dsi.c' l='155' u='c' c='mipi_dsi_device_add'/>
<use f='linux-5.3.1/drivers/hid/hid-core.c' l='2365' u='c' c='hid_add_device'/>
<use f='linux-5.3.1/drivers/input/input.c' l='2138' u='c' c='input_register_device'/>
<use f='linux-5.3.1/drivers/input/serio/serio.c' l='542' u='c' c='serio_add_port'/>
<use f='linux-5.3.1/drivers/iommu/iommu-sysfs.c' l='78' u='c' c='iommu_device_sysfs_add'/>
<use f='linux-5.3.1/drivers/net/phy/mdio_device.c' l='86' u='c' c='mdio_device_register'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='853' u='c' c='phy_device_register'/>
<use f='linux-5.3.1/drivers/nvmem/core.c' l='411' u='c' c='nvmem_register'/>
<use f='linux-5.3.1/drivers/pci/probe.c' l='2700' u='c' c='pci_device_add'/>
<use f='linux-5.3.1/drivers/power/supply/power_supply_core.c' l='1058' u='c' c='__power_supply_register'/>
<use f='linux-5.3.1/drivers/scsi/hosts.c' l='247' u='c' c='scsi_add_host_with_dma'/>
<use f='linux-5.3.1/drivers/scsi/hosts.c' l='256' u='c' c='scsi_add_host_with_dma'/>
<use f='linux-5.3.1/drivers/scsi/scsi_sysfs.c' l='1266' u='c' c='scsi_target_add'/>
<use f='linux-5.3.1/drivers/scsi/scsi_sysfs.c' l='1311' u='c' c='scsi_sysfs_add_sdev'/>
<use f='linux-5.3.1/drivers/scsi/scsi_sysfs.c' l='1319' u='c' c='scsi_sysfs_add_sdev'/>
<use f='linux-5.3.1/drivers/scsi/sd.c' l='3338' u='c' c='sd_probe'/>
<use f='linux-5.3.1/drivers/usb/core/hub.c' l='2536' u='c' c='usb_new_device'/>
<use f='linux-5.3.1/drivers/usb/core/message.c' l='2023' u='c' c='usb_set_configuration'/>
<use f='linux-5.3.1/fs/char_dev.c' l='546' u='c' c='cdev_device_add'/>
<use f='linux-5.3.1/kernel/events/core.c' l='9894' u='c' c='pmu_dev_alloc'/>
<use f='linux-5.3.1/net/core/net-sysfs.c' l='1746' u='c' c='netdev_register_kobject'/>
<use f='linux-5.3.1/net/rfkill/core.c' l='1023' u='c' c='rfkill_register'/>
<use f='linux-5.3.1/net/wireless/core.c' l='889' u='c' c='wiphy_register'/>
<use f='linux-5.3.1/sound/core/init.c' l='748' u='c' c='snd_card_register'/>
<use f='linux-5.3.1/sound/core/seq_device.c' l='159' u='c' c='snd_seq_device_dev_register'/>
<use f='linux-5.3.1/sound/core/sound.c' l='275' u='c' c='snd_register_device'/>
<use f='linux-5.3.1/sound/hda/hdac_device.c' l='143' u='c' c='snd_hdac_device_register'/>
