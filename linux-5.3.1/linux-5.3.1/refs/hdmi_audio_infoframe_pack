<dec f='linux-5.3.1/include/linux/hdmi.h' l='332' type='ssize_t hdmi_audio_infoframe_pack(struct hdmi_audio_infoframe * frame, void * buffer, size_t size)'/>
<def f='linux-5.3.1/drivers/video/hdmi.c' l='469' ll='479' type='ssize_t hdmi_audio_infoframe_pack(struct hdmi_audio_infoframe * frame, void * buffer, size_t size)'/>
<dec f='linux-5.3.1/drivers/video/hdmi.c' l='480' type='ssize_t hdmi_audio_infoframe_pack(struct hdmi_audio_infoframe * , void * , size_t )'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='480' c='hdmi_audio_infoframe_pack'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='480' u='a'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='964' u='c' c='hdmi_infoframe_pack'/>
<doc f='linux-5.3.1/drivers/video/hdmi.c' l='452'>/**
 * hdmi_audio_infoframe_pack() - check a HDMI Audio infoframe,
 *                               and write it to binary buffer
 * @frame: HDMI Audio infoframe
 * @buffer: destination buffer
 * @size: size of buffer
 *
 * Validates that the infoframe is consistent and updates derived fields
 * (eg. length) based on other fields, after which it packs the information
 * contained in the @frame structure into a binary representation that
 * can be written into the corresponding controller registers. This function
 * also computes the checksum as required by section 5.3.5 of the HDMI 1.4
 * specification.
 *
 * Returns the number of bytes packed into the binary buffer or a negative
 * error code on failure.
 */</doc>
