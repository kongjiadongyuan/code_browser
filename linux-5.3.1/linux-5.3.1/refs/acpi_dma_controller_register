<dec f='linux-5.3.1/include/linux/acpi_dma.h' l='59' type='int acpi_dma_controller_register(struct device * dev, struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *) acpi_dma_xlate, void * data)'/>
<def f='linux-5.3.1/drivers/dma/acpi-dma.c' l='152' ll='184' type='int acpi_dma_controller_register(struct device * dev, struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *) acpi_dma_xlate, void * data)'/>
<dec f='linux-5.3.1/drivers/dma/acpi-dma.c' l='185' type='int acpi_dma_controller_register(struct device * , struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *) , void * )'/>
<use f='linux-5.3.1/drivers/dma/acpi-dma.c' l='185' c='acpi_dma_controller_register'/>
<use f='linux-5.3.1/drivers/dma/acpi-dma.c' l='185' u='a'/>
<use f='linux-5.3.1/drivers/dma/acpi-dma.c' l='248' u='c' c='devm_acpi_dma_controller_register'/>
<doc f='linux-5.3.1/drivers/dma/acpi-dma.c' l='138'>/**
 * acpi_dma_controller_register - Register a DMA controller to ACPI DMA helpers
 * @dev:		struct device of DMA controller
 * @acpi_dma_xlate:	translation function which converts a dma specifier
 *			into a dma_chan structure
 * @data		pointer to controller specific data to be used by
 *			translation function
 *
 * Allocated memory should be freed with appropriate acpi_dma_controller_free()
 * call.
 *
 * Return:
 * 0 on success or appropriate errno value on error.
 */</doc>
