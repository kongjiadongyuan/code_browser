<dec f='linux-5.3.1/include/linux/refcount.h' l='55' type='void refcount_dec_checked(refcount_t * r)'/>
<def f='linux-5.3.1/lib/refcount.c' l='234' ll='237' type='void refcount_dec_checked(refcount_t * r)'/>
<dec f='linux-5.3.1/lib/refcount.c' l='238' type='void refcount_dec_checked(refcount_t * )'/>
<use f='linux-5.3.1/lib/refcount.c' l='238' c='refcount_dec_checked'/>
<use f='linux-5.3.1/lib/refcount.c' l='238' u='a'/>
<doc f='linux-5.3.1/lib/refcount.c' l='224'>/**
 * refcount_dec_checked - decrement a refcount
 * @r: the refcount
 *
 * Similar to atomic_dec(), it will WARN on underflow and fail to decrement
 * when saturated at UINT_MAX.
 *
 * Provides release memory ordering, such that prior loads and stores are done
 * before.
 */</doc>
