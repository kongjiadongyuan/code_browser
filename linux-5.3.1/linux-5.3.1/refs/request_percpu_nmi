<dec f='linux-5.3.1/include/linux/interrupt.h' l='172' type='int request_percpu_nmi(unsigned int irq, irq_handler_t handler, const char * devname, void * dev)'/>
<def f='linux-5.3.1/kernel/irq/manage.c' l='2489' ll='2542' type='int request_percpu_nmi(unsigned int irq, irq_handler_t handler, const char * name, void * dev_id)'/>
<doc f='linux-5.3.1/kernel/irq/manage.c' l='2468'>/**
 *	request_percpu_nmi - allocate a percpu interrupt line for NMI delivery
 *	@irq: Interrupt line to allocate
 *	@handler: Function to be called when the IRQ occurs.
 *	@name: An ascii name for the claiming device
 *	@dev_id: A percpu cookie passed back to the handler function
 *
 *	This call allocates interrupt resources for a per CPU NMI. Per CPU NMIs
 *	have to be setup on each CPU by calling prepare_percpu_nmi() before
 *	being enabled on the same CPU by using enable_percpu_nmi().
 *
 *	Dev_id must be globally unique. It is a per-cpu variable, and
 *	the handler gets called with the interrupted CPU&apos;s instance of
 *	that variable.
 *
 *	Interrupt lines requested for NMI delivering should have auto enabling
 *	setting disabled.
 *
 *	If the interrupt line cannot be used to deliver NMIs, function
 *	will fail returning a negative value.
 */</doc>
