<dec f='linux-5.3.1/include/linux/mutex.h' l='199' type='int atomic_dec_and_mutex_lock(atomic_t * cnt, struct mutex * lock)'/>
<use f='linux-5.3.1/arch/x86/events/core.c' l='358' u='c' c='x86_release_hardware'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_wakeref.h' l='104' u='c' c='intel_wakeref_put'/>
<use f='linux-5.3.1/kernel/events/callchain.c' l='146' u='c' c='put_callchain_buffers'/>
<use f='linux-5.3.1/kernel/events/core.c' l='5505' u='c' c='perf_mmap_close'/>
<use f='linux-5.3.1/kernel/events/core.c' l='5527' u='c' c='perf_mmap_close'/>
<def f='linux-5.3.1/kernel/locking/mutex.c' l='1440' ll='1454' type='int atomic_dec_and_mutex_lock(atomic_t * cnt, struct mutex * lock)'/>
<dec f='linux-5.3.1/kernel/locking/mutex.c' l='1455' type='int atomic_dec_and_mutex_lock(atomic_t * , struct mutex * )'/>
<use f='linux-5.3.1/kernel/locking/mutex.c' l='1455' c='atomic_dec_and_mutex_lock'/>
<use f='linux-5.3.1/kernel/locking/mutex.c' l='1455' u='a'/>
<doc f='linux-5.3.1/kernel/locking/mutex.c' l='1433'>/**
 * atomic_dec_and_mutex_lock - return holding mutex if we dec to 0
 * @cnt: the atomic which we are to dec
 * @lock: the mutex to return holding if we dec to 0
 *
 * return true and hold lock if we dec to 0, return false otherwise
 */</doc>
