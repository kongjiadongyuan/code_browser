<dec f='linux-5.3.1/include/crypto/hash.h' l='411' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<doc f='linux-5.3.1/include/crypto/hash.h' l='400'>/**
 * crypto_ahash_setkey - set key for cipher handle
 * @tfm: cipher handle
 * @key: buffer holding the key
 * @keylen: length of the key in bytes
 *
 * The caller provided key is set for the ahash cipher. The cipher
 * handle must point to a keyed hash in order for this function to succeed.
 *
 * Return: 0 if the setting of the key was successful; &lt; 0 if an error occurred
 */</doc>
<def f='linux-5.3.1/crypto/ahash.c' l='203' ll='221' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<dec f='linux-5.3.1/crypto/ahash.c' l='222' type='int crypto_ahash_setkey(struct crypto_ahash * , const u8 * , unsigned int )'/>
<use f='linux-5.3.1/crypto/ahash.c' l='222' c='crypto_ahash_setkey'/>
<use f='linux-5.3.1/crypto/ahash.c' l='222' u='a'/>
<use f='linux-5.3.1/crypto/authenc.c' l='99' u='c' c='crypto_authenc_setkey'/>
<use f='linux-5.3.1/crypto/authencesn.c' l='73' u='c' c='crypto_authenc_esn_setkey'/>
<use f='linux-5.3.1/crypto/ccm.c' l='108' u='c' c='crypto_ccm_setkey'/>
<use f='linux-5.3.1/crypto/gcm.c' l='143' u='c' c='crypto_gcm_setkey'/>
<use f='linux-5.3.1/net/ipv6/ah6.c' l='692' u='c' c='ah6_init_state'/>
