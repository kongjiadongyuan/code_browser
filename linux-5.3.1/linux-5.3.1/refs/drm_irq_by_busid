<dec f='linux-5.3.1/drivers/gpu/drm/drm_internal.h' l='49' type='int drm_irq_by_busid(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_internal.h' l='48'>/* drm_pci.c */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='577'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='577'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='577'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_ioctl.c' l='577'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_pci.c' l='184' ll='200' type='int drm_irq_by_busid(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_pci.c' l='172'>/**
 * drm_irq_by_busid - Get interrupt from bus ID
 * @dev: DRM device
 * @data: IOCTL parameter pointing to a drm_irq_busid structure
 * @file_priv: DRM file private.
 *
 * Finds the PCI device with the specified bus id and gets its IRQ number.
 * This IOCTL is deprecated, and will now return EINVAL for any busid not equal
 * to that of the device that this DRM instance attached to.
 *
 * Return: 0 on success or a negative error code on failure.
 */</doc>
