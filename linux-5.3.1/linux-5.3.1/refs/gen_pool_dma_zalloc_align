<dec f='linux-5.3.1/include/linux/genalloc.h' l='165' type='void * gen_pool_dma_zalloc_align(struct gen_pool * pool, size_t size, dma_addr_t * dma, int align)'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-mem.c' l='97' u='c' c='td_alloc'/>
<use f='linux-5.3.1/drivers/usb/host/ohci-mem.c' l='141' u='c' c='ed_alloc'/>
<def f='linux-5.3.1/lib/genalloc.c' l='464' ll='471' type='void * gen_pool_dma_zalloc_align(struct gen_pool * pool, size_t size, dma_addr_t * dma, int align)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='472' type='void * gen_pool_dma_zalloc_align(struct gen_pool * , size_t , dma_addr_t * , int )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='472' c='gen_pool_dma_zalloc_align'/>
<use f='linux-5.3.1/lib/genalloc.c' l='472' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='450'>/**
 * gen_pool_dma_zalloc_align - allocate special zeroed memory from the pool for
 * DMA usage with the given alignment
 * @pool: pool to allocate from
 * @size: number of bytes to allocate from the pool
 * @dma: DMA-view physical address return value. Use %NULL if unneeded.
 * @align: alignment in bytes for starting address
 *
 * Allocate the requested number of zeroed bytes from the specified pool,
 * with the given alignment restriction. Can not be used in NMI handler on
 * architectures without NMI-safe cmpxchg implementation.
 *
 * Return: virtual address of the allocated zeroed memory, or %NULL on failure
 */</doc>
