<dec f='linux-5.3.1/include/linux/leds.h' l='176' type='void led_blink_set_oneshot(struct led_classdev * led_cdev, unsigned long * delay_on, unsigned long * delay_off, int invert)'/>
<doc f='linux-5.3.1/include/linux/leds.h' l='162'>/**
 * led_blink_set_oneshot - do a oneshot software blink
 * @led_cdev: the LED to start blinking
 * @delay_on: the time it should be on (in ms)
 * @delay_off: the time it should ble off (in ms)
 * @invert: blink off, then on, leaving the led on
 *
 * This function makes the LED blink one time for delay_on +
 * delay_off time, ignoring the request if another one-shot
 * blink is already in progress.
 *
 * If invert is set, led blinks for delay_off first, then for
 * delay_on and leave the led on after the on-off cycle.
 */</doc>
<def f='linux-5.3.1/drivers/leds/led-core.c' l='197' ll='215' type='void led_blink_set_oneshot(struct led_classdev * led_cdev, unsigned long * delay_on, unsigned long * delay_off, int invert)'/>
<dec f='linux-5.3.1/drivers/leds/led-core.c' l='216' type='void led_blink_set_oneshot(struct led_classdev * , unsigned long * , unsigned long * , int )'/>
<use f='linux-5.3.1/drivers/leds/led-core.c' l='216' c='led_blink_set_oneshot'/>
<use f='linux-5.3.1/drivers/leds/led-core.c' l='216' u='a'/>
<use f='linux-5.3.1/drivers/leds/led-triggers.c' l='345' u='c' c='led_trigger_blink_setup'/>
