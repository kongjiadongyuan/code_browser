<dec f='linux-5.3.1/include/linux/scatterlist.h' l='463' type='bool sg_miter_skip(struct sg_mapping_iter * miter, off_t offset)'/>
<use f='linux-5.3.1/drivers/usb/storage/protocol.c' l='138' u='c' c='usb_stor_access_xfer_buf'/>
<def f='linux-5.3.1/lib/scatterlist.c' l='726' ll='743' type='bool sg_miter_skip(struct sg_mapping_iter * miter, off_t offset)'/>
<dec f='linux-5.3.1/lib/scatterlist.c' l='744' type='bool sg_miter_skip(struct sg_mapping_iter * , off_t )'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='744' c='sg_miter_skip'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='744' u='a'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='854' u='c' c='sg_copy_buffer'/>
<use f='linux-5.3.1/lib/scatterlist.c' l='964' u='c' c='sg_zero_buffer'/>
<doc f='linux-5.3.1/lib/scatterlist.c' l='708'>/**
 * sg_miter_skip - reposition mapping iterator
 * @miter: sg mapping iter to be skipped
 * @offset: number of bytes to plus the current location
 *
 * Description:
 *   Sets the offset of @miter to its current location plus @offset bytes.
 *   If mapping iterator @miter has been proceeded by sg_miter_next(), this
 *   stops @miter.
 *
 * Context:
 *   Don&apos;t care if @miter is stopped, or not proceeded yet.
 *   Otherwise, preemption disabled if the SG_MITER_ATOMIC is set.
 *
 * Returns:
 *   true if @miter contains the valid mapping.  false if end of sg
 *   list is reached.
 */</doc>
