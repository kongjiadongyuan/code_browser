<def f='linux-5.3.1/include/linux/crash_dump.h' l='64' ll='67' type='bool is_kdump_kernel()'/>
<use f='linux-5.3.1/include/linux/crash_dump.h' l='79' u='c' c='is_vmcore_usable'/>
<use f='linux-5.3.1/include/linux/crash_dump.h' l='88' u='c' c='vmcore_unusable'/>
<doc f='linux-5.3.1/include/linux/crash_dump.h' l='54'>/*
 * is_kdump_kernel() checks whether this kernel is booting after a panic of
 * previous kernel or not. This is determined by checking if previous kernel
 * has passed the elf core header address on command line.
 *
 * This is not just a test if CONFIG_CRASH_DUMP is enabled or not. It will
 * return true if CONFIG_CRASH_DUMP=y and if kernel is booting after a panic
 * of previous kernel.
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/pci-calgary_64.c' l='749' u='c' c='calgary_setup_tar'/>
<use f='linux-5.3.1/arch/x86/kernel/pci-calgary_64.c' l='1126' u='c' c='calgary_init'/>
<use f='linux-5.3.1/arch/x86/kernel/pci-calgary_64.c' l='1194' u='c' c='determine_tce_table_size'/>
<use f='linux-5.3.1/arch/x86/kernel/pci-calgary_64.c' l='1428' u='c' c='detect_calgary'/>
<use f='linux-5.3.1/block/blk-mq.c' l='2990' u='c' c='blk_mq_update_queue_map'/>
<use f='linux-5.3.1/block/blk-mq.c' l='3058' u='c' c='blk_mq_alloc_tag_set'/>
<use f='linux-5.3.1/block/blk-mq.c' l='3082' u='c' c='blk_mq_alloc_tag_set'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='907' u='c' c='copy_device_table'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='1555' u='c' c='init_iommu_one'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='2604' u='c' c='early_amd_iommu_init'/>
<use f='linux-5.3.1/drivers/iommu/intel-iommu.c' l='3239' u='c' c='init_dmars'/>
<use f='linux-5.3.1/net/core/dev.c' l='2736' u='c' c='netif_get_num_default_rss_queues'/>
