<dec f='linux-5.3.1/include/linux/workqueue.h' l='385' type='struct workqueue_struct *'/>
<use f='linux-5.3.1/include/linux/workqueue.h' l='532' u='r' c='schedule_work_on'/>
<use f='linux-5.3.1/include/linux/workqueue.h' l='548' u='r' c='schedule_work'/>
<use f='linux-5.3.1/include/linux/workqueue.h' l='577' u='r' c='flush_scheduled_work'/>
<use f='linux-5.3.1/include/linux/workqueue.h' l='592' u='r' c='schedule_delayed_work_on'/>
<use f='linux-5.3.1/include/linux/workqueue.h' l='606' u='r' c='schedule_delayed_work'/>
<doc f='linux-5.3.1/include/linux/workqueue.h' l='357'>/*
 * System-wide workqueues which are always present.
 *
 * system_wq is the one used by schedule[_delayed]_work[_on]().
 * Multi-CPU multi-threaded.  There are users which expect relatively
 * short queue flush time.  Don&apos;t queue works which can run for too
 * long.
 *
 * system_highpri_wq is similar to system_wq but for work items which
 * require WQ_HIGHPRI.
 *
 * system_long_wq is similar to system_wq but may host long running
 * works.  Queue flushing might take relatively long.
 *
 * system_unbound_wq is unbound workqueue.  Workers are not bound to
 * any specific CPU, not concurrency managed, and all queued works are
 * executed immediately as long as max_active limit is not reached and
 * resources are available.
 *
 * system_freezable_wq is equivalent to system_wq except that it&apos;s
 * freezable.
 *
 * *_power_efficient_wq are inclined towards saving power and converted
 * into WQ_UNBOUND variants if &apos;wq_power_efficient&apos; is enabled; otherwise,
 * they are same as their non-power-efficient counterparts - e.g.
 * system_power_efficient_wq is identical to system_wq if
 * &apos;wq_power_efficient&apos; is disabled.  See WQ_POWER_EFFICIENT for more info.
 */</doc>
<use f='linux-5.3.1/block/partition-generic.c' l='263' u='r' c='__delete_partition'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_self_refresh_helper.c' l='165' u='r' c='drm_self_refresh_helper_alter_state'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='219' u='r' c='intel_hpd_irq_storm_switch_to_polling'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_globals.c' l='106' u='r' c='i915_globals_park'/>
<use f='linux-5.3.1/drivers/usb/host/xhci-ring.c' l='290' u='r' c='xhci_mod_cmd_timer'/>
<use f='linux-5.3.1/fs/aio.c' l='605' u='r' c='free_ioctx_reqs'/>
<use f='linux-5.3.1/fs/fs-writeback.c' l='2103' u='r' c='dirtytime_interval_handler'/>
<use f='linux-5.3.1/fs/nfs/nfs4renewd.c' l='125' u='r' c='nfs4_schedule_state_renewal'/>
<use f='linux-5.3.1/kernel/smp.c' l='814' u='r' c='smp_call_on_cpu'/>
<def f='linux-5.3.1/kernel/workqueue.c' l='341' type='struct workqueue_struct *'/>
<dec f='linux-5.3.1/kernel/workqueue.c' l='342' type='typeof (system_wq)'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='342'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='342' u='a'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='5908' u='w' c='workqueue_init_early'/>
<use f='linux-5.3.1/kernel/workqueue.c' l='5920' u='r' c='workqueue_init_early'/>
<use f='linux-5.3.1/net/core/link_watch.c' l='133' u='r' c='linkwatch_schedule_work'/>
<use f='linux-5.3.1/net/ipv4/inet_fragment.c' l='190' u='r' c='fqdir_exit'/>
<use f='linux-5.3.1/net/rfkill/input.c' l='162' u='r' c='rfkill_schedule_global_op'/>
