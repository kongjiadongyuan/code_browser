<dec f='linux-5.3.1/include/drm/drm_atomic_uapi.h' l='52' type='void drm_atomic_set_fence_for_plane(struct drm_plane_state * plane_state, struct dma_fence * fence)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='268' ll='278' type='void drm_atomic_set_fence_for_plane(struct drm_plane_state * plane_state, struct dma_fence * fence)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='279' type='void drm_atomic_set_fence_for_plane(struct drm_plane_state * , struct dma_fence * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='279' c='drm_atomic_set_fence_for_plane'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='279' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_atomic_uapi.c' l='244'>/**
 * drm_atomic_set_fence_for_plane - set fence for plane
 * @plane_state: atomic state object for the plane
 * @fence: dma_fence to use for the plane
 *
 * Helper to setup the plane_state fence in case it is not set yet.
 * By using this drivers doesn&apos;t need to worry if the user choose
 * implicit or explicit fencing.
 *
 * This function will not set the fence to the state if it was set
 * via explicit fencing interfaces on the atomic ioctl. In that case it will
 * drop the reference to the fence as we are not storing it anywhere.
 * Otherwise, if &amp;drm_plane_state.fence is not set this function we just set it
 * with the received implicit fence. In both cases this function consumes a
 * reference for @fence.
 *
 * This way explicit fencing can be used to overrule implicit fencing, which is
 * important to make explicit fencing use-cases work: One example is using one
 * buffer for 2 screens with different refresh rates. Implicit fencing will
 * clamp rendering to the refresh rate of the slower screen, whereas explicit
 * fence allows 2 independent render and display loops on a single buffer. If a
 * driver allows obeys both implicit and explicit fences for plane updates, then
 * it will break all the benefits of explicit fencing.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='299' u='c' c='drm_gem_fb_prepare_fb'/>
