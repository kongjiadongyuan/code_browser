<dec f='linux-5.3.1/include/linux/pci.h' l='1463' type='int pci_alloc_irq_vectors_affinity(struct pci_dev * dev, unsigned int min_vecs, unsigned int max_vecs, unsigned int flags, struct irq_affinity * affd)'/>
<use f='linux-5.3.1/include/linux/pci.h' l='1524' u='c' c='pci_alloc_irq_vectors'/>
<def f='linux-5.3.1/drivers/pci/msi.c' l='1188' ll='1236' type='int pci_alloc_irq_vectors_affinity(struct pci_dev * dev, unsigned int min_vecs, unsigned int max_vecs, unsigned int flags, struct irq_affinity * affd)'/>
<dec f='linux-5.3.1/drivers/pci/msi.c' l='1237' type='int pci_alloc_irq_vectors_affinity(struct pci_dev * , unsigned int , unsigned int , unsigned int , struct irq_affinity * )'/>
<use f='linux-5.3.1/drivers/pci/msi.c' l='1237' c='pci_alloc_irq_vectors_affinity'/>
<use f='linux-5.3.1/drivers/pci/msi.c' l='1237' u='a'/>
<doc f='linux-5.3.1/drivers/pci/msi.c' l='1170'>/**
 * pci_alloc_irq_vectors_affinity - allocate multiple IRQs for a device
 * @dev:		PCI device to operate on
 * @min_vecs:		minimum number of vectors required (must be &gt;= 1)
 * @max_vecs:		maximum (desired) number of vectors
 * @flags:		flags or quirks for the allocation
 * @affd:		optional description of the affinity requirements
 *
 * Allocate up to @max_vecs interrupt vectors for @dev, using MSI-X or MSI
 * vectors if available, and fall back to a single legacy vector
 * if neither is available.  Return the number of vectors allocated,
 * (which might be smaller than @max_vecs) if successful, or a negative
 * error code on error. If less than @min_vecs interrupt vectors are
 * available for @dev the function will fail with -ENOSPC.
 *
 * To get the Linux IRQ number used for a vector that can be passed to
 * request_irq() use the pci_irq_vector() helper.
 */</doc>
