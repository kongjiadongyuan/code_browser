<def f='linux-5.3.1/arch/x86/include/asm/atomic64_64.h' l='178' ll='181' type='s64 arch_atomic64_cmpxchg(atomic64_t * v, s64 old, s64 new)'/>
<use f='linux-5.3.1/include/asm-generic/atomic-instrumented.h' l='1464' u='c' c='atomic64_cmpxchg'/>
<def f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='74' ll='77' type='s64 arch_atomic64_cmpxchg(atomic64_t * v, s64 o, s64 n)'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='271' u='c' c='arch_atomic64_and'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='279' u='c' c='arch_atomic64_fetch_and'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='289' u='c' c='arch_atomic64_or'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='297' u='c' c='arch_atomic64_fetch_or'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='307' u='c' c='arch_atomic64_xor'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='315' u='c' c='arch_atomic64_fetch_xor'/>
<use f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='325' u='c' c='arch_atomic64_fetch_add'/>
<doc f='linux-5.3.1/arch/x86/include/asm/atomic64_32.h' l='64'>/**
 * arch_atomic64_cmpxchg - cmpxchg atomic64 variable
 * @v: pointer to type atomic64_t
 * @o: expected value
 * @n: new value
 *
 * Atomically sets @v to @n if it was equal to @o and returns
 * the old value.
 */</doc>
