<dec f='linux-5.3.1/include/linux/quota.h' l='79' type='qid_t from_kqid(struct user_namespace * to, struct kqid qid)'/>
<use f='linux-5.3.1/include/linux/quota.h' l='189' u='c' c='qid_has_mapping'/>
<use f='linux-5.3.1/fs/quota/dquot.c' l='264' u='c' c='hashfn'/>
<def f='linux-5.3.1/fs/quota/kqid.c' l='68' ll='80' type='qid_t from_kqid(struct user_namespace * targ, struct kqid kqid)'/>
<dec f='linux-5.3.1/fs/quota/kqid.c' l='81' type='qid_t from_kqid(struct user_namespace * , struct kqid )'/>
<use f='linux-5.3.1/fs/quota/kqid.c' l='81' c='from_kqid'/>
<use f='linux-5.3.1/fs/quota/kqid.c' l='81' u='a'/>
<doc f='linux-5.3.1/fs/quota/kqid.c' l='56'>/**
 *	from_kqid - Create a qid from a kqid user-namespace pair.
 *	@targ: The user namespace we want a qid in.
 *	@kqid: The kernel internal quota identifier to start with.
 *
 *	Map @kqid into the user-namespace specified by @targ and
 *	return the resulting qid.
 *
 *	There is always a mapping into the initial user_namespace.
 *
 *	If @kqid has no mapping in @targ (qid_t)-1 is returned.
 */</doc>
<use f='linux-5.3.1/fs/quota/quota.c' l='243' u='c' c='quota_getnextquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='575' u='c' c='quota_setxquota'/>
<use f='linux-5.3.1/fs/quota/quota.c' l='665' u='c' c='quota_getnextxquota'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='38' u='c' c='get_index'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='558' u='c' c='find_block_dqentry'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='628' u='c' c='qtree_read_dquot'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='647' u='c' c='qtree_read_dquot'/>
<use f='linux-5.3.1/fs/quota/quota_tree.c' l='725' u='c' c='qtree_get_next_id'/>
<use f='linux-5.3.1/fs/quota/quota_v2.c' l='233' u='c' c='v2r0_mem2diskdqb'/>
<use f='linux-5.3.1/fs/quota/quota_v2.c' l='286' u='c' c='v2r1_mem2diskdqb'/>
