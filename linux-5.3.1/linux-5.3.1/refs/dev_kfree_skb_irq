<def f='linux-5.3.1/include/linux/netdevice.h' l='3594' ll='3597' type='void dev_kfree_skb_irq(struct sk_buff * skb)'/>
<doc f='linux-5.3.1/include/linux/netdevice.h' l='3575'>/*
 * It is not allowed to call kfree_skb() or consume_skb() from hardware
 * interrupt context or with hardware interrupts being disabled.
 * (in_irq() || irqs_disabled())
 *
 * We provide four helpers that can be used in following contexts :
 *
 * dev_kfree_skb_irq(skb) when caller drops a packet from irq context,
 *  replacing kfree_skb(skb)
 *
 * dev_consume_skb_irq(skb) when caller consumes a packet from irq context.
 *  Typically used in place of consume_skb(skb) in TX completion path
 *
 * dev_kfree_skb_any(skb) when caller doesn&apos;t know its current irq context,
 *  replacing kfree_skb(skb)
 *
 * dev_consume_skb_any(skb) when caller doesn&apos;t know its current irq context,
 *  and consumed a packet. Used in place of consume_skb(skb)
 */</doc>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1353' u='c' c='e1000_clean_rx_irq_ps'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1361' u='c' c='e1000_clean_rx_irq_ps'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1369' u='c' c='e1000_clean_rx_irq_ps'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1561' u='c' c='e1000_clean_jumbo_rx_irq'/>
<use f='linux-5.3.1/drivers/net/ethernet/intel/e1000e/netdev.c' l='1635' u='c' c='e1000_clean_jumbo_rx_irq'/>
<use f='linux-5.3.1/net/core/netpoll.c' l='319' u='c' c='netpoll_send_skb_on_dev'/>
