<dec f='linux-5.3.1/include/linux/skbuff.h' l='3777' type='__sum16 __skb_checksum_complete(struct sk_buff * skb)'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='3806' u='c' c='skb_checksum_complete'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='3890' u='c' c='__skb_checksum_validate_complete'/>
<use f='linux-5.3.1/include/linux/skbuff.h' l='3981' u='c' c='skb_remcsum_process'/>
<use f='linux-5.3.1/net/core/datagram.c' l='721' u='c' c='skb_copy_and_csum_datagram_msg'/>
<use f='linux-5.3.1/include/net/udp.h' l='111' u='c' c='__udp_lib_checksum_complete'/>
<use f='linux-5.3.1/include/net/tcp.h' l='1323' u='c' c='tcp_checksum_complete'/>
<def f='linux-5.3.1/net/core/skbuff.c' l='2834' ll='2864' type='__sum16 __skb_checksum_complete(struct sk_buff * skb)'/>
<dec f='linux-5.3.1/net/core/skbuff.c' l='2865' type='__sum16 __skb_checksum_complete(struct sk_buff * )'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='2865' c='__skb_checksum_complete'/>
<use f='linux-5.3.1/net/core/skbuff.c' l='2865' u='a'/>
<doc f='linux-5.3.1/net/core/skbuff.c' l='2825'>/* This function assumes skb-&gt;csum already holds pseudo header&apos;s checksum,
 * which has been changed from the hardware checksum, for example, by
 * __skb_checksum_validate_complete(). And, the original skb-&gt;csum must
 * have been validated unsuccessfully for CHECKSUM_COMPLETE case.
 *
 * It returns non-zero if the recomputed checksum is still invalid, otherwise
 * zero. The new checksum is stored back into skb-&gt;csum unless the skb is
 * shared.
 */</doc>
<use f='linux-5.3.1/net/ipv6/raw.c' l='493' u='c' c='rawv6_recvmsg'/>
<use f='linux-5.3.1/net/netfilter/utils.c' l='36' u='c' c='nf_ip_checksum'/>
<use f='linux-5.3.1/net/netfilter/utils.c' l='91' u='c' c='nf_ip6_checksum'/>
