<dec f='linux-5.3.1/include/linux/sunrpc/clnt.h' l='183' type='int rpc_call_async(struct rpc_clnt * clnt, const struct rpc_message * msg, int flags, const struct rpc_call_ops * tk_ops, void * calldata)'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='5385' u='c' c='nfs4_proc_async_renew'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='7206' u='c' c='nfs4_release_lockowner'/>
<def f='linux-5.3.1/net/sunrpc/clnt.c' l='1179' ll='1197' type='int rpc_call_async(struct rpc_clnt * clnt, const struct rpc_message * msg, int flags, const struct rpc_call_ops * tk_ops, void * data)'/>
<dec f='linux-5.3.1/net/sunrpc/clnt.c' l='1198' type='int rpc_call_async(struct rpc_clnt * , const struct rpc_message * , int , const struct rpc_call_ops * , void * )'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1198' c='rpc_call_async'/>
<use f='linux-5.3.1/net/sunrpc/clnt.c' l='1198' u='a'/>
<doc f='linux-5.3.1/net/sunrpc/clnt.c' l='1171'>/**
 * rpc_call_async - Perform an asynchronous RPC call
 * @clnt: pointer to RPC client
 * @msg: RPC call parameters
 * @flags: RPC call flags
 * @tk_ops: RPC call ops
 * @data: user call data
 */</doc>
