<dec f='linux-5.3.1/include/linux/capability.h' l='213' type='bool ns_capable_setid(struct user_namespace * ns, int cap)'/>
<def f='linux-5.3.1/kernel/capability.c' l='431' ll='434' type='bool ns_capable_setid(struct user_namespace * ns, int cap)'/>
<dec f='linux-5.3.1/kernel/capability.c' l='435' type='bool ns_capable_setid(struct user_namespace * , int )'/>
<use f='linux-5.3.1/kernel/capability.c' l='435' c='ns_capable_setid'/>
<use f='linux-5.3.1/kernel/capability.c' l='435' u='a'/>
<doc f='linux-5.3.1/kernel/capability.c' l='418'>/**
 * ns_capable_setid - Determine if the current task has a superior capability
 * in effect, while signalling that this check is being done from within a
 * setid syscall.
 * @ns:  The usernamespace we want the capability in
 * @cap: The capability to be tested for
 *
 * Return true if the current task has the given superior capability currently
 * available for use, false if not.
 *
 * This sets PF_SUPERPRIV on the task if the capability is available on the
 * assumption that it&apos;s about to be used.
 */</doc>
<use f='linux-5.3.1/kernel/sys.c' l='519' u='c' c='__sys_setreuid'/>
<use f='linux-5.3.1/kernel/sys.c' l='528' u='c' c='__sys_setreuid'/>
<use f='linux-5.3.1/kernel/sys.c' l='587' u='c' c='__sys_setuid'/>
<use f='linux-5.3.1/kernel/sys.c' l='649' u='c' c='__sys_setresuid'/>
<use f='linux-5.3.1/kernel/sys.c' l='817' u='c' c='__sys_setfsuid'/>
