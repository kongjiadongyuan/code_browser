<dec f='linux-5.3.1/include/linux/hdmi.h' l='215' type='int hdmi_avi_infoframe_check(struct hdmi_avi_infoframe * frame)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hdmi.c' l='737' u='c' c='intel_hdmi_compute_avi_infoframe'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_sdvo.c' l='1084' u='c' c='intel_sdvo_compute_avi_infoframe'/>
<def f='linux-5.3.1/drivers/video/hdmi.c' l='93' ll='96' type='int hdmi_avi_infoframe_check(struct hdmi_avi_infoframe * frame)'/>
<dec f='linux-5.3.1/drivers/video/hdmi.c' l='97' type='int hdmi_avi_infoframe_check(struct hdmi_avi_infoframe * )'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='97' c='hdmi_avi_infoframe_check'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='97' u='a'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='209' u='c' c='hdmi_avi_infoframe_pack'/>
<use f='linux-5.3.1/drivers/video/hdmi.c' l='867' u='c' c='hdmi_infoframe_check'/>
<doc f='linux-5.3.1/drivers/video/hdmi.c' l='84'>/**
 * hdmi_avi_infoframe_check() - check a HDMI AVI infoframe
 * @frame: HDMI AVI infoframe
 *
 * Validates that the infoframe is consistent and updates derived fields
 * (eg. length) based on other fields.
 *
 * Returns 0 on success or a negative error code on failure.
 */</doc>
