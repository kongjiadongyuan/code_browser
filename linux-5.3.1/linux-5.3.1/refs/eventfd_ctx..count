<dec f='linux-5.3.1/fs/eventfd.c' l='40' type='__u64'/>
<use f='linux-5.3.1/fs/eventfd.c' l='64' u='r' c='eventfd_signal'/>
<use f='linux-5.3.1/fs/eventfd.c' l='65' u='r' c='eventfd_signal'/>
<use f='linux-5.3.1/fs/eventfd.c' l='66' u='w' c='eventfd_signal'/>
<use f='linux-5.3.1/fs/eventfd.c' l='157' c='eventfd_poll'/>
<use f='linux-5.3.1/fs/eventfd.c' l='157' u='a' c='eventfd_poll'/>
<use f='linux-5.3.1/fs/eventfd.c' l='157' u='r' c='eventfd_poll'/>
<use f='linux-5.3.1/fs/eventfd.c' l='157' u='a' c='eventfd_poll'/>
<use f='linux-5.3.1/fs/eventfd.c' l='157' u='r' c='eventfd_poll'/>
<use f='linux-5.3.1/fs/eventfd.c' l='171' u='r' c='eventfd_ctx_do_read'/>
<use f='linux-5.3.1/fs/eventfd.c' l='172' u='w' c='eventfd_ctx_do_read'/>
<use f='linux-5.3.1/fs/eventfd.c' l='217' u='r' c='eventfd_read'/>
<use f='linux-5.3.1/fs/eventfd.c' l='223' u='r' c='eventfd_read'/>
<use f='linux-5.3.1/fs/eventfd.c' l='267' u='r' c='eventfd_write'/>
<use f='linux-5.3.1/fs/eventfd.c' l='273' u='r' c='eventfd_write'/>
<use f='linux-5.3.1/fs/eventfd.c' l='289' u='w' c='eventfd_write'/>
<use f='linux-5.3.1/fs/eventfd.c' l='305' u='r' c='eventfd_show_fdinfo'/>
<use f='linux-5.3.1/fs/eventfd.c' l='409' u='w' c='do_eventfd'/>
<offset>256</offset>
<doc f='linux-5.3.1/fs/eventfd.c' l='32'>/*
	 * Every time that a write(2) is performed on an eventfd, the
	 * value of the __u64 being written is added to &quot;count&quot; and a
	 * wakeup is performed on &quot;wqh&quot;. A read(2) will return the &quot;count&quot;
	 * value to userspace, and will reset &quot;count&quot; to zero. The kernel
	 * side eventfd_signal() also, adds to the &quot;count&quot; counter and
	 * issue a wakeup.
	 */</doc>
