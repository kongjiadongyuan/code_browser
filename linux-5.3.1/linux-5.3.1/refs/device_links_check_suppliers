<dec f='linux-5.3.1/drivers/base/base.h' l='168' type='int device_links_check_suppliers(struct device * dev)'/>
<def f='linux-5.3.1/drivers/base/core.c' l='533' ll='555' type='int device_links_check_suppliers(struct device * dev)'/>
<doc f='linux-5.3.1/drivers/base/core.c' l='517'>/**
 * device_links_check_suppliers - Check presence of supplier drivers.
 * @dev: Consumer device.
 *
 * Check links from this device to any suppliers.  Walk the list of the device&apos;s
 * links to suppliers and see if all of them are available.  If not, simply
 * return -EPROBE_DEFER.
 *
 * We need to guarantee that the supplier will not go away after the check has
 * been positive here.  It only can go away in __device_release_driver() and
 * that function  checks the device&apos;s links to consumers.  This means we need to
 * mark the link as &quot;consumer probe in progress&quot; to make the supplier removal
 * wait for us to complete (or bad things may happen).
 *
 * Links with the DL_FLAG_STATELESS flag set are ignored.
 */</doc>
<use f='linux-5.3.1/drivers/base/dd.c' l='510' u='c' c='really_probe'/>
