<dec f='linux-5.3.1/include/linux/i2c.h' l='473' type='struct i2c_client * devm_i2c_new_dummy_device(struct device * dev, struct i2c_adapter * adap, u16 address)'/>
<def f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='945' ll='965' type='struct i2c_client * devm_i2c_new_dummy_device(struct device * dev, struct i2c_adapter * adapter, u16 address)'/>
<dec f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='966' type='struct i2c_client * devm_i2c_new_dummy_device(struct device * , struct i2c_adapter * , u16 )'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='966' c='devm_i2c_new_dummy_device'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='966' u='a'/>
<doc f='linux-5.3.1/drivers/i2c/i2c-core-base.c' l='935'>/**
 * devm_i2c_new_dummy_device - return a new i2c device bound to a dummy driver
 * @dev: device the managed resource is bound to
 * @adapter: the adapter managing the device
 * @address: seven bit address to be used
 * Context: can sleep
 *
 * This is the device-managed version of @i2c_new_dummy_device. It returns the
 * new i2c client or an ERR_PTR in case of an error.
 */</doc>
