<dec f='linux-5.3.1/include/linux/debugfs.h' l='59' type='struct dentry * debugfs_lookup(const char * name, struct dentry * parent)'/>
<def f='linux-5.3.1/fs/debugfs/inode.c' l='265' ll='283' type='struct dentry * debugfs_lookup(const char * name, struct dentry * parent)'/>
<dec f='linux-5.3.1/fs/debugfs/inode.c' l='284' type='struct dentry * debugfs_lookup(const char * , struct dentry * )'/>
<use f='linux-5.3.1/fs/debugfs/inode.c' l='284' c='debugfs_lookup'/>
<use f='linux-5.3.1/fs/debugfs/inode.c' l='284' u='a'/>
<doc f='linux-5.3.1/fs/debugfs/inode.c' l='253'>/**
 * debugfs_lookup() - look up an existing debugfs file
 * @name: a pointer to a string containing the name of the file to look up.
 * @parent: a pointer to the parent dentry of the file.
 *
 * This function will return a pointer to a dentry if it succeeds.  If the file
 * doesn&apos;t exist or an error occurs, %NULL will be returned.  The returned
 * dentry must be passed to dput() when it is no longer needed.
 *
 * If debugfs is not enabled in the kernel, the value -%ENODEV will be
 * returned.
 */</doc>
<use f='linux-5.3.1/kernel/trace/blktrace.c' l='512' u='c' c='do_blk_trace_setup'/>
