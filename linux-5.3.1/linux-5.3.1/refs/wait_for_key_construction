<dec f='linux-5.3.1/include/linux/key.h' l='346' type='int wait_for_key_construction(struct key * key, bool intr)'/>
<use f='linux-5.3.1/security/keys/key.c' l='959' u='c' c='key_create_or_update'/>
<use f='linux-5.3.1/security/keys/keyctl.c' l='232' u='c' c='__do_sys_request_key'/>
<use f='linux-5.3.1/security/keys/process_keys.c' l='782' u='c' c='lookup_user_key'/>
<def f='linux-5.3.1/security/keys/request_key.c' l='660' ll='672' type='int wait_for_key_construction(struct key * key, bool intr)'/>
<dec f='linux-5.3.1/security/keys/request_key.c' l='673' type='int wait_for_key_construction(struct key * , bool )'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='673' c='wait_for_key_construction'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='673' u='a'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='705' u='c' c='request_key_tag'/>
<use f='linux-5.3.1/security/keys/request_key.c' l='744' u='c' c='request_key_with_auxdata'/>
<doc f='linux-5.3.1/security/keys/request_key.c' l='649'>/**
 * wait_for_key_construction - Wait for construction of a key to complete
 * @key: The key being waited for.
 * @intr: Whether to wait interruptibly.
 *
 * Wait for a key to finish being constructed.
 *
 * Returns 0 if successful; -ERESTARTSYS if the wait was interrupted; -ENOKEY
 * if the key was negated; or -EKEYREVOKED or -EKEYEXPIRED if the key was
 * revoked or expired.
 */</doc>
