<dec f='linux-5.3.1/include/sound/pcm.h' l='1118' type='unsigned int snd_pcm_rate_mask_intersect(unsigned int rates_a, unsigned int rates_b)'/>
<def f='linux-5.3.1/sound/core/pcm_misc.c' l='560' ll='575' type='unsigned int snd_pcm_rate_mask_intersect(unsigned int rates_a, unsigned int rates_b)'/>
<dec f='linux-5.3.1/sound/core/pcm_misc.c' l='576' type='unsigned int snd_pcm_rate_mask_intersect(unsigned int , unsigned int )'/>
<use f='linux-5.3.1/sound/core/pcm_misc.c' l='576' c='snd_pcm_rate_mask_intersect'/>
<use f='linux-5.3.1/sound/core/pcm_misc.c' l='576' u='a'/>
<doc f='linux-5.3.1/sound/core/pcm_misc.c' l='548'>/**
 * snd_pcm_rate_mask_intersect - computes the intersection between two rate masks
 * @rates_a: The first rate mask
 * @rates_b: The second rate mask
 *
 * This function computes the rates that are supported by both rate masks passed
 * to the function. It will take care of the special handling of
 * SNDRV_PCM_RATE_CONTINUOUS and SNDRV_PCM_RATE_KNOT.
 *
 * Return: A rate mask containing the rates that are supported by both rates_a
 * and rates_b.
 */</doc>
