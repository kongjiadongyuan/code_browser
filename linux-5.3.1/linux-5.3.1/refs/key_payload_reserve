<dec f='linux-5.3.1/include/linux/key-type.h' l='168' type='int key_payload_reserve(struct key * key, size_t datalen)'/>
<def f='linux-5.3.1/security/keys/key.c' l='369' ll='400' type='int key_payload_reserve(struct key * key, size_t datalen)'/>
<dec f='linux-5.3.1/security/keys/key.c' l='401' type='int key_payload_reserve(struct key * , size_t )'/>
<use f='linux-5.3.1/security/keys/key.c' l='401' c='key_payload_reserve'/>
<use f='linux-5.3.1/security/keys/key.c' l='401' u='a'/>
<use f='linux-5.3.1/security/keys/key.c' l='1103' u='c' c='generic_key_instantiate'/>
<doc f='linux-5.3.1/security/keys/key.c' l='358'>/**
 * key_payload_reserve - Adjust data quota reservation for the key&apos;s payload
 * @key: The key to make the reservation for.
 * @datalen: The amount of data payload the caller now wants.
 *
 * Adjust the amount of the owning user&apos;s key data quota that a key reserves.
 * If the amount is increased, then -EDQUOT may be returned if there isn&apos;t
 * enough free quota available.
 *
 * If successful, 0 is returned.
 */</doc>
<use f='linux-5.3.1/security/keys/keyring.c' l='1329' u='c' c='__key_link_begin'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1393' u='c' c='__key_link_end'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1511' u='c' c='__key_unlink'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1662' u='c' c='keyring_clear'/>
<use f='linux-5.3.1/security/keys/keyring.c' l='1684' u='c' c='keyring_revoke'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='107' u='c' c='user_update'/>
<use f='linux-5.3.1/security/keys/user_defined.c' l='133' u='c' c='user_revoke'/>
