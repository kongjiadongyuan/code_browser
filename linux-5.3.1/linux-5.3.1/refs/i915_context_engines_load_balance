<def f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1647' ll='1657'/>
<size>48</size>
<doc f='linux-5.3.1/include/uapi/drm/i915_drm.h' l='1631'>/*
 * i915_context_engines_load_balance:
 *
 * Enable load balancing across this set of engines.
 *
 * Into the I915_EXEC_DEFAULT slot [0], a virtual engine is created that when
 * used will proxy the execbuffer request onto one of the set of engines
 * in such a way as to distribute the load evenly across the set.
 *
 * The set of engines must be compatible (e.g. the same HW class) as they
 * will share the same logical GPU context and ring.
 *
 * To intermix rendering with the virtual engine and direct rendering onto
 * the backing engines (bypassing the load balancing proxy), the context must
 * be defined to use a single timeline for all engines.
 */</doc>
<mbr r='i915_context_engines_load_balance::base' o='0' t='struct i915_user_extension'/>
<mbr r='i915_context_engines_load_balance::engine_index' o='256' t='__u16'/>
<mbr r='i915_context_engines_load_balance::num_siblings' o='272' t='__u16'/>
<mbr r='i915_context_engines_load_balance::flags' o='288' t='__u32'/>
<mbr r='i915_context_engines_load_balance::mbz64' o='320' t='__u64'/>
<mbr r='i915_context_engines_load_balance::engines' o='384' t='struct i915_engine_class_instance [0]'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='1417' c='set_engines__load_balance'/>
<size>48</size>
