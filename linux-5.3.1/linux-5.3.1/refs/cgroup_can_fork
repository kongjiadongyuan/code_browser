<dec f='linux-5.3.1/include/linux/cgroup.h' l='124' type='int cgroup_can_fork(struct task_struct * p)'/>
<def f='linux-5.3.1/kernel/cgroup/cgroup.c' l='5950' ll='5972' type='int cgroup_can_fork(struct task_struct * child)'/>
<doc f='linux-5.3.1/kernel/cgroup/cgroup.c' l='5942'>/**
 * cgroup_can_fork - called on a new task before the process is exposed
 * @child: the task in question.
 *
 * This calls the subsystem can_fork() callbacks. If the can_fork() callback
 * returns an error, the fork aborts with that error code. This allows for
 * a cgroup subsystem to conditionally allow or deny new forks.
 */</doc>
<use f='linux-5.3.1/kernel/fork.c' l='2125' u='c' c='copy_process'/>
