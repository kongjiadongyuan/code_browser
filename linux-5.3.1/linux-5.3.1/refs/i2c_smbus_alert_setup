<def f='linux-5.3.1/include/linux/i2c-smbus.h' l='30' ll='32'/>
<use f='linux-5.3.1/include/linux/i2c-smbus.h' l='35' c='i2c_setup_smbus_alert'/>
<size>4</size>
<doc f='linux-5.3.1/include/linux/i2c-smbus.h' l='16'>/**
 * i2c_smbus_alert_setup - platform data for the smbus_alert i2c client
 * @alert_edge_triggered: whether the alert interrupt is edge (1) or level (0)
 *		triggered
 * @irq: IRQ number, if the smbus_alert driver should take care of interrupt
 *		handling
 *
 * If irq is not specified, the smbus_alert driver doesn&apos;t take care of
 * interrupt handling. In that case it is up to the I2C bus driver to either
 * handle the interrupts or to poll for alerts.
 *
 * If irq is specified then it it crucial that alert_edge_triggered is
 * properly set.
 */</doc>
<mbr r='i2c_smbus_alert_setup::irq' o='0' t='int'/>
<use f='linux-5.3.1/drivers/i2c/i2c-core-smbus.c' l='689' c='i2c_setup_smbus_alert'/>
<size>4</size>
<use f='linux-5.3.1/drivers/i2c/i2c-smbus.c' l='124' c='smbalert_probe'/>
<size>4</size>
