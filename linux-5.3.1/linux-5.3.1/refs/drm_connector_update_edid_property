<dec f='linux-5.3.1/include/drm/drm_connector.h' l='1508' type='int drm_connector_update_edid_property(struct drm_connector * connector, const struct edid * edid)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1766' ll='1806' type='int drm_connector_update_edid_property(struct drm_connector * connector, const struct edid * edid)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1807' type='int drm_connector_update_edid_property(struct drm_connector * , const struct edid * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1807' c='drm_connector_update_edid_property'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1807' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='1752'>/**
 * drm_connector_update_edid_property - update the edid property of a connector
 * @connector: drm connector
 * @edid: new value of the edid property
 *
 * This function creates a new blob modeset object and assigns its id to the
 * connector&apos;s edid property.
 * Since we also parse tile information from EDID&apos;s displayID block, we also
 * set the connector&apos;s tile property here. See drm_connector_set_tile_property()
 * for more details.
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_debugfs.c' l='389' u='c' c='edid_write'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_debugfs.c' l='395' u='c' c='edid_write'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_edid.c' l='1609' u='c' c='drm_add_override_edid_modes'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='476' u='c' c='drm_helper_probe_single_connector_modes'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_connector.c' l='183' u='c' c='intel_connector_update_modes'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_dp.c' l='7240' u='c' c='intel_edp_init_connector'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_lvds.c' l='949' u='c' c='intel_lvds_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_sdvo.c' l='2073' u='c' c='intel_sdvo_get_ddc_modes'/>
