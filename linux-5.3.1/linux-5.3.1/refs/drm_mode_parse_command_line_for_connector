<dec f='linux-5.3.1/include/drm/drm_modes.h' l='539' type='bool drm_mode_parse_command_line_for_connector(const char * mode_option, const struct drm_connector * connector, struct drm_cmdline_mode * mode)'/>
<doc f='linux-5.3.1/include/drm/drm_modes.h' l='537'>/* parsing cmdline modes */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/drm_connector.c' l='131' u='c' c='drm_connector_get_cmdline_mode'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1721' ll='1872' type='bool drm_mode_parse_command_line_for_connector(const char * mode_option, const struct drm_connector * connector, struct drm_cmdline_mode * mode)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1873' type='bool drm_mode_parse_command_line_for_connector(const char * , const struct drm_connector * , struct drm_cmdline_mode * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1873' c='drm_mode_parse_command_line_for_connector'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1873' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_modes.c' l='1696'>/**
 * drm_mode_parse_command_line_for_connector - parse command line modeline for connector
 * @mode_option: optional per connector mode option
 * @connector: connector to parse modeline for
 * @mode: preallocated drm_cmdline_mode structure to fill out
 *
 * This parses @mode_option command line modeline for modes and options to
 * configure the connector. If @mode_option is NULL the default command line
 * modeline in fb_mode_option will be parsed instead.
 *
 * This uses the same parameters as the fb modedb.c, except for an extra
 * force-enable, force-enable-digital and force-disable bit at the end::
 *
 *	&lt;xres&gt;x&lt;yres&gt;[M][R][-&lt;bpp&gt;][@&lt;refresh&gt;][i][m][eDd]
 *
 * Additionals options can be provided following the mode, using a comma to
 * separate each option. Valid options can be found in
 * Documentation/fb/modedb.rst.
 *
 * The intermediate drm_cmdline_mode structure is required to store additional
 * options from the command line modline like the force-enable/disable flag.
 *
 * Returns:
 * True if a valid modeline has been parsed, false otherwise.
 */</doc>
