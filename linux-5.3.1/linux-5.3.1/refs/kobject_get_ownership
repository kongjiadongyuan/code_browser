<dec f='linux-5.3.1/include/linux/kobject.h' l='118' type='void kobject_get_ownership(struct kobject * kobj, kuid_t * uid, kgid_t * gid)'/>
<use f='linux-5.3.1/fs/sysfs/dir.c' l='57' u='c' c='sysfs_create_dir_ns'/>
<use f='linux-5.3.1/fs/sysfs/file.c' l='330' u='c' c='sysfs_create_file_ns'/>
<use f='linux-5.3.1/fs/sysfs/file.c' l='375' u='c' c='sysfs_add_file_to_group'/>
<use f='linux-5.3.1/fs/sysfs/file.c' l='544' u='c' c='sysfs_create_bin_file'/>
<use f='linux-5.3.1/fs/sysfs/group.c' l='126' u='c' c='internal_create_group'/>
<use f='linux-5.3.1/fs/sysfs/group.c' l='339' u='c' c='sysfs_merge_group'/>
<def f='linux-5.3.1/lib/kobject.c' l='48' ll='55' type='void kobject_get_ownership(struct kobject * kobj, kuid_t * uid, kgid_t * gid)'/>
<use f='linux-5.3.1/lib/kobject.c' l='924' u='c' c='kset_get_ownership'/>
<doc f='linux-5.3.1/lib/kobject.c' l='38'>/**
 * kobject_get_ownership() - Get sysfs ownership data for @kobj.
 * @kobj: kobject in question
 * @uid: kernel user ID for sysfs objects
 * @gid: kernel group ID for sysfs objects
 *
 * Returns initial uid/gid pair that should be used when creating sysfs
 * representation of given kobject. Normally used to adjust ownership of
 * objects in a container.
 */</doc>
