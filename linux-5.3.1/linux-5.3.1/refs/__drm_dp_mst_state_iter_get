<def f='linux-5.3.1/include/drm/drm_dp_mst_helper.h' l='684' ll='703' type='bool __drm_dp_mst_state_iter_get(struct drm_atomic_state * state, struct drm_dp_mst_topology_mgr ** mgr, struct drm_dp_mst_topology_state ** old_state, struct drm_dp_mst_topology_state ** new_state, int i)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3767' macro='1' u='c' c='drm_dp_mst_atomic_check'/>
<doc f='linux-5.3.1/include/drm/drm_dp_mst_helper.h' l='665'>/**
 * __drm_dp_mst_state_iter_get - private atomic state iterator function for
 * macro-internal use
 * @state: &amp;struct drm_atomic_state pointer
 * @mgr: pointer to the &amp;struct drm_dp_mst_topology_mgr iteration cursor
 * @old_state: optional pointer to the old &amp;struct drm_dp_mst_topology_state
 * iteration cursor
 * @new_state: optional pointer to the new &amp;struct drm_dp_mst_topology_state
 * iteration cursor
 * @i: int iteration cursor, for macro-internal use
 *
 * Used by for_each_oldnew_mst_mgr_in_state(),
 * for_each_old_mst_mgr_in_state(), and for_each_new_mst_mgr_in_state(). Don&apos;t
 * call this directly.
 *
 * Returns:
 * True if the current &amp;struct drm_private_obj is a &amp;struct
 * drm_dp_mst_topology_mgr, false otherwise.
 */</doc>
