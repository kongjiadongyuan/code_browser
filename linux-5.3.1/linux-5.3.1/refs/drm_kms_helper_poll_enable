<dec f='linux-5.3.1/include/drm/drm_probe_helper.h' l='24' type='void drm_kms_helper_poll_enable(struct drm_device * dev)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_helper.c' l='207' u='c' c='drm_mode_config_helper_suspend'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_helper.c' l='247' u='c' c='drm_mode_config_helper_resume'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='223' ll='258' type='void drm_kms_helper_poll_enable(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='259' type='void drm_kms_helper_poll_enable(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='259' c='drm_kms_helper_poll_enable'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='259' u='a'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='469' u='c' c='drm_helper_probe_single_connector_modes'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='732' u='c' c='drm_kms_helper_poll_init'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_probe_helper.c' l='208'>/**
 * drm_kms_helper_poll_enable - re-enable output polling.
 * @dev: drm_device
 *
 * This function re-enables the output polling work, after it has been
 * temporarily disabled using drm_kms_helper_poll_disable(), for example over
 * suspend/resume.
 *
 * Drivers can call this helper from their device resume implementation. It is
 * not an error to call this even when output polling isn&apos;t enabled.
 *
 * Note that calls to enable and disable polling must be strictly ordered, which
 * is automatically the case when they&apos;re only call from suspend/resume
 * callbacks.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='218' u='c' c='intel_hpd_irq_storm_switch_to_polling'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_hotplug.c' l='596' u='c' c='i915_hpd_poll_init_work'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='2276' u='c' c='i915_drm_resume'/>
