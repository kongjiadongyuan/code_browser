<dec f='linux-5.3.1/include/linux/mdio.h' l='309' type='int mdiobus_read(struct mii_bus * bus, int addr, u32 regnum)'/>
<use f='linux-5.3.1/include/linux/phy.h' l='691' u='c' c='phy_read'/>
<def f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='633' ll='644' type='int mdiobus_read(struct mii_bus * bus, int addr, u32 regnum)'/>
<dec f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='645' type='int mdiobus_read(struct mii_bus * , int , u32 )'/>
<use f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='645' c='mdiobus_read'/>
<use f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='645' u='a'/>
<doc f='linux-5.3.1/drivers/net/phy/mdio_bus.c' l='623'>/**
 * mdiobus_read - Convenience function for reading a given MII mgmt register
 * @bus: the mii_bus struct
 * @addr: the phy address
 * @regnum: register number to read
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 */</doc>
<use f='linux-5.3.1/drivers/net/phy/phy.c' l='419' u='c' c='phy_mii_ioctl'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='675' u='c' c='get_phy_c45_devs_in_pkg'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='681' u='c' c='get_phy_c45_devs_in_pkg'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='745' u='c' c='get_phy_c45_ids'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='751' u='c' c='get_phy_c45_ids'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='785' u='c' c='get_phy_id'/>
<use f='linux-5.3.1/drivers/net/phy/phy_device.c' l='794' u='c' c='get_phy_id'/>
