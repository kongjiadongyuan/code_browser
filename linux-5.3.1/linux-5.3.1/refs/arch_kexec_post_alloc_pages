<dec f='linux-5.3.1/arch/x86/include/asm/kexec.h' l='197' type='int arch_kexec_post_alloc_pages(void * vaddr, unsigned int pages, gfp_t gfp)'/>
<def f='linux-5.3.1/arch/x86/kernel/machine_kexec_64.c' l='666' macro='1' type='int arch_kexec_post_alloc_pages(void * vaddr, unsigned int pages, gfp_t gfp)'/>
<doc f='linux-5.3.1/arch/x86/kernel/machine_kexec_64.c' l='657'>/*
 * During a traditional boot under SME, SME will encrypt the kernel,
 * so the SME kexec kernel also needs to be un-encrypted in order to
 * replicate a normal SME boot.
 *
 * During a traditional boot under SEV, the kernel has already been
 * loaded encrypted, so the SEV kexec kernel needs to be encrypted in
 * order to replicate a normal SEV boot.
 */</doc>
<use f='linux-5.3.1/kernel/kexec_core.c' l='313' macro='1' u='c' c='kimage_alloc_pages'/>
<use f='linux-5.3.1/kernel/kexec_core.c' l='475' macro='1' u='c' c='kimage_alloc_crash_control_pages'/>
<use f='linux-5.3.1/kernel/kexec_core.c' l='873' macro='1' u='c' c='kimage_load_crash_segment'/>
