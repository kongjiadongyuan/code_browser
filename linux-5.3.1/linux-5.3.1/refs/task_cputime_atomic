<def f='linux-5.3.1/include/linux/sched/signal.h' l='44' ll='48'/>
<use f='linux-5.3.1/include/linux/sched/signal.h' l='68'/>
<size>24</size>
<doc f='linux-5.3.1/include/linux/sched/signal.h' l='40'>/*
 * This is the atomic variant of task_cputime, which can be used for
 * storing and updating task_cputime statistics without locking.
 */</doc>
<mbr r='task_cputime_atomic::utime' o='0' t='atomic64_t'/>
<mbr r='task_cputime_atomic::stime' o='64' t='atomic64_t'/>
<mbr r='task_cputime_atomic::sum_exec_runtime' o='128' t='atomic64_t'/>
<use f='linux-5.3.1/init/init_task.c' l='32' macro='1'/>
<use f='linux-5.3.1/init/init_task.c' l='32' macro='1'/>
<use f='linux-5.3.1/init/init_task.c' l='32' macro='1'/>
<use f='linux-5.3.1/init/init_task.c' l='32' macro='1'/>
<size>24</size>
<use f='linux-5.3.1/kernel/time/posix-cpu-timers.c' l='196' c='update_gt_cputime'/>
<use f='linux-5.3.1/kernel/time/posix-cpu-timers.c' l='205' c='sample_cputime_atomic'/>
<size>24</size>
