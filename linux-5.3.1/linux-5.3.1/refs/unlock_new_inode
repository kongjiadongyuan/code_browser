<dec f='linux-5.3.1/include/linux/fs.h' l='2997' type='void unlock_new_inode(struct inode * )'/>
<use f='linux-5.3.1/fs/bad_inode.c' l='240' u='c' c='iget_failed'/>
<use f='linux-5.3.1/fs/block_dev.c' l='928' u='c' c='bdget'/>
<use f='linux-5.3.1/fs/ext4/ialloc.c' l='1193' u='c' c='__ext4_new_inode'/>
<use f='linux-5.3.1/fs/ext4/inode.c' l='5121' u='c' c='__ext4_iget'/>
<use f='linux-5.3.1/fs/ext4/migrate.c' l='599' u='c' c='ext4_ext_migrate'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2560' u='c' c='ext4_add_nondir'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2665' u='c' c='ext4_tmpfile'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2674' u='c' c='ext4_tmpfile'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='2782' u='c' c='ext4_mkdir'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='3343' u='c' c='ext4_symlink'/>
<use f='linux-5.3.1/fs/ext4/namei.c' l='3829' u='c' c='ext4_rename'/>
<use f='linux-5.3.1/fs/ext4/xattr.c' l='1438' u='c' c='ext4_xattr_inode_create'/>
<def f='linux-5.3.1/fs/inode.c' l='980' ll='989' type='void unlock_new_inode(struct inode * inode)'/>
<dec f='linux-5.3.1/fs/inode.c' l='990' type='void unlock_new_inode(struct inode * )'/>
<use f='linux-5.3.1/fs/inode.c' l='990' c='unlock_new_inode'/>
<use f='linux-5.3.1/fs/inode.c' l='990' u='a'/>
<doc f='linux-5.3.1/fs/inode.c' l='973'>/**
 * unlock_new_inode - clear the I_NEW state and wake up any waiters
 * @inode:	new inode to unlock
 *
 * Called when the inode is fully initialised to clear the new state of the
 * inode and wake up anyone waiting for the inode to finish initialisation.
 */</doc>
<use f='linux-5.3.1/fs/isofs/inode.c' l='1555' u='c' c='__isofs_iget'/>
<use f='linux-5.3.1/fs/kernfs/inode.c' l='229' u='c' c='kernfs_init_inode'/>
<use f='linux-5.3.1/fs/nfs/inode.c' l='558' u='c' c='nfs_fhget'/>
