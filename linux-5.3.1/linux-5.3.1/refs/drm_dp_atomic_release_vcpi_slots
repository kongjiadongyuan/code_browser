<dec f='linux-5.3.1/include/drm/drm_dp_mst_helper.h' l='653' type='int drm_dp_atomic_release_vcpi_slots(struct drm_atomic_state * state, struct drm_dp_mst_topology_mgr * mgr, struct drm_dp_mst_port * port)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3196' ll='3227' type='int drm_dp_atomic_release_vcpi_slots(struct drm_atomic_state * state, struct drm_dp_mst_topology_mgr * mgr, struct drm_dp_mst_port * port)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3228' type='int drm_dp_atomic_release_vcpi_slots(struct drm_atomic_state * , struct drm_dp_mst_topology_mgr * , struct drm_dp_mst_port * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3228' c='drm_dp_atomic_release_vcpi_slots'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3228' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_dp_mst_topology.c' l='3170'>/**
 * drm_dp_atomic_release_vcpi_slots() - Release allocated vcpi slots
 * @state: global atomic state
 * @mgr: MST topology manager for the port
 * @port: The port to release the VCPI slots from
 *
 * Releases any VCPI slots that have been allocated to a port in the atomic
 * state. Any atomic drivers which support MST must call this function in
 * their &amp;drm_connector_helper_funcs.atomic_check() callback when the
 * connector will no longer have VCPI allocated (e.g. because its CRTC was
 * removed) when it had VCPI allocated in the previous atomic state.
 *
 * It is OK to call this even if @port has been removed from the system.
 * Additionally, it is OK to call this function multiple times on the same
 * @port as needed. It is not OK however, to call this function and
 * drm_dp_atomic_find_vcpi_slots() on the same @port in a single atomic check
 * phase.
 *
 * See also:
 * drm_dp_atomic_find_vcpi_slots()
 * drm_dp_mst_atomic_check()
 *
 * Returns:
 * 0 if all slots for this port were added back to
 * &amp;drm_dp_mst_topology_state.avail_slots or negative error code
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_dp_mst.c' l='195' u='c' c='intel_dp_mst_atomic_check'/>
