<dec f='linux-5.3.1/include/drm/drm_modeset_lock.h' l='127' type='void drm_modeset_unlock_all(struct drm_device * dev)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client_modeset.c' l='1020' u='c' c='drm_client_modeset_commit_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client_modeset.c' l='1094' u='c' c='drm_client_modeset_dpms_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='225' u='c' c='drm_helper_disable_unused_functions'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='995' u='c' c='drm_helper_resume_force_mode'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='1029' u='c' c='drm_helper_force_disable_all'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='983' u='c' c='setcmap_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='1440' u='c' c='pan_display_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='947' u='c' c='legacy_remove_fb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_object.c' l='412' u='c' c='drm_mode_obj_get_properties_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_object.c' l='453' u='c' c='set_property_legacy'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='149' ll='164' type='void drm_modeset_unlock_all(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='165' type='void drm_modeset_unlock_all(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='165' c='drm_modeset_unlock_all'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='165' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='135'>/**
 * drm_modeset_unlock_all - drop all modeset locks
 * @dev: DRM device
 *
 * This function drops all modeset locks taken by a previous call to the
 * drm_modeset_lock_all() function.
 *
 * This function is deprecated. It uses the lock acquisition context stored
 * in &amp;drm_device.mode_config. This facilitates conversion of existing
 * code because it removes the need to manually deal with the acquisition
 * context, but it is also brittle because the context is global and care must
 * be taken not to nest calls. New code should pass the acquisition context
 * directly to the drm_modeset_drop_locks() function.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_audio.c' l='1008' u='c' c='i915_audio_component_bind'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_audio.c' l='1023' u='c' c='i915_audio_component_unbind'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='16036' u='c' c='intel_modeset_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1085' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1165' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1172' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1303' u='c' c='intel_overlay_attrs_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_pipe_crc.c' l='122' u='c' c='i9xx_pipe_crc_auto_source'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='2961' u='c' c='i915_shared_dplls_info'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3067' u='c' c='i915_ddb_info'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3163' u='c' c='i915_drrs_status'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3424' u='c' c='wm_latency_show'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3542' u='c' c='wm_latency_write'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='2060' u='c' c='intel_suspend_encoders'/>
