<dec f='linux-5.3.1/include/linux/nfsacl.h' l='36' type='int nfsacl_encode(struct xdr_buf * buf, unsigned int base, struct inode * inode, struct posix_acl * acl, int encode_entries, int typeflag)'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='1357' u='c' c='nfs3_xdr_enc_setacl3args'/>
<use f='linux-5.3.1/fs/nfs/nfs3xdr.c' l='1362' u='c' c='nfs3_xdr_enc_setacl3args'/>
<def f='linux-5.3.1/fs/nfs_common/nfsacl.c' l='92' ll='136' type='int nfsacl_encode(struct xdr_buf * buf, unsigned int base, struct inode * inode, struct posix_acl * acl, int encode_entries, int typeflag)'/>
<dec f='linux-5.3.1/fs/nfs_common/nfsacl.c' l='137' type='int nfsacl_encode(struct xdr_buf * , unsigned int , struct inode * , struct posix_acl * , int , int )'/>
<use f='linux-5.3.1/fs/nfs_common/nfsacl.c' l='137' c='nfsacl_encode'/>
<use f='linux-5.3.1/fs/nfs_common/nfsacl.c' l='137' u='a'/>
<doc f='linux-5.3.1/fs/nfs_common/nfsacl.c' l='80'>/**
 * nfsacl_encode - Encode an NFSv3 ACL
 *
 * @buf: destination xdr_buf to contain XDR encoded ACL
 * @base: byte offset in xdr_buf where XDR&apos;d ACL begins
 * @inode: inode of file whose ACL this is
 * @acl: posix_acl to encode
 * @encode_entries: whether to encode ACEs as well
 * @typeflag: ACL type: NFS_ACL_DEFAULT or zero
 *
 * Returns size of encoded ACL in bytes or a negative errno value.
 */</doc>
