<dec f='linux-5.3.1/include/linux/genalloc.h' l='125' type='unsigned long gen_pool_alloc_algo_owner(struct gen_pool * pool, size_t size, genpool_algo_t algo, void * data, void ** owner)'/>
<use f='linux-5.3.1/include/linux/genalloc.h' l='131' u='c' c='gen_pool_alloc_owner'/>
<use f='linux-5.3.1/include/linux/genalloc.h' l='138' u='c' c='gen_pool_alloc_algo'/>
<def f='linux-5.3.1/lib/genalloc.c' l='275' ll='323' type='unsigned long gen_pool_alloc_algo_owner(struct gen_pool * pool, size_t size, genpool_algo_t algo, void * data, void ** owner)'/>
<dec f='linux-5.3.1/lib/genalloc.c' l='324' type='unsigned long gen_pool_alloc_algo_owner(struct gen_pool * , size_t , genpool_algo_t , void * , void ** )'/>
<use f='linux-5.3.1/lib/genalloc.c' l='324' c='gen_pool_alloc_algo_owner'/>
<use f='linux-5.3.1/lib/genalloc.c' l='324' u='a'/>
<doc f='linux-5.3.1/lib/genalloc.c' l='262'>/**
 * gen_pool_alloc_algo_owner - allocate special memory from the pool
 * @pool: pool to allocate from
 * @size: number of bytes to allocate from the pool
 * @algo: algorithm passed from caller
 * @data: data passed to algorithm
 * @owner: optionally retrieve the chunk owner
 *
 * Allocate the requested number of bytes from the specified pool.
 * Uses the pool allocation function (with first-fit algorithm by default).
 * Can not be used in NMI handler on architectures without
 * NMI-safe cmpxchg implementation.
 */</doc>
