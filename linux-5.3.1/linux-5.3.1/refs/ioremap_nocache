<dec f='linux-5.3.1/arch/x86/include/asm/io.h' l='183' type='void * ioremap_nocache(resource_size_t offset, unsigned long size)'/>
<use f='linux-5.3.1/arch/x86/include/asm/io.h' l='184' u='c' c='ioremap'/>
<use f='linux-5.3.1/include/linux/io.h' l='98' macro='1' u='c' c='pci_remap_cfgspace'/>
<doc f='linux-5.3.1/arch/x86/include/asm/io.h' l='179'>/*
 * The default ioremap() behavior is non-cached; if you need something
 * else, you probably want one of the following.
 */</doc>
<use f='linux-5.3.1/arch/x86/kernel/hpet.c' l='87' macro='1' u='c' c='hpet_set_mapping'/>
<use f='linux-5.3.1/arch/x86/kernel/pci-calgary_64.c' l='1079' macro='1' u='c' c='calgary_locate_bbars'/>
<use f='linux-5.3.1/arch/x86/kernel/quirks.c' l='115' macro='1' u='c' c='ich_force_enable_hpet'/>
<def f='linux-5.3.1/arch/x86/mm/ioremap.c' l='302' macro='1' type='void * ioremap_nocache(resource_size_t phys_addr, unsigned long size)'/>
<dec f='linux-5.3.1/arch/x86/mm/ioremap.c' l='317' macro='1' type='void * ioremap_nocache(resource_size_t , unsigned long )'/>
<use f='linux-5.3.1/arch/x86/mm/ioremap.c' l='317' macro='1' c='ioremap_nocache'/>
<use f='linux-5.3.1/arch/x86/mm/ioremap.c' l='317' macro='1' u='a'/>
<doc f='linux-5.3.1/arch/x86/mm/ioremap.c' l='281'>/**
 * ioremap_nocache     -   map bus memory into CPU space
 * @phys_addr:    bus address of the memory
 * @size:      size of the resource to map
 *
 * ioremap_nocache performs a platform specific sequence of operations to
 * make bus memory CPU accessible via the readb/readw/readl/writeb/
 * writew/writel functions and the other mmio helpers. The returned
 * address is not guaranteed to be usable directly as a virtual
 * address.
 *
 * This version of ioremap ensures that the memory is marked uncachable
 * on the CPU as well as honouring existing caching rules from things like
 * the PCI bus. Note that there are other caches and buffers on many
 * busses. In particular driver authors should read up on PCI writes
 *
 * It&apos;s useful if some control registers are in such an area and
 * write combining or read caching is not desirable:
 *
 * Must be freed with iounmap.
 */</doc>
<use f='linux-5.3.1/arch/x86/pci/mmconfig_64.c' l='108' macro='1' u='c' c='mcfg_ioremap'/>
<use f='linux-5.3.1/drivers/acpi/acpi_lpit.c' l='107' macro='1' u='c' c='lpit_update_residency'/>
<use f='linux-5.3.1/drivers/char/agp/intel-gtt.c' l='1090' macro='1' u='c' c='intel_i9xx_setup_flush'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_gem_gtt.c' l='3005' macro='1' u='c' c='ggtt_probe_common'/>
<use f='linux-5.3.1/drivers/iommu/amd_iommu_init.c' l='442' macro='1' u='c' c='iommu_map_mmio_space'/>
<use f='linux-5.3.1/drivers/net/ethernet/marvell/sky2.c' l='5025' macro='1' u='c' c='sky2_probe'/>
<use f='linux-5.3.1/drivers/pci/msi.c' l='690' macro='1' u='c' c='msix_map_region'/>
<use f='linux-5.3.1/drivers/pci/pci.c' l='179' macro='1' u='c' c='pci_ioremap_bar'/>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='1575' macro='1' u='c' c='asus_hides_smbus_lpc_ich6_suspend'/>
<use f='linux-5.3.1/drivers/pci/quirks.c' l='4624' macro='1' u='c' c='pci_quirk_enable_intel_lpc_acs'/>
<use f='linux-5.3.1/drivers/platform/x86/pmc_atom.c' l='470' macro='1' u='c' c='pmc_setup_dev'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pci.c' l='265' macro='1' u='c' c='pci_plx9050_init'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pci.c' l='289' macro='1' u='c' c='pci_plx9050_exit'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_pci.c' l='465' macro='1' u='c' c='pci_siig10x_init'/>
<use f='linux-5.3.1/drivers/tty/serial/8250/8250_port.c' l='2856' macro='1' u='c' c='serial8250_request_std_resource'/>
<use f='linux-5.3.1/drivers/usb/host/pci-quirks.c' l='1153' macro='1' u='c' c='quirk_usb_handoff_xhci'/>
<use f='linux-5.3.1/lib/devres.c' l='40' macro='1' u='c' c='__devm_ioremap'/>
