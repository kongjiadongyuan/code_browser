<dec f='linux-5.3.1/include/drm/drm_irq.h' l='30' type='int drm_irq_uninstall(struct drm_device * dev)'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_irq.c' l='173' ll='218' type='int drm_irq_uninstall(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_irq.c' l='219' type='int drm_irq_uninstall(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_irq.c' l='219' c='drm_irq_uninstall'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_irq.c' l='219' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_irq.c' l='157'>/**
 * drm_irq_uninstall - uninstall the IRQ handler
 * @dev: DRM device
 *
 * Calls the driver&apos;s &amp;drm_driver.irq_uninstall function and unregisters the IRQ
 * handler.  This should only be called by drivers which used drm_irq_install()
 * to set up their interrupt handler. Other drivers must only reset
 * &amp;drm_device.irq_enabled to false.
 *
 * Note that for kernel modesetting drivers it is a bug if this function fails.
 * The sanity checks are only to catch buggy user modesetting drivers which call
 * the same function through an ioctl.
 *
 * Returns:
 * Zero on success or a negative error code on failure.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='757' u='c' c='i915_load_modeset_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='4966' u='c' c='intel_irq_uninstall'/>
