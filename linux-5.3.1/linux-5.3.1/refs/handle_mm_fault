<dec f='linux-5.3.1/include/linux/mm.h' l='1504' type='vm_fault_t handle_mm_fault(struct vm_area_struct * vma, unsigned long address, unsigned int flags)'/>
<use f='linux-5.3.1/arch/x86/mm/fault.c' l='1441' u='c' c='do_user_addr_fault'/>
<use f='linux-5.3.1/mm/gup.c' l='651' u='c' c='faultin_page'/>
<use f='linux-5.3.1/mm/gup.c' l='975' u='c' c='fixup_user_fault'/>
<def f='linux-5.3.1/mm/memory.c' l='3973' ll='4016' type='vm_fault_t handle_mm_fault(struct vm_area_struct * vma, unsigned long address, unsigned int flags)'/>
<dec f='linux-5.3.1/mm/memory.c' l='4017' type='vm_fault_t handle_mm_fault(struct vm_area_struct * , unsigned long , unsigned int )'/>
<use f='linux-5.3.1/mm/memory.c' l='4017' c='handle_mm_fault'/>
<use f='linux-5.3.1/mm/memory.c' l='4017' u='a'/>
<doc f='linux-5.3.1/mm/memory.c' l='3967'>/*
 * By the time we get here, we already hold the mm semaphore
 *
 * The mmap_sem may have been released depending on flags and our
 * return value.  See filemap_fault() and __lock_page_or_retry().
 */</doc>
