<dec f='linux-5.3.1/arch/x86/include/asm/iosf_mbi.h' l='120' type='void iosf_mbi_punit_acquire()'/>
<def f='linux-5.3.1/arch/x86/platform/intel/iosf_mbi.c' l='212' ll='215' type='void iosf_mbi_punit_acquire()'/>
<dec f='linux-5.3.1/arch/x86/platform/intel/iosf_mbi.c' l='216' type='void iosf_mbi_punit_acquire()'/>
<use f='linux-5.3.1/arch/x86/platform/intel/iosf_mbi.c' l='216' c='iosf_mbi_punit_acquire'/>
<use f='linux-5.3.1/arch/x86/platform/intel/iosf_mbi.c' l='216' u='a'/>
<doc f='linux-5.3.1/arch/x86/include/asm/iosf_mbi.h' l='98'>/**
 * iosf_mbi_punit_acquire() - Acquire access to the P-Unit
 *
 * One some systems the P-Unit accesses the PMIC to change various voltages
 * through the same bus as other kernel drivers use for e.g. battery monitoring.
 *
 * If a driver sends requests to the P-Unit which require the P-Unit to access
 * the PMIC bus while another driver is also accessing the PMIC bus various bad
 * things happen.
 *
 * Call this function before sending requests to the P-Unit which may make it
 * access the PMIC, be it through iosf_mbi* functions or through other means.
 * This function will block all kernel access to the PMIC I2C bus, so that the
 * P-Unit can safely access the PMIC over the shared I2C bus.
 *
 * Note on these systems the i2c-bus driver will request a sempahore from the
 * P-Unit for exclusive access to the PMIC bus when i2c drivers are accessing
 * it, but this does not appear to be sufficient, we still need to avoid making
 * certain P-Unit requests during the access window to avoid problems.
 *
 * This function locks a mutex, as such it may sleep.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_sideband.c' l='52' u='c' c='__vlv_punit_get'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='503' u='c' c='__intel_uncore_early_sanitize'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='518' u='c' c='intel_uncore_suspend'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='1652' u='c' c='intel_uncore_fini_mmio'/>
