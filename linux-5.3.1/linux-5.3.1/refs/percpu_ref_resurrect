<dec f='linux-5.3.1/include/linux/percpu-refcount.h' l='119' type='void percpu_ref_resurrect(struct percpu_ref * ref)'/>
<use f='linux-5.3.1/block/blk-mq.c' l='207' u='c' c='blk_mq_unfreeze_queue'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='371' u='c' c='percpu_ref_reinit'/>
<def f='linux-5.3.1/lib/percpu-refcount.c' l='389' ll='404' type='void percpu_ref_resurrect(struct percpu_ref * ref)'/>
<dec f='linux-5.3.1/lib/percpu-refcount.c' l='405' type='void percpu_ref_resurrect(struct percpu_ref * )'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='405' c='percpu_ref_resurrect'/>
<use f='linux-5.3.1/lib/percpu-refcount.c' l='405' u='a'/>
<doc f='linux-5.3.1/lib/percpu-refcount.c' l='375'>/**
 * percpu_ref_resurrect - modify a percpu refcount from dead to live
 * @ref: perpcu_ref to resurrect
 *
 * Modify @ref so that it&apos;s in the same state as before percpu_ref_kill() was
 * called. @ref must be dead but must not yet have exited.
 *
 * If @ref-&gt;release() frees @ref then the caller is responsible for
 * guaranteeing that @ref-&gt;release() does not get called while this
 * function is in progress.
 *
 * Note that percpu_ref_tryget[_live]() are safe to perform on @ref while
 * this function is in progress.
 */</doc>
