<dec f='linux-5.3.1/drivers/acpi/acpica/acutils.h' l='386' type='acpi_status acpi_ut_execute_HID(struct acpi_namespace_node * device_node, struct acpi_pnp_device_id ** return_id)'/>
<doc f='linux-5.3.1/drivers/acpi/acpica/acutils.h' l='382'>/*
 * utids - device ID support
 */</doc>
<use f='linux-5.3.1/drivers/acpi/acpica/evrgnini.c' l='322' u='c' c='acpi_ev_is_pci_root_bridge'/>
<use f='linux-5.3.1/drivers/acpi/acpica/nsxfeval.c' l='679' u='c' c='acpi_ns_get_device_callback'/>
<use f='linux-5.3.1/drivers/acpi/acpica/nsxfname.c' l='288' u='c' c='acpi_get_object_info'/>
<def f='linux-5.3.1/drivers/acpi/acpica/utids.c' l='34' ll='92' type='acpi_status acpi_ut_execute_HID(struct acpi_namespace_node * device_node, struct acpi_pnp_device_id ** return_id)'/>
<doc f='linux-5.3.1/drivers/acpi/acpica/utids.c' l='17'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ut_execute_HID
 *
 * PARAMETERS:  device_node         - Node for the device
 *              return_id           - Where the string HID is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Executes the _HID control method that returns the hardware
 *              ID of the device. The HID is either an 32-bit encoded EISAID
 *              Integer or a String. A string is always returned. An EISAID
 *              is converted to a string.
 *
 *              NOTE: Internal function, no parameter validation
 *
 ******************************************************************************/</doc>
