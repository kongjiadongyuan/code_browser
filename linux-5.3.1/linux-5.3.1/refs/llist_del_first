<dec f='linux-5.3.1/include/linux/llist.h' l='225' type='struct llist_node * llist_del_first(struct llist_head * head)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_context.c' l='348' u='c' c='contexts_free_first'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/gem/i915_gem_object.c' l='227' u='c' c='i915_gem_flush_free_objects'/>
<use f='linux-5.3.1/drivers/tty/tty_buffer.c' l='164' u='c' c='tty_buffer_alloc'/>
<def f='linux-5.3.1/lib/llist.c' l='53' ll='69' type='struct llist_node * llist_del_first(struct llist_head * head)'/>
<dec f='linux-5.3.1/lib/llist.c' l='70' type='struct llist_node * llist_del_first(struct llist_head * )'/>
<use f='linux-5.3.1/lib/llist.c' l='70' c='llist_del_first'/>
<use f='linux-5.3.1/lib/llist.c' l='70' u='a'/>
<doc f='linux-5.3.1/lib/llist.c' l='39'>/**
 * llist_del_first - delete the first entry of lock-less list
 * @head:	the head for your lock-less list
 *
 * If list is empty, return NULL, otherwise, return the first entry
 * deleted, this is the newest added one.
 *
 * Only one llist_del_first user can be used simultaneously with
 * multiple llist_add users without lock.  Because otherwise
 * llist_del_first, llist_add, llist_add (or llist_del_all, llist_add,
 * llist_add) sequence in another user may change @head-&gt;first-&gt;next,
 * but keep @head-&gt;first.  If multiple consumers are needed, please
 * use llist_del_all or use lock between consumers.
 */</doc>
