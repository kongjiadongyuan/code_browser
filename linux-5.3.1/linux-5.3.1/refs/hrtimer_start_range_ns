<dec f='linux-5.3.1/include/linux/hrtimer.h' l='367' type='void hrtimer_start_range_ns(struct hrtimer * timer, ktime_t tim, u64 range_ns, const enum hrtimer_mode mode)'/>
<use f='linux-5.3.1/include/linux/hrtimer.h' l='381' u='c' c='hrtimer_start'/>
<use f='linux-5.3.1/include/linux/hrtimer.h' l='395' u='c' c='hrtimer_start_expires'/>
<doc f='linux-5.3.1/include/linux/hrtimer.h' l='366'>/* Basic timer operations: */</doc>
<use f='linux-5.3.1/drivers/base/power/runtime.c' l='561' u='c' c='rpm_suspend'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_pmu.c' l='136' u='c' c='__i915_pmu_maybe_start_timer'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/intel_uncore.c' l='82' u='c' c='fw_domain_arm_timer'/>
<use f='linux-5.3.1/drivers/usb/host/ehci-timer.c' l='88' u='c' c='ehci_enable_event'/>
<use f='linux-5.3.1/fs/aio.c' l='1293' macro='1' u='c' c='read_events'/>
<def f='linux-5.3.1/kernel/time/hrtimer.c' l='1091' ll='1109' type='void hrtimer_start_range_ns(struct hrtimer * timer, ktime_t tim, u64 delta_ns, const enum hrtimer_mode mode)'/>
<dec f='linux-5.3.1/kernel/time/hrtimer.c' l='1110' type='void hrtimer_start_range_ns(struct hrtimer * , ktime_t , u64 , const enum hrtimer_mode )'/>
<use f='linux-5.3.1/kernel/time/hrtimer.c' l='1110' c='hrtimer_start_range_ns'/>
<use f='linux-5.3.1/kernel/time/hrtimer.c' l='1110' u='a'/>
<doc f='linux-5.3.1/kernel/time/hrtimer.c' l='1082'>/**
 * hrtimer_start_range_ns - (re)start an hrtimer
 * @timer:	the timer to be added
 * @tim:	expiry time
 * @delta_ns:	&quot;slack&quot; range for the timer
 * @mode:	timer mode: absolute (HRTIMER_MODE_ABS) or
 *		relative (HRTIMER_MODE_REL), and pinned (HRTIMER_MODE_PINNED);
 *		softirq based mode is considered for debug purpose only!
 */</doc>
