<dec f='linux-5.3.1/include/drm/drm_modeset_lock.h' l='126' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client_modeset.c' l='991' u='c' c='drm_client_modeset_commit_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_client_modeset.c' l='1082' u='c' c='drm_client_modeset_dpms_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='223' u='c' c='drm_helper_disable_unused_functions'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='960' u='c' c='drm_helper_resume_force_mode'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_crtc_helper.c' l='1017' u='c' c='drm_helper_force_disable_all'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='961' u='c' c='setcmap_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_fb_helper.c' l='1427' u='c' c='pan_display_legacy'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_framebuffer.c' l='933' u='c' c='legacy_remove_fb'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_object.c' l='392' u='c' c='drm_mode_obj_get_properties_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_mode_object.c' l='439' u='c' c='set_property_legacy'/>
<def f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='95' ll='132' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<dec f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='133' type='void drm_modeset_lock_all(struct drm_device * )'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='133' c='drm_modeset_lock_all'/>
<use f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='133' u='a'/>
<doc f='linux-5.3.1/drivers/gpu/drm/drm_modeset_lock.c' l='80'>/**
 * drm_modeset_lock_all - take all modeset locks
 * @dev: DRM device
 *
 * This function takes all modeset locks, suitable where a more fine-grained
 * scheme isn&apos;t (yet) implemented. Locks must be dropped by calling the
 * drm_modeset_unlock_all() function.
 *
 * This function is deprecated. It allocates a lock acquisition context and
 * stores it in &amp;drm_device.mode_config. This facilitate conversion of
 * existing code because it removes the need to manually deal with the
 * acquisition context, but it is also brittle because the context is global
 * and care must be taken not to nest calls. New code should use the
 * drm_modeset_lock_all_ctx() function and pass in the context explicitly.
 */</doc>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_audio.c' l='1001' u='c' c='i915_audio_component_bind'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_audio.c' l='1019' u='c' c='i915_audio_component_unbind'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_display.c' l='16034' u='c' c='intel_modeset_init'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1079' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1099' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_overlay.c' l='1244' u='c' c='intel_overlay_attrs_ioctl'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_pipe_crc.c' l='85' u='c' c='i9xx_pipe_crc_auto_source'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='2923' u='c' c='i915_shared_dplls_info'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3043' u='c' c='i915_ddb_info'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3154' u='c' c='i915_drrs_status'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3403' u='c' c='wm_latency_show'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_debugfs.c' l='3537' u='c' c='wm_latency_write'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_drv.c' l='2056' u='c' c='intel_suspend_encoders'/>
