<dec f='linux-5.3.1/include/linux/timekeeping.h' l='20' type='int do_sys_settimeofday64(const struct timespec64 * tv, const struct timezone * tz)'/>
<use f='linux-5.3.1/kernel/time/posix-timers.c' l='178' u='c' c='posix_clock_realtime_set'/>
<def f='linux-5.3.1/kernel/time/time.c' l='169' ll='197' type='int do_sys_settimeofday64(const struct timespec64 * tv, const struct timezone * tz)'/>
<use f='linux-5.3.1/kernel/time/time.c' l='221' u='c' c='__do_sys_settimeofday'/>
<use f='linux-5.3.1/kernel/time/time.c' l='266' u='c' c='__do_compat_sys_settimeofday'/>
<doc f='linux-5.3.1/kernel/time/time.c' l='158'>/*
 * In case for some reason the CMOS clock has not already been running
 * in UTC, but in some local time: The first time we set the timezone,
 * we will warp the clock so that it is ticking UTC time instead of
 * local time. Presumably, if someone is setting the timezone then we
 * are running in an environment where the programs understand about
 * timezones. This should be done at boot time in the /etc/rc script,
 * as soon as possible, so that the clock can be set right. Otherwise,
 * various programs will get confused when the clock gets warped.
 */</doc>
