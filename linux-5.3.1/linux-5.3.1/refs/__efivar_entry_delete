<dec f='linux-5.3.1/include/linux/efi.h' l='1498' type='int __efivar_entry_delete(struct efivar_entry * entry)'/>
<use f='linux-5.3.1/drivers/firmware/efi/efivars.c' l='454' u='c' c='efivar_delete'/>
<def f='linux-5.3.1/drivers/firmware/efi/vars.c' l='586' ll='598' type='int __efivar_entry_delete(struct efivar_entry * entry)'/>
<dec f='linux-5.3.1/drivers/firmware/efi/vars.c' l='599' type='int __efivar_entry_delete(struct efivar_entry * )'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='599' c='__efivar_entry_delete'/>
<use f='linux-5.3.1/drivers/firmware/efi/vars.c' l='599' u='a'/>
<doc f='linux-5.3.1/drivers/firmware/efi/vars.c' l='571'>/**
 * __efivar_entry_delete - delete an EFI variable
 * @entry: entry containing EFI variable to delete
 *
 * Delete the variable from the firmware but leave @entry on the
 * variable list.
 *
 * This function differs from efivar_entry_delete() because it does
 * not remove @entry from the variable list. Also, it is safe to be
 * called from within a efivar_entry_iter_begin() and
 * efivar_entry_iter_end() region, unlike efivar_entry_delete().
 *
 * Returns 0 on success, or a converted EFI status code if
 * set_variable() fails.
 */</doc>
