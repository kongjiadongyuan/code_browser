<dec f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.h' l='34' type='void i915_hotplug_interrupt_update(struct drm_i915_private * dev_priv, u32 mask, u32 bits)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_crt.c' l='549' u='c' c='intel_crt_detect_hotplug'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/display/intel_crt.c' l='566' u='c' c='intel_crt_detect_hotplug'/>
<def f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='298' ll='305' type='void i915_hotplug_interrupt_update(struct drm_i915_private * dev_priv, u32 mask, u32 bits)'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='4497' u='c' c='i915_irq_reset'/>
<use f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='4609' u='c' c='i965_irq_reset'/>
<doc f='linux-5.3.1/drivers/gpu/drm/i915/i915_irq.c' l='286'>/**
 * i915_hotplug_interrupt_update - update hotplug interrupt enable
 * @dev_priv: driver private
 * @mask: bits to update
 * @bits: bits to enable
 * NOTE: the HPD enable bits are modified both inside and outside
 * of an interrupt context. To avoid that read-modify-write cycles
 * interfer, these bits are protected by a spinlock. Since this
 * function is usually not called from a context where the lock is
 * held already, this function acquires the lock itself. A non-locking
 * version is also available.
 */</doc>
