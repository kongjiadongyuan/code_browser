<dec f='linux-5.3.1/include/linux/libata.h' l='1128' type='int sata_scr_write(struct ata_link * link, int reg, u32 val)'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='3172' u='c' c='sata_set_spd'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='3876' u='c' c='sata_link_resume'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='3906' u='c' c='sata_link_resume'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='3972' u='c' c='sata_link_scr_lpm'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='3982' u='c' c='sata_link_scr_lpm'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='4077' u='c' c='sata_link_hardreset'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='4188' u='c' c='ata_std_postreset'/>
<def f='linux-5.3.1/drivers/ata/libata-core.c' l='5521' ll='5530' type='int sata_scr_write(struct ata_link * link, int reg, u32 val)'/>
<dec f='linux-5.3.1/drivers/ata/libata-core.c' l='7337' type='int sata_scr_write(struct ata_link * , int , u32 )'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='7337' c='sata_scr_write'/>
<use f='linux-5.3.1/drivers/ata/libata-core.c' l='7337' u='a'/>
<doc f='linux-5.3.1/drivers/ata/libata-core.c' l='5505'>/**
 *	sata_scr_write - write SCR register of the specified port
 *	@link: ATA link to write SCR for
 *	@reg: SCR to write
 *	@val: value to write
 *
 *	Write @val to SCR register @reg of @link.  This function is
 *	guaranteed to succeed if @link is ap-&gt;link, the cable type of
 *	the port is SATA and the port implements -&gt;scr_read.
 *
 *	LOCKING:
 *	None if @link is ap-&gt;link.  Kernel thread context otherwise.
 *
 *	RETURNS:
 *	0 on success, negative errno on failure.
 */</doc>
<use f='linux-5.3.1/drivers/ata/libata-eh.c' l='496' u='c' c='ata_eh_unload'/>
<use f='linux-5.3.1/drivers/ata/libata-eh.c' l='1115' u='c' c='sata_async_notification'/>
<use f='linux-5.3.1/drivers/ata/libata-pmp.c' l='866' u='c' c='sata_pmp_eh_handle_disabled_links'/>
<use f='linux-5.3.1/drivers/ata/libata-pmp.c' l='997' u='c' c='sata_pmp_eh_recover'/>
