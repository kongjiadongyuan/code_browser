<dec f='linux-5.3.1/include/linux/inet.h' l='54' type='int in6_pton(const char * src, int srclen, u8 * dst, int delim, const char ** end)'/>
<use f='linux-5.3.1/net/core/netpoll.c' l='491' u='c' c='netpoll_parse_ip_addr'/>
<def f='linux-5.3.1/net/core/utils.c' l='184' ll='298' type='int in6_pton(const char * src, int srclen, u8 * dst, int delim, const char ** end)'/>
<dec f='linux-5.3.1/net/core/utils.c' l='299' type='int in6_pton(const char * , int , u8 * , int , const char ** )'/>
<use f='linux-5.3.1/net/core/utils.c' l='299' c='in6_pton'/>
<use f='linux-5.3.1/net/core/utils.c' l='299' u='a'/>
<use f='linux-5.3.1/net/core/utils.c' l='330' u='c' c='inet6_pton'/>
<doc f='linux-5.3.1/net/core/utils.c' l='172'>/**
 * in6_pton - convert an IPv6 address from literal to binary representation
 * @src: the start of the IPv6 address string
 * @srclen: the length of the string, -1 means strlen(src)
 * @dst: the binary (u8[16] array) representation of the IPv6 address
 * @delim: the delimiter of the IPv6 address in @src, -1 means no delimiter
 * @end: A pointer to the end of the parsed string will be placed here
 *
 * Return one on success, return zero when any error occurs
 * and @end will point to the end of the parsed string.
 *
 */</doc>
<use f='linux-5.3.1/net/ipv6/addrconf.c' l='6277' u='c' c='addrconf_sysctl_stable_secret'/>
<use f='linux-5.3.1/net/netfilter/nf_conntrack_ftp.c' l='116' u='c' c='get_ipv6_addr'/>
<use f='linux-5.3.1/net/netfilter/nf_conntrack_sip.c' l='166' u='c' c='sip_parse_addr'/>
<use f='linux-5.3.1/net/netfilter/nf_conntrack_sip.c' l='659' u='c' c='sdp_parse_addr'/>
<use f='linux-5.3.1/net/sunrpc/addr.c' l='216' u='c' c='rpc_pton6'/>
