<def f='linux-5.3.1/include/linux/iversion.h' l='173' ll='178' type='void inode_set_iversion_queried(struct inode * inode, u64 val)'/>
<doc f='linux-5.3.1/include/linux/iversion.h' l='157'>/**
 * inode_set_iversion_queried - set i_version to a particular value as quereied
 * @inode: inode to set
 * @val: new i_version value to set
 *
 * Set @inode&apos;s i_version field to @val, and flag it for increment on the next
 * change.
 *
 * Filesystems that persistently store the i_version on disk should use this
 * when loading an existing inode from disk.
 *
 * When loading in an i_version value from a backing store, we can&apos;t be certain
 * that it wasn&apos;t previously viewed before being stored. Thus, we must assume
 * that it was, to ensure that we don&apos;t end up handing out the same value for
 * different versions of the same inode.
 */</doc>
<use f='linux-5.3.1/fs/ext4/inode.c' l='4825' u='c' c='ext4_inode_set_iversion_queried'/>
