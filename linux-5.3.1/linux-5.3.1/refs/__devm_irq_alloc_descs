<dec f='linux-5.3.1/include/linux/irq.h' l='854' type='int __devm_irq_alloc_descs(struct device * dev, int irq, unsigned int from, unsigned int cnt, int node, struct module * owner, const struct irq_affinity_desc * affinity)'/>
<def f='linux-5.3.1/kernel/irq/devres.c' l='178' ll='200' type='int __devm_irq_alloc_descs(struct device * dev, int irq, unsigned int from, unsigned int cnt, int node, struct module * owner, const struct irq_affinity_desc * affinity)'/>
<dec f='linux-5.3.1/kernel/irq/devres.c' l='201' type='int __devm_irq_alloc_descs(struct device * , int , unsigned int , unsigned int , int , struct module * , const struct irq_affinity_desc * )'/>
<use f='linux-5.3.1/kernel/irq/devres.c' l='201' c='__devm_irq_alloc_descs'/>
<use f='linux-5.3.1/kernel/irq/devres.c' l='201' u='a'/>
<doc f='linux-5.3.1/kernel/irq/devres.c' l='161'>/**
 * __devm_irq_alloc_descs - Allocate and initialize a range of irq descriptors
 *			    for a managed device
 * @dev:	Device to allocate the descriptors for
 * @irq:	Allocate for specific irq number if irq &gt;= 0
 * @from:	Start the search from this irq number
 * @cnt:	Number of consecutive irqs to allocate
 * @node:	Preferred node on which the irq descriptor should be allocated
 * @owner:	Owning module (can be NULL)
 * @affinity:	Optional pointer to an irq_affinity_desc array of size @cnt
 *		which hints where the irq descriptors should be allocated
 *		and which default affinities to use
 *
 * Returns the first irq number or error code.
 *
 * Note: Use the provided wrappers (devm_irq_alloc_desc*) for simplicity.
 */</doc>
