<dec f='linux-5.3.1/include/linux/writeback.h' l='400' type='void writeback_set_ratelimit()'/>
<use f='linux-5.3.1/mm/page-writeback.c' l='547' u='c' c='dirty_ratio_handler'/>
<use f='linux-5.3.1/mm/page-writeback.c' l='562' u='c' c='dirty_bytes_handler'/>
<def f='linux-5.3.1/mm/page-writeback.c' l='2042' ll='2053' type='void writeback_set_ratelimit()'/>
<use f='linux-5.3.1/mm/page-writeback.c' l='2057' u='c' c='page_writeback_cpu_online'/>
<doc f='linux-5.3.1/mm/page-writeback.c' l='2031'>/*
 * If ratelimit_pages is too high then we can get into dirty-data overload
 * if a large number of processes all perform writes at the same time.
 * If it is too low then SMP machines will call the (expensive)
 * get_writeback_state too often.
 *
 * Here we set ratelimit_pages to a level which ensures that when all CPUs are
 * dirtying in parallel, we cannot go more than 3% (1/32) over the dirty memory
 * thresholds.
 */</doc>
