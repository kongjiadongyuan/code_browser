<dec f='linux-5.3.1/include/linux/cgroup.h' l='140' type='struct cgroup_subsys_state * css_next_child(struct cgroup_subsys_state * pos, struct cgroup_subsys_state * parent)'/>
<doc f='linux-5.3.1/include/linux/cgroup.h' l='136'>/*
 * Iteration helpers and macros.
 */</doc>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='1733' u='c' c='rebind_subsystems'/>
<def f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4178' ll='4222' type='struct cgroup_subsys_state * css_next_child(struct cgroup_subsys_state * pos, struct cgroup_subsys_state * parent)'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4258' u='c' c='css_next_descendant_pre'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4264' u='c' c='css_next_descendant_pre'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4298' macro='1' u='c' c='css_rightmost_descendant'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4298' macro='1' u='c' c='css_rightmost_descendant'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4312' u='c' c='css_leftmost_descendant'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4357' u='c' c='css_next_descendant_post'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4379' macro='1' u='c' c='css_has_online_children'/>
<use f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4379' macro='1' u='c' c='css_has_online_children'/>
<doc f='linux-5.3.1/kernel/cgroup/cgroup.c' l='4161'>/**
 * css_next_child - find the next child of a given css
 * @pos: the current position (%NULL to initiate traversal)
 * @parent: css whose children to walk
 *
 * This function returns the next child of @parent and should be called
 * under either cgroup_mutex or RCU read lock.  The only requirement is
 * that @parent and @pos are accessible.  The next sibling is guaranteed to
 * be returned regardless of their states.
 *
 * If a subsystem synchronizes -&gt;css_online() and the start of iteration, a
 * css which finished -&gt;css_online() is guaranteed to be visible in the
 * future iterations and will stay visible until the last reference is put.
 * A css which hasn&apos;t finished -&gt;css_online() or already finished
 * -&gt;css_offline() may show up during traversal.  It&apos;s each subsystem&apos;s
 * responsibility to synchronize against on/offlining.
 */</doc>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='561' macro='1' u='c' c='validate_change'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='561' macro='1' u='c' c='validate_change'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='582' macro='1' u='c' c='validate_change'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='582' macro='1' u='c' c='validate_change'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='1385' macro='1' u='c' c='update_sibling_cpumasks'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='1385' macro='1' u='c' c='update_sibling_cpumasks'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='2688' macro='1' u='c' c='cpuset_css_online'/>
<use f='linux-5.3.1/kernel/cgroup/cpuset.c' l='2688' macro='1' u='c' c='cpuset_css_online'/>
<use f='linux-5.3.1/kernel/cgroup/legacy_freezer.c' l='259' macro='1' u='c' c='update_if_frozen'/>
<use f='linux-5.3.1/kernel/cgroup/legacy_freezer.c' l='259' macro='1' u='c' c='update_if_frozen'/>
