<def f='linux-5.3.1/include/linux/seqlock.h' l='182' ll='187' type='unsigned int raw_seqcount_begin(const seqcount_t * s)'/>
<doc f='linux-5.3.1/include/linux/seqlock.h' l='168'>/**
 * raw_seqcount_begin - begin a seq-read critical section
 * @s: pointer to seqcount_t
 * Returns: count to be passed to read_seqcount_retry
 *
 * raw_seqcount_begin opens a read critical section of the given seqcount.
 * Validity of the critical section is tested by checking read_seqcount_retry
 * function.
 *
 * Unlike read_seqcount_begin(), this function will not wait for the count
 * to stabilize. If a writer is active when we begin, we will fail the
 * read_seqcount_retry() instead of stabilizing at the beginning of the
 * critical section.
 */</doc>
<use f='linux-5.3.1/fs/dcache.c' l='2263' u='c' c='__d_lookup_rcu'/>
<use f='linux-5.3.1/fs/nfs/delegation.c' l='155' u='c' c='nfs_delegation_claim_opens'/>
<use f='linux-5.3.1/fs/nfs/nfs4proc.c' l='2957' u='c' c='_nfs4_open_and_get_state'/>
<use f='linux-5.3.1/net/core/dev.c' l='912' u='c' c='netdev_get_name'/>
