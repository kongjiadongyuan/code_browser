<dec f='linux-5.3.1/include/sound/jack.h' l='78' type='int snd_jack_add_new_kctl(struct snd_jack * jack, const char * name, int mask)'/>
<def f='linux-5.3.1/sound/core/jack.c' l='170' ll='180' type='int snd_jack_add_new_kctl(struct snd_jack * jack, const char * name, int mask)'/>
<dec f='linux-5.3.1/sound/core/jack.c' l='181' type='int snd_jack_add_new_kctl(struct snd_jack * , const char * , int )'/>
<use f='linux-5.3.1/sound/core/jack.c' l='181' c='snd_jack_add_new_kctl'/>
<use f='linux-5.3.1/sound/core/jack.c' l='181' u='a'/>
<doc f='linux-5.3.1/sound/core/jack.c' l='159'>/**
 * snd_jack_add_new_kctl - Create a new snd_jack_kctl and add it to jack
 * @jack:  the jack instance which the kctl will attaching to
 * @name:  the name for the snd_kcontrol object
 * @mask:  a bitmask of enum snd_jack_type values that can be detected
 *         by this snd_jack_kctl object.
 *
 * Creates a new snd_kcontrol object and adds it to the jack kctl_list.
 *
 * Return: Zero if successful, or a negative error code on failure.
 */</doc>
