<dec f='linux-5.3.1/include/linux/list_lru.h' l='183' type='unsigned long list_lru_walk_one_irq(struct list_lru * lru, int nid, struct mem_cgroup * memcg, list_lru_walk_cb isolate, void * cb_arg, unsigned long * nr_to_walk)'/>
<use f='linux-5.3.1/include/linux/list_lru.h' l='203' u='c' c='list_lru_shrink_walk_irq'/>
<doc f='linux-5.3.1/include/linux/list_lru.h' l='170'>/**
 * list_lru_walk_one_irq: walk a list_lru, isolating and disposing freeable items.
 * @lru: the lru pointer.
 * @nid: the node id to scan from.
 * @memcg: the cgroup to scan from.
 * @isolate: callback function that is resposible for deciding what to do with
 *  the item currently being scanned
 * @cb_arg: opaque type that will be passed to @isolate
 * @nr_to_walk: how many items to scan.
 *
 * Same as @list_lru_walk_one except that the spinlock is acquired with
 * spin_lock_irq().
 */</doc>
<def f='linux-5.3.1/mm/list_lru.c' l='283' ll='296' type='unsigned long list_lru_walk_one_irq(struct list_lru * lru, int nid, struct mem_cgroup * memcg, list_lru_walk_cb isolate, void * cb_arg, unsigned long * nr_to_walk)'/>
