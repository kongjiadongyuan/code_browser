<def f='glibc/include/alloc_buffer.h' l='98' ll='106'/>
<size>16</size>
<doc f='glibc/include/alloc_buffer.h' l='86'>/* struct alloc_buffer objects refer to a region of bytes in memory of a
   fixed size.  The functions below can be used to allocate single
   objects and arrays from this memory region, or write to its end.
   On allocation failure (or if an attempt to write beyond the end of
   the buffer with one of the copy functions), the buffer enters a
   failed state.

   struct alloc_buffer objects can be copied.  The backing buffer will
   be shared, but the current write position will be independent.

   Conceptually, the memory region consists of a current write pointer
   and a limit, beyond which the write pointer cannot move.  */</doc>
<mbr r='alloc_buffer::__alloc_buffer_current' o='0' t='uintptr_t'/>
<mbr r='alloc_buffer::__alloc_buffer_end' o='64' t='uintptr_t'/>
