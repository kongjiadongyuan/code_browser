<dec f='xv6/defs.h' l='86' type='void log_write(struct buf * )'/>
<use f='xv6/fs.c' l='49' u='c' c='bzero'/>
<use f='xv6/fs.c' l='69' u='c' c='balloc'/>
<use f='xv6/fs.c' l='94' u='c' c='bfree'/>
<use f='xv6/fs.c' l='208' u='c' c='ialloc'/>
<use f='xv6/fs.c' l='235' u='c' c='iupdate'/>
<use f='xv6/fs.c' l='394' u='c' c='bmap'/>
<use f='xv6/fs.c' l='503' u='c' c='writei'/>
<def f='xv6/log.c' l='213' ll='233' type='void log_write(struct buf * b)'/>
<doc f='xv6/log.c' l='204'>// Caller has modified b-&gt;data and is done with the buffer.
// Record the block number and pin in the cache with B_DIRTY.
// commit()/write_log() will do the disk write.
//
// log_write() replaces bwrite(); a typical use is:
//   bp = bread(...)
//   modify bp-&gt;data[]
//   log_write(bp)
//   brelse(bp)</doc>
