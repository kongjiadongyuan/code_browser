<dec f='linux/kernel/trace/trace.h' l='1534' type='int set_trigger_filter(char * filter_str, struct event_trigger_data * trigger_data, struct trace_event_file * file)'/>
<def f='linux/kernel/trace/trace_events_trigger.c' l='719' ll='767' type='int set_trigger_filter(char * filter_str, struct event_trigger_data * trigger_data, struct trace_event_file * file)'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1026'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1026'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1037'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1037'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1197'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1197'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1559'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1559'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1569'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1569'/>
<doc f='linux/kernel/trace/trace_events_trigger.c' l='703'>/**
 * set_trigger_filter - Generic event_command @set_filter implementation
 * @filter_str: The filter string for the trigger, NULL to remove filter
 * @trigger_data: Trigger-specific data
 * @file: The trace_event_file associated with the event
 *
 * Common implementation for event command filter parsing and filter
 * instantiation.
 *
 * Usually used directly as the @set_filter method in event command
 * implementations.
 *
 * Also used to remove a filter (if filter_str = NULL).
 *
 * Return: 0 on success, errno otherwise
 */</doc>
