<def f='linux/drivers/gpu/drm/i915/intel_guc_ct.h' l='64' ll='69'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.h' l='76'/>
<size>48</size>
<doc f='linux/drivers/gpu/drm/i915/intel_guc_ct.h' l='53'>/** Represents pair of command transport buffers.
 *
 * Buffers go in pairs to allow bi-directional communication.
 * To simplify the code we place both of them in the same vma.
 * Buffers from the same pair must share unique owner id.
 *
 * @vma: pointer to the vma with pair of CT buffers
 * @ctbs: buffers for sending(0) and receiving(1) commands
 * @owner: unique identifier
 * @next_fence: fence to be used with next send command
 */</doc>
<mbr r='intel_guc_ct_channel::vma' o='0' t='struct i915_vma *'/>
<mbr r='intel_guc_ct_channel::ctbs' o='64' t='struct intel_guc_ct_buffer [2]'/>
<mbr r='intel_guc_ct_channel::owner' o='320' t='u32'/>
<mbr r='intel_guc_ct_channel::next_fence' o='352' t='u32'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='108' c='ctch_is_open'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='114' c='ctch_init'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='179' c='ctch_fini'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='188' c='ctch_open'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='246' c='ctch_close'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='259' c='ctch_get_next_fence'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='366' c='ctch_send'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='400' c='intel_guc_send_ct'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='426' c='intel_guc_enable_ct'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc_ct.c' l='449' c='intel_guc_disable_ct'/>
<size>48</size>
