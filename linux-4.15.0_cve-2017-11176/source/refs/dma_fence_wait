<def f='linux/include/linux/dma-fence.h' l='463' ll='474' type='long dma_fence_wait(struct dma_fence * fence, bool intr)'/>
<doc f='linux/include/linux/dma-fence.h' l='450'>/**
 * dma_fence_wait - sleep until the fence gets signaled
 * @fence:	[in]	the fence to wait on
 * @intr:	[in]	if true, do an interruptible wait
 *
 * This function will return -ERESTARTSYS if interrupted by a signal,
 * or 0 if the fence was signaled. Other error values may be
 * returned on custom implementations.
 *
 * Performs a synchronous wait on this fence. It is assumed the caller
 * directly or indirectly holds a reference to the fence, otherwise the
 * fence might be freed before return, resulting in undefined behavior.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1184' u='c' c='drm_atomic_helper_wait_for_fences'/>
<use f='linux/drivers/gpu/drm/i915/i915_sw_fence.c' l='431' u='c' c='i915_sw_fence_await_dma_fence'/>
