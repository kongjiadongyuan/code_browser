<dec f='linux/include/linux/sunrpc/xdr.h' l='230' type='int xdr_restrict_buflen(struct xdr_stream * xdr, int newbuflen)'/>
<def f='linux/net/sunrpc/xdr.c' l='666' ll='680' type='int xdr_restrict_buflen(struct xdr_stream * xdr, int newbuflen)'/>
<dec f='linux/net/sunrpc/xdr.c' l='681' type='int xdr_restrict_buflen(struct xdr_stream * , int )'/>
<use f='linux/net/sunrpc/xdr.c' l='681' c='xdr_restrict_buflen'/>
<use f='linux/net/sunrpc/xdr.c' l='681' u='a'/>
<use f='linux/net/sunrpc/xdr.c' l='681' u='a'/>
<doc f='linux/net/sunrpc/xdr.c' l='654'>/**
 * xdr_restrict_buflen - decrease available buffer space
 * @xdr: pointer to xdr_stream
 * @newbuflen: new maximum number of bytes available
 *
 * Adjust our idea of how much space is available in the buffer.
 * If we&apos;ve already used too much space in the buffer, returns -1.
 * If the available space is already smaller than newbuflen, returns 0
 * and does nothing.  Otherwise, adjusts xdr-&gt;buf-&gt;buflen to newbuflen
 * and ensures xdr-&gt;end is set at most offset newbuflen from the start
 * of the buffer.
 */</doc>
