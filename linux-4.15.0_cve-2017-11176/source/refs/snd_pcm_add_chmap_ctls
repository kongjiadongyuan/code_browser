<dec f='linux/include/sound/pcm.h' l='1420' type='int snd_pcm_add_chmap_ctls(struct snd_pcm * pcm, int stream, const struct snd_pcm_chmap_elem * chmap, int max_channels, unsigned long private_value, struct snd_pcm_chmap ** info_ret)'/>
<def f='linux/sound/core/pcm_lib.c' l='2420' ll='2467' type='int snd_pcm_add_chmap_ctls(struct snd_pcm * pcm, int stream, const struct snd_pcm_chmap_elem * chmap, int max_channels, unsigned long private_value, struct snd_pcm_chmap ** info_ret)'/>
<dec f='linux/sound/core/pcm_lib.c' l='2468' type='int snd_pcm_add_chmap_ctls(struct snd_pcm * , int , const struct snd_pcm_chmap_elem * , int , unsigned long , struct snd_pcm_chmap ** )'/>
<use f='linux/sound/core/pcm_lib.c' l='2468' c='snd_pcm_add_chmap_ctls'/>
<use f='linux/sound/core/pcm_lib.c' l='2468' u='a'/>
<use f='linux/sound/core/pcm_lib.c' l='2468' u='a'/>
<doc f='linux/sound/core/pcm_lib.c' l='2408'>/**
 * snd_pcm_add_chmap_ctls - create channel-mapping control elements
 * @pcm: the assigned PCM instance
 * @stream: stream direction
 * @chmap: channel map elements (for query)
 * @max_channels: the max number of channels for the stream
 * @private_value: the value passed to each kcontrol&apos;s private_value field
 * @info_ret: store struct snd_pcm_chmap instance if non-NULL
 *
 * Create channel-mapping control elements assigned to the given PCM stream(s).
 * Return: Zero if successful, or a negative error value.
 */</doc>
<use f='linux/sound/hda/hdmi_chmap.c' l='832' u='c' c='snd_hdac_add_chmap_ctls'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2960' u='c' c='add_std_chmaps'/>
