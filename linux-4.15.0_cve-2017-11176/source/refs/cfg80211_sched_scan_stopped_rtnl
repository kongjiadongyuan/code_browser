<dec f='linux/include/net/cfg80211.h' l='4622' type='void cfg80211_sched_scan_stopped_rtnl(struct wiphy * wiphy, u64 reqid)'/>
<doc f='linux/include/net/cfg80211.h' l='4611'>/**
 * cfg80211_sched_scan_stopped_rtnl - notify that the scheduled scan has stopped
 *
 * @wiphy: the wiphy on which the scheduled scan stopped
 * @reqid: identifier for the related scheduled scan request
 *
 * The driver can call this function to inform cfg80211 that the
 * scheduled scan had to be stopped, for whatever reason.  The driver
 * is then called back via the sched_scan_stop operation when done.
 * This function should be called with rtnl locked.
 */</doc>
<use f='linux/net/mac80211/pm.c' l='14' u='c' c='ieee80211_sched_scan_cancel'/>
<use f='linux/net/mac80211/util.c' l='2110' u='c' c='ieee80211_reconfig'/>
<def f='linux/net/wireless/scan.c' l='412' ll='421' type='void cfg80211_sched_scan_stopped_rtnl(struct wiphy * wiphy, u64 reqid)'/>
<dec f='linux/net/wireless/scan.c' l='422' type='void cfg80211_sched_scan_stopped_rtnl(struct wiphy * , u64 )'/>
<use f='linux/net/wireless/scan.c' l='422' c='cfg80211_sched_scan_stopped_rtnl'/>
<use f='linux/net/wireless/scan.c' l='422' u='a'/>
<use f='linux/net/wireless/scan.c' l='422' u='a'/>
<use f='linux/net/wireless/scan.c' l='427' u='c' c='cfg80211_sched_scan_stopped'/>
