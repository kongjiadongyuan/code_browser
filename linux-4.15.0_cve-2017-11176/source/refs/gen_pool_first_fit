<dec f='linux/include/linux/genalloc.h' l='132' type='unsigned long gen_pool_first_fit(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool)'/>
<use f='linux/lib/genalloc.c' l='161' u='r' c='gen_pool_create'/>
<use f='linux/lib/genalloc.c' l='508' u='r' c='gen_pool_set_algo'/>
<def f='linux/lib/genalloc.c' l='526' ll='531' type='unsigned long gen_pool_first_fit(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool)'/>
<dec f='linux/lib/genalloc.c' l='532' type='unsigned long gen_pool_first_fit(unsigned long * , unsigned long , unsigned long , unsigned int , void * , struct gen_pool * )'/>
<use f='linux/lib/genalloc.c' l='532' c='gen_pool_first_fit'/>
<use f='linux/lib/genalloc.c' l='532' u='a'/>
<use f='linux/lib/genalloc.c' l='532' u='a'/>
<doc f='linux/lib/genalloc.c' l='516'>/**
 * gen_pool_first_fit - find the first available region
 * of memory matching the size requirement (no alignment constraint)
 * @map: The address to base the search on
 * @size: The bitmap size in bits
 * @start: The bitnumber to start searching at
 * @nr: The number of zeroed bits we&apos;re looking for
 * @data: additional data - unused
 * @pool: pool to find the fit region memory from
 */</doc>
