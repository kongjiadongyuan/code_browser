<dec f='linux/include/linux/netdevice.h' l='3967' type='int skb_checksum_help(struct sk_buff * skb)'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='8014' u='c' c='tg3_start_xmit'/>
<use f='linux/drivers/net/ethernet/realtek/r8169.c' l='7221' u='c' c='r8169_csum_workaround'/>
<use f='linux/drivers/net/ethernet/realtek/r8169.c' l='7329' u='c' c='rtl8169_tso_csum_v2'/>
<def f='linux/net/core/dev.c' l='2626' ll='2667' type='int skb_checksum_help(struct sk_buff * skb)'/>
<dec f='linux/net/core/dev.c' l='2668' type='int skb_checksum_help(struct sk_buff * )'/>
<use f='linux/net/core/dev.c' l='2668' c='skb_checksum_help'/>
<use f='linux/net/core/dev.c' l='2668' u='a'/>
<use f='linux/net/core/dev.c' l='2668' u='a'/>
<use f='linux/net/core/dev.c' l='3060' u='c' c='skb_csum_hwoffload_help'/>
<doc f='linux/net/core/dev.c' l='2622'>/*
 * Invalidate hardware checksum when packet is to be mangled, and
 * complete checksum manually on outgoing path.
 */</doc>
<use f='linux/net/ipv4/ip_output.c' l='582' u='c' c='ip_do_fragment'/>
<use f='linux/net/ipv6/ip6_output.c' l='644' u='c' c='ip6_fragment'/>
<use f='linux/net/mac80211/tx.c' l='3606' u='c' c='__ieee80211_subif_start_xmit'/>
<use f='linux/net/xfrm/xfrm_output.c' l='247' u='c' c='xfrm_output'/>
