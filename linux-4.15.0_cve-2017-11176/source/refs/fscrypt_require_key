<def f='linux/include/linux/fscrypt.h' l='168' ll='179' type='int fscrypt_require_key(struct inode * inode)'/>
<use f='linux/include/linux/fscrypt.h' l='290' u='c' c='fscrypt_prepare_setattr'/>
<doc f='linux/include/linux/fscrypt.h' l='155'>/**
 * fscrypt_require_key - require an inode&apos;s encryption key
 * @inode: the inode we need the key for
 *
 * If the inode is encrypted, set up its encryption key if not already done.
 * Then require that the key be present and return -ENOKEY otherwise.
 *
 * No locks are needed, and the key will live as long as the struct inode --- so
 * it won&apos;t go away from under you.
 *
 * Return: 0 on success, -ENOKEY if the key is missing, or another -errno code
 * if a problem occurred while setting up the encryption key.
 */</doc>
