<dec f='linux/include/scsi/scsi_host.h' l='211' type='int (*)(struct scsi_device *)'/>
<use f='linux/drivers/ata/ahci.c' l='110' macro='1' u='w'/>
<offset>896</offset>
<doc f='linux/include/scsi/scsi_host.h' l='182'>/*
	 * Once the device has responded to an INQUIRY and we know the
	 * device is online, we call into the low level driver with the
	 * struct scsi_device *.  If the low level device driver implements
	 * this function, it *must* perform the task of setting the queue
	 * depth on the device.  All other tasks are optional and depend
	 * on what the driver supports and various implementation details.
	 * 
	 * Things currently recommended to be handled at this time include:
	 *
	 * 1.  Setting the device queue depth.  Proper setting of this is
	 *     described in the comments for scsi_change_queue_depth.
	 * 2.  Determining if the device supports the various synchronous
	 *     negotiation protocols.  The device struct will already have
	 *     responded to INQUIRY and the results of the standard items
	 *     will have been shoved into the various device flag bits, eg.
	 *     device-&gt;sdtr will be true if the device supports SDTR messages.
	 * 3.  Allocating command structs that the device will need.
	 * 4.  Setting the default timeout on this device (if needed).
	 * 5.  Anything else the low level driver might want to do on a device
	 *     specific setup basis...
	 * 6.  Return 0 on success, non-0 on error.  The device will be marked
	 *     as offline on error so that no access will occur.  If you return
	 *     non-0, your slave_destroy routine will never get called for this
	 *     device, so don&apos;t leave any loose memory hanging around, clean
	 *     up after yourself before returning non-0
	 *
	 * Status: OPTIONAL
	 */</doc>
<use f='linux/drivers/ata/ata_piix.c' l='1079' macro='1' u='w'/>
<use f='linux/drivers/ata/ata_piix.c' l='1113' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_amd.c' l='391' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_oldpiix.c' l='207' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_sch.c' l='74' macro='1' u='w'/>
<use f='linux/drivers/scsi/scsi_scan.c' l='972' u='r' c='scsi_add_lun'/>
<use f='linux/drivers/scsi/scsi_scan.c' l='973' u='r' c='scsi_add_lun'/>
<use f='linux/drivers/usb/storage/scsiglue.c' l='610' u='w'/>
