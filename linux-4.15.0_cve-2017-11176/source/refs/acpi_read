<dec f='linux/include/acpi/acpixf.h' l='857' type='acpi_status acpi_read(u64 * value, struct acpi_generic_address * reg)'/>
<use f='linux/drivers/acpi/acpica/hwesleep.c' l='159' u='c' c='acpi_hw_extended_sleep'/>
<def f='linux/drivers/acpi/acpica/hwxface.c' l='126' ll='134' type='acpi_status acpi_read(u64 * return_value, struct acpi_generic_address * reg)'/>
<dec f='linux/drivers/acpi/acpica/hwxface.c' l='136' type='acpi_status acpi_read(u64 * , struct acpi_generic_address * )'/>
<use f='linux/drivers/acpi/acpica/hwxface.c' l='136' c='acpi_read'/>
<use f='linux/drivers/acpi/acpica/hwxface.c' l='136' u='a'/>
<use f='linux/drivers/acpi/acpica/hwxface.c' l='136' u='a'/>
<doc f='linux/drivers/acpi/acpica/hwxface.c' l='108'>/******************************************************************************
 *
 * FUNCTION:    acpi_read
 *
 * PARAMETERS:  value               - Where the value is returned
 *              reg                 - GAS register structure
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Read from either memory or IO space.
 *
 * LIMITATIONS: &lt;These limitations also apply to acpi_write&gt;
 *      bit_width must be exactly 8, 16, 32, or 64.
 *      space_ID must be system_memory or system_IO.
 *      bit_offset and access_width are currently ignored, as there has
 *          not been a need to implement these.
 *
 ******************************************************************************/</doc>
<use f='linux/drivers/mailbox/pcc.c' l='362' u='c' c='pcc_send_data'/>
