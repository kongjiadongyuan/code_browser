<dec f='linux/drivers/gpu/drm/i915/i915_gem_context.h' l='277' type='int i915_switch_context(struct drm_i915_gem_request * req)'/>
<def f='linux/drivers/gpu/drm/i915/i915_gem_context.c' l='871' ll='900' type='int i915_switch_context(struct drm_i915_gem_request * req)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_context.c' l='957' u='c' c='i915_gem_switch_to_kernel_context'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem_context.c' l='858'>/**
 * i915_switch_context() - perform a GPU context switch.
 * @req: request for which we&apos;ll execute the context switch
 *
 * The context life cycle is simple. The context refcount is incremented and
 * decremented by 1 and create and destroy. If the context is in use by the GPU,
 * it will have a refcount &gt; 1. This allows us to destroy the context abstract
 * object while letting the normal object tracking destroy the backing BO.
 *
 * This function should not be used in execlists mode.  Instead the context is
 * switched by writing to the ELSP and requests keep a reference to their
 * context.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_execbuffer.c' l='1120' u='c' c='__reloc_gpu_alloc'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_execbuffer.c' l='1970' u='c' c='eb_submit'/>
<use f='linux/drivers/gpu/drm/i915/i915_perf.c' l='1726' u='c' c='gen8_switch_to_updated_kernel_context'/>
<use f='linux/drivers/gpu/drm/i915/intel_pm.c' l='8159' u='c' c='__intel_autoenable_gt_powersave'/>
