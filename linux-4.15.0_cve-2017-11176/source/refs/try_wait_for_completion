<dec f='linux/include/linux/completion.h' l='115' type='bool try_wait_for_completion(struct completion * x)'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1433' u='c' c='drm_atomic_helper_async_check'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1613' u='c' c='stall_checks'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1789' u='c' c='drm_atomic_helper_setup_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1807' u='c' c='drm_atomic_helper_setup_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1987' u='c' c='drm_atomic_helper_commit_cleanup_done'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='4246' u='c' c='intel_has_pending_fb_unpin'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='13054' u='c' c='intel_legacy_cursor_update'/>
<def f='linux/kernel/sched/completion.c' l='283' ll='304' type='bool try_wait_for_completion(struct completion * x)'/>
<dec f='linux/kernel/sched/completion.c' l='305' type='bool try_wait_for_completion(struct completion * )'/>
<use f='linux/kernel/sched/completion.c' l='305' c='try_wait_for_completion'/>
<use f='linux/kernel/sched/completion.c' l='305' u='a'/>
<use f='linux/kernel/sched/completion.c' l='305' u='a'/>
<doc f='linux/kernel/sched/completion.c' l='271'>/**
 *	try_wait_for_completion - try to decrement a completion without blocking
 *	@x:	completion structure
 *
 *	Return: 0 if a decrement cannot be done without blocking
 *		 1 if a decrement succeeded.
 *
 *	If a completion is being used as a counting completion,
 *	attempt to decrement the counter without blocking. This
 *	enables us to avoid waiting if the resource the completion
 *	is protecting is not available.
 */</doc>
