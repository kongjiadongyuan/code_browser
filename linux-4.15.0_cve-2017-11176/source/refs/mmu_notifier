<use f='linux/include/linux/mmu_notifier.h' l='52'/>
<use f='linux/include/linux/mmu_notifier.h' l='64'/>
<use f='linux/include/linux/mmu_notifier.h' l='74'/>
<use f='linux/include/linux/mmu_notifier.h' l='85'/>
<use f='linux/include/linux/mmu_notifier.h' l='93'/>
<use f='linux/include/linux/mmu_notifier.h' l='141'/>
<use f='linux/include/linux/mmu_notifier.h' l='144'/>
<use f='linux/include/linux/mmu_notifier.h' l='169'/>
<def f='linux/include/linux/mmu_notifier.h' l='184' ll='187'/>
<use f='linux/include/linux/mmu_notifier.h' l='194' c='mmu_notifier_register'/>
<use f='linux/include/linux/mmu_notifier.h' l='196' c='__mmu_notifier_register'/>
<use f='linux/include/linux/mmu_notifier.h' l='198' c='mmu_notifier_unregister'/>
<use f='linux/include/linux/mmu_notifier.h' l='200' c='mmu_notifier_unregister_no_release'/>
<size>24</size>
<doc f='linux/include/linux/mmu_notifier.h' l='173'>/*
 * The notifier chains are protected by mmap_sem and/or the reverse map
 * semaphores. Notifier chains are only changed when all reverse maps and
 * the mmap_sem locks are taken.
 *
 * Therefore notifier chains can only be traversed when either
 *
 * 1. mmap_sem is held.
 * 2. One of the reverse map locks is held (i_mmap_rwsem or anon_vma-&gt;rwsem).
 * 3. No other concurrent thread can access the list (release)
 */</doc>
<mbr r='mmu_notifier::hlist' o='0' t='struct hlist_node'/>
<mbr r='mmu_notifier::ops' o='128' t='const struct mmu_notifier_ops *'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_userptr.c' l='51'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_userptr.c' l='115' c='i915_gem_userptr_mn_invalidate_range_start'/>
<size>24</size>
<use f='linux/mm/mmu_notifier.c' l='59' c='__mmu_notifier_release'/>
<use f='linux/mm/mmu_notifier.c' l='80' c='__mmu_notifier_release'/>
<use f='linux/mm/mmu_notifier.c' l='80' c='__mmu_notifier_release'/>
<use f='linux/mm/mmu_notifier.c' l='80' c='__mmu_notifier_release'/>
<use f='linux/mm/mmu_notifier.c' l='114' c='__mmu_notifier_clear_flush_young'/>
<use f='linux/mm/mmu_notifier.c' l='131' c='__mmu_notifier_clear_young'/>
<use f='linux/mm/mmu_notifier.c' l='147' c='__mmu_notifier_test_young'/>
<use f='linux/mm/mmu_notifier.c' l='166' c='__mmu_notifier_change_pte'/>
<use f='linux/mm/mmu_notifier.c' l='180' c='__mmu_notifier_invalidate_range_start'/>
<use f='linux/mm/mmu_notifier.c' l='197' c='__mmu_notifier_invalidate_range_end'/>
<use f='linux/mm/mmu_notifier.c' l='227' c='__mmu_notifier_invalidate_range'/>
<use f='linux/mm/mmu_notifier.c' l='239' c='do_mmu_notifier_register'/>
<use f='linux/mm/mmu_notifier.c' l='303' c='mmu_notifier_register'/>
<use f='linux/mm/mmu_notifier.c' l='313' c='__mmu_notifier_register'/>
<use f='linux/mm/mmu_notifier.c' l='337' c='mmu_notifier_unregister'/>
<use f='linux/mm/mmu_notifier.c' l='381' c='mmu_notifier_unregister_no_release'/>
<size>24</size>
