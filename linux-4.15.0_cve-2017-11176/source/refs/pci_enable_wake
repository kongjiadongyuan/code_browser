<dec f='linux/include/linux/pci.h' l='1146' type='int pci_enable_wake(struct pci_dev * dev, pci_power_t state, bool enable)'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='3070' u='c' c='e100_resume'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='3161' u='c' c='e100_io_resume'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5216' u='c' c='e1000_resume'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5217' u='c' c='e1000_resume'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5324' u='c' c='e1000_io_slot_reset'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5325' u='c' c='e1000_io_slot_reset'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='6879' u='c' c='e1000_io_slot_reset'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='6880' u='c' c='e1000_io_slot_reset'/>
<use f='linux/drivers/pci/pci-driver.c' l='650' u='c' c='pci_pm_default_resume'/>
<use f='linux/drivers/pci/pci-driver.c' l='1277' u='c' c='pci_pm_runtime_resume'/>
<def f='linux/drivers/pci/pci.c' l='1913' ll='1953' type='int pci_enable_wake(struct pci_dev * dev, pci_power_t state, bool enable)'/>
<dec f='linux/drivers/pci/pci.c' l='1954' type='int pci_enable_wake(struct pci_dev * , pci_power_t , bool )'/>
<use f='linux/drivers/pci/pci.c' l='1954' c='pci_enable_wake'/>
<use f='linux/drivers/pci/pci.c' l='1954' u='a'/>
<use f='linux/drivers/pci/pci.c' l='1954' u='a'/>
<use f='linux/drivers/pci/pci.c' l='1973' u='c' c='pci_wake_from_d3'/>
<use f='linux/drivers/pci/pci.c' l='1974' u='c' c='pci_wake_from_d3'/>
<use f='linux/drivers/pci/pci.c' l='2057' u='c' c='pci_prepare_to_sleep'/>
<use f='linux/drivers/pci/pci.c' l='2062' u='c' c='pci_prepare_to_sleep'/>
<use f='linux/drivers/pci/pci.c' l='2076' u='c' c='pci_back_from_sleep'/>
<use f='linux/drivers/pci/pci.c' l='2099' u='c' c='pci_finish_runtime_suspend'/>
<use f='linux/drivers/pci/pci.c' l='2104' u='c' c='pci_finish_runtime_suspend'/>
<doc f='linux/drivers/pci/pci.c' l='1894'>/**
 * pci_enable_wake - enable PCI device as wakeup event source
 * @dev: PCI device affected
 * @state: PCI state from which device will issue wakeup events
 * @enable: True to enable event generation; false to disable
 *
 * This enables the device as a wakeup event source, or disables it.
 * When such events involves platform-specific hooks, those hooks are
 * called automatically by this routine.
 *
 * Devices with legacy power management (no standard PCI PM capabilities)
 * always require such platform hooks.
 *
 * RETURN VALUE:
 * 0 is returned on success
 * -EINVAL is returned if device is not supposed to wake up the system
 * Error code depending on the platform is returned if both the platform and
 * the native mechanism fail to enable the generation of wake-up events
 */</doc>
