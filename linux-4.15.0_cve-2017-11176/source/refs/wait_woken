<dec f='linux/include/linux/wait.h' l='988' type='long wait_woken(struct wait_queue_entry * wq_entry, unsigned int mode, long timeout)'/>
<use f='linux/drivers/tty/n_tty.c' l='2195' u='c' c='n_tty_read'/>
<use f='linux/drivers/tty/n_tty.c' l='2345' u='c' c='n_tty_write'/>
<use f='linux/fs/notify/inotify/inotify_user.c' l='264' u='c' c='inotify_read'/>
<def f='linux/kernel/sched/wait.c' l='410' ll='431' type='long wait_woken(struct wait_queue_entry * wq_entry, unsigned int mode, long timeout)'/>
<dec f='linux/kernel/sched/wait.c' l='432' type='long wait_woken(struct wait_queue_entry * , unsigned int , long )'/>
<use f='linux/kernel/sched/wait.c' l='432' c='wait_woken'/>
<use f='linux/kernel/sched/wait.c' l='432' u='a'/>
<use f='linux/kernel/sched/wait.c' l='432' u='a'/>
<doc f='linux/kernel/sched/wait.c' l='390'>/*
 * DEFINE_WAIT_FUNC(wait, woken_wake_func);
 *
 * add_wait_queue(&amp;wq_head, &amp;wait);
 * for (;;) {
 *     if (condition)
 *         break;
 *
 *     p-&gt;state = mode;				condition = true;
 *     smp_mb(); // A				smp_wmb(); // C
 *     if (!wq_entry-&gt;flags &amp; WQ_FLAG_WOKEN)	wq_entry-&gt;flags |= WQ_FLAG_WOKEN;
 *         schedule()				try_to_wake_up();
 *     p-&gt;state = TASK_RUNNING;		    ~~~~~~~~~~~~~~~~~~
 *     wq_entry-&gt;flags &amp;= ~WQ_FLAG_WOKEN;		condition = true;
 *     smp_mb() // B				smp_wmb(); // C
 *						wq_entry-&gt;flags |= WQ_FLAG_WOKEN;
 * }
 * remove_wait_queue(&amp;wq_head, &amp;wait);
 *
 */</doc>
<use f='linux/net/core/dev.c' l='8751' u='c' c='rtnl_lock_unregistering'/>
<use f='linux/net/core/rtnetlink.c' l='381' u='c' c='rtnl_lock_unregistering_all'/>
<use f='linux/net/core/sock.c' l='2303' macro='1' u='c' c='sk_wait_data'/>
<use f='linux/net/core/stream.c' l='75' macro='1' u='c' c='sk_stream_wait_connect'/>
<use f='linux/net/core/stream.c' l='104' macro='1' u='c' c='sk_stream_wait_close'/>
<use f='linux/net/core/stream.c' l='149' macro='1' u='c' c='sk_stream_wait_memory'/>
<use f='linux/net/ipv4/af_inet.c' l='559' u='c' c='inet_wait_for_connect'/>
