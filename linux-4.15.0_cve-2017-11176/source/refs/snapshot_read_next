<dec f='linux/kernel/power/power.h' l='157' type='int snapshot_read_next(struct snapshot_handle * handle)'/>
<def f='linux/kernel/power/snapshot.c' l='2082' ll='2127' type='int snapshot_read_next(struct snapshot_handle * handle)'/>
<doc f='linux/kernel/power/snapshot.c' l='2066'>/**
 * snapshot_read_next - Get the address to read the next image page from.
 * @handle: Snapshot handle to be used for the reading.
 *
 * On the first call, @handle should point to a zeroed snapshot_handle
 * structure.  The structure gets populated then and a pointer to it should be
 * passed to this function every next time.
 *
 * On success, the function returns a positive number.  Then, the caller
 * is allowed to read up to the returned number of bytes from the memory
 * location computed by the data_of() macro.
 *
 * The function returns 0 to indicate the end of the data stream condition,
 * and negative numbers are returned on errors.  If that happens, the structure
 * pointed to by @handle is not updated and should not be used any more.
 */</doc>
<use f='linux/kernel/power/swap.c' l='554' u='c' c='save_image'/>
<use f='linux/kernel/power/swap.c' l='774' u='c' c='save_image_lzo'/>
<use f='linux/kernel/power/swap.c' l='925' u='c' c='swsusp_write'/>
<use f='linux/kernel/power/user.c' l='152' u='c' c='snapshot_read'/>
