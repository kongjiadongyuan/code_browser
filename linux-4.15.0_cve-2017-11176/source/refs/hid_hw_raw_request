<def f='linux/include/linux/hid.h' l='1026' ll='1035' type='int hid_hw_raw_request(struct hid_device * hdev, unsigned char reportnum, __u8 * buf, size_t len, unsigned char rtype, int reqtype)'/>
<doc f='linux/include/linux/hid.h' l='1012'>/**
 * hid_hw_raw_request - send report request to device
 *
 * @hdev: hid device
 * @reportnum: report ID
 * @buf: in/out data to transfer
 * @len: length of buf
 * @rtype: HID report type
 * @reqtype: HID_REQ_GET_REPORT or HID_REQ_SET_REPORT
 *
 * @return: count of data transfered, negative if error
 *
 * Same behavior as hid_hw_request, but with raw buffers instead.
 */</doc>
<use f='linux/drivers/hid/hid-input.c' l='1407' u='c' c='hidinput_led_worker'/>
<use f='linux/drivers/hid/hid-lg.c' l='769' u='c' c='lg_probe'/>
<use f='linux/drivers/hid/hid-lg.c' l='782' u='c' c='lg_probe'/>
<use f='linux/drivers/hid/hid-sony.c' l='1424' u='c' c='sixaxis_set_operational_usb'/>
<use f='linux/drivers/hid/hid-sony.c' l='1435' u='c' c='sixaxis_set_operational_usb'/>
<use f='linux/drivers/hid/hid-sony.c' l='1470' u='c' c='sixaxis_set_operational_bt'/>
<use f='linux/drivers/hid/hid-sony.c' l='1505' u='c' c='dualshock4_get_calibration_data'/>
<use f='linux/drivers/hid/hid-sony.c' l='1522' u='c' c='dualshock4_get_calibration_data'/>
<use f='linux/drivers/hid/hid-sony.c' l='2024' u='c' c='sixaxis_send_output_report'/>
<use f='linux/drivers/hid/hid-sony.c' l='2389' u='c' c='sony_check_add'/>
<use f='linux/drivers/hid/hid-sony.c' l='2417' u='c' c='sony_check_add'/>
<use f='linux/drivers/hid/hidraw.c' l='159' u='c' c='hidraw_send_report'/>
<use f='linux/drivers/hid/hidraw.c' l='231' u='c' c='hidraw_get_report'/>
