<def f='linux/include/linux/hwspinlock.h' l='282' ll='286' type='void hwspin_unlock_irqrestore(struct hwspinlock * hwlock, unsigned long * flags)'/>
<doc f='linux/include/linux/hwspinlock.h' l='270'>/**
 * hwspin_unlock_irqrestore() - unlock hwspinlock, restore irq state
 * @hwlock: a previously-acquired hwspinlock which we want to unlock
 * @flags: previous caller&apos;s interrupt state to restore
 *
 * This function will unlock a specific hwspinlock, enable preemption and
 * restore the previous state of the local interrupts. It should be used
 * to undo, e.g., hwspin_trylock_irqsave().
 *
 * @hwlock must be already locked before calling this function: it is a bug
 * to call unlock on a @hwlock that is already unlocked.
 */</doc>
