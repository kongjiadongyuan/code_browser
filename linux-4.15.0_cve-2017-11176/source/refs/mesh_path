<def f='linux/net/mac80211/mesh.h' l='104' ll='127'/>
<use f='linux/net/mac80211/mesh.h' l='252' c='mesh_path_lookup'/>
<use f='linux/net/mac80211/mesh.h' l='254' c='mpp_path_lookup'/>
<use f='linux/net/mac80211/mesh.h' l='258' c='mesh_path_lookup_by_idx'/>
<use f='linux/net/mac80211/mesh.h' l='260' c='mpp_path_lookup_by_idx'/>
<use f='linux/net/mac80211/mesh.h' l='262' c='mesh_path_fix_nexthop'/>
<use f='linux/net/mac80211/mesh.h' l='266' c='mesh_path_add'/>
<use f='linux/net/mac80211/mesh.h' l='269' c='mesh_path_add_gate'/>
<use f='linux/net/mac80211/mesh.h' l='270' c='mesh_path_send_to_gates'/>
<use f='linux/net/mac80211/mesh.h' l='293' c='mesh_path_assign_nexthop'/>
<use f='linux/net/mac80211/mesh.h' l='294' c='mesh_path_flush_pending'/>
<use f='linux/net/mac80211/mesh.h' l='295' c='mesh_path_tx_pending'/>
<size>208</size>
<doc f='linux/net/mac80211/mesh.h' l='67'>/**
 * struct mesh_path - mac80211 mesh path structure
 *
 * @dst: mesh path destination mac address
 * @mpp: mesh proxy mac address
 * @rhash: rhashtable list pointer
 * @gate_list: list pointer for known gates list
 * @sdata: mesh subif
 * @next_hop: mesh neighbor to which frames for this destination will be
 *	forwarded
 * @timer: mesh path discovery timer
 * @frame_queue: pending queue for frames sent to this destination while the
 *	path is unresolved
 * @rcu: rcu head for freeing mesh path
 * @sn: target sequence number
 * @metric: current metric to this destination
 * @hop_count: hops to destination
 * @exp_time: in jiffies, when the path will expire or when it expired
 * @discovery_timeout: timeout (lapse in jiffies) used for the last discovery
 *	retry
 * @discovery_retries: number of discovery retries
 * @flags: mesh path flags, as specified on &amp;enum mesh_path_flags
 * @state_lock: mesh path state lock used to protect changes to the
 * mpath itself.  No need to take this lock when adding or removing
 * an mpath to a hash bucket on a path table.
 * @rann_snd_addr: the RANN sender address
 * @rann_metric: the aggregated path metric towards the root node
 * @last_preq_to_root: Timestamp of last PREQ sent to root
 * @is_root: the destination station of this path is a root node
 * @is_gate: the destination station of this path is a mesh gate
 *
 *
 * The dst address is unique in the mesh path table. Since the mesh_path is
 * protected by RCU, deleting the next_hop STA must remove / substitute the
 * mesh_path structure and wait until that is no longer reachable before
 * destroying the STA completely.
 */</doc>
<mbr r='mesh_path::dst' o='0' t='u8 [6]'/>
<mbr r='mesh_path::mpp' o='48' t='u8 [6]'/>
<mbr r='mesh_path::rhash' o='128' t='struct rhash_head'/>
<mbr r='mesh_path::gate_list' o='192' t='struct hlist_node'/>
<mbr r='mesh_path::sdata' o='320' t='struct ieee80211_sub_if_data *'/>
<mbr r='mesh_path::next_hop' o='384' t='struct sta_info *'/>
<mbr r='mesh_path::timer' o='448' t='struct timer_list'/>
<mbr r='mesh_path::frame_queue' o='768' t='struct sk_buff_head'/>
<mbr r='mesh_path::rcu' o='960' t='struct callback_head'/>
<mbr r='mesh_path::sn' o='1088' t='u32'/>
<mbr r='mesh_path::metric' o='1120' t='u32'/>
<mbr r='mesh_path::hop_count' o='1152' t='u8'/>
<mbr r='mesh_path::exp_time' o='1216' t='unsigned long'/>
<mbr r='mesh_path::discovery_timeout' o='1280' t='u32'/>
<mbr r='mesh_path::discovery_retries' o='1312' t='u8'/>
<mbr r='mesh_path::flags' o='1344' t='enum mesh_path_flags'/>
<mbr r='mesh_path::state_lock' o='1376' t='spinlock_t'/>
<mbr r='mesh_path::rann_snd_addr' o='1408' t='u8 [6]'/>
<mbr r='mesh_path::rann_metric' o='1472' t='u32'/>
<mbr r='mesh_path::last_preq_to_root' o='1536' t='unsigned long'/>
<mbr r='mesh_path::is_root' o='1600' t='bool'/>
<mbr r='mesh_path::is_gate' o='1608' t='bool'/>
<use f='linux/net/mac80211/tx.c' l='2395' c='ieee80211_build_hdr'/>
<use f='linux/net/mac80211/tx.c' l='2395' c='ieee80211_build_hdr'/>
<size>208</size>
