<def f='linux/include/crypto/skcipher.h' l='398' ll='402' type='int crypto_skcipher_setkey(struct crypto_skcipher * tfm, const u8 * key, unsigned int keylen)'/>
<doc f='linux/include/crypto/skcipher.h' l='382'>/**
 * crypto_skcipher_setkey() - set key for cipher
 * @tfm: cipher handle
 * @key: buffer holding the key
 * @keylen: length of the key in bytes
 *
 * The caller provided key is set for the skcipher referenced by the cipher
 * handle.
 *
 * Note, the key length determines the cipher type. Many block ciphers implement
 * different cipher modes depending on the key size, such as AES-128 vs AES-192
 * vs. AES-256. When providing a 16 byte key for an AES cipher handle, AES-128
 * is performed.
 *
 * Return: 0 if the setting of the key was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux/crypto/authenc.c' l='106' u='c' c='crypto_authenc_setkey'/>
<use f='linux/crypto/authencesn.c' l='88' u='c' c='crypto_authenc_esn_setkey'/>
<use f='linux/crypto/ccm.c' l='101' u='c' c='crypto_ccm_setkey'/>
<use f='linux/crypto/ctr.c' l='279' u='c' c='crypto_rfc3686_setkey'/>
<use f='linux/crypto/gcm.c' l='116' u='c' c='crypto_gcm_setkey'/>
<use f='linux/net/mac80211/fils_aead.c' l='125' u='c' c='aes_siv_encrypt'/>
<use f='linux/net/mac80211/fils_aead.c' l='182' u='c' c='aes_siv_decrypt'/>
