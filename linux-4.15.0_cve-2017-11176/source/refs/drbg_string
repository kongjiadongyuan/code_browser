<def f='linux/include/crypto/drbg.h' l='67' ll='71'/>
<use f='linux/include/crypto/drbg.h' l='73' c='drbg_string_fill'/>
<use f='linux/include/crypto/drbg.h' l='105'/>
<use f='linux/include/crypto/drbg.h' l='137'/>
<use f='linux/include/crypto/drbg.h' l='208' c='crypto_drbg_get_bytes_addtl'/>
<use f='linux/include/crypto/drbg.h' l='233' c='crypto_drbg_get_bytes_addtl_test'/>
<use f='linux/include/crypto/drbg.h' l='257' c='crypto_drbg_reset_test'/>
<use f='linux/crypto/drbg.c' l='609' c='drbg_hmac_update'/>
<use f='linux/crypto/drbg.c' l='609' c='drbg_hmac_update'/>
<use f='linux/crypto/drbg.c' l='609' c='drbg_hmac_update'/>
<use f='linux/crypto/drbg.c' l='663' c='drbg_hmac_generate'/>
<use f='linux/crypto/drbg.c' l='1005' c='drbg_async_seed'/>
<use f='linux/crypto/drbg.c' l='1051' c='drbg_seed'/>
<use f='linux/crypto/drbg.c' l='1057' c='drbg_seed'/>
<use f='linux/crypto/drbg.c' l='1245' c='drbg_generate'/>
<use f='linux/crypto/drbg.c' l='1372' c='drbg_generate_long'/>
<use f='linux/crypto/drbg.c' l='1455' c='drbg_instantiate'/>
<use f='linux/crypto/drbg.c' l='1619' c='drbg_kcapi_hash'/>
<use f='linux/crypto/drbg.c' l='1848' c='drbg_kcapi_random'/>
<use f='linux/crypto/drbg.c' l='1849' c='drbg_kcapi_random'/>
<use f='linux/crypto/drbg.c' l='1869' c='drbg_kcapi_seed'/>
<use f='linux/crypto/drbg.c' l='1870' c='drbg_kcapi_seed'/>
<use f='linux/crypto/drbg.c' l='1907' c='drbg_healthcheck_sanity'/>
<size>32</size>
<doc f='linux/include/crypto/drbg.h' l='57'>/*
 * Concatenation Helper and string operation helper
 *
 * SP800-90A requires the concatenation of different data. To avoid copying
 * buffers around or allocate additional memory, the following data structure
 * is used to point to the original memory with its size. In addition, it
 * is used to build a linked list. The linked list defines the concatenation
 * of individual buffers. The order of memory block referenced in that
 * linked list determines the order of concatenation.
 */</doc>
<mbr r='drbg_string::buf' o='0' t='const unsigned char *'/>
<mbr r='drbg_string::len' o='64' t='size_t'/>
<mbr r='drbg_string::list' o='128' t='struct list_head'/>
