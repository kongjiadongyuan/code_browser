<dec f='linux/include/linux/netlink.h' l='230' type='bool netlink_capable(const struct sk_buff * skb, int cap)'/>
<use f='linux/kernel/audit.c' l='1001' u='c' c='audit_netlink_ok'/>
<use f='linux/kernel/audit.c' l='1007' u='c' c='audit_netlink_ok'/>
<use f='linux/net/core/rtnetlink.c' l='3306' u='c' c='rtnl_fdb_del'/>
<def f='linux/net/netlink/af_netlink.c' l='866' ll='869' type='bool netlink_capable(const struct sk_buff * skb, int cap)'/>
<dec f='linux/net/netlink/af_netlink.c' l='870' type='bool netlink_capable(const struct sk_buff * , int )'/>
<use f='linux/net/netlink/af_netlink.c' l='870' c='netlink_capable'/>
<use f='linux/net/netlink/af_netlink.c' l='870' u='a'/>
<use f='linux/net/netlink/af_netlink.c' l='870' u='a'/>
<doc f='linux/net/netlink/af_netlink.c' l='857'>/**
 * netlink_capable - Netlink global message capability test
 * @skb: socket buffer holding a netlink command from userspace
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap in all user namespaces.
 */</doc>
<use f='linux/net/netlink/genetlink.c' l='524' u='c' c='genl_family_rcv_msg'/>
<use f='linux/net/sched/act_api.c' l='1101' u='c' c='tc_ctl_action'/>
