<dec f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='304' type='long i915_wait_request(struct drm_i915_gem_request * req, unsigned int flags, long timeout)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='675' u='c' c='i915_gem_active_wait'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='702' u='c' c='i915_gem_active_retire'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='394' u='c' c='i915_gem_object_wait_fence'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='4065' u='c' c='i915_gem_ring_throttle'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='72' u='c' c='i915_fence_wait'/>
<def f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='1127' ll='1262' type='long i915_wait_request(struct drm_i915_gem_request * req, unsigned int flags, long timeout)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='1108'>/**
 * i915_wait_request - wait until execution of request has finished
 * @req: the request to wait upon
 * @flags: how to wait
 * @timeout: how long to wait in jiffies
 *
 * i915_wait_request() waits for the request to be completed, for a
 * maximum of @timeout jiffies (with MAX_SCHEDULE_TIMEOUT implying an
 * unbounded wait).
 *
 * If the caller holds the struct_mutex, the caller must pass I915_WAIT_LOCKED
 * in via the flags, and vice versa if the struct_mutex is not held, the caller
 * must not specify that the wait is locked.
 *
 * Returns the remaining time (in jiffies) if the request completed, which may
 * be zero or -ETIME if the request is unfinished after the timeout expires.
 * May return -EINTR is called with I915_WAIT_INTERRUPTIBLE and a signal is
 * pending before the request completes.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.c' l='1604' u='c' c='wait_for_space'/>
