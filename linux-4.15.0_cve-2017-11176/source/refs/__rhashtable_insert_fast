<def f='linux/include/linux/rhashtable.h' l='709' ll='807' type='void * __rhashtable_insert_fast(struct rhashtable * ht, const void * key, struct rhash_head * obj, const struct rhashtable_params params, bool rhlist)'/>
<use f='linux/include/linux/rhashtable.h' l='831' u='c' c='rhashtable_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='859' u='c' c='rhltable_insert_key'/>
<use f='linux/include/linux/rhashtable.h' l='920' u='c' c='rhashtable_lookup_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='946' u='c' c='rhashtable_lookup_get_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='980' u='c' c='rhashtable_lookup_insert_key'/>
<use f='linux/include/linux/rhashtable.h' l='1004' u='c' c='rhashtable_lookup_get_insert_key'/>
<doc f='linux/include/linux/rhashtable.h' l='705'>/* Internal function, please use rhashtable_insert_fast() instead. This
 * function returns the existing element already in hashes in there is a clash,
 * otherwise it returns an error via ERR_PTR().
 */</doc>
