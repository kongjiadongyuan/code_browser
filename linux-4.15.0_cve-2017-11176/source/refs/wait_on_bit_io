<def f='linux/include/linux/wait_bit.h' l='103' ll='112' type='int wait_on_bit_io(unsigned long * word, int bit, unsigned int mode)'/>
<doc f='linux/include/linux/wait_bit.h' l='89'>/**
 * wait_on_bit_io - wait for a bit to be cleared
 * @word: the word being waited on, a kernel virtual address
 * @bit: the bit of the word being waited on
 * @mode: the task state to sleep in
 *
 * Use the standard hashed waitqueue table to wait for a bit
 * to be cleared.  This is similar to wait_on_bit(), but calls
 * io_schedule() instead of schedule() for the actual waiting.
 *
 * Returned value will be zero if the bit was cleared, or non-zero
 * if the process received a signal and the mode permitted wakeup
 * on that signal.
 */</doc>
<use f='linux/fs/buffer.c' l='125' u='c' c='__wait_on_buffer'/>
<use f='linux/fs/jbd2/transaction.c' l='965' u='c' c='do_get_write_access'/>
<use f='linux/fs/nfs/pagelist.c' l='453' u='c' c='nfs_wait_on_request'/>
