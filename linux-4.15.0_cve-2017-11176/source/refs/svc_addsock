<dec f='linux/include/linux/sunrpc/svcsock.h' l='61' type='int svc_addsock(struct svc_serv * serv, const int fd, char * name_return, const size_t len)'/>
<def f='linux/net/sunrpc/svcsock.c' l='1451' ll='1489' type='int svc_addsock(struct svc_serv * serv, const int fd, char * name_return, const size_t len)'/>
<dec f='linux/net/sunrpc/svcsock.c' l='1490' type='int svc_addsock(struct svc_serv * , const int , char * , const size_t )'/>
<use f='linux/net/sunrpc/svcsock.c' l='1490' c='svc_addsock'/>
<use f='linux/net/sunrpc/svcsock.c' l='1490' u='a'/>
<use f='linux/net/sunrpc/svcsock.c' l='1490' u='a'/>
<doc f='linux/net/sunrpc/svcsock.c' l='1440'>/**
 * svc_addsock - add a listener socket to an RPC service
 * @serv: pointer to RPC service to which to add a new listener
 * @fd: file descriptor of the new listener
 * @name_return: pointer to buffer to fill in with name of listener
 * @len: size of the buffer
 *
 * Fills in socket name and returns positive length of name if successful.
 * Name is terminated with &apos;\n&apos;.  On error, returns a negative errno
 * value.
 */</doc>
