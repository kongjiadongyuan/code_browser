<dec f='linux/include/linux/pm_wakeup.h' l='94' type='void wakeup_source_drop(struct wakeup_source * ws)'/>
<use f='linux/include/linux/pm_wakeup.h' l='203' u='c' c='wakeup_source_trash'/>
<def f='linux/drivers/base/power/wakeup.c' l='111' ll='118' type='void wakeup_source_drop(struct wakeup_source * ws)'/>
<dec f='linux/drivers/base/power/wakeup.c' l='119' type='void wakeup_source_drop(struct wakeup_source * )'/>
<use f='linux/drivers/base/power/wakeup.c' l='119' c='wakeup_source_drop'/>
<use f='linux/drivers/base/power/wakeup.c' l='119' u='a'/>
<use f='linux/drivers/base/power/wakeup.c' l='119' u='a'/>
<use f='linux/drivers/base/power/wakeup.c' l='160' u='c' c='wakeup_source_destroy'/>
<doc f='linux/drivers/base/power/wakeup.c' l='104'>/**
 * wakeup_source_drop - Prepare a struct wakeup_source object for destruction.
 * @ws: Wakeup source to prepare for destruction.
 *
 * Callers must ensure that __pm_stay_awake() or __pm_wakeup_event() will never
 * be run in parallel with this function for the same wakeup source object.
 */</doc>
