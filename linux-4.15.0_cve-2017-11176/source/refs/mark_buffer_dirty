<dec f='linux/include/linux/buffer_head.h' l='152' type='void mark_buffer_dirty(struct buffer_head * bh)'/>
<doc f='linux/include/linux/buffer_head.h' l='148'>/*
 * Declarations
 */</doc>
<use f='linux/fs/buffer.c' l='579' u='c' c='mark_buffer_dirty_inode'/>
<def f='linux/fs/buffer.c' l='1106' ll='1138' type='void mark_buffer_dirty(struct buffer_head * bh)'/>
<dec f='linux/fs/buffer.c' l='1139' type='void mark_buffer_dirty(struct buffer_head * )'/>
<use f='linux/fs/buffer.c' l='1139' c='mark_buffer_dirty'/>
<use f='linux/fs/buffer.c' l='1139' u='a'/>
<use f='linux/fs/buffer.c' l='1139' u='a'/>
<use f='linux/fs/buffer.c' l='1885' u='c' c='page_zero_new_buffers'/>
<use f='linux/fs/buffer.c' l='1999' u='c' c='__block_write_begin_int'/>
<use f='linux/fs/buffer.c' l='2060' u='c' c='__block_commit_write'/>
<use f='linux/fs/buffer.c' l='2925' u='c' c='block_truncate_page'/>
<doc f='linux/fs/buffer.c' l='1094'>/**
 * mark_buffer_dirty - mark a buffer_head as needing writeout
 * @bh: the buffer_head to mark dirty
 *
 * mark_buffer_dirty() will set the dirty bit against the buffer, then set its
 * backing page dirty, then tag the page as dirty in its address_space&apos;s radix
 * tree and then attach the address_space&apos;s inode to its superblock&apos;s dirty
 * inode list.
 *
 * mark_buffer_dirty() is atomic.  It takes bh-&gt;b_page-&gt;mapping-&gt;private_lock,
 * mapping-&gt;tree_lock and mapping-&gt;host-&gt;i_lock.
 */</doc>
<use f='linux/fs/ext4/ext4_jbd2.c' l='305' u='c' c='__ext4_handle_dirty_metadata'/>
<use f='linux/fs/ext4/ext4_jbd2.c' l='337' u='c' c='__ext4_handle_dirty_super'/>
<use f='linux/fs/ext4/inode.c' l='4045' u='c' c='__ext4_block_zero_page_range'/>
<use f='linux/fs/ext4/mmp.c' l='52' u='c' c='write_mmp_block'/>
<use f='linux/fs/ext4/resize.c' l='1163' u='c' c='update_backups'/>
<use f='linux/fs/ext4/super.c' l='4733' u='c' c='ext4_commit_super'/>
<use f='linux/fs/fat/inode.c' l='694' u='c' c='fat_set_state'/>
<use f='linux/fs/fat/inode.c' l='874' u='c' c='__fat_write_inode'/>
<use f='linux/fs/fat/misc.c' l='88' u='c' c='fat_clusters_flush'/>
<use f='linux/fs/jbd2/recovery.c' l='637' u='c' c='do_one_pass'/>
<use f='linux/fs/jbd2/transaction.c' l='1890' u='c' c='__jbd2_journal_temp_unlink_buffer'/>
