<dec f='linux/include/linux/lockd/lockd.h' l='251' type='struct nsm_handle * nsm_get_handle(const struct net * net, const struct sockaddr * sap, const size_t salen, const char * hostname, const size_t hostname_len)'/>
<use f='linux/fs/lockd/host.c' l='120' u='c' c='nlm_alloc_host'/>
<def f='linux/fs/lockd/mon.c' l='313' ll='364' type='struct nsm_handle * nsm_get_handle(const struct net * net, const struct sockaddr * sap, const size_t salen, const char * hostname, const size_t hostname_len)'/>
<doc f='linux/fs/lockd/mon.c' l='298'>/**
 * nsm_get_handle - Find or create a cached nsm_handle
 * @net: network namespace
 * @sap: pointer to socket address of handle to find
 * @salen: length of socket address
 * @hostname: pointer to C string containing hostname to find
 * @hostname_len: length of C string
 *
 * Behavior is modulated by the global nsm_use_hostnames variable.
 *
 * Returns a cached nsm_handle after bumping its ref count, or
 * returns a fresh nsm_handle if a handle that matches @sap and/or
 * @hostname cannot be found in the handle cache.  Returns NULL if
 * an error occurs.
 */</doc>
