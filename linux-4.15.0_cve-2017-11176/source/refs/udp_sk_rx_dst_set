<dec f='linux/include/net/udp.h' l='263' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<def f='linux/net/ipv4/udp.c' l='1934' ll='1944' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<dec f='linux/net/ipv4/udp.c' l='1945' type='bool udp_sk_rx_dst_set(struct sock * , struct dst_entry * )'/>
<use f='linux/net/ipv4/udp.c' l='1945' c='udp_sk_rx_dst_set'/>
<use f='linux/net/ipv4/udp.c' l='1945' u='a'/>
<use f='linux/net/ipv4/udp.c' l='1945' u='a'/>
<use f='linux/net/ipv4/udp.c' l='2092' u='c' c='__udp4_lib_rcv'/>
<doc f='linux/net/ipv4/udp.c' l='1931'>/* For TCP sockets, sk_rx_dst is protected by socket lock
 * For UDP, we use xchg() to guard against concurrent changes.
 */</doc>
<use f='linux/net/ipv6/udp.c' l='776' u='c' c='udp6_sk_rx_dst_set'/>
