<dec f='linux/include/linux/input.h' l='532' type='int input_ff_create(struct input_dev * dev, unsigned int max_effects)'/>
<use f='linux/drivers/hid/usbhid/hid-pidff.c' l='1312' u='c' c='hid_pidff_init'/>
<def f='linux/drivers/input/ff-core.c' l='317' ll='366' type='int input_ff_create(struct input_dev * dev, unsigned int max_effects)'/>
<dec f='linux/drivers/input/ff-core.c' l='367' type='int input_ff_create(struct input_dev * , unsigned int )'/>
<use f='linux/drivers/input/ff-core.c' l='367' c='input_ff_create'/>
<use f='linux/drivers/input/ff-core.c' l='367' u='a'/>
<use f='linux/drivers/input/ff-core.c' l='367' u='a'/>
<doc f='linux/drivers/input/ff-core.c' l='306'>/**
 * input_ff_create() - create force-feedback device
 * @dev: input device supporting force-feedback
 * @max_effects: maximum number of effects supported by the device
 *
 * This function allocates all necessary memory for a force feedback
 * portion of an input device and installs all default handlers.
 * @dev-&gt;ffbit should be already set up before calling this function.
 * Once ff device is created you need to setup its upload, erase,
 * playback and other handlers before registering input device
 */</doc>
<use f='linux/drivers/input/ff-memless.c' l='533' u='c' c='input_ff_create_memless'/>
