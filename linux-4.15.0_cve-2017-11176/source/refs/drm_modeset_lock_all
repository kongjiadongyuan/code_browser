<dec f='linux/include/drm/drm_modeset_lock.h' l='126' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<use f='linux/drivers/gpu/drm/drm_crtc.c' l='132' u='c' c='drm_crtc_force_disable_all'/>
<use f='linux/drivers/gpu/drm/drm_crtc_helper.c' l='217' u='c' c='drm_helper_disable_unused_functions'/>
<use f='linux/drivers/gpu/drm/drm_crtc_helper.c' l='948' u='c' c='drm_helper_resume_force_mode'/>
<use f='linux/drivers/gpu/drm/drm_fb_helper.c' l='440' u='c' c='restore_fbdev_mode_legacy'/>
<use f='linux/drivers/gpu/drm/drm_fb_helper.c' l='609' u='c' c='dpms_legacy'/>
<use f='linux/drivers/gpu/drm/drm_fb_helper.c' l='1240' u='c' c='setcmap_legacy'/>
<use f='linux/drivers/gpu/drm/drm_fb_helper.c' l='1660' u='c' c='pan_display_legacy'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='860' u='c' c='legacy_remove_fb'/>
<use f='linux/drivers/gpu/drm/drm_mode_object.c' l='386' u='c' c='drm_mode_obj_get_properties_ioctl'/>
<use f='linux/drivers/gpu/drm/drm_mode_object.c' l='433' u='c' c='set_property_legacy'/>
<def f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='90' ll='126' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<dec f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='127' type='void drm_modeset_lock_all(struct drm_device * )'/>
<use f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='127' c='drm_modeset_lock_all'/>
<use f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='127' u='a'/>
<use f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='127' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_modeset_lock.c' l='75'>/**
 * drm_modeset_lock_all - take all modeset locks
 * @dev: DRM device
 *
 * This function takes all modeset locks, suitable where a more fine-grained
 * scheme isn&apos;t (yet) implemented. Locks must be dropped by calling the
 * drm_modeset_unlock_all() function.
 *
 * This function is deprecated. It allocates a lock acquisition context and
 * stores it in &amp;drm_device.mode_config. This facilitate conversion of
 * existing code because it removes the need to manually deal with the
 * acquisition context, but it is also brittle because the context is global
 * and care must be taken not to nest calls. New code should use the
 * drm_modeset_lock_all_ctx() function and pass in the context explicitly.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='2740' u='c' c='i915_sink_crc'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='3336' u='c' c='i915_shared_dplls_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='3459' u='c' c='i915_ddb_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='3564' u='c' c='i915_drrs_status'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='3843' u='c' c='wm_latency_show'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='3977' u='c' c='wm_latency_write'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1502' u='c' c='intel_suspend_encoders'/>
<use f='linux/drivers/gpu/drm/i915/intel_audio.c' l='883' u='c' c='i915_audio_component_bind'/>
<use f='linux/drivers/gpu/drm/i915/intel_audio.c' l='901' u='c' c='i915_audio_component_unbind'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='14577' u='c' c='intel_modeset_init'/>
<use f='linux/drivers/gpu/drm/i915/intel_overlay.c' l='1122' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux/drivers/gpu/drm/i915/intel_overlay.c' l='1150' u='c' c='intel_overlay_put_image_ioctl'/>
<use f='linux/drivers/gpu/drm/i915/intel_overlay.c' l='1315' u='c' c='intel_overlay_attrs_ioctl'/>
<use f='linux/drivers/gpu/drm/i915/intel_pipe_crc.c' l='255' u='c' c='i9xx_pipe_crc_auto_source'/>
