<def f='linux/include/linux/phy.h' l='740' ll='743' type='bool phy_interrupt_is_valid(struct phy_device * phydev)'/>
<doc f='linux/include/linux/phy.h' l='733'>/**
 * phy_interrupt_is_valid - Convenience function for testing a given PHY irq
 * @phydev: the phy_device struct
 *
 * NOTE: must be kept in sync with addition/removal of PHY_POLL and
 * PHY_IGNORE_INTERRUPT
 */</doc>
<use f='linux/drivers/net/phy/phy.c' l='514' u='c' c='phy_start_aneg_priv'/>
<use f='linux/drivers/net/phy/phy.c' l='736' u='c' c='phy_change'/>
<use f='linux/drivers/net/phy/phy.c' l='750' u='c' c='phy_change'/>
<use f='linux/drivers/net/phy/phy.c' l='799' u='c' c='phy_stop'/>
<use f='linux/drivers/net/phy/phy.c' l='847' u='c' c='phy_start'/>
<use f='linux/drivers/net/phy/phy.c' l='934' u='c' c='phy_state_machine'/>
<use f='linux/drivers/net/phy/phy.c' l='1007' u='c' c='phy_state_machine'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1781' u='c' c='phy_probe'/>
