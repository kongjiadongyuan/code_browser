<dec f='linux/include/sound/hdaudio.h' l='138' type='int snd_hdac_query_supported_pcm(struct hdac_device * codec, hda_nid_t nid, u32 * ratesp, u64 * formatsp, unsigned int * bpsp)'/>
<def f='linux/sound/hda/hdac_device.c' l='825' ll='917' type='int snd_hdac_query_supported_pcm(struct hdac_device * codec, hda_nid_t nid, u32 * ratesp, u64 * formatsp, unsigned int * bpsp)'/>
<dec f='linux/sound/hda/hdac_device.c' l='918' type='int snd_hdac_query_supported_pcm(struct hdac_device * , hda_nid_t , u32 * , u64 * , unsigned int * )'/>
<use f='linux/sound/hda/hdac_device.c' l='918' c='snd_hdac_query_supported_pcm'/>
<use f='linux/sound/hda/hdac_device.c' l='918' u='a'/>
<use f='linux/sound/hda/hdac_device.c' l='918' u='a'/>
<doc f='linux/sound/hda/hdac_device.c' l='812'>/**
 * snd_hdac_query_supported_pcm - query the supported PCM rates and formats
 * @codec: the codec object
 * @nid: NID to query
 * @ratesp: the pointer to store the detected rate bitflags
 * @formatsp: the pointer to store the detected formats
 * @bpsp: the pointer to store the detected format widths
 *
 * Queries the supported PCM rates and formats.  The NULL @ratesp, @formatsp
 * or @bsps argument is ignored.
 *
 * Returns 0 if successful, otherwise a negative error code.
 */</doc>
<use f='linux/sound/pci/hda/hda_codec.c' l='3044' macro='1' u='c' c='set_pcm_default_values'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='3624' macro='1' u='c' c='snd_hda_multi_out_analog_open'/>
