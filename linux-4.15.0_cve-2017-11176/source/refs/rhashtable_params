<def f='linux/include/linux/rhashtable.h' l='137' ll='150'/>
<use f='linux/include/linux/rhashtable.h' l='168'/>
<use f='linux/include/linux/rhashtable.h' l='244' c='rht_key_hashfn'/>
<use f='linux/include/linux/rhashtable.h' l='275' c='rht_head_hashfn'/>
<use f='linux/include/linux/rhashtable.h' l='371' c='rhashtable_init'/>
<use f='linux/include/linux/rhashtable.h' l='373' c='rhltable_init'/>
<use f='linux/include/linux/rhashtable.h' l='602' c='__rhashtable_lookup'/>
<use f='linux/include/linux/rhashtable.h' l='648' c='rhashtable_lookup'/>
<use f='linux/include/linux/rhashtable.h' l='671' c='rhashtable_lookup_fast'/>
<use f='linux/include/linux/rhashtable.h' l='698' c='rhltable_lookup'/>
<use f='linux/include/linux/rhashtable.h' l='711' c='__rhashtable_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='827' c='rhashtable_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='857' c='rhltable_insert_key'/>
<use f='linux/include/linux/rhashtable.h' l='881' c='rhltable_insert'/>
<use f='linux/include/linux/rhashtable.h' l='913' c='rhashtable_lookup_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='940' c='rhashtable_lookup_get_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='974' c='rhashtable_lookup_insert_key'/>
<use f='linux/include/linux/rhashtable.h' l='1000' c='rhashtable_lookup_get_insert_key'/>
<use f='linux/include/linux/rhashtable.h' l='1010' c='__rhashtable_remove_fast_one'/>
<use f='linux/include/linux/rhashtable.h' l='1085' c='__rhashtable_remove_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1126' c='rhashtable_remove_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1148' c='rhltable_remove'/>
<use f='linux/include/linux/rhashtable.h' l='1157' c='__rhashtable_replace_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1211' c='rhashtable_replace_fast'/>
<size>48</size>
<doc f='linux/include/linux/rhashtable.h' l='122'>/**
 * struct rhashtable_params - Hash table construction parameters
 * @nelem_hint: Hint on number of elements, should be 75% of desired size
 * @key_len: Length of key
 * @key_offset: Offset of key in struct to be hashed
 * @head_offset: Offset of rhash_head in struct to be hashed
 * @max_size: Maximum size while expanding
 * @min_size: Minimum size while shrinking
 * @locks_mul: Number of bucket locks to allocate per cpu (default: 32)
 * @automatic_shrinking: Enable automatic shrinking of tables
 * @nulls_base: Base value to generate nulls marker
 * @hashfn: Hash function (default: jhash2 if !(key_len % 4), or jhash)
 * @obj_hashfn: Function to hash object
 * @obj_cmpfn: Function to compare key with object
 */</doc>
<mbr r='rhashtable_params::nelem_hint' o='0' t='u16'/>
<mbr r='rhashtable_params::key_len' o='16' t='u16'/>
<mbr r='rhashtable_params::key_offset' o='32' t='u16'/>
<mbr r='rhashtable_params::head_offset' o='48' t='u16'/>
<mbr r='rhashtable_params::max_size' o='64' t='unsigned int'/>
<mbr r='rhashtable_params::min_size' o='96' t='u16'/>
<mbr r='rhashtable_params::automatic_shrinking' o='112' t='bool'/>
<mbr r='rhashtable_params::locks_mul' o='120' t='u8'/>
<mbr r='rhashtable_params::nulls_base' o='128' t='u32'/>
<mbr r='rhashtable_params::hashfn' o='192' t='rht_hashfn_t'/>
<mbr r='rhashtable_params::obj_hashfn' o='256' t='rht_obj_hashfn_t'/>
<mbr r='rhashtable_params::obj_cmpfn' o='320' t='rht_obj_cmpfn_t'/>
<use f='linux/ipc/util.c' l='99'/>
<size>48</size>
<use f='linux/lib/rhashtable.c' l='877' c='rounded_hashtable_size'/>
<use f='linux/lib/rhashtable.c' l='932' c='rhashtable_init'/>
<use f='linux/lib/rhashtable.c' l='1006' c='rhltable_init'/>
<size>48</size>
<use f='linux/net/ipv4/ipmr.c' l='346'/>
<size>48</size>
<use f='linux/net/mac80211/sta_info.c' l='69'/>
<size>48</size>
<use f='linux/net/netlink/af_netlink.c' l='151'/>
<use f='linux/net/netlink/af_netlink.c' l='2707'/>
<size>48</size>
<use f='linux/net/sched/act_api.c' l='1275'/>
<size>48</size>
