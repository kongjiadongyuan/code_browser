<dec f='linux/include/linux/platform_device.h' l='168' type='struct platform_device * platform_device_alloc(const char * name, int id)'/>
<def f='linux/drivers/base/platform.c' l='264' ll='279' type='struct platform_device * platform_device_alloc(const char * name, int id)'/>
<dec f='linux/drivers/base/platform.c' l='280' type='struct platform_device * platform_device_alloc(const char * , int )'/>
<use f='linux/drivers/base/platform.c' l='280' c='platform_device_alloc'/>
<use f='linux/drivers/base/platform.c' l='280' u='a'/>
<use f='linux/drivers/base/platform.c' l='280' u='a'/>
<use f='linux/drivers/base/platform.c' l='510' u='c' c='platform_device_register_full'/>
<use f='linux/drivers/base/platform.c' l='744' u='c' c='__platform_create_bundle'/>
<doc f='linux/drivers/base/platform.c' l='256'>/**
 * platform_device_alloc - create a platform device
 * @name: base name of the device we&apos;re adding
 * @id: instance id
 *
 * Create a platform device object which can have other objects attached
 * to it, and which will have attached objects freed when it is released.
 */</doc>
<use f='linux/drivers/platform/x86/eeepc-laptop.c' l='456' u='c' c='eeepc_platform_init'/>
<use f='linux/drivers/tty/serial/8250/8250_core.c' l='1126' u='c' c='serial8250_init'/>
<use f='linux/drivers/tty/serial/8250/8250_exar.c' l='244' u='c' c='__xr17v35x_register_gpio'/>
