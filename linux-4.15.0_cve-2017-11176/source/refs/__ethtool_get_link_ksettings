<dec f='linux/include/linux/ethtool.h' l='164' type='int __ethtool_get_link_ksettings(struct net_device * dev, struct ethtool_link_ksettings * link_ksettings)'/>
<def f='linux/net/core/ethtool.c' l='572' ll='603' type='int __ethtool_get_link_ksettings(struct net_device * dev, struct ethtool_link_ksettings * link_ksettings)'/>
<dec f='linux/net/core/ethtool.c' l='604' type='int __ethtool_get_link_ksettings(struct net_device * , struct ethtool_link_ksettings * )'/>
<use f='linux/net/core/ethtool.c' l='604' c='__ethtool_get_link_ksettings'/>
<use f='linux/net/core/ethtool.c' l='604' u='a'/>
<use f='linux/net/core/ethtool.c' l='604' u='a'/>
<doc f='linux/net/core/ethtool.c' l='562'>/* Internal kernel helper to query a device ethtool_link_settings.
 *
 * Backward compatibility note: for compatibility with legacy drivers
 * that implement only the ethtool_cmd API, this has to work with both
 * drivers implementing get_link_ksettings API and drivers
 * implementing get_settings API. When drivers implement get_settings
 * and report ethtool_cmd deprecated fields
 * (transceiver/maxrxpkt/maxtxpkt), these fields are silently ignored
 * because the resulting struct ethtool_link_settings does not report them.
 */</doc>
<use f='linux/net/core/net-sysfs.c' l='208' u='c' c='speed_show'/>
<use f='linux/net/core/net-sysfs.c' l='228' u='c' c='duplex_show'/>
<use f='linux/net/packet/af_packet.c' l='564' u='c' c='prb_calc_retire_blk_tmo'/>
