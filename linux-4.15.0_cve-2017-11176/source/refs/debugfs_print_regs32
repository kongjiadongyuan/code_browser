<dec f='linux/include/linux/debugfs.h' l='133' type='void debugfs_print_regs32(struct seq_file * s, const struct debugfs_reg32 * regs, int nregs, void * base, char * prefix)'/>
<def f='linux/fs/debugfs/file.c' l='1057' ll='1070' type='void debugfs_print_regs32(struct seq_file * s, const struct debugfs_reg32 * regs, int nregs, void * base, char * prefix)'/>
<dec f='linux/fs/debugfs/file.c' l='1071' type='void debugfs_print_regs32(struct seq_file * , const struct debugfs_reg32 * , int , void * , char * )'/>
<use f='linux/fs/debugfs/file.c' l='1071' c='debugfs_print_regs32'/>
<use f='linux/fs/debugfs/file.c' l='1071' u='a'/>
<use f='linux/fs/debugfs/file.c' l='1071' u='a'/>
<use f='linux/fs/debugfs/file.c' l='1077' u='c' c='debugfs_show_regset32'/>
<doc f='linux/fs/debugfs/file.c' l='1042'>/**
 * debugfs_print_regs32 - use seq_print to describe a set of registers
 * @s: the seq_file structure being used to generate output
 * @regs: an array if struct debugfs_reg32 structures
 * @nregs: the length of the above array
 * @base: the base address to be used in reading the registers
 * @prefix: a string to be prefixed to every output line
 *
 * This function outputs a text block describing the current values of
 * some 32-bit hardware registers. It is meant to be used within debugfs
 * files based on seq_file that need to show registers, intermixed with other
 * information. The prefix argument may be used to specify a leading string,
 * because some peripherals have several blocks of identical registers,
 * for example configuration of dma channels
 */</doc>
