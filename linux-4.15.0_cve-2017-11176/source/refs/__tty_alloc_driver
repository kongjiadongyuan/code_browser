<dec f='linux/include/linux/tty_driver.h' l='335' type='struct tty_driver * __tty_alloc_driver(unsigned int lines, struct module * owner, unsigned long flags)'/>
<use f='linux/include/linux/tty_driver.h' l='346' u='c' c='alloc_tty_driver'/>
<use f='linux/drivers/tty/pty.c' l='883' macro='1' u='c' c='unix98_pty_init'/>
<use f='linux/drivers/tty/pty.c' l='891' macro='1' u='c' c='unix98_pty_init'/>
<def f='linux/drivers/tty/tty_io.c' l='3027' ll='3082' type='struct tty_driver * __tty_alloc_driver(unsigned int lines, struct module * owner, unsigned long flags)'/>
<dec f='linux/drivers/tty/tty_io.c' l='3083' type='struct tty_driver * __tty_alloc_driver(unsigned int , struct module * , unsigned long )'/>
<use f='linux/drivers/tty/tty_io.c' l='3083' c='__tty_alloc_driver'/>
<use f='linux/drivers/tty/tty_io.c' l='3083' u='a'/>
<use f='linux/drivers/tty/tty_io.c' l='3083' u='a'/>
<doc f='linux/drivers/tty/tty_io.c' l='3018'>/**
 * __tty_alloc_driver -- allocate tty driver
 * @lines: count of lines this driver can handle at most
 * @owner: module which is responsible for this driver
 * @flags: some of TTY_DRIVER_* flags, will be set in driver-&gt;flags
 *
 * This should not be called directly, some of the provided macros should be
 * used instead. Use IS_ERR and friends on @retval.
 */</doc>
