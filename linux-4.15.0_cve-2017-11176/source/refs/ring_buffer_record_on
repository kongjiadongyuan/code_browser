<dec f='linux/include/linux/ring_buffer.h' l='161' type='void ring_buffer_record_on(struct ring_buffer * buffer)'/>
<def f='linux/kernel/trace/ring_buffer.c' l='3075' ll='3084' type='void ring_buffer_record_on(struct ring_buffer * buffer)'/>
<dec f='linux/kernel/trace/ring_buffer.c' l='3085' type='void ring_buffer_record_on(struct ring_buffer * )'/>
<use f='linux/kernel/trace/ring_buffer.c' l='3085' c='ring_buffer_record_on'/>
<use f='linux/kernel/trace/ring_buffer.c' l='3085' u='a'/>
<use f='linux/kernel/trace/ring_buffer.c' l='3085' u='a'/>
<doc f='linux/kernel/trace/ring_buffer.c' l='3064'>/**
 * ring_buffer_record_on - restart writes into the buffer
 * @buffer: The ring buffer to start writes to.
 *
 * This enables all writes to the buffer that was disabled by
 * ring_buffer_record_off().
 *
 * This is different than ring_buffer_record_enable() as
 * it works like an on/off switch, where as the enable() version
 * must be paired with a disable().
 */</doc>
<use f='linux/kernel/trace/trace.c' l='763' u='c' c='tracer_tracing_on'/>
