<dec f='linux/include/crypto/gf128mul.h' l='163' type='void gf128mul_lle(be128 * a, const be128 * b)'/>
<doc f='linux/include/crypto/gf128mul.h' l='161'>/*	A slow generic version of gf_mul, implemented for lle and bbe
 * 	It multiplies a and b and puts the result in a */</doc>
<def f='linux/crypto/gf128mul.c' l='172' ll='207' type='void gf128mul_lle(be128 * r, const be128 * b)'/>
<dec f='linux/crypto/gf128mul.c' l='208' type='void gf128mul_lle(be128 * , const be128 * )'/>
<use f='linux/crypto/gf128mul.c' l='208' c='gf128mul_lle'/>
<use f='linux/crypto/gf128mul.c' l='208' u='a'/>
<use f='linux/crypto/gf128mul.c' l='208' u='a'/>
