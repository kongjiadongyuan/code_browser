<dec f='linux/include/drm/drm_ioctl.h' l='174' type='long drm_ioctl(struct file * filp, unsigned int cmd, unsigned long arg)'/>
<use f='linux/drivers/gpu/drm/drm_ioc32.c' l='966' u='c' c='drm_compat_ioctl'/>
<use f='linux/drivers/gpu/drm/drm_ioc32.c' l='970' u='c' c='drm_compat_ioctl'/>
<def f='linux/drivers/gpu/drm/drm_ioctl.c' l='764' ll='853' type='long drm_ioctl(struct file * filp, unsigned int cmd, unsigned long arg)'/>
<dec f='linux/drivers/gpu/drm/drm_ioctl.c' l='854' type='long drm_ioctl(struct file * , unsigned int , unsigned long )'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='854' c='drm_ioctl'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='854' u='a'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='854' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_ioctl.c' l='751'>/**
 * drm_ioctl - ioctl callback implementation for DRM drivers
 * @filp: file this ioctl is called on
 * @cmd: ioctl cmd number
 * @arg: user argument
 *
 * Looks up the ioctl function in the DRM core and the driver dispatch table,
 * stored in &amp;drm_driver.ioctls. It checks for necessary permission by calling
 * drm_ioctl_permit(), and dispatches to the respective function.
 *
 * Returns:
 * Zero on success, negative error code on failure.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='2704'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='2704'/>
<use f='linux/drivers/gpu/drm/i915/i915_ioc32.c' l='64' u='c' c='compat_i915_getparam'/>
<use f='linux/drivers/gpu/drm/i915/i915_ioc32.c' l='96' u='c' c='i915_compat_ioctl'/>
