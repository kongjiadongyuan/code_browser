<def f='linux/include/linux/quota.h' l='97' ll='117' type='struct kqid make_kqid(struct user_namespace * from, enum quota_type type, qid_t qid)'/>
<doc f='linux/include/linux/quota.h' l='83'>/**
 *	make_kqid - Map a user-namespace, type, qid tuple into a kqid.
 *	@from: User namespace that the qid is in
 *	@type: The type of quota
 *	@qid: Quota identifier
 *
 *	Maps a user-namespace, type qid tuple into a kernel internal
 *	kqid, and returns that kqid.
 *
 *	When there is no mapping defined for the user-namespace, type,
 *	qid tuple an invalid kqid is returned.  Callers are expected to
 *	test for and handle handle invalid kqids being returned.
 *	Invalid kqids may be tested for using qid_valid().
 */</doc>
<use f='linux/fs/quota/quota.c' l='210' u='c' c='quota_getquota'/>
<use f='linux/fs/quota/quota.c' l='236' u='c' c='quota_getnextquota'/>
<use f='linux/fs/quota/quota.c' l='287' u='c' c='quota_setquota'/>
<use f='linux/fs/quota/quota.c' l='586' u='c' c='quota_setxquota'/>
<use f='linux/fs/quota/quota.c' l='647' u='c' c='quota_getxquota'/>
<use f='linux/fs/quota/quota.c' l='674' u='c' c='quota_getnextxquota'/>
<use f='linux/fs/quota/quota_tree.c' l='730' u='c' c='qtree_get_next_id'/>
<use f='linux/fs/quota/quota_v2.c' l='245' u='c' c='v2r0_is_id'/>
<use f='linux/fs/quota/quota_v2.c' l='298' u='c' c='v2r1_is_id'/>
