<dec f='linux/include/linux/usb/cdc.h' l='47' type='int cdc_parse_cdc_header(struct usb_cdc_parsed_header * hdr, struct usb_interface * intf, u8 * buffer, int buflen)'/>
<def f='linux/drivers/usb/core/message.c' l='2081' ll='2218' type='int cdc_parse_cdc_header(struct usb_cdc_parsed_header * hdr, struct usb_interface * intf, u8 * buffer, int buflen)'/>
<dec f='linux/drivers/usb/core/message.c' l='2220' type='int cdc_parse_cdc_header(struct usb_cdc_parsed_header * , struct usb_interface * , u8 * , int )'/>
<use f='linux/drivers/usb/core/message.c' l='2220' c='cdc_parse_cdc_header'/>
<use f='linux/drivers/usb/core/message.c' l='2220' u='a'/>
<use f='linux/drivers/usb/core/message.c' l='2220' u='a'/>
<doc f='linux/drivers/usb/core/message.c' l='2066'>/**
 * cdc_parse_cdc_header - parse the extra headers present in CDC devices
 * @hdr: the place to put the results of the parsing
 * @intf: the interface for which parsing is requested
 * @buffer: pointer to the extra headers to be parsed
 * @buflen: length of the extra headers
 *
 * This evaluates the extra headers present in CDC devices which
 * bind the interfaces for data and control and provide details
 * about the capabilities of the device.
 *
 * Return: number of descriptors parsed or -EINVAL
 * if the header is contradictory beyond salvage
 */</doc>
