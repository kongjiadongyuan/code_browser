<dec f='linux/include/linux/skbuff.h' l='1815' type='void skb_queue_tail(struct sk_buff_head * list, struct sk_buff * newsk)'/>
<doc f='linux/include/linux/skbuff.h' l='1805'>/**
 *	__skb_queue_tail - queue a buffer at the list tail
 *	@list: list to use
 *	@newsk: buffer to queue
 *
 *	Queue a buffer at the end of a list. This function takes no locks
 *	and you must therefore hold required locks before calling it.
 *
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
<use f='linux/kernel/audit.c' l='550' u='c' c='kauditd_hold_skb'/>
<use f='linux/kernel/audit.c' l='573' u='c' c='kauditd_retry_skb'/>
<use f='linux/kernel/audit.c' l='2313' u='c' c='audit_log_end'/>
<use f='linux/kernel/auditfilter.c' l='1080' u='c' c='audit_list_rules'/>
<use f='linux/kernel/auditfilter.c' l='1086' u='c' c='audit_list_rules'/>
<use f='linux/net/core/netpoll.c' l='378' u='c' c='netpoll_send_skb_on_dev'/>
<def f='linux/net/core/skbuff.c' l='2893' ll='2900' type='void skb_queue_tail(struct sk_buff_head * list, struct sk_buff * newsk)'/>
<dec f='linux/net/core/skbuff.c' l='2901' type='void skb_queue_tail(struct sk_buff_head * , struct sk_buff * )'/>
<use f='linux/net/core/skbuff.c' l='2901' c='skb_queue_tail'/>
<use f='linux/net/core/skbuff.c' l='2901' u='a'/>
<use f='linux/net/core/skbuff.c' l='2901' u='a'/>
<use f='linux/net/core/skbuff.c' l='4174' u='c' c='sock_queue_err_skb'/>
<doc f='linux/net/core/skbuff.c' l='2882'>/**
 *	skb_queue_tail - queue a buffer at the list tail
 *	@list: list to use
 *	@newsk: buffer to queue
 *
 *	Queue a buffer at the tail of the list. This function takes the
 *	list lock and can be used safely with other locking &amp;sk_buff functions
 *	safely.
 *
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
<use f='linux/net/ipv4/ipmr.c' l='1267' u='c' c='ipmr_cache_unresolved'/>
<use f='linux/net/mac80211/rx.c' l='240' u='c' c='ieee80211_handle_mu_mimo_mon'/>
<use f='linux/net/mac80211/rx.c' l='1219' u='c' c='ieee80211_rx_reorder_ampdu'/>
<use f='linux/net/mac80211/rx.c' l='2632' u='c' c='ieee80211_rx_h_data'/>
<use f='linux/net/mac80211/rx.c' l='3104' u='c' c='ieee80211_rx_h_action'/>
<use f='linux/net/mac80211/rx.c' l='3249' u='c' c='ieee80211_rx_h_mgmt'/>
<use f='linux/net/mac80211/rx.c' l='4373' u='c' c='ieee80211_rx_irqsafe'/>
<use f='linux/net/mac80211/status.c' l='32' u='c' c='ieee80211_tx_status_irqsafe'/>
<use f='linux/net/mac80211/status.c' l='148' u='c' c='ieee80211_handle_filtered_frame'/>
<use f='linux/net/mac80211/tx.c' l='458' u='c' c='ieee80211_tx_h_multicast_ps_buf'/>
<use f='linux/net/mac80211/tx.c' l='533' u='c' c='ieee80211_tx_h_unicast_ps_buf'/>
<use f='linux/net/netlink/af_netlink.c' l='1221' u='c' c='__netlink_sendskb'/>
<use f='linux/net/unix/af_unix.c' l='1807' u='c' c='unix_dgram_sendmsg'/>
<use f='linux/net/unix/af_unix.c' l='1909' u='c' c='unix_stream_sendmsg'/>
