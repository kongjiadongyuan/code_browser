<dec f='linux/include/linux/bitmap.h' l='172' type='void bitmap_fold(unsigned long * dst, const unsigned long * orig, unsigned int sz, unsigned int nbits)'/>
<use f='linux/include/linux/nodemask.h' l='374' u='c' c='__nodes_fold'/>
<def f='linux/lib/bitmap.c' l='954' ll='965' type='void bitmap_fold(unsigned long * dst, const unsigned long * orig, unsigned int sz, unsigned int nbits)'/>
<dec f='linux/lib/bitmap.c' l='966' type='void bitmap_fold(unsigned long * , const unsigned long * , unsigned int , unsigned int )'/>
<use f='linux/lib/bitmap.c' l='966' c='bitmap_fold'/>
<use f='linux/lib/bitmap.c' l='966' u='a'/>
<use f='linux/lib/bitmap.c' l='966' u='a'/>
<doc f='linux/lib/bitmap.c' l='943'>/**
 * bitmap_fold - fold larger bitmap into smaller, modulo specified size
 *	@dst: resulting smaller bitmap
 *	@orig: original larger bitmap
 *	@sz: specified size
 *	@nbits: number of bits in each of these bitmaps
 *
 * For each bit oldbit in @orig, set bit oldbit mod @sz in @dst.
 * Clear all other bits in @dst.  See further the comment and
 * Example [2] for bitmap_onto() for why and how to use this.
 */</doc>
