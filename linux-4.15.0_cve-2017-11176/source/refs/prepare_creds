<dec f='linux/include/linux/cred.h' l='156' type='struct cred * prepare_creds()'/>
<use f='linux/fs/coredump.c' l='574' u='c' c='do_coredump'/>
<use f='linux/fs/open.c' l='365' u='c' c='SYSC_faccessat'/>
<use f='linux/kernel/capability.c' l='267' u='c' c='SYSC_capset'/>
<def f='linux/kernel/cred.c' l='244' ll='286' type='struct cred * prepare_creds()'/>
<dec f='linux/kernel/cred.c' l='287' type='struct cred * prepare_creds()'/>
<use f='linux/kernel/cred.c' l='287' c='prepare_creds'/>
<use f='linux/kernel/cred.c' l='287' u='a'/>
<use f='linux/kernel/cred.c' l='287' u='a'/>
<use f='linux/kernel/cred.c' l='297' u='c' c='prepare_exec_creds'/>
<use f='linux/kernel/cred.c' l='344' u='c' c='copy_creds'/>
<doc f='linux/kernel/cred.c' l='230'>/**
 * prepare_creds - Prepare a new set of credentials for modification
 *
 * Prepare a new set of task credentials for modification.  A task&apos;s creds
 * shouldn&apos;t generally be modified directly, therefore this function is used to
 * prepare a new copy, which the caller then modifies and then commits by
 * calling commit_creds().
 *
 * Preparation involves making a copy of the objective creds for modification.
 *
 * Returns a pointer to the new creds-to-be if successful, NULL otherwise.
 *
 * Call commit_creds() or abort_creds() to clean up.
 */</doc>
<use f='linux/kernel/groups.c' l='143' u='c' c='set_current_groups'/>
<use f='linux/kernel/sys.c' l='359' u='c' c='SYSC_setregid'/>
<use f='linux/kernel/sys.c' l='412' u='c' c='SYSC_setgid'/>
<use f='linux/kernel/sys.c' l='492' u='c' c='SYSC_setreuid'/>
<use f='linux/kernel/sys.c' l='559' u='c' c='SYSC_setuid'/>
<use f='linux/kernel/sys.c' l='615' u='c' c='SYSC_setresuid'/>
<use f='linux/kernel/sys.c' l='700' u='c' c='SYSC_setresgid'/>
<use f='linux/kernel/sys.c' l='774' u='c' c='SYSC_setfsuid'/>
<use f='linux/kernel/sys.c' l='813' u='c' c='SYSC_setfsgid'/>
<use f='linux/security/commoncap.c' l='1150' u='c' c='cap_prctl_drop'/>
<use f='linux/security/commoncap.c' l='1222' u='c' c='cap_task_prctl'/>
<use f='linux/security/commoncap.c' l='1240' u='c' c='cap_task_prctl'/>
<use f='linux/security/commoncap.c' l='1254' u='c' c='cap_task_prctl'/>
<use f='linux/security/commoncap.c' l='1277' u='c' c='cap_task_prctl'/>
<use f='linux/security/keys/keyctl.c' l='1021' u='c' c='keyctl_change_reqkey_auth'/>
<use f='linux/security/keys/keyctl.c' l='1274' u='c' c='keyctl_set_reqkey_keyring'/>
<use f='linux/security/keys/process_keys.c' l='166' u='c' c='install_thread_keyring'/>
<use f='linux/security/keys/process_keys.c' l='213' u='c' c='install_process_keyring'/>
<use f='linux/security/keys/process_keys.c' l='277' u='c' c='install_session_keyring'/>
<use f='linux/security/keys/process_keys.c' l='777' u='c' c='join_session_keyring'/>
<use f='linux/security/selinux/hooks.c' l='3389' u='c' c='selinux_inode_copy_up'/>
<use f='linux/security/selinux/hooks.c' l='6011' u='c' c='selinux_setprocattr'/>
