<dec f='linux/include/linux/gfp.h' l='494' type='struct page * alloc_pages_vma(gfp_t gfp_mask, int order, struct vm_area_struct * vma, unsigned long addr, int node, bool hugepage)'/>
<use f='linux/include/linux/highmem.h' l='184' macro='1' u='c' c='alloc_zeroed_user_highpage_movable'/>
<use f='linux/kernel/events/uprobes.c' l='325' macro='1' u='c' c='uprobe_write_opcode'/>
<use f='linux/mm/memory.c' l='2473' macro='1' u='c' c='wp_page_copy'/>
<use f='linux/mm/memory.c' l='2907' macro='1' u='c' c='do_swap_page'/>
<use f='linux/mm/memory.c' l='3631' macro='1' u='c' c='do_cow_fault'/>
<use f='linux/mm/mempolicy.c' l='1129' macro='1' u='c' c='new_page'/>
<use f='linux/mm/mempolicy.c' l='1139' macro='1' u='c' c='new_page'/>
<def f='linux/mm/mempolicy.c' l='1952' ll='2004' type='struct page * alloc_pages_vma(gfp_t gfp, int order, struct vm_area_struct * vma, unsigned long addr, int node, bool hugepage)'/>
<doc f='linux/mm/mempolicy.c' l='1929'>/**
 * 	alloc_pages_vma	- Allocate a page for a VMA.
 *
 * 	@gfp:
 *      %GFP_USER    user allocation.
 *      %GFP_KERNEL  kernel allocations,
 *      %GFP_HIGHMEM highmem/user allocations,
 *      %GFP_FS      allocation should not call back into a file system.
 *      %GFP_ATOMIC  don&apos;t sleep.
 *
 *	@order:Order of the GFP allocation.
 * 	@vma:  Pointer to VMA or NULL if not available.
 *	@addr: Virtual Address of the allocation. Must be inside the VMA.
 *	@node: Which node to prefer for allocation (modulo policy).
 *	@hugepage: for hugepages try only the preferred node if possible
 *
 * 	This function allocates a page from the kernel page pool and applies
 *	a NUMA policy associated with the VMA or the current process.
 *	When VMA is not NULL caller must hold down_read on the mmap_sem of the
 *	mm_struct of the VMA to prevent it from going away. Should be used for
 *	all allocations for pages that will be mapped into user space. Returns
 *	NULL when no page can be allocated.
 */</doc>
<use f='linux/mm/shmem.c' l='1447' u='c' c='shmem_alloc_hugepage'/>
<use f='linux/mm/shmem.c' l='1462' macro='1' u='c' c='shmem_alloc_page'/>
<use f='linux/mm/swap_state.c' l='398' macro='1' u='c' c='__read_swap_cache_async'/>
