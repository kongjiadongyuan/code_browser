<dec f='linux/include/acpi/cppc_acpi.h' l='133' type='int cppc_get_perf_ctrs(int cpu, struct cppc_perf_fb_ctrs * perf_fb_ctrs)'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='159' u='c' c='show_reference_perf'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='160' u='c' c='show_wraparound_time'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='169' u='c' c='show_feedback_ctrs'/>
<def f='linux/drivers/acpi/cppc_acpi.c' l='1093' ll='1159' type='int cppc_get_perf_ctrs(int cpunum, struct cppc_perf_fb_ctrs * perf_fb_ctrs)'/>
<dec f='linux/drivers/acpi/cppc_acpi.c' l='1160' type='int cppc_get_perf_ctrs(int , struct cppc_perf_fb_ctrs * )'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='1160' c='cppc_get_perf_ctrs'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='1160' u='a'/>
<use f='linux/drivers/acpi/cppc_acpi.c' l='1160' u='a'/>
<doc f='linux/drivers/acpi/cppc_acpi.c' l='1086'>/**
 * cppc_get_perf_ctrs - Read a CPUs performance feedback counters.
 * @cpunum: CPU from which to read counters.
 * @perf_fb_ctrs: ptr to cppc_perf_fb_ctrs. See cppc_acpi.h
 *
 * Return: 0 for success with perf_fb_ctrs populated else -ERRNO.
 */</doc>
