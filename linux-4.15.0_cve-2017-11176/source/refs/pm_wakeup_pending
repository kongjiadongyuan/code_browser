<dec f='linux/include/linux/suspend.h' l='436' type='bool pm_wakeup_pending()'/>
<use f='linux/drivers/base/power/main.c' l='1115' u='c' c='__device_suspend_noirq'/>
<use f='linux/drivers/base/power/main.c' l='1276' u='c' c='__device_suspend_late'/>
<use f='linux/drivers/base/power/main.c' l='1484' u='c' c='__device_suspend'/>
<def f='linux/drivers/base/power/wakeup.c' l='841' ll='862' type='bool pm_wakeup_pending()'/>
<doc f='linux/drivers/base/power/wakeup.c' l='833'>/**
 * pm_wakeup_pending - Check if power transition in progress should be aborted.
 *
 * Compare the current number of registered wakeup events with its preserved
 * value from the past and return true if new wakeup events have been registered
 * since the old value was stored.  Also return true if the current number of
 * wakeup events being processed is different from zero.
 */</doc>
<use f='linux/drivers/base/syscore.c' l='57' u='c' c='syscore_suspend'/>
<use f='linux/kernel/power/hibernate.c' l='296' u='c' c='create_image'/>
<use f='linux/kernel/power/hibernate.c' l='567' u='c' c='hibernation_platform_enter'/>
<use f='linux/kernel/power/process.c' l='69' u='c' c='try_to_freeze_tasks'/>
<use f='linux/kernel/power/suspend.c' l='82' u='c' c='s2idle_enter'/>
<use f='linux/kernel/power/suspend.c' l='130' u='c' c='s2idle_loop'/>
<use f='linux/kernel/power/suspend.c' l='146' u='c' c='s2idle_loop'/>
<use f='linux/kernel/power/suspend.c' l='433' u='c' c='suspend_enter'/>
