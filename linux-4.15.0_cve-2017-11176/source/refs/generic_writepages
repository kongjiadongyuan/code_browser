<dec f='linux/include/linux/writeback.h' l='364' type='int generic_writepages(struct address_space * mapping, struct writeback_control * wbc)'/>
<use f='linux/fs/block_dev.c' l='1939' u='c' c='blkdev_writepages'/>
<use f='linux/fs/jbd2/commit.c' l='202' u='c' c='journal_submit_inode_data_buffers'/>
<use f='linux/fs/mpage.c' l='707' u='c' c='mpage_writepages'/>
<def f='linux/mm/page-writeback.c' l='2314' ll='2328' type='int generic_writepages(struct address_space * mapping, struct writeback_control * wbc)'/>
<dec f='linux/mm/page-writeback.c' l='2330' type='int generic_writepages(struct address_space * , struct writeback_control * )'/>
<use f='linux/mm/page-writeback.c' l='2330' c='generic_writepages'/>
<use f='linux/mm/page-writeback.c' l='2330' u='a'/>
<use f='linux/mm/page-writeback.c' l='2330' u='a'/>
<use f='linux/mm/page-writeback.c' l='2342' u='c' c='do_writepages'/>
<doc f='linux/mm/page-writeback.c' l='2306'>/**
 * generic_writepages - walk the list of dirty pages of the given address space and writepage() all of them.
 * @mapping: address space structure to write
 * @wbc: subtract the number of written pages from *@wbc-&gt;nr_to_write
 *
 * This is a library function, which implements the writepages()
 * address_space_operation.
 */</doc>
