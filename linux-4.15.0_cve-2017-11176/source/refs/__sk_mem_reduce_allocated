<dec f='linux/include/net/sock.h' l='1317' type='void __sk_mem_reduce_allocated(struct sock * sk, int amount)'/>
<def f='linux/net/core/sock.c' l='2423' ll='2433' type='void __sk_mem_reduce_allocated(struct sock * sk, int amount)'/>
<dec f='linux/net/core/sock.c' l='2434' type='void __sk_mem_reduce_allocated(struct sock * , int )'/>
<use f='linux/net/core/sock.c' l='2434' c='__sk_mem_reduce_allocated'/>
<use f='linux/net/core/sock.c' l='2434' u='a'/>
<use f='linux/net/core/sock.c' l='2434' u='a'/>
<use f='linux/net/core/sock.c' l='2445' u='c' c='__sk_mem_reclaim'/>
<doc f='linux/net/core/sock.c' l='2416'>/**
 *	__sk_mem_reduce_allocated - reclaim memory_allocated
 *	@sk: socket
 *	@amount: number of quanta
 *
 *	Similar to __sk_mem_reclaim(), but does not update sk_forward_alloc
 */</doc>
<use f='linux/net/ipv4/udp.c' l='1232' u='c' c='udp_rmem_release'/>
