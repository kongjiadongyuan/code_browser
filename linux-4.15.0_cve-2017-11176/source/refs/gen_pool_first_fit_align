<dec f='linux/include/linux/genalloc.h' l='140' type='unsigned long gen_pool_first_fit_align(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool)'/>
<def f='linux/lib/genalloc.c' l='544' ll='556' type='unsigned long gen_pool_first_fit_align(unsigned long * map, unsigned long size, unsigned long start, unsigned int nr, void * data, struct gen_pool * pool)'/>
<dec f='linux/lib/genalloc.c' l='557' type='unsigned long gen_pool_first_fit_align(unsigned long * , unsigned long , unsigned long , unsigned int , void * , struct gen_pool * )'/>
<use f='linux/lib/genalloc.c' l='557' c='gen_pool_first_fit_align'/>
<use f='linux/lib/genalloc.c' l='557' u='a'/>
<use f='linux/lib/genalloc.c' l='557' u='a'/>
<doc f='linux/lib/genalloc.c' l='534'>/**
 * gen_pool_first_fit_align - find the first available region
 * of memory matching the size requirement (alignment constraint)
 * @map: The address to base the search on
 * @size: The bitmap size in bits
 * @start: The bitnumber to start searching at
 * @nr: The number of zeroed bits we&apos;re looking for
 * @data: data for alignment
 * @pool: pool to get order from
 */</doc>
