<dec f='linux/include/linux/usb/hcd.h' l='634' type='void usb_set_device_state(struct usb_device * udev, enum usb_device_state new_state)'/>
<doc f='linux/include/linux/usb/hcd.h' l='632'>/*-------------------------------------------------------------------------*/</doc>
<use f='linux/drivers/usb/core/hcd.c' l='1078' u='c' c='register_root_hub'/>
<use f='linux/drivers/usb/core/hcd.c' l='2260' u='c' c='hcd_bus_suspend'/>
<use f='linux/drivers/usb/core/hcd.c' l='2313' u='c' c='hcd_bus_resume'/>
<use f='linux/drivers/usb/core/hcd.c' l='2471' u='c' c='usb_hc_died'/>
<use f='linux/drivers/usb/core/hcd.c' l='2483' u='c' c='usb_hc_died'/>
<use f='linux/drivers/usb/core/hub.c' l='1173' u='c' c='hub_activate'/>
<def f='linux/drivers/usb/core/hub.c' l='1945' ll='1983' type='void usb_set_device_state(struct usb_device * udev, enum usb_device_state new_state)'/>
<dec f='linux/drivers/usb/core/hub.c' l='1984' type='void usb_set_device_state(struct usb_device * , enum usb_device_state )'/>
<use f='linux/drivers/usb/core/hub.c' l='1984' c='usb_set_device_state'/>
<use f='linux/drivers/usb/core/hub.c' l='1984' u='a'/>
<use f='linux/drivers/usb/core/hub.c' l='1984' u='a'/>
<use f='linux/drivers/usb/core/hub.c' l='2105' u='c' c='usb_disconnect'/>
<use f='linux/drivers/usb/core/hub.c' l='2491' u='c' c='usb_new_device'/>
<use f='linux/drivers/usb/core/hub.c' l='2857' u='c' c='hub_port_reset'/>
<use f='linux/drivers/usb/core/hub.c' l='2861' u='c' c='hub_port_reset'/>
<use f='linux/drivers/usb/core/hub.c' l='3215' u='c' c='usb_port_suspend'/>
<use f='linux/drivers/usb/core/hub.c' l='3253' u='c' c='finish_port_resume'/>
<use f='linux/drivers/usb/core/hub.c' l='4180' u='c' c='hub_port_disable'/>
<use f='linux/drivers/usb/core/hub.c' l='4293' u='c' c='hub_set_address'/>
<use f='linux/drivers/usb/core/hub.c' l='4832' u='c' c='hub_port_connect'/>
<use f='linux/drivers/usb/core/hub.c' l='5545' u='c' c='usb_reset_and_verify_device'/>
<doc f='linux/drivers/usb/core/hub.c' l='1924'>/**
 * usb_set_device_state - change a device&apos;s current state (usbcore, hcds)
 * @udev: pointer to device whose state should be changed
 * @new_state: new state value to be stored
 *
 * udev-&gt;state is _not_ fully protected by the device lock.  Although
 * most transitions are made only while holding the lock, the state can
 * can change to USB_STATE_NOTATTACHED at almost any time.  This
 * is so that devices can be marked as disconnected as soon as possible,
 * without having to wait for any semaphores to be released.  As a result,
 * all changes to any device&apos;s state must be protected by the
 * device_state_lock spinlock.
 *
 * Once a device has been added to the device tree, all changes to its state
 * should be made using this routine.  The state should _not_ be set directly.
 *
 * If udev-&gt;state is already USB_STATE_NOTATTACHED then no change is made.
 * Otherwise udev-&gt;state is set to new_state, and if new_state is
 * USB_STATE_NOTATTACHED then all of udev&apos;s descendants&apos; states are also set
 * to USB_STATE_NOTATTACHED.
 */</doc>
<use f='linux/drivers/usb/core/message.c' l='1223' u='c' c='usb_disable_device'/>
<use f='linux/drivers/usb/core/message.c' l='1936' u='c' c='usb_set_configuration'/>
<use f='linux/drivers/usb/core/message.c' l='1942' u='c' c='usb_set_configuration'/>
