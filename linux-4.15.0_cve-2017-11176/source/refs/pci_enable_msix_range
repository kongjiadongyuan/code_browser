<dec f='linux/include/linux/pci.h' l='1349' type='int pci_enable_msix_range(struct pci_dev * dev, struct msix_entry * entries, int minvec, int maxvec)'/>
<use f='linux/include/linux/pci.h' l='1354' u='c' c='pci_enable_msix_exact'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='11439' u='c' c='tg3_enable_msix'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='2094' u='c' c='e1000e_set_interrupt_capability'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='3961' u='c' c='nv_request_irq'/>
<def f='linux/drivers/pci/msi.c' l='1126' ll='1130' type='int pci_enable_msix_range(struct pci_dev * dev, struct msix_entry * entries, int minvec, int maxvec)'/>
<dec f='linux/drivers/pci/msi.c' l='1131' type='int pci_enable_msix_range(struct pci_dev * , struct msix_entry * , int , int )'/>
<use f='linux/drivers/pci/msi.c' l='1131' c='pci_enable_msix_range'/>
<use f='linux/drivers/pci/msi.c' l='1131' u='a'/>
<use f='linux/drivers/pci/msi.c' l='1131' u='a'/>
<doc f='linux/drivers/pci/msi.c' l='1111'>/**
 * pci_enable_msix_range - configure device&apos;s MSI-X capability structure
 * @dev: pointer to the pci_dev data structure of MSI-X device function
 * @entries: pointer to an array of MSI-X entries
 * @minvec: minimum number of MSI-X irqs requested
 * @maxvec: maximum number of MSI-X irqs requested
 *
 * Setup the MSI-X capability structure of device function with a maximum
 * possible number of interrupts in the range between @minvec and @maxvec
 * upon its software driver call to request for MSI-X mode enabled on its
 * hardware device function. It returns a negative errno if an error occurs.
 * If it succeeds, it returns the actual number of interrupts allocated and
 * indicates the successful configuration of MSI-X capability structure
 * with new allocated MSI-X interrupts.
 **/</doc>
