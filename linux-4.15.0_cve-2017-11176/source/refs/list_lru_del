<dec f='linux/include/linux/list_lru.h' l='98' type='bool list_lru_del(struct list_lru * lru, struct list_head * item)'/>
<doc f='linux/include/linux/list_lru.h' l='87'>/**
 * list_lru_del: delete an element to the lru list
 * @list_lru: the lru pointer
 * @item: the item to be deleted.
 *
 * This function works analogously as list_lru_add in terms of list
 * manipulation. The comments about an element already pertaining to
 * a list are also valid for list_lru_del.
 *
 * Return value: true if the list was updated, false otherwise
 */</doc>
<use f='linux/fs/dcache.c' l='406' u='c' c='d_lru_del'/>
<use f='linux/fs/inode.c' l='427' u='c' c='inode_lru_list_del'/>
<def f='linux/mm/list_lru.c' l='129' ll='146' type='bool list_lru_del(struct list_lru * lru, struct list_head * item)'/>
<dec f='linux/mm/list_lru.c' l='147' type='bool list_lru_del(struct list_lru * , struct list_head * )'/>
<use f='linux/mm/list_lru.c' l='147' c='list_lru_del'/>
<use f='linux/mm/list_lru.c' l='147' u='a'/>
<use f='linux/mm/list_lru.c' l='147' u='a'/>
<use f='linux/mm/workingset.c' l='358' u='c' c='workingset_update_node'/>
