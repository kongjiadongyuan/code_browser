<use f='linux/include/linux/serdev.h' l='34'/>
<use f='linux/include/linux/serdev.h' l='35'/>
<def f='linux/include/linux/serdev.h' l='47' ll='54'/>
<use f='linux/include/linux/serdev.h' l='56' c='to_serdev_device'/>
<use f='linux/include/linux/serdev.h' l='58' c='to_serdev_device'/>
<use f='linux/include/linux/serdev.h' l='58' c='to_serdev_device'/>
<use f='linux/include/linux/serdev.h' l='58' c='to_serdev_device'/>
<use f='linux/include/linux/serdev.h' l='70'/>
<use f='linux/include/linux/serdev.h' l='71'/>
<use f='linux/include/linux/serdev.h' l='105'/>
<use f='linux/include/linux/serdev.h' l='114' c='serdev_device_get_drvdata'/>
<use f='linux/include/linux/serdev.h' l='119' c='serdev_device_set_drvdata'/>
<use f='linux/include/linux/serdev.h' l='128' c='serdev_device_put'/>
<use f='linux/include/linux/serdev.h' l='134' c='serdev_device_set_client_ops'/>
<use f='linux/include/linux/serdev.h' l='162' c='serdev_device_alloc'/>
<use f='linux/include/linux/serdev.h' l='163' c='serdev_device_add'/>
<use f='linux/include/linux/serdev.h' l='164' c='serdev_device_remove'/>
<use f='linux/include/linux/serdev.h' l='172' c='serdev_controller_write_wakeup'/>
<use f='linux/include/linux/serdev.h' l='184' c='serdev_controller_receive_buf'/>
<use f='linux/include/linux/serdev.h' l='230' c='serdev_device_open'/>
<use f='linux/include/linux/serdev.h' l='234' c='serdev_device_close'/>
<use f='linux/include/linux/serdev.h' l='235' c='serdev_device_set_baudrate'/>
<use f='linux/include/linux/serdev.h' l='239' c='serdev_device_set_flow_control'/>
<use f='linux/include/linux/serdev.h' l='240' c='serdev_device_write_buf'/>
<use f='linux/include/linux/serdev.h' l='246' c='serdev_device_wait_until_sent'/>
<use f='linux/include/linux/serdev.h' l='247' c='serdev_device_get_tiocm'/>
<use f='linux/include/linux/serdev.h' l='251' c='serdev_device_set_tiocm'/>
<use f='linux/include/linux/serdev.h' l='255' c='serdev_device_write'/>
<use f='linux/include/linux/serdev.h' l='260' c='serdev_device_write_flush'/>
<use f='linux/include/linux/serdev.h' l='261' c='serdev_device_write_room'/>
<use f='linux/include/linux/serdev.h' l='271' c='serdev_device_get_cts'/>
<use f='linux/include/linux/serdev.h' l='277' c='serdev_device_wait_for_cts'/>
<use f='linux/include/linux/serdev.h' l='293' c='serdev_device_set_rts'/>
<size>808</size>
<doc f='linux/include/linux/serdev.h' l='38'>/**
 * struct serdev_device - Basic representation of an serdev device
 * @dev:	Driver model representation of the device.
 * @nr:		Device number on serdev bus.
 * @ctrl:	serdev controller managing this device.
 * @ops:	Device operations.
 * @write_comp	Completion used by serdev_device_write() internally
 * @write_lock	Lock to serialize access when writing data
 */</doc>
<mbr r='serdev_device::dev' o='0' t='struct device'/>
<mbr r='serdev_device::nr' o='5760' t='int'/>
<mbr r='serdev_device::ctrl' o='5824' t='struct serdev_controller *'/>
<mbr r='serdev_device::ops' o='5888' t='const struct serdev_device_ops *'/>
<mbr r='serdev_device::write_comp' o='5952' t='struct completion'/>
<mbr r='serdev_device::write_lock' o='6208' t='struct mutex'/>
