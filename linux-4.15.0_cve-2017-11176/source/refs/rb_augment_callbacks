<def f='linux/include/linux/rbtree_augmented.h' l='38' ll='42'/>
<use f='linux/include/linux/rbtree_augmented.h' l='60' c='rb_insert_augmented'/>
<use f='linux/include/linux/rbtree_augmented.h' l='68' c='rb_insert_augmented_cached'/>
<use f='linux/include/linux/rbtree_augmented.h' l='165' c='__rb_erase_augmented'/>
<use f='linux/include/linux/rbtree_augmented.h' l='272' c='rb_erase_augmented'/>
<use f='linux/include/linux/rbtree_augmented.h' l='282' c='rb_erase_augmented_cached'/>
<use f='linux/arch/x86/mm/pat_rbtree.c' l='72' macro='1'/>
<size>24</size>
<doc f='linux/include/linux/rbtree_augmented.h' l='30'>/*
 * Please note - only struct rb_augment_callbacks and the prototypes for
 * rb_insert_augmented() and rb_erase_augmented() are intended to be public.
 * The rest are implementation details you are not expected to depend on.
 *
 * See Documentation/rbtree.txt for documentation and samples.
 */</doc>
<mbr r='rb_augment_callbacks::propagate' o='0' t='void (*)(struct rb_node *, struct rb_node *)'/>
<mbr r='rb_augment_callbacks::copy' o='64' t='void (*)(struct rb_node *, struct rb_node *)'/>
<mbr r='rb_augment_callbacks::rotate' o='128' t='void (*)(struct rb_node *, struct rb_node *)'/>
<use f='linux/drivers/gpu/drm/drm_mm.c' l='165' macro='1'/>
<size>24</size>
<use f='linux/lib/interval_tree.c' l='9' macro='1'/>
<size>24</size>
<use f='linux/lib/rbtree.c' l='444'/>
<size>24</size>
<use f='linux/mm/interval_tree.c' l='24' macro='1'/>
<use f='linux/mm/interval_tree.c' l='72' macro='1'/>
<size>24</size>
<use f='linux/mm/mmap.c' l='396' macro='1'/>
<size>24</size>
