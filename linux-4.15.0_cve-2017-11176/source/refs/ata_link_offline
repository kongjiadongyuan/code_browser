<dec f='linux/include/linux/libata.h' l='1141' type='bool ata_link_offline(struct ata_link * link)'/>
<use f='linux/drivers/ata/libata-core.c' l='3751' u='c' c='ata_wait_ready'/>
<def f='linux/drivers/ata/libata-core.c' l='5629' ll='5637' type='bool ata_link_offline(struct ata_link * link)'/>
<dec f='linux/drivers/ata/libata-core.c' l='7284' type='bool ata_link_offline(struct ata_link * )'/>
<use f='linux/drivers/ata/libata-core.c' l='7284' c='ata_link_offline'/>
<use f='linux/drivers/ata/libata-core.c' l='7284' u='a'/>
<use f='linux/drivers/ata/libata-core.c' l='7284' u='a'/>
<doc f='linux/drivers/ata/libata-core.c' l='5613'>/**
 *	ata_link_offline - test whether the given link is offline
 *	@link: ATA link to test
 *
 *	Test whether @link is offline.  This is identical to
 *	ata_phys_link_offline() when there&apos;s no slave link.  When
 *	there&apos;s a slave link, this function should only be called on
 *	the master link and will return true if both M/S links are
 *	offline.
 *
 *	LOCKING:
 *	None.
 *
 *	RETURNS:
 *	True if the port offline status is available and offline.
 */</doc>
<use f='linux/drivers/ata/libata-eh.c' l='2672' u='c' c='ata_eh_followup_srst_needed'/>
<use f='linux/drivers/ata/libata-sff.c' l='1775' u='c' c='ata_sff_prereset'/>
