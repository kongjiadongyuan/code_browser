<dec f='linux/include/scsi/scsi_device.h' l='493' type='int scsi_internal_device_block_nowait(struct scsi_device * sdev)'/>
<def f='linux/drivers/scsi/scsi_lib.c' l='3072' ll='3100' type='int scsi_internal_device_block_nowait(struct scsi_device * sdev)'/>
<dec f='linux/drivers/scsi/scsi_lib.c' l='3101' type='int scsi_internal_device_block_nowait(struct scsi_device * )'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3101' c='scsi_internal_device_block_nowait'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3101' u='a'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3101' u='a'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3128' u='c' c='scsi_internal_device_block'/>
<doc f='linux/drivers/scsi/scsi_lib.c' l='3058'>/**
 * scsi_internal_device_block_nowait - try to transition to the SDEV_BLOCK state
 * @sdev: device to block
 *
 * Pause SCSI command processing on the specified device. Does not sleep.
 *
 * Returns zero if successful or a negative error code upon failure.
 *
 * Notes:
 * This routine transitions the device to the SDEV_BLOCK state (which must be
 * a legal transition). When the device is in this state, command processing
 * is paused until the device leaves the SDEV_BLOCK state. See also
 * scsi_internal_device_unblock_nowait().
 */</doc>
