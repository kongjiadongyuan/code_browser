<dec f='linux/include/linux/fs.h' l='2864' type='ino_t iunique(struct super_block * , ino_t )'/>
<use f='linux/fs/fat/dir.c' l='674' u='c' c='__fat_readdir'/>
<use f='linux/fs/fat/inode.c' l='592' u='c' c='fat_build_inode'/>
<use f='linux/fs/fat/nfs.c' l='251' u='c' c='fat_rebuild_parent'/>
<def f='linux/fs/inode.c' l='1196' ll='1216' type='ino_t iunique(struct super_block * sb, ino_t max_reserved)'/>
<dec f='linux/fs/inode.c' l='1217' type='ino_t iunique(struct super_block * , ino_t )'/>
<use f='linux/fs/inode.c' l='1217' c='iunique'/>
<use f='linux/fs/inode.c' l='1217' u='a'/>
<use f='linux/fs/inode.c' l='1217' u='a'/>
<doc f='linux/fs/inode.c' l='1182'>/**
 *	iunique - get a unique inode number
 *	@sb: superblock
 *	@max_reserved: highest reserved inode number
 *
 *	Obtain an inode number that is unique on the system for a given
 *	superblock. This is used by file systems that have no natural
 *	permanent inode numbering system. An inode number is returned that
 *	is higher than the reserved limit but unique.
 *
 *	BUGS:
 *	With a large number of inodes live on the file system this function
 *	currently becomes quite slow.
 */</doc>
<use f='linux/net/sunrpc/rpc_pipe.c' l='503' u='c' c='__rpc_create_common'/>
