<dec f='linux/include/linux/rcutree.h' l='82' type='void rcu_idle_enter()'/>
<def f='linux/kernel/rcu/tree.c' l='844' ll='848' type='void rcu_idle_enter()'/>
<doc f='linux/kernel/rcu/tree.c' l='829'>/**
 * rcu_idle_enter - inform RCU that current CPU is entering idle
 *
 * Enter idle mode, in other words, -leave- the mode in which RCU
 * read-side critical sections can occur.  (Though RCU read-side
 * critical sections can occur in irq handlers in idle, a possibility
 * handled by irq_enter() and irq_exit().)
 *
 * We crowbar the -&gt;dynticks_nesting field to zero to allow for
 * the possibility of usermode upcalls having messed up our count
 * of interrupt nesting level during the prior busy period.
 *
 * If you add or remove a call to rcu_idle_enter(), be sure to test with
 * CONFIG_RCU_EQS_DEBUG=y.
 */</doc>
<use f='linux/kernel/sched/idle.c' l='63' u='c' c='cpu_idle_poll'/>
<use f='linux/kernel/sched/idle.c' l='153' u='c' c='cpuidle_idle_call'/>
