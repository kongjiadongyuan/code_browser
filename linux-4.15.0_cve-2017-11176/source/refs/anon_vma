<use f='linux/include/linux/mm_types.h' l='323'/>
<use f='linux/include/linux/mm.h' l='1119' c='page_anon_vma'/>
<use f='linux/include/linux/mm.h' l='2148' c='vma_merge'/>
<use f='linux/include/linux/mm.h' l='2150' c='find_mergeable_anon_vma'/>
<def f='linux/include/linux/rmap.h' l='29' ll='62'/>
<use f='linux/include/linux/rmap.h' l='30'/>
<use f='linux/include/linux/rmap.h' l='49'/>
<use f='linux/include/linux/rmap.h' l='79'/>
<use f='linux/include/linux/rmap.h' l='105' c='get_anon_vma'/>
<use f='linux/include/linux/rmap.h' l='110' c='__put_anon_vma'/>
<use f='linux/include/linux/rmap.h' l='112' c='put_anon_vma'/>
<use f='linux/include/linux/rmap.h' l='118' c='anon_vma_lock_write'/>
<use f='linux/include/linux/rmap.h' l='123' c='anon_vma_unlock_write'/>
<use f='linux/include/linux/rmap.h' l='128' c='anon_vma_lock_read'/>
<use f='linux/include/linux/rmap.h' l='133' c='anon_vma_unlock_read'/>
<use f='linux/include/linux/rmap.h' l='163' c='page_get_anon_vma'/>
<use f='linux/include/linux/rmap.h' l='249' c='page_lock_anon_vma_read'/>
<use f='linux/include/linux/rmap.h' l='250' c='page_unlock_anon_vma_read'/>
<use f='linux/include/linux/rmap.h' l='271'/>
<size>80</size>
<doc f='linux/include/linux/rmap.h' l='15'>/*
 * The anon_vma heads a list of private &quot;related&quot; vmas, to scan if
 * an anonymous page pointing to this anon_vma needs to be unmapped:
 * the vmas on the list will be related by forking, or by splitting.
 *
 * Since vmas come and go as they are split and merged (particularly
 * in mprotect), the mapping field of an anonymous page cannot point
 * directly to a vma: instead it points to an anon_vma, on whose list
 * the related vmas can be easily linked or unlinked.
 *
 * After unlinking the last vma on the list, we must garbage collect
 * the anon_vma object itself: we&apos;re guaranteed no page can be
 * pointing to this anon_vma once its vma list is empty.
 */</doc>
<mbr r='anon_vma::root' o='0' t='struct anon_vma *'/>
<mbr r='anon_vma::rwsem' o='64' t='struct rw_semaphore'/>
<mbr r='anon_vma::refcount' o='384' t='atomic_t'/>
<mbr r='anon_vma::degree' o='416' t='unsigned int'/>
<mbr r='anon_vma::parent' o='448' t='struct anon_vma *'/>
<mbr r='anon_vma::rb_root' o='512' t='struct rb_root_cached'/>
<use f='linux/mm/migrate.c' l='981' c='__unmap_and_move'/>
<use f='linux/mm/migrate.c' l='1269' c='unmap_and_move_huge_page'/>
<size>80</size>
<use f='linux/mm/mmap.c' l='689' c='__vma_adjust'/>
<use f='linux/mm/mmap.c' l='997' c='is_mergeable_anon_vma'/>
<use f='linux/mm/mmap.c' l='998' c='is_mergeable_anon_vma'/>
<use f='linux/mm/mmap.c' l='1024' c='can_vma_merge_before'/>
<use f='linux/mm/mmap.c' l='1045' c='can_vma_merge_after'/>
<use f='linux/mm/mmap.c' l='1102' c='vma_merge'/>
<use f='linux/mm/mmap.c' l='1236' c='reusable_anon_vma'/>
<use f='linux/mm/mmap.c' l='1239' c='reusable_anon_vma'/>
<use f='linux/mm/mmap.c' l='1255' c='find_mergeable_anon_vma'/>
<use f='linux/mm/mmap.c' l='1257' c='find_mergeable_anon_vma'/>
<use f='linux/mm/mmap.c' l='3358' c='vm_lock_anon_vma'/>
<use f='linux/mm/mmap.c' l='3476' c='vm_unlock_anon_vma'/>
<size>80</size>
<use f='linux/mm/rmap.c' l='77' c='anon_vma_alloc'/>
<use f='linux/mm/rmap.c' l='79' c='anon_vma_alloc'/>
<use f='linux/mm/rmap.c' l='96' c='anon_vma_free'/>
<use f='linux/mm/rmap.c' l='138' c='anon_vma_chain_link'/>
<use f='linux/mm/rmap.c' l='177' c='__anon_vma_prepare'/>
<use f='linux/mm/rmap.c' l='177' c='__anon_vma_prepare'/>
<use f='linux/mm/rmap.c' l='230' c='lock_anon_vma_root'/>
<use f='linux/mm/rmap.c' l='230' c='lock_anon_vma_root'/>
<use f='linux/mm/rmap.c' l='230' c='lock_anon_vma_root'/>
<use f='linux/mm/rmap.c' l='232' c='lock_anon_vma_root'/>
<use f='linux/mm/rmap.c' l='242' c='unlock_anon_vma_root'/>
<use f='linux/mm/rmap.c' l='263' c='anon_vma_clone'/>
<use f='linux/mm/rmap.c' l='266' c='anon_vma_clone'/>
<use f='linux/mm/rmap.c' l='317' c='anon_vma_fork'/>
<use f='linux/mm/rmap.c' l='378' c='unlink_anon_vmas'/>
<use f='linux/mm/rmap.c' l='385' c='unlink_anon_vmas'/>
<use f='linux/mm/rmap.c' l='412' c='unlink_anon_vmas'/>
<use f='linux/mm/rmap.c' l='424' c='anon_vma_ctor'/>
<use f='linux/mm/rmap.c' l='433' c='anon_vma_init'/>
<use f='linux/mm/rmap.c' l='463' c='page_get_anon_vma'/>
<use f='linux/mm/rmap.c' l='465' c='page_get_anon_vma'/>
<use f='linux/mm/rmap.c' l='475' c='page_get_anon_vma'/>
<use f='linux/mm/rmap.c' l='506' c='page_lock_anon_vma_read'/>
<use f='linux/mm/rmap.c' l='508' c='page_lock_anon_vma_read'/>
<use f='linux/mm/rmap.c' l='509' c='page_lock_anon_vma_read'/>
<use f='linux/mm/rmap.c' l='519' c='page_lock_anon_vma_read'/>
<use f='linux/mm/rmap.c' l='568' c='page_unlock_anon_vma_read'/>
<use f='linux/mm/rmap.c' l='690' c='page_address_in_vma'/>
<use f='linux/mm/rmap.c' l='1001' c='page_move_anon_rmap'/>
<use f='linux/mm/rmap.c' l='1027' c='__page_set_anon_rmap'/>
<use f='linux/mm/rmap.c' l='1704' c='__put_anon_vma'/>
<use f='linux/mm/rmap.c' l='1706' c='__put_anon_vma'/>
<use f='linux/mm/rmap.c' l='1713' c='rmap_walk_anon_lock'/>
<use f='linux/mm/rmap.c' l='1716' c='rmap_walk_anon_lock'/>
<use f='linux/mm/rmap.c' l='1752' c='rmap_walk_anon'/>
<use f='linux/mm/rmap.c' l='1873' c='__hugepage_set_anon_rmap'/>
<use f='linux/mm/rmap.c' l='1890' c='hugepage_add_anon_rmap'/>
<size>80</size>
<use f='linux/mm/util.c' l='460' c='page_anon_vma'/>
