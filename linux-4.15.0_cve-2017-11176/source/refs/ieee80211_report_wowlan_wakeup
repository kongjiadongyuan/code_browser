<dec f='linux/include/net/mac80211.h' l='5758' type='void ieee80211_report_wowlan_wakeup(struct ieee80211_vif * vif, struct cfg80211_wowlan_wakeup * wakeup, gfp_t gfp)'/>
<doc f='linux/include/net/mac80211.h' l='5750'>/**
 * ieee80211_report_wowlan_wakeup - report WoWLAN wakeup
 * @vif: virtual interface
 * @wakeup: wakeup reason(s)
 * @gfp: allocation flags
 *
 * See cfg80211_report_wowlan_wakeup().
 */</doc>
<def f='linux/net/mac80211/pm.c' l='200' ll='207' type='void ieee80211_report_wowlan_wakeup(struct ieee80211_vif * vif, struct cfg80211_wowlan_wakeup * wakeup, gfp_t gfp)'/>
<dec f='linux/net/mac80211/pm.c' l='208' type='void ieee80211_report_wowlan_wakeup(struct ieee80211_vif * , struct cfg80211_wowlan_wakeup * , gfp_t )'/>
<use f='linux/net/mac80211/pm.c' l='208' c='ieee80211_report_wowlan_wakeup'/>
<use f='linux/net/mac80211/pm.c' l='208' u='a'/>
<use f='linux/net/mac80211/pm.c' l='208' u='a'/>
<doc f='linux/net/mac80211/pm.c' l='194'>/*
 * __ieee80211_resume() is a static inline which just calls
 * ieee80211_reconfig(), which is also needed for hardware
 * hang/firmware failure/etc. recovery.
 */</doc>
