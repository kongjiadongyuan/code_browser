<dec f='linux/include/scsi/scsi_host.h' l='329' type='enum blk_eh_timer_return (*)(struct scsi_cmnd *)'/>
<use f='linux/drivers/ata/ahci.c' l='110' macro='1' u='w'/>
<offset>1664</offset>
<doc f='linux/include/scsi/scsi_host.h' l='318'>/*
	 * This is an optional routine that allows the transport to become
	 * involved when a scsi io timer fires. The return value tells the
	 * timer routine how to finish the io timeout handling:
	 * EH_HANDLED:		I fixed the error, please complete the command
	 * EH_RESET_TIMER:	I need more time, reset the timer and
	 *			begin counting again
	 * EH_NOT_HANDLED	Begin normal error recovery
	 *
	 * Status: OPTIONAL
	 */</doc>
<use f='linux/drivers/ata/ata_piix.c' l='1079' macro='1' u='w'/>
<use f='linux/drivers/ata/ata_piix.c' l='1113' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_amd.c' l='391' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_oldpiix.c' l='207' macro='1' u='w'/>
<use f='linux/drivers/ata/pata_sch.c' l='74' macro='1' u='w'/>
<use f='linux/drivers/scsi/scsi_error.c' l='287' u='r' c='scsi_times_out'/>
<use f='linux/drivers/scsi/scsi_error.c' l='288' u='r' c='scsi_times_out'/>
