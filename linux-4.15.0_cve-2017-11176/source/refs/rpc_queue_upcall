<dec f='linux/include/linux/sunrpc/rpc_pipe_fs.h' l='95' type='int rpc_queue_upcall(struct rpc_pipe * , struct rpc_pipe_msg * )'/>
<use f='linux/fs/nfs/nfs4idmap.c' l='595' u='c' c='nfs_idmap_legacy_upcall'/>
<use f='linux/net/sunrpc/auth_gss/auth_gss.c' l='546' u='c' c='gss_setup_upcall'/>
<def f='linux/net/sunrpc/rpc_pipe.c' l='132' ll='159' type='int rpc_queue_upcall(struct rpc_pipe * pipe, struct rpc_pipe_msg * msg)'/>
<dec f='linux/net/sunrpc/rpc_pipe.c' l='160' type='int rpc_queue_upcall(struct rpc_pipe * , struct rpc_pipe_msg * )'/>
<use f='linux/net/sunrpc/rpc_pipe.c' l='160' c='rpc_queue_upcall'/>
<use f='linux/net/sunrpc/rpc_pipe.c' l='160' u='a'/>
<use f='linux/net/sunrpc/rpc_pipe.c' l='160' u='a'/>
<doc f='linux/net/sunrpc/rpc_pipe.c' l='122'>/**
 * rpc_queue_upcall - queue an upcall message to userspace
 * @pipe: upcall pipe on which to queue given message
 * @msg: message to queue
 *
 * Call with an @inode created by rpc_mkpipe() to queue an upcall.
 * A userspace process may then later read the upcall by performing a
 * read on an open file for this inode.  It is up to the caller to
 * initialize the fields of @msg (other than @msg-&gt;list) appropriately.
 */</doc>
