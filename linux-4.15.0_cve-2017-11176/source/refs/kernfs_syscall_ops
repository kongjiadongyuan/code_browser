<def f='linux/include/linux/kernfs.h' l='168' ll='179'/>
<use f='linux/include/linux/kernfs.h' l='189'/>
<use f='linux/include/linux/kernfs.h' l='322' c='kernfs_create_root'/>
<size>48</size>
<doc f='linux/include/linux/kernfs.h' l='161'>/*
 * kernfs_syscall_ops may be specified on kernfs_create_root() to support
 * syscalls.  These optional callbacks are invoked on the matching syscalls
 * and can perform any kernfs operations which don&apos;t necessarily have to be
 * the exact operation requested.  An active reference is held for each
 * kernfs_node parameter.
 */</doc>
<mbr r='kernfs_syscall_ops::remount_fs' o='0' t='int (*)(struct kernfs_root *, int *, char *)'/>
<mbr r='kernfs_syscall_ops::show_options' o='64' t='int (*)(struct seq_file *, struct kernfs_root *)'/>
<mbr r='kernfs_syscall_ops::mkdir' o='128' t='int (*)(struct kernfs_node *, const char *, umode_t)'/>
<mbr r='kernfs_syscall_ops::rmdir' o='192' t='int (*)(struct kernfs_node *)'/>
<mbr r='kernfs_syscall_ops::rename' o='256' t='int (*)(struct kernfs_node *, struct kernfs_node *, const char *)'/>
<mbr r='kernfs_syscall_ops::show_path' o='320' t='int (*)(struct seq_file *, struct kernfs_node *, struct kernfs_root *)'/>
<use f='linux/fs/kernfs/dir.c' l='934' c='kernfs_create_root'/>
<use f='linux/fs/kernfs/dir.c' l='1090' c='kernfs_iop_mkdir'/>
<use f='linux/fs/kernfs/dir.c' l='1108' c='kernfs_iop_rmdir'/>
<use f='linux/fs/kernfs/dir.c' l='1129' c='kernfs_iop_rename'/>
<size>48</size>
<use f='linux/fs/kernfs/mount.c' l='28' c='kernfs_sop_remount_fs'/>
<use f='linux/fs/kernfs/mount.c' l='38' c='kernfs_sop_show_options'/>
<use f='linux/fs/kernfs/mount.c' l='49' c='kernfs_sop_show_path'/>
<size>48</size>
<use f='linux/kernel/cgroup/cgroup-internal.h' l='222'/>
<use f='linux/kernel/cgroup/cgroup-v1.c' l='1111'/>
<size>48</size>
<use f='linux/kernel/cgroup/cgroup.c' l='1387'/>
<use f='linux/kernel/cgroup/cgroup.c' l='1878' c='cgroup_setup_root'/>
<use f='linux/kernel/cgroup/cgroup.c' l='5130'/>
<size>48</size>
