<dec f='linux/include/linux/tty.h' l='470' type='struct device * tty_register_device(struct tty_driver * driver, unsigned int index, struct device * dev)'/>
<def f='linux/drivers/tty/tty_io.c' l='2893' ll='2897' type='struct device * tty_register_device(struct tty_driver * driver, unsigned int index, struct device * device)'/>
<dec f='linux/drivers/tty/tty_io.c' l='2898' type='struct device * tty_register_device(struct tty_driver * , unsigned int , struct device * )'/>
<use f='linux/drivers/tty/tty_io.c' l='2898' c='tty_register_device'/>
<use f='linux/drivers/tty/tty_io.c' l='2898' u='a'/>
<use f='linux/drivers/tty/tty_io.c' l='2898' u='a'/>
<use f='linux/drivers/tty/tty_io.c' l='3167' u='c' c='tty_register_driver'/>
<doc f='linux/drivers/tty/tty_io.c' l='2874'>/**
 *	tty_register_device - register a tty device
 *	@driver: the tty driver that describes the tty device
 *	@index: the index in the tty driver for this tty device
 *	@device: a struct device that is associated with this tty device.
 *		This field is optional, if there is no known struct device
 *		for this tty device it can be set to NULL safely.
 *
 *	Returns a pointer to the struct device for this tty device
 *	(or ERR_PTR(-EFOO) on error).
 *
 *	This call is required to be made to register an individual tty device
 *	if the tty driver&apos;s flags have the TTY_DRIVER_DYNAMIC_DEV bit set.  If
 *	that bit is not set, this function should not be called by a tty
 *	driver.
 *
 *	Locking: ??
 */</doc>
