<dec f='linux/include/linux/vmalloc.h' l='74' type='void * vmalloc_node(unsigned long size, int node)'/>
<use f='linux/crypto/scompress.c' l='93' u='c' c='crypto_scomp_alloc_scratches'/>
<def f='linux/mm/vmalloc.c' l='1897' ll='1901' type='void * vmalloc_node(unsigned long size, int node)'/>
<dec f='linux/mm/vmalloc.c' l='1902' type='void * vmalloc_node(unsigned long , int )'/>
<use f='linux/mm/vmalloc.c' l='1902' c='vmalloc_node'/>
<use f='linux/mm/vmalloc.c' l='1902' u='a'/>
<use f='linux/mm/vmalloc.c' l='1902' u='a'/>
<doc f='linux/mm/vmalloc.c' l='1886'>/**
 *	vmalloc_node  -  allocate memory on a specific node
 *	@size:		allocation size
 *	@node:		numa node
 *
 *	Allocate enough pages to cover @size from the page level
 *	allocator and map them into contiguous kernel virtual space.
 *
 *	For tight control over page level allocator and protection flags
 *	use __vmalloc() instead.
 */</doc>
