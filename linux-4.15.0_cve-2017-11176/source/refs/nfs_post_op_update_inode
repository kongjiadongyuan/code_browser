<dec f='linux/include/linux/nfs_fs.h' l='349' type='int nfs_post_op_update_inode(struct inode * inode, struct nfs_fattr * fattr)'/>
<def f='linux/fs/nfs/inode.c' l='1606' ll='1616' type='int nfs_post_op_update_inode(struct inode * inode, struct nfs_fattr * fattr)'/>
<dec f='linux/fs/nfs/inode.c' l='1617' type='int nfs_post_op_update_inode(struct inode * , struct nfs_fattr * )'/>
<use f='linux/fs/nfs/inode.c' l='1617' c='nfs_post_op_update_inode'/>
<use f='linux/fs/nfs/inode.c' l='1617' u='a'/>
<use f='linux/fs/nfs/inode.c' l='1617' u='a'/>
<doc f='linux/fs/nfs/inode.c' l='1592'>/**
 * nfs_post_op_update_inode - try to update the inode attribute cache
 * @inode - pointer to inode
 * @fattr - updated attributes
 *
 * After an operation that has changed the inode metadata, mark the
 * attribute cache as being invalid, then try to update it.
 *
 * NB: if the server didn&apos;t return any post op attributes, this
 * function will force the retrieval of attributes before the next
 * NFS request.  Thus it should be used only for operations that
 * are expected to change one or more attributes, to avoid
 * unnecessary NFS requests and trips through nfs_update_inode().
 */</doc>
<use f='linux/fs/nfs/nfs3proc.c' l='283' u='c' c='nfs3_do_create'/>
<use f='linux/fs/nfs/nfs3proc.c' l='368' u='c' c='nfs3_proc_create'/>
<use f='linux/fs/nfs/nfs3proc.c' l='406' u='c' c='nfs3_proc_remove'/>
<use f='linux/fs/nfs/nfs3proc.c' l='431' u='c' c='nfs3_proc_unlink_done'/>
<use f='linux/fs/nfs/nfs3proc.c' l='456' u='c' c='nfs3_proc_rename_done'/>
<use f='linux/fs/nfs/nfs3proc.c' l='457' u='c' c='nfs3_proc_rename_done'/>
<use f='linux/fs/nfs/nfs3proc.c' l='485' u='c' c='nfs3_proc_link'/>
<use f='linux/fs/nfs/nfs3proc.c' l='486' u='c' c='nfs3_proc_link'/>
<use f='linux/fs/nfs/nfs3proc.c' l='585' u='c' c='nfs3_proc_rmdir'/>
<use f='linux/fs/nfs/nfs4proc.c' l='4310' u='c' c='_nfs4_proc_link'/>
