<def f='linux/include/net/cfg80211.h' l='1779' ll='1786'/>
<use f='linux/include/net/cfg80211.h' l='4640' c='cfg80211_inform_bss_frame_data'/>
<use f='linux/include/net/cfg80211.h' l='4651' c='cfg80211_inform_bss_width_frame'/>
<use f='linux/include/net/cfg80211.h' l='4666' c='cfg80211_inform_bss_frame'/>
<use f='linux/include/net/cfg80211.h' l='4710' c='cfg80211_inform_bss_data'/>
<use f='linux/include/net/cfg80211.h' l='4725' c='cfg80211_inform_bss_width'/>
<def f='linux/include/net/cfg80211.h' l='4736' ll='4753' type='struct cfg80211_bss * cfg80211_inform_bss(struct wiphy * wiphy, struct ieee80211_channel * rx_channel, enum cfg80211_bss_frame_type ftype, const u8 * bssid, u64 tsf, u16 capability, u16 beacon_interval, const u8 * ie, size_t ielen, s32 signal, gfp_t gfp)'/>
<use f='linux/include/net/cfg80211.h' l='4744' c='cfg80211_inform_bss'/>
<size>40</size>
<doc f='linux/include/net/cfg80211.h' l='1761'>/**
 * struct cfg80211_inform_bss - BSS inform data
 * @chan: channel the frame was received on
 * @scan_width: scan width that was used
 * @signal: signal strength value, according to the wiphy&apos;s
 *	signal type
 * @boottime_ns: timestamp (CLOCK_BOOTTIME) when the information was
 *	received; should match the time when the frame was actually
 *	received by the device (not just by the host, in case it was
 *	buffered on the device) and be accurate to about 10ms.
 *	If the frame isn&apos;t buffered, just passing the return value of
 *	ktime_get_boot_ns() is likely appropriate.
 * @parent_tsf: the time at the start of reception of the first octet of the
 *	timestamp field of the frame. The time is the TSF of the BSS specified
 *	by %parent_bssid.
 * @parent_bssid: the BSS according to which %parent_tsf is set. This is set to
 *	the BSS that requested the scan in which the beacon/probe was received.
 */</doc>
<mbr r='cfg80211_inform_bss::chan' o='0' t='struct ieee80211_channel *'/>
<mbr r='cfg80211_inform_bss::scan_width' o='64' t='enum nl80211_bss_scan_width'/>
<mbr r='cfg80211_inform_bss::signal' o='96' t='s32'/>
<mbr r='cfg80211_inform_bss::boottime_ns' o='128' t='u64'/>
<mbr r='cfg80211_inform_bss::parent_tsf' o='192' t='u64'/>
<mbr r='cfg80211_inform_bss::parent_bssid' o='256' t='u8 [6]'/>
<use f='linux/net/mac80211/ibss.c' l='235' c='__ieee80211_sta_join_ibss'/>
<size>40</size>
<use f='linux/net/mac80211/scan.c' l='70' c='ieee80211_bss_info_update'/>
<size>40</size>
<use f='linux/net/wireless/trace.h' l='2938' c='trace_cfg80211_inform_bss_frame'/>
<use f='linux/net/wireless/trace.h' l='2938' c='trace_cfg80211_inform_bss_frame'/>
<use f='linux/net/wireless/trace.h' l='2938' c='trace_cfg80211_inform_bss_frame_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='2938' c='trace_cfg80211_inform_bss_frame_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='2938' c='register_trace_cfg80211_inform_bss_frame'/>
<use f='linux/net/wireless/trace.h' l='2938' c='register_trace_prio_cfg80211_inform_bss_frame'/>
<use f='linux/net/wireless/trace.h' l='2938' c='unregister_trace_cfg80211_inform_bss_frame'/>
<use f='linux/net/wireless/trace.h' l='2938' c='check_trace_callback_type_cfg80211_inform_bss_frame'/>
<size>40</size>
<use f='linux/net/wireless/scan.c' l='1093' c='cfg80211_inform_bss_data'/>
<use f='linux/net/wireless/scan.c' l='1178' c='cfg80211_inform_bss_frame_data'/>
<size>40</size>
