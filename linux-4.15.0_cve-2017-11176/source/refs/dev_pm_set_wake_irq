<dec f='linux/include/linux/pm_wakeirq.h' l='19' type='int dev_pm_set_wake_irq(struct device * dev, int irq)'/>
<def f='linux/drivers/base/power/wakeirq.c' l='66' ll='86' type='int dev_pm_set_wake_irq(struct device * dev, int irq)'/>
<dec f='linux/drivers/base/power/wakeirq.c' l='87' type='int dev_pm_set_wake_irq(struct device * , int )'/>
<use f='linux/drivers/base/power/wakeirq.c' l='87' c='dev_pm_set_wake_irq'/>
<use f='linux/drivers/base/power/wakeirq.c' l='87' u='a'/>
<use f='linux/drivers/base/power/wakeirq.c' l='87' u='a'/>
<doc f='linux/drivers/base/power/wakeirq.c' l='56'>/**
 * dev_pm_set_wake_irq - Attach device IO interrupt as wake IRQ
 * @dev: Device entry
 * @irq: Device IO interrupt
 *
 * Attach a device IO interrupt as a wake IRQ. The wake IRQ gets
 * automatically configured for wake-up from suspend  based
 * on the device specific sysfs wakeup entry. Typically called
 * during driver probe after calling device_init_wakeup().
 */</doc>
<use f='linux/drivers/i2c/i2c-core-base.c' l='383' u='c' c='i2c_device_probe'/>
