<dec f='linux/include/net/tcp.h' l='390' type='unsigned int tcp_poll(struct file * file, struct socket * sock, struct poll_table_struct * wait)'/>
<use f='linux/net/ipv4/af_inet.c' l='937'/>
<use f='linux/net/ipv4/af_inet.c' l='937'/>
<def f='linux/net/ipv4/tcp.c' l='496' ll='597' type='unsigned int tcp_poll(struct file * file, struct socket * sock, poll_table * wait)'/>
<dec f='linux/net/ipv4/tcp.c' l='598' type='unsigned int tcp_poll(struct file * , struct socket * , struct poll_table_struct * )'/>
<use f='linux/net/ipv4/tcp.c' l='598' c='tcp_poll'/>
<use f='linux/net/ipv4/tcp.c' l='598' u='a'/>
<use f='linux/net/ipv4/tcp.c' l='598' u='a'/>
<doc f='linux/net/ipv4/tcp.c' l='489'>/*
 *	Wait for a TCP event.
 *
 *	Note that we don&apos;t need to lock the socket, as the upper poll layers
 *	take care of normal races (between the test and the event) and we don&apos;t
 *	go look at any of the socket buffers directly.
 */</doc>
<use f='linux/net/ipv6/af_inet6.c' l='550'/>
<use f='linux/net/ipv6/af_inet6.c' l='550'/>
