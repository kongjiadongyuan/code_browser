<use f='linux/include/linux/syscalls.h' l='844' c='sys_getcpu'/>
<def f='linux/include/linux/getcpu.h' l='15' ll='17'/>
<use f='linux/arch/x86/entry/vdso/vgetcpu.c' l='14' c='__vdso_getcpu'/>
<use f='linux/arch/x86/entry/vdso/vgetcpu.c' l='27' c='getcpu'/>
<size>128</size>
<doc f='linux/include/linux/getcpu.h' l='5'>/* Cache for getcpu() to speed it up. Results might be a short time
   out of date, but will be faster.

   User programs should not refer to the contents of this structure.
   I repeat they should not refer to it. If they do they will break
   in future kernels.

   It is only a private cache for vgetcpu(). It will change in future kernels.
   The user program must store this information per thread (__thread)
   If you want 100% accurate information pass NULL instead. */</doc>
<mbr r='getcpu_cache::blob' o='0' t='unsigned long [16]'/>
<use f='linux/kernel/sys.c' l='2409' c='sys_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SYSC_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SyS_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SyS_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SyS_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SyS_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SyS_getcpu'/>
<use f='linux/kernel/sys.c' l='2409' c='SYSC_getcpu'/>
<size>128</size>
