<def f='linux/include/uapi/linux/net_tstamp.h' l='62' ll='66'/>
<size>12</size>
<doc f='linux/include/uapi/linux/net_tstamp.h' l='49'>/**
 * struct hwtstamp_config - %SIOCGHWTSTAMP and %SIOCSHWTSTAMP parameter
 *
 * @flags:	no flags defined right now, must be zero for %SIOCSHWTSTAMP
 * @tx_type:	one of HWTSTAMP_TX_*
 * @rx_filter:	one of HWTSTAMP_FILTER_*
 *
 * %SIOCGHWTSTAMP and %SIOCSHWTSTAMP expect a &amp;struct ifreq with a
 * ifr_data pointer to this structure.  For %SIOCSHWTSTAMP, if the
 * driver or hardware does not support the requested @rx_filter value,
 * the driver may use a more general filter mode.  In this case
 * @rx_filter will indicate the actual mode on return.
 */</doc>
<mbr r='hwtstamp_config::flags' o='0' t='int'/>
<mbr r='hwtstamp_config::tx_type' o='32' t='int'/>
<mbr r='hwtstamp_config::rx_filter' o='64' t='int'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='13812' c='tg3_hwtstamp_set'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='13899' c='tg3_hwtstamp_get'/>
<size>12</size>
<use f='linux/drivers/net/ethernet/intel/e1000e/e1000.h' l='337'/>
<size>12</size>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='3615' c='e1000e_config_hwtstamp'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='6153' c='e1000e_hwtstamp_set'/>
<size>12</size>
<use f='linux/net/core/dev_ioctl.c' l='191' c='net_hwtstamp_validate'/>
<size>12</size>
