<dec f='linux/include/linux/reservation.h' l='260' type='long reservation_object_wait_timeout_rcu(struct reservation_object * obj, bool wait_all, bool intr, unsigned long timeout)'/>
<use f='linux/drivers/dma-buf/dma-buf.c' l='792' u='c' c='__dma_buf_begin_cpu_access'/>
<def f='linux/drivers/dma-buf/reservation.c' l='453' ll='526' type='long reservation_object_wait_timeout_rcu(struct reservation_object * obj, bool wait_all, bool intr, unsigned long timeout)'/>
<dec f='linux/drivers/dma-buf/reservation.c' l='527' type='long reservation_object_wait_timeout_rcu(struct reservation_object * , bool , bool , unsigned long )'/>
<use f='linux/drivers/dma-buf/reservation.c' l='527' c='reservation_object_wait_timeout_rcu'/>
<use f='linux/drivers/dma-buf/reservation.c' l='527' u='a'/>
<use f='linux/drivers/dma-buf/reservation.c' l='527' u='a'/>
<doc f='linux/drivers/dma-buf/reservation.c' l='441'>/**
 * reservation_object_wait_timeout_rcu - Wait on reservation&apos;s objects
 * shared and/or exclusive fences.
 * @obj: the reservation object
 * @wait_all: if true, wait on all fences, else wait on just exclusive fence
 * @intr: if true, do interruptible wait
 * @timeout: timeout value in jiffies or zero to return immediately
 *
 * RETURNS
 * Returns -ERESTARTSYS if interrupted, 0 if the wait timed out, or
 * greater than zer on success.
 */</doc>
