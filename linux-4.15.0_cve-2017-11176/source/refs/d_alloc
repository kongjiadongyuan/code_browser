<dec f='linux/include/linux/dcache.h' l='237' type='struct dentry * d_alloc(struct dentry * , const struct qstr * )'/>
<doc f='linux/include/linux/dcache.h' l='236'>/* allocate/de-allocate */</doc>
<def f='linux/fs/dcache.c' l='1682' ll='1699' type='struct dentry * d_alloc(struct dentry * parent, const struct qstr * name)'/>
<dec f='linux/fs/dcache.c' l='1700' type='struct dentry * d_alloc(struct dentry * , const struct qstr * )'/>
<use f='linux/fs/dcache.c' l='1700' c='d_alloc'/>
<use f='linux/fs/dcache.c' l='1700' u='a'/>
<use f='linux/fs/dcache.c' l='1700' u='a'/>
<use f='linux/fs/dcache.c' l='1732' u='c' c='d_alloc_name'/>
<use f='linux/fs/dcache.c' l='2064' u='c' c='d_add_ci'/>
<use f='linux/fs/dcache.c' l='2442' u='c' c='d_alloc_parallel'/>
<doc f='linux/fs/dcache.c' l='1673'>/**
 * d_alloc	-	allocate a dcache entry
 * @parent: parent of entry to allocate
 * @name: qstr of the name
 *
 * Allocates a dentry. It returns %NULL if there is insufficient memory
 * available. On a success the dentry is returned. The name passed in is
 * copied and the copy passed in may be reused after this call.
 */</doc>
<use f='linux/fs/efivarfs/super.c' l='103' u='c' c='efivarfs_alloc_dentry'/>
<use f='linux/fs/namei.c' l='1530' u='c' c='__lookup_hash'/>
<use f='linux/fs/namei.c' l='3416' u='c' c='vfs_tmpfile'/>
<use f='linux/fs/nfs/dir.c' l='2010' u='c' c='nfs_rename'/>
<use f='linux/mm/shmem.c' l='3131' u='c' c='shmem_whiteout'/>
<use f='linux/net/sunrpc/rpc_pipe.c' l='653' u='c' c='__rpc_lookup_create_exclusive'/>
