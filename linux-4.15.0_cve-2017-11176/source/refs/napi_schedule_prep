<dec f='linux/include/linux/netdevice.h' l='419' type='bool napi_schedule_prep(struct napi_struct * n)'/>
<use f='linux/include/linux/netdevice.h' l='430' u='c' c='napi_schedule'/>
<use f='linux/include/linux/netdevice.h' l='442' u='c' c='napi_schedule_irqoff'/>
<use f='linux/include/linux/netdevice.h' l='449' u='c' c='napi_reschedule'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='2237' u='c' c='e100_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3803' u='c' c='e1000_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1821' u='c' c='e1000_intr_msi'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1901' u='c' c='e1000_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1925' u='c' c='e1000_msix_other'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1982' u='c' c='e1000_intr_msix_rx'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='3622' u='c' c='nv_nic_irq'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='3655' u='c' c='nv_nic_irq_optimized'/>
<use f='linux/drivers/net/ethernet/realtek/8139too.c' l='2193' u='c' c='rtl8139_interrupt'/>
<def f='linux/net/core/dev.c' l='5293' ll='5314' type='bool napi_schedule_prep(struct napi_struct * n)'/>
<dec f='linux/net/core/dev.c' l='5315' type='bool napi_schedule_prep(struct napi_struct * )'/>
<use f='linux/net/core/dev.c' l='5315' c='napi_schedule_prep'/>
<use f='linux/net/core/dev.c' l='5315' u='a'/>
<use f='linux/net/core/dev.c' l='5315' u='a'/>
<doc f='linux/net/core/dev.c' l='5284'>/**
 *	napi_schedule_prep - check if napi can be scheduled
 *	@n: napi context
 *
 * Test if NAPI routine is already running, and if not mark
 * it as running.  This is used as a condition variable
 * insure only one NAPI poll instance runs.  We also make
 * sure there is no pending NAPI disable.
 */</doc>
