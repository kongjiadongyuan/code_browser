<dec f='linux/include/linux/usb/hcd.h' l='652' type='void usb_hcd_resume_root_hub(struct usb_hcd * hcd)'/>
<def f='linux/drivers/usb/core/hcd.c' l='2362' ll='2372' type='void usb_hcd_resume_root_hub(struct usb_hcd * hcd)'/>
<dec f='linux/drivers/usb/core/hcd.c' l='2373' type='void usb_hcd_resume_root_hub(struct usb_hcd * )'/>
<use f='linux/drivers/usb/core/hcd.c' l='2373' c='usb_hcd_resume_root_hub'/>
<use f='linux/drivers/usb/core/hcd.c' l='2373' u='a'/>
<use f='linux/drivers/usb/core/hcd.c' l='2373' u='a'/>
<doc f='linux/drivers/usb/core/hcd.c' l='2353'>/**
 * usb_hcd_resume_root_hub - called by HCD to resume its root hub
 * @hcd: host controller for this root hub
 *
 * The USB host controller calls this function when its root hub is
 * suspended (with the remote wakeup feature enabled) and a remote
 * wakeup request is received.  The routine submits a workqueue request
 * to resume the root hub (that is, manage its downstream ports again).
 */</doc>
<use f='linux/drivers/usb/host/ehci-hub.c' l='208' u='c' c='ehci_adjust_port_wakeup_flags'/>
<use f='linux/drivers/usb/host/ehci-hcd.c' l='773' u='c' c='ehci_irq'/>
<use f='linux/drivers/usb/host/ohci-hub.c' l='404' u='c' c='ohci_root_hub_state_changes'/>
<use f='linux/drivers/usb/host/ohci-hcd.c' l='937' u='c' c='ohci_irq'/>
<use f='linux/drivers/usb/host/ohci-hcd.c' l='1143' u='c' c='ohci_resume'/>
<use f='linux/drivers/usb/host/uhci-hub.c' l='206' u='c' c='uhci_hub_status_data'/>
