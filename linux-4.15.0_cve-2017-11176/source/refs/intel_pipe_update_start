<dec f='linux/drivers/gpu/drm/i915/intel_drv.h' l='1922' type='void intel_pipe_update_start(const struct intel_crtc_state * new_crtc_state)'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12874' u='c' c='intel_begin_crtc_commit'/>
<def f='linux/drivers/gpu/drm/i915/intel_sprite.c' l='89' ll='174' type='void intel_pipe_update_start(const struct intel_crtc_state * new_crtc_state)'/>
<doc f='linux/drivers/gpu/drm/i915/intel_sprite.c' l='77'>/**
 * intel_pipe_update_start() - start update of a set of display registers
 * @new_crtc_state: the new crtc state
 *
 * Mark the start of an update to pipe registers that should be updated
 * atomically regarding vblank. If the next vblank will happens within
 * the next 100 us, this function waits until the vblank passes.
 *
 * After a successful call to this function, interrupts will be disabled
 * until a subsequent call to intel_pipe_update_end(). That is done to
 * avoid random delays.
 */</doc>
