<dec f='linux/include/linux/audit.h' l='124' type='void audit_log(struct audit_context * ctx, gfp_t gfp_mask, int type, const char * fmt)'/>
<doc f='linux/include/linux/audit.h' l='122'>/* Public API */</doc>
<use f='linux/kernel/audit.c' l='1562' u='c' c='audit_init'/>
<def f='linux/kernel/audit.c' l='2333' ll='2346' type='void audit_log(struct audit_context * ctx, gfp_t gfp_mask, int type, const char * fmt)'/>
<dec f='linux/kernel/audit.c' l='2351' type='void audit_log(struct audit_context * , gfp_t , int , const char * )'/>
<use f='linux/kernel/audit.c' l='2351' c='audit_log'/>
<use f='linux/kernel/audit.c' l='2351' u='a'/>
<use f='linux/kernel/audit.c' l='2351' u='a'/>
<doc f='linux/kernel/audit.c' l='2321'>/**
 * audit_log - Log an audit record
 * @ctx: audit context
 * @gfp_mask: type of allocation
 * @type: audit message type
 * @fmt: format string to use
 * @...: variable parameters matching the format string
 *
 * This is a convenience function that calls audit_log_start,
 * audit_log_vformat, and audit_log_end.  It may be called
 * in any context.
 */</doc>
<use f='linux/kernel/auditsc.c' l='2418' u='c' c='__audit_fanotify'/>
<use f='linux/net/core/dev.c' l='6644' u='c' c='__dev_set_promiscuity'/>
<use f='linux/net/netfilter/x_tables.c' l='1215' u='c' c='xt_replace_table'/>
<use f='linux/security/selinux/selinuxfs.c' l='147' u='c' c='sel_write_enforce'/>
<use f='linux/security/selinux/selinuxfs.c' l='274' u='c' c='sel_write_disable'/>
<use f='linux/security/selinux/selinuxfs.c' l='530' u='c' c='sel_write_load'/>
<use f='linux/security/selinux/ss/services.c' l='754' u='c' c='security_validtrans_handle_fail'/>
<use f='linux/security/selinux/ss/services.c' l='924' u='c' c='security_bounded_transition'/>
<use f='linux/security/selinux/ss/services.c' l='1536' u='c' c='compute_sid_handle_invalid_context'/>
<use f='linux/security/selinux/ss/services.c' l='2764' u='c' c='security_set_bools'/>
<use f='linux/security/selinux/ss/services.c' l='2898' u='c' c='security_sid_mls_copy'/>
