<dec f='linux/include/crypto/hash.h' l='409' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<doc f='linux/include/crypto/hash.h' l='398'>/**
 * crypto_ahash_setkey - set key for cipher handle
 * @tfm: cipher handle
 * @key: buffer holding the key
 * @keylen: length of the key in bytes
 *
 * The caller provided key is set for the ahash cipher. The cipher
 * handle must point to a keyed hash in order for this function to succeed.
 *
 * Return: 0 if the setting of the key was successful; &lt; 0 if an error occurred
 */</doc>
<def f='linux/crypto/ahash.c' l='192' ll='208' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<dec f='linux/crypto/ahash.c' l='209' type='int crypto_ahash_setkey(struct crypto_ahash * , const u8 * , unsigned int )'/>
<use f='linux/crypto/ahash.c' l='209' c='crypto_ahash_setkey'/>
<use f='linux/crypto/ahash.c' l='209' u='a'/>
<use f='linux/crypto/ahash.c' l='209' u='a'/>
<use f='linux/crypto/authenc.c' l='96' u='c' c='crypto_authenc_setkey'/>
<use f='linux/crypto/authencesn.c' l='78' u='c' c='crypto_authenc_esn_setkey'/>
<use f='linux/crypto/ccm.c' l='110' u='c' c='crypto_ccm_setkey'/>
<use f='linux/crypto/gcm.c' l='146' u='c' c='crypto_gcm_setkey'/>
<use f='linux/net/ipv6/ah6.c' l='704' u='c' c='ah6_init_state'/>
