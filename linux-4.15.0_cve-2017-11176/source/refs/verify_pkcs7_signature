<dec f='linux/include/linux/verification.h' l='33' type='int verify_pkcs7_signature(const void * data, size_t len, const void * raw_pkcs7, size_t pkcs7_len, struct key * trusted_keys, enum key_being_used_for usage, int (*)(void *, const void *, size_t, size_t) view_content, void * ctx)'/>
<def f='linux/certs/system_keyring.c' l='204' ll='264' type='int verify_pkcs7_signature(const void * data, size_t len, const void * raw_pkcs7, size_t pkcs7_len, struct key * trusted_keys, enum key_being_used_for usage, int (*)(void *, const void *, size_t, size_t) view_content, void * ctx)'/>
<dec f='linux/certs/system_keyring.c' l='265' type='int verify_pkcs7_signature(const void * , size_t , const void * , size_t , struct key * , enum key_being_used_for , int (*)(void *, const void *, size_t, size_t) , void * )'/>
<use f='linux/certs/system_keyring.c' l='265' c='verify_pkcs7_signature'/>
<use f='linux/certs/system_keyring.c' l='265' u='a'/>
<use f='linux/certs/system_keyring.c' l='265' u='a'/>
<doc f='linux/certs/system_keyring.c' l='192'>/**
 * verify_pkcs7_signature - Verify a PKCS#7-based signature on system data.
 * @data: The data to be verified (NULL if expecting internal data).
 * @len: Size of @data.
 * @raw_pkcs7: The PKCS#7 message that is the signature.
 * @pkcs7_len: The size of @raw_pkcs7.
 * @trusted_keys: Trusted keys to use (NULL for builtin trusted keys only,
 *					(void *)1UL for all trusted keys).
 * @usage: The use to which the key is being put.
 * @view_content: Callback to gain access to content.
 * @ctx: Context for callback.
 */</doc>
<use f='linux/net/wireless/reg.c' l='742' u='c' c='regdb_has_valid_signature'/>
