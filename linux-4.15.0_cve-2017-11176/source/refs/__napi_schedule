<dec f='linux/include/linux/netdevice.h' l='411' type='void __napi_schedule(struct napi_struct * n)'/>
<use f='linux/include/linux/netdevice.h' l='431' u='c' c='napi_schedule'/>
<use f='linux/include/linux/netdevice.h' l='450' u='c' c='napi_reschedule'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='2239' u='c' c='e100_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3808' u='c' c='e1000_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1826' u='c' c='e1000_intr_msi'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1906' u='c' c='e1000_intr'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1928' u='c' c='e1000_msix_other'/>
<use f='linux/drivers/net/ethernet/intel/e1000e/netdev.c' l='1985' u='c' c='e1000_intr_msix_rx'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='3627' u='c' c='nv_nic_irq'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='3660' u='c' c='nv_nic_irq_optimized'/>
<use f='linux/drivers/net/ethernet/realtek/8139too.c' l='2195' u='c' c='rtl8139_interrupt'/>
<def f='linux/net/core/dev.c' l='5274' ll='5281' type='void __napi_schedule(struct napi_struct * n)'/>
<dec f='linux/net/core/dev.c' l='5282' type='void __napi_schedule(struct napi_struct * )'/>
<use f='linux/net/core/dev.c' l='5282' c='__napi_schedule'/>
<use f='linux/net/core/dev.c' l='5282' u='a'/>
<use f='linux/net/core/dev.c' l='5282' u='a'/>
<use f='linux/net/core/dev.c' l='5378' u='c' c='napi_complete_done'/>
<use f='linux/net/core/dev.c' l='5428' u='c' c='busy_poll_stop'/>
<doc f='linux/net/core/dev.c' l='5267'>/**
 * __napi_schedule - schedule for receive
 * @n: entry to schedule
 *
 * The entry&apos;s receive function will be scheduled to run.
 * Consider using __napi_schedule_irqoff() if hard irqs are masked.
 */</doc>
