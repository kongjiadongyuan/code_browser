<dec f='linux/include/linux/key-type.h' l='108' type='int (*)(struct key *, struct key_preparsed_payload *)'/>
<offset>384</offset>
<doc f='linux/include/linux/key-type.h' l='103'>/* update a key of this type (optional)
	 * - this method should call key_payload_reserve() to recalculate the
	 *   quota consumption
	 * - the key must be locked against read when modifying
	 */</doc>
<use f='linux/security/keys/key.c' l='752' u='r' c='__key_update'/>
<use f='linux/security/keys/key.c' l='757' u='r' c='__key_update'/>
<use f='linux/security/keys/key.c' l='889' u='r' c='key_create_or_update'/>
<use f='linux/security/keys/key.c' l='904' u='r' c='key_create_or_update'/>
<use f='linux/security/keys/key.c' l='984' u='r' c='key_update'/>
<use f='linux/security/keys/key.c' l='1000' u='r' c='key_update'/>
<use f='linux/security/keys/request_key.c' l='377' u='r' c='construct_alloc_key'/>
<use f='linux/security/keys/user_defined.c' l='32' u='w'/>
<use f='linux/security/keys/user_defined.c' l='52' u='w'/>
