<dec f='linux/include/net/mac80211.h' l='4579' type='__le16 ieee80211_ctstoself_duration(struct ieee80211_hw * hw, struct ieee80211_vif * vif, size_t frame_len, const struct ieee80211_tx_info * frame_txctl)'/>
<doc f='linux/include/net/mac80211.h' l='4566'>/**
 * ieee80211_ctstoself_duration - Get the duration field for a CTS-to-self frame
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &amp;struct ieee80211_vif pointer from the add_interface callback.
 * @frame_len: the length of the frame that is going to be protected by the CTS-to-self.
 * @frame_txctl: &amp;struct ieee80211_tx_info of the frame.
 *
 * If the CTS-to-self is generated in firmware, but the host system must provide
 * the duration field, the low-level driver uses this function to receive
 * the duration field value in little-endian byteorder.
 *
 * Return: The duration.
 */</doc>
<use f='linux/net/mac80211/tx.c' l='4562' u='c' c='ieee80211_ctstoself_get'/>
<def f='linux/net/mac80211/util.c' l='200' ll='239' type='__le16 ieee80211_ctstoself_duration(struct ieee80211_hw * hw, struct ieee80211_vif * vif, size_t frame_len, const struct ieee80211_tx_info * frame_txctl)'/>
<dec f='linux/net/mac80211/util.c' l='240' type='__le16 ieee80211_ctstoself_duration(struct ieee80211_hw * , struct ieee80211_vif * , size_t , const struct ieee80211_tx_info * )'/>
<use f='linux/net/mac80211/util.c' l='240' c='ieee80211_ctstoself_duration'/>
<use f='linux/net/mac80211/util.c' l='240' u='a'/>
<use f='linux/net/mac80211/util.c' l='240' u='a'/>
