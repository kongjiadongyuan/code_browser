<dec f='linux/include/linux/random.h' l='39' type='int add_random_ready_callback(struct random_ready_callback * rdy)'/>
<use f='linux/crypto/drbg.c' l='1412' u='c' c='drbg_prepare_hrng'/>
<def f='linux/drivers/char/random.c' l='1564' ll='1592' type='int add_random_ready_callback(struct random_ready_callback * rdy)'/>
<dec f='linux/drivers/char/random.c' l='1593' type='int add_random_ready_callback(struct random_ready_callback * )'/>
<use f='linux/drivers/char/random.c' l='1593' c='add_random_ready_callback'/>
<use f='linux/drivers/char/random.c' l='1593' u='a'/>
<use f='linux/drivers/char/random.c' l='1593' u='a'/>
<doc f='linux/drivers/char/random.c' l='1556'>/*
 * Add a callback function that will be invoked when the nonblocking
 * pool is initialised.
 *
 * returns: 0 if callback is successfully added
 *	    -EALREADY if pool is already initialised (callback not called)
 *	    -ENOENT if module for callback is not alive
 */</doc>
<use f='linux/lib/vsprintf.c' l='1684' u='c' c='initialize_ptr_random'/>
