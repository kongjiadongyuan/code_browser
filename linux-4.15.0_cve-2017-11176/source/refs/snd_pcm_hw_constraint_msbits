<dec f='linux/include/sound/pcm.h' l='1009' type='int snd_pcm_hw_constraint_msbits(struct snd_pcm_runtime * runtime, unsigned int cond, unsigned int width, unsigned int msbits)'/>
<def f='linux/sound/core/pcm_lib.c' l='1418' ll='1428' type='int snd_pcm_hw_constraint_msbits(struct snd_pcm_runtime * runtime, unsigned int cond, unsigned int width, unsigned int msbits)'/>
<dec f='linux/sound/core/pcm_lib.c' l='1429' type='int snd_pcm_hw_constraint_msbits(struct snd_pcm_runtime * , unsigned int , unsigned int , unsigned int )'/>
<use f='linux/sound/core/pcm_lib.c' l='1429' c='snd_pcm_hw_constraint_msbits'/>
<use f='linux/sound/core/pcm_lib.c' l='1429' u='a'/>
<use f='linux/sound/core/pcm_lib.c' l='1429' u='a'/>
<doc f='linux/sound/core/pcm_lib.c' l='1404'>/**
 * snd_pcm_hw_constraint_msbits - add a hw constraint msbits rule
 * @runtime: PCM runtime instance
 * @cond: condition bits
 * @width: sample bits width
 * @msbits: msbits width
 *
 * This constraint will set the number of most significant bits (msbits) if a
 * sample format with the specified width has been select. If width is set to 0
 * the msbits will be set for any sample format with a width larger than the
 * specified msbits.
 *
 * Return: Zero if successful, or a negative error code on failure.
 */</doc>
