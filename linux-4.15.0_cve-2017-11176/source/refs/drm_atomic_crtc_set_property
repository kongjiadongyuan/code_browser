<dec f='linux/include/drm/drm_atomic.h' l='336' type='int drm_atomic_crtc_set_property(struct drm_crtc * crtc, struct drm_crtc_state * state, struct drm_property * property, uint64_t val)'/>
<def f='linux/drivers/gpu/drm/drm_atomic.c' l='449' ll='506' type='int drm_atomic_crtc_set_property(struct drm_crtc * crtc, struct drm_crtc_state * state, struct drm_property * property, uint64_t val)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic.c' l='507' type='int drm_atomic_crtc_set_property(struct drm_crtc * , struct drm_crtc_state * , struct drm_property * , uint64_t )'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='507' c='drm_atomic_crtc_set_property'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='507' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='507' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='1917' u='c' c='drm_atomic_set_property'/>
<doc f='linux/drivers/gpu/drm/drm_atomic.c' l='434'>/**
 * drm_atomic_crtc_set_property - set property on CRTC
 * @crtc: the drm CRTC to set a property on
 * @state: the state object to update with the new property value
 * @property: the property to set
 * @val: the new property value
 *
 * This function handles generic/core properties and calls out to driver&apos;s
 * &amp;drm_crtc_funcs.atomic_set_property for driver properties. To ensure
 * consistent behavior you must call this function rather than the driver hook
 * directly.
 *
 * RETURNS:
 * Zero on success, error code on failure
 */</doc>
