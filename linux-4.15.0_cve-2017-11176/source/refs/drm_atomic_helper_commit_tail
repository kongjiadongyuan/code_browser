<dec f='linux/include/drm/drm_atomic_helper.h' l='45' type='void drm_atomic_helper_commit_tail(struct drm_atomic_state * state)'/>
<def f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1306' ll='1321' type='void drm_atomic_helper_commit_tail(struct drm_atomic_state * old_state)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1322' type='void drm_atomic_helper_commit_tail(struct drm_atomic_state * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1322' c='drm_atomic_helper_commit_tail'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1322' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1322' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1367' u='c' c='commit_tail'/>
<doc f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1293'>/**
 * drm_atomic_helper_commit_tail - commit atomic update to hardware
 * @old_state: atomic state object with old state structures
 *
 * This is the default implementation for the
 * &amp;drm_mode_config_helper_funcs.atomic_commit_tail hook, for drivers
 * that do not support runtime_pm or do not need the CRTC to be
 * enabled to perform a commit. Otherwise, see
 * drm_atomic_helper_commit_tail_rpm().
 *
 * Note that the default ordering of how the various stages are called is to
 * match the legacy modeset helper library closest.
 */</doc>
