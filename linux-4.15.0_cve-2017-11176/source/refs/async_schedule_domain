<dec f='linux/include/linux/async.h' l='41' type='async_cookie_t async_schedule_domain(async_func_t func, void * data, struct async_domain * domain)'/>
<use f='linux/drivers/base/firmware_class.c' l='1628' u='c' c='dev_cache_fw_image'/>
<use f='linux/drivers/scsi/scsi_pm.c' l='153' u='c' c='scsi_bus_resume_common'/>
<use f='linux/drivers/scsi/sd.c' l='3416' u='c' c='sd_probe'/>
<def f='linux/kernel/async.c' l='229' ll='233' type='async_cookie_t async_schedule_domain(async_func_t func, void * data, struct async_domain * domain)'/>
<dec f='linux/kernel/async.c' l='234' type='async_cookie_t async_schedule_domain(async_func_t , void * , struct async_domain * )'/>
<use f='linux/kernel/async.c' l='234' c='async_schedule_domain'/>
<use f='linux/kernel/async.c' l='234' u='a'/>
<use f='linux/kernel/async.c' l='234' u='a'/>
<doc f='linux/kernel/async.c' l='217'>/**
 * async_schedule_domain - schedule a function for asynchronous execution within a certain domain
 * @func: function to execute asynchronously
 * @data: data pointer to pass to the function
 * @domain: the domain
 *
 * Returns an async_cookie_t that may be used for checkpointing later.
 * @domain may be used in the async_synchronize_*_domain() functions to
 * wait within a certain synchronization domain rather than globally.  A
 * synchronization domain is specified via @domain.  Note: This function
 * may be called from atomic or non-atomic contexts.
 */</doc>
