<dec f='linux/include/drm/drm_atomic_helper.h' l='120' type='void drm_atomic_helper_shutdown(struct drm_device * dev)'/>
<def f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2889' ll='2911' type='void drm_atomic_helper_shutdown(struct drm_device * dev)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2912' type='void drm_atomic_helper_shutdown(struct drm_device * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2912' c='drm_atomic_helper_shutdown'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2912' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2912' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2878'>/**
 * drm_atomic_helper_shutdown - shutdown all CRTC
 * @dev: DRM device
 *
 * This shuts down all CRTC, which is useful for driver unloading. Shutdown on
 * suspend should instead be handled with drm_atomic_helper_suspend(), since
 * that also takes a snapshot of the modeset state to be restored on resume.
 *
 * This is just a convenience wrapper around drm_atomic_helper_disable_all(),
 * and it is the atomic version of drm_crtc_force_disable_all().
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1404' u='c' c='i915_driver_unload'/>
