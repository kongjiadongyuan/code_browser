<dec f='linux/include/linux/buffer_head.h' l='225' type='int block_write_begin(struct address_space * mapping, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep, get_block_t * get_block)'/>
<use f='linux/fs/block_dev.c' l='584' u='c' c='blkdev_write_begin'/>
<def f='linux/fs/buffer.c' l='2085' ll='2105' type='int block_write_begin(struct address_space * mapping, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep, get_block_t * get_block)'/>
<dec f='linux/fs/buffer.c' l='2106' type='int block_write_begin(struct address_space * , loff_t , unsigned int , unsigned int , struct page ** , get_block_t * )'/>
<use f='linux/fs/buffer.c' l='2106' c='block_write_begin'/>
<use f='linux/fs/buffer.c' l='2106' u='a'/>
<use f='linux/fs/buffer.c' l='2106' u='a'/>
<use f='linux/fs/buffer.c' l='2446' u='c' c='cont_write_begin'/>
<doc f='linux/fs/buffer.c' l='2079'>/*
 * block_write_begin takes care of the basic task of block allocation and
 * bringing partial write blocks uptodate first.
 *
 * The filesystem needs to handle block truncation upon failure.
 */</doc>
