<dec f='linux/include/linux/fs.h' l='2494' type='struct block_device * blkdev_get_by_dev(dev_t dev, fmode_t mode, void * holder)'/>
<use f='linux/drivers/md/dm.c' l='623' u='c' c='open_table_device'/>
<use f='linux/drivers/md/md.c' l='2282' u='c' c='lock_rdev'/>
<def f='linux/fs/block_dev.c' l='1704' ll='1718' type='struct block_device * blkdev_get_by_dev(dev_t dev, fmode_t mode, void * holder)'/>
<dec f='linux/fs/block_dev.c' l='1719' type='struct block_device * blkdev_get_by_dev(dev_t , fmode_t , void * )'/>
<use f='linux/fs/block_dev.c' l='1719' c='blkdev_get_by_dev'/>
<use f='linux/fs/block_dev.c' l='1719' u='a'/>
<use f='linux/fs/block_dev.c' l='1719' u='a'/>
<doc f='linux/fs/block_dev.c' l='1682'>/**
 * blkdev_get_by_dev - open a block device by device number
 * @dev: device number of block device to open
 * @mode: FMODE_* mask
 * @holder: exclusive holder identifier
 *
 * Open the blockdevice described by device number @dev.  @mode and
 * @holder are identical to blkdev_get().
 *
 * Use it ONLY if you really do not have anything better - i.e. when
 * you are behind a truly sucky interface and all you are given is a
 * device number.  _Never_ to be used for internal purposes.  If you
 * ever need it - reconsider your API.
 *
 * On success, the returned block_device has reference count of one.
 *
 * CONTEXT:
 * Might sleep.
 *
 * RETURNS:
 * Pointer to block_device on success, ERR_PTR(-errno) on failure.
 */</doc>
<use f='linux/fs/ext4/super.c' l='795' u='c' c='ext4_blkdev_get'/>
<use f='linux/kernel/power/swap.c' l='1516' u='c' c='swsusp_check'/>
