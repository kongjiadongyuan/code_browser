<dec f='linux/include/linux/sbitmap.h' l='366' type='void sbitmap_queue_resize(struct sbitmap_queue * sbq, unsigned int depth)'/>
<doc f='linux/include/linux/sbitmap.h' l='357'>/**
 * sbitmap_queue_resize() - Resize a &amp;struct sbitmap_queue.
 * @sbq: Bitmap queue to resize.
 * @depth: New number of bits to resize to.
 *
 * Like sbitmap_resize(), this doesn&apos;t reallocate anything. It has to do
 * some extra work on the &amp;struct sbitmap_queue, so it&apos;s not safe to just
 * resize the underlying &amp;struct sbitmap.
 */</doc>
<use f='linux/block/blk-mq-tag.c' l='456' u='c' c='blk_mq_tag_update_depth'/>
<use f='linux/block/kyber-iosched.c' l='204' u='c' c='kyber_adjust_rw_depth'/>
<use f='linux/block/kyber-iosched.c' l='248' u='c' c='kyber_adjust_other_depth'/>
<use f='linux/block/kyber-iosched.c' l='323' u='c' c='kyber_queue_data_alloc'/>
<def f='linux/lib/sbitmap.c' l='330' ll='346' type='void sbitmap_queue_resize(struct sbitmap_queue * sbq, unsigned int depth)'/>
<dec f='linux/lib/sbitmap.c' l='347' type='void sbitmap_queue_resize(struct sbitmap_queue * , unsigned int )'/>
<use f='linux/lib/sbitmap.c' l='347' c='sbitmap_queue_resize'/>
<use f='linux/lib/sbitmap.c' l='347' u='a'/>
<use f='linux/lib/sbitmap.c' l='347' u='a'/>
