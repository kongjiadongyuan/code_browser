<dec f='linux/include/linux/timekeeping.h' l='33' type='time64_t ktime_get_seconds()'/>
<use f='linux/kernel/cgroup/cpuset.c' l='1419' u='c' c='fmeter_update'/>
<def f='linux/kernel/time/timekeeping.c' l='897' ll='903' type='time64_t ktime_get_seconds()'/>
<dec f='linux/kernel/time/timekeeping.c' l='904' type='time64_t ktime_get_seconds()'/>
<use f='linux/kernel/time/timekeeping.c' l='904' c='ktime_get_seconds'/>
<use f='linux/kernel/time/timekeeping.c' l='904' u='a'/>
<use f='linux/kernel/time/timekeeping.c' l='904' u='a'/>
<doc f='linux/kernel/time/timekeeping.c' l='888'>/**
 * ktime_get_seconds - Get the seconds portion of CLOCK_MONOTONIC
 *
 * Returns the seconds portion of CLOCK_MONOTONIC with a single non
 * serialized read. tk-&gt;ktime_sec is of type &apos;unsigned long&apos; so this
 * works on both 32 and 64 bit systems. On 32 bit systems the readout
 * covers ~136 years of uptime which should be enough to prevent
 * premature wrap arounds.
 */</doc>
<use f='linux/net/mac80211/sta_info.c' l='358' u='c' c='sta_info_alloc'/>
<use f='linux/net/mac80211/sta_info.c' l='2100' u='c' c='sta_set_sinfo'/>
