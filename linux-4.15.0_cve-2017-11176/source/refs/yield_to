<dec f='linux/include/linux/sched.h' l='1409' type='int yield_to(struct task_struct * p, bool preempt)'/>
<def f='linux/kernel/sched/core.c' l='4946' ll='5002' type='int yield_to(struct task_struct * p, bool preempt)'/>
<dec f='linux/kernel/sched/core.c' l='5003' type='int yield_to(struct task_struct * , bool )'/>
<use f='linux/kernel/sched/core.c' l='5003' c='yield_to'/>
<use f='linux/kernel/sched/core.c' l='5003' u='a'/>
<use f='linux/kernel/sched/core.c' l='5003' u='a'/>
<doc f='linux/kernel/sched/core.c' l='4931'>/**
 * yield_to - yield the current processor to another thread in
 * your thread group, or accelerate that thread toward the
 * processor it&apos;s on.
 * @p: target task
 * @preempt: whether task preemption is allowed or not
 *
 * It&apos;s the caller&apos;s job to ensure that the target task struct
 * can&apos;t go away on us before we can do any checks.
 *
 * Return:
 *	true (&gt;0) if we indeed boosted the target task.
 *	false (0) if we failed to boost the target.
 *	-ESRCH if there&apos;s no task to yield to.
 */</doc>
