<dec f='linux/include/net/mac80211.h' l='4719' type='void ieee80211_get_key_rx_seq(struct ieee80211_key_conf * keyconf, int tid, struct ieee80211_key_seq * seq)'/>
<doc f='linux/include/net/mac80211.h' l='4703'>/**
 * ieee80211_get_key_rx_seq - get key RX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @tid: The TID, or -1 for the management frame value (CCMP/GCMP only);
 *	the value on TID 0 is also used for non-QoS frames. For
 *	CMAC, only TID 0 is valid.
 * @seq: buffer to receive the sequence data
 *
 * This function allows a driver to retrieve the current RX IV/PNs
 * for the given key. It must not be called if IV checking is done
 * by the device and not by mac80211.
 *
 * Note that this function may only be called when no RX processing
 * can be done concurrently.
 */</doc>
<def f='linux/net/mac80211/key.c' l='983' ll='1033' type='void ieee80211_get_key_rx_seq(struct ieee80211_key_conf * keyconf, int tid, struct ieee80211_key_seq * seq)'/>
<dec f='linux/net/mac80211/key.c' l='1034' type='void ieee80211_get_key_rx_seq(struct ieee80211_key_conf * , int , struct ieee80211_key_seq * )'/>
<use f='linux/net/mac80211/key.c' l='1034' c='ieee80211_get_key_rx_seq'/>
<use f='linux/net/mac80211/key.c' l='1034' u='a'/>
<use f='linux/net/mac80211/key.c' l='1034' u='a'/>
