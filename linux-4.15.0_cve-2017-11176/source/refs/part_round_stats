<dec f='linux/include/linux/genhd.h' l='390' type='void part_round_stats(struct request_queue * q, int cpu, struct hd_struct * part)'/>
<use f='linux/block/bio.c' l='1704' u='c' c='generic_start_io_acct'/>
<use f='linux/block/bio.c' l='1720' u='c' c='generic_end_io_acct'/>
<doc f='linux/include/linux/genhd.h' l='389'>/* block/blk-core.c */</doc>
<def f='linux/block/blk-core.c' l='1606' ll='1631' type='void part_round_stats(struct request_queue * q, int cpu, struct hd_struct * part)'/>
<dec f='linux/block/blk-core.c' l='1632' type='void part_round_stats(struct request_queue * , int , struct hd_struct * )'/>
<use f='linux/block/blk-core.c' l='1632' c='part_round_stats'/>
<use f='linux/block/blk-core.c' l='1632' u='a'/>
<use f='linux/block/blk-core.c' l='1632' u='a'/>
<use f='linux/block/blk-core.c' l='2606' u='c' c='blk_account_io_done'/>
<use f='linux/block/blk-core.c' l='2666' u='c' c='blk_account_io_start'/>
<doc f='linux/block/blk-core.c' l='1589'>/**
 * part_round_stats() - Round off the performance stats on a struct disk_stats.
 * @q: target block queue
 * @cpu: cpu number for stats access
 * @part: target partition
 *
 * The average IO queue length and utilisation statistics are maintained
 * by observing the current state of the queue length and the amount of
 * time it has been in this state for.
 *
 * Normally, that accounting is done on IO completion, but that can result
 * in more than a second&apos;s worth of IO being accounted for within any one
 * second, leading to &gt;100% utilisation.  To deal with that, we call this
 * function to do a round-off before returning the results when reading
 * /proc/diskstats.  This accounts immediately for all queue usage up to
 * the current jiffies and restarts the counters again.
 */</doc>
<use f='linux/block/blk-merge.c' l='637' u='c' c='blk_account_io_merge'/>
<use f='linux/block/genhd.c' l='1300' u='c' c='diskstats_show'/>
<use f='linux/block/partition-generic.c' l='121' u='c' c='part_stat_show'/>
<use f='linux/drivers/md/dm.c' l='520' u='c' c='start_io_acct'/>
