<dec f='linux/include/linux/migrate.h' l='80' type='int migrate_page_move_mapping(struct address_space * mapping, struct page * newpage, struct page * page, struct buffer_head * head, enum migrate_mode mode, int extra_count)'/>
<use f='linux/fs/aio.c' l='418' u='c' c='aio_migratepage'/>
<def f='linux/mm/migrate.c' l='435' ll='563' type='int migrate_page_move_mapping(struct address_space * mapping, struct page * newpage, struct page * page, struct buffer_head * head, enum migrate_mode mode, int extra_count)'/>
<dec f='linux/mm/migrate.c' l='564' type='int migrate_page_move_mapping(struct address_space * , struct page * , struct page * , struct buffer_head * , enum migrate_mode , int )'/>
<use f='linux/mm/migrate.c' l='564' c='migrate_page_move_mapping'/>
<use f='linux/mm/migrate.c' l='564' u='a'/>
<use f='linux/mm/migrate.c' l='564' u='a'/>
<use f='linux/mm/migrate.c' l='746' u='c' c='migrate_page'/>
<use f='linux/mm/migrate.c' l='776' u='c' c='buffer_migrate_page'/>
<doc f='linux/mm/migrate.c' l='427'>/*
 * Replace the page in the mapping.
 *
 * The number of remaining references must be:
 * 1 for anonymous pages without a mapping
 * 2 for pages with a mapping
 * 3 for pages with a mapping and PagePrivate/PagePrivate2 set.
 */</doc>
