<dec f='linux/include/linux/workqueue.h' l='618' type='long work_on_cpu(int cpu, long (*)(void *) fn, void * arg)'/>
<use f='linux/arch/x86/kernel/acpi/cstate.c' l='136' u='c' c='acpi_processor_ffh_cstate_probe'/>
<use f='linux/drivers/acpi/processor_throttling.c' l='916' u='c' c='call_on_cpu'/>
<use f='linux/drivers/pci/pci-driver.c' l='359' u='c' c='pci_call_probe'/>
<def f='linux/kernel/workqueue.c' l='4774' ll='4783' type='long work_on_cpu(int cpu, long (*)(void *) fn, void * arg)'/>
<dec f='linux/kernel/workqueue.c' l='4784' type='long work_on_cpu(int , long (*)(void *) , void * )'/>
<use f='linux/kernel/workqueue.c' l='4784' c='work_on_cpu'/>
<use f='linux/kernel/workqueue.c' l='4784' u='a'/>
<use f='linux/kernel/workqueue.c' l='4784' u='a'/>
<use f='linux/kernel/workqueue.c' l='4803' u='c' c='work_on_cpu_safe'/>
<doc f='linux/kernel/workqueue.c' l='4763'>/**
 * work_on_cpu - run a function in thread context on a particular cpu
 * @cpu: the cpu to run on
 * @fn: the function to run
 * @arg: the function arg
 *
 * It is up to the caller to ensure that the cpu doesn&apos;t go offline.
 * The caller must not hold any locks which would prevent @fn from completing.
 *
 * Return: The value @fn returns.
 */</doc>
