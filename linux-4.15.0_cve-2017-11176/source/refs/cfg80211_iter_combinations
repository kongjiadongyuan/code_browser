<dec f='linux/include/net/cfg80211.h' l='6056' type='int cfg80211_iter_combinations(struct wiphy * wiphy, struct iface_combination_params * params, void (*)(const struct ieee80211_iface_combination *, void *) iter, void * data)'/>
<doc f='linux/include/net/cfg80211.h' l='6044'>/**
 * cfg80211_iter_combinations - iterate over matching combinations
 *
 * @wiphy: the wiphy
 * @params: the interface combinations parameter
 * @iter: function to call for each matching combination
 * @data: pointer to pass to iter function
 *
 * This function can be called by the driver to check what possible
 * combinations it fits in at a given moment, e.g. for channel switching
 * purposes.
 */</doc>
<use f='linux/net/mac80211/util.c' l='3463' u='c' c='ieee80211_max_num_channels'/>
<def f='linux/net/wireless/util.c' l='1550' ll='1656' type='int cfg80211_iter_combinations(struct wiphy * wiphy, struct iface_combination_params * params, void (*)(const struct ieee80211_iface_combination *, void *) iter, void * data)'/>
<dec f='linux/net/wireless/util.c' l='1657' type='int cfg80211_iter_combinations(struct wiphy * , struct iface_combination_params * , void (*)(const struct ieee80211_iface_combination *, void *) , void * )'/>
<use f='linux/net/wireless/util.c' l='1657' c='cfg80211_iter_combinations'/>
<use f='linux/net/wireless/util.c' l='1657' u='a'/>
<use f='linux/net/wireless/util.c' l='1657' u='a'/>
<use f='linux/net/wireless/util.c' l='1672' u='c' c='cfg80211_check_combinations'/>
