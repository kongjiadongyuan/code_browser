<dec f='linux/sound/pci/hda/hda_jack.h' l='84' type='int snd_hda_jack_add_kctl(struct hda_codec * codec, hda_nid_t nid, const char * name, bool phantom_jack)'/>
<def f='linux/sound/pci/hda/hda_jack.c' l='386' ll='412' type='int snd_hda_jack_add_kctl(struct hda_codec * codec, hda_nid_t nid, const char * name, bool phantom_jack)'/>
<dec f='linux/sound/pci/hda/hda_jack.c' l='413' type='int snd_hda_jack_add_kctl(struct hda_codec * , hda_nid_t , const char * , bool )'/>
<use f='linux/sound/pci/hda/hda_jack.c' l='413' c='snd_hda_jack_add_kctl'/>
<use f='linux/sound/pci/hda/hda_jack.c' l='413' u='a'/>
<use f='linux/sound/pci/hda/hda_jack.c' l='413' u='a'/>
<use f='linux/sound/pci/hda/hda_jack.c' l='440' u='c' c='add_jack_kctl'/>
<doc f='linux/sound/pci/hda/hda_jack.c' l='376'>/**
 * snd_hda_jack_add_kctl - Add a kctl for the given pin
 * @codec: the HDA codec
 * @nid: pin NID to assign
 * @name: string name for the jack
 * @phantom_jack: flag to deal as a phantom jack
 *
 * This assigns a jack-detection kctl to the given pin.  The kcontrol
 * will have the given name and index.
 */</doc>
