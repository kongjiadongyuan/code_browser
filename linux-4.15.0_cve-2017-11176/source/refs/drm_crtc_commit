<use f='linux/include/drm/drm_connector.h' l='361'/>
<use f='linux/include/drm/drm_plane.h' l='132'/>
<use f='linux/include/drm/drm_crtc.h' l='263'/>
<def f='linux/include/drm/drm_atomic.h' l='69' ll='146'/>
<use f='linux/include/drm/drm_atomic.h' l='257'/>
<use f='linux/include/drm/drm_atomic.h' l='279' c='drm_crtc_commit_get'/>
<use f='linux/include/drm/drm_atomic.h' l='279' c='drm_crtc_commit_get'/>
<use f='linux/include/drm/drm_atomic.h' l='292' c='drm_crtc_commit_put'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='39' c='__drm_crtc_commit_free'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='40' c='__drm_crtc_commit_free'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='40' c='__drm_crtc_commit_free'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='40' c='__drm_crtc_commit_free'/>
<size>144</size>
<doc f='linux/include/drm/drm_atomic.h' l='33'>/**
 * struct drm_crtc_commit - track modeset commits on a CRTC
 *
 * This structure is used to track pending modeset changes and atomic commit on
 * a per-CRTC basis. Since updating the list should never block this structure
 * is reference counted to allow waiters to safely wait on an event to complete,
 * without holding any locks.
 *
 * It has 3 different events in total to allow a fine-grained synchronization
 * between outstanding updates::
 *
 *	atomic commit thread			hardware
 *
 * 	write new state into hardware	----&gt;	...
 * 	signal hw_done
 * 						switch to new state on next
 * 	...					v/hblank
 *
 *	wait for buffers to show up		...
 *
 *	...					send completion irq
 *						irq handler signals flip_done
 *	cleanup old buffers
 *
 * 	signal cleanup_done
 *
 * 	wait for flip_done		&lt;----
 * 	clean up atomic state
 *
 * The important bit to know is that cleanup_done is the terminal event, but the
 * ordering between flip_done and hw_done is entirely up to the specific driver
 * and modeset state change.
 *
 * For an implementation of how to use this look at
 * drm_atomic_helper_setup_commit() from the atomic helper library.
 */</doc>
<mbr r='drm_crtc_commit::crtc' o='0' t='struct drm_crtc *'/>
<mbr r='drm_crtc_commit::ref' o='64' t='struct kref'/>
<mbr r='drm_crtc_commit::flip_done' o='128' t='struct completion'/>
<mbr r='drm_crtc_commit::hw_done' o='384' t='struct completion'/>
<mbr r='drm_crtc_commit::cleanup_done' o='640' t='struct completion'/>
<mbr r='drm_crtc_commit::commit_entry' o='896' t='struct list_head'/>
<mbr r='drm_crtc_commit::event' o='1024' t='struct drm_pending_vblank_event *'/>
<mbr r='drm_crtc_commit::abort_completion' o='1088' t='bool'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1279' c='drm_atomic_helper_wait_for_flip_done'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1604' c='stall_checks'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1604' c='stall_checks'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1648' c='release_crtc_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1655' c='init_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1665' c='crtc_or_fake_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1739' c='drm_atomic_helper_setup_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1845' c='drm_atomic_helper_wait_for_dependencies'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1933' c='drm_atomic_helper_commit_hw_done'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1978' c='drm_atomic_helper_commit_cleanup_done'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2370' c='drm_atomic_helper_swap_state'/>
<size>144</size>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='4241' c='intel_has_pending_fb_unpin'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='4244' c='intel_has_pending_fb_unpin'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='4244' c='intel_has_pending_fb_unpin'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='4244' c='intel_has_pending_fb_unpin'/>
<size>144</size>
