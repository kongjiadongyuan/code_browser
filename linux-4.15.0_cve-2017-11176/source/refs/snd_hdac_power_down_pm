<dec f='linux/include/sound/hdaudio.h' l='170' type='int snd_hdac_power_down_pm(struct hdac_device * codec)'/>
<def f='linux/sound/hda/hdac_device.c' l='615' ll='620' type='int snd_hdac_power_down_pm(struct hdac_device * codec)'/>
<dec f='linux/sound/hda/hdac_device.c' l='621' type='int snd_hdac_power_down_pm(struct hdac_device * )'/>
<use f='linux/sound/hda/hdac_device.c' l='621' c='snd_hdac_power_down_pm'/>
<use f='linux/sound/hda/hdac_device.c' l='621' u='a'/>
<use f='linux/sound/hda/hdac_device.c' l='621' u='a'/>
<doc f='linux/sound/hda/hdac_device.c' l='606'>/**
 * snd_hdac_power_down_pm - power down the codec
 * @codec: the codec object
 *
 * Like snd_hdac_power_up_pm(), this function is used in a recursive
 * code path like init code which may be called by PM suspend/resume again.
 *
 * Returns zero if successful, or a negative error code.
 */</doc>
<use f='linux/sound/hda/hdac_regmap.c' l='32' u='c' c='codec_pm_unlock'/>
<use f='linux/sound/hda/hdac_regmap.c' l='449' u='c' c='snd_hdac_regmap_write_raw'/>
<use f='linux/sound/hda/hdac_regmap.c' l='475' u='c' c='__snd_hdac_regmap_read_raw'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='76' macro='1' u='c' c='codec_exec_verb'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='3380' macro='1' u='c' c='snd_hda_check_amp_list_power'/>
