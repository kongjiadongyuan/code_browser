<dec f='linux/include/linux/string.h' l='91' type='char * strsep(char ** , const char * )'/>
<dec f='include/string.h' l='439' type='char * strsep(char **__restrict __stringp, const char *__restrict __delim)'/>
<doc f='include/string.h' l='437'>/* Return the next DELIM-delimited token from *STRINGP,
   terminating it with a &apos;\0&apos;, and update *STRINGP to point past it.  */</doc>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='498' u='c' c='asymmetric_lookup_restriction'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='508' u='c' c='asymmetric_lookup_restriction'/>
<use f='linux/drivers/input/mouse/psmouse-base.c' l='519' u='c' c='psmouse_matches_pnp_id'/>
<use f='linux/drivers/iommu/amd_iommu_init.c' l='2906' u='c' c='parse_ivrs_acpihid'/>
<use f='linux/drivers/net/netconsole.c' l='902' u='c' c='init_netconsole'/>
<use f='linux/drivers/scsi/scsi_devinfo.c' l='535' u='c' c='scsi_dev_info_list_add_str'/>
<use f='linux/drivers/scsi/scsi_devinfo.c' l='536' u='c' c='scsi_dev_info_list_add_str'/>
<use f='linux/drivers/scsi/scsi_devinfo.c' l='538' u='c' c='scsi_dev_info_list_add_str'/>
<use f='linux/drivers/scsi/scsi_devinfo.c' l='540' u='c' c='scsi_dev_info_list_add_str'/>
<use f='linux/drivers/video/fbdev/core/fbcon.c' l='443' u='c' c='fb_console_setup'/>
<use f='linux/drivers/video/fbdev/efifb.c' l='91' u='c' c='efifb_setup'/>
<use f='linux/fs/autofs4/inode.c' l='151' u='c' c='parse_options'/>
<use f='linux/fs/debugfs/inode.c' l='81' u='c' c='debugfs_parse_options'/>
<use f='linux/fs/devpts/inode.c' l='244' u='c' c='parse_mount_options'/>
<use f='linux/fs/ext4/super.c' l='1913' u='c' c='parse_options'/>
<use f='linux/fs/fat/inode.c' l='1143' u='c' c='parse_options'/>
<use f='linux/fs/hugetlbfs/inode.c' l='1090' u='c' c='hugetlbfs_parse_options'/>
<use f='linux/fs/isofs/inode.c' l='366' u='c' c='parse_options'/>
<use f='linux/fs/kernfs/dir.c' l='867' u='c' c='kernfs_walk_ns'/>
<use f='linux/fs/nfs/nfsroot.c' l='194' u='c' c='root_nfs_parse_options'/>
<use f='linux/fs/nfs/super.c' l='1080' u='c' c='nfs_parse_security_flavors'/>
<use f='linux/fs/nfs/super.c' l='1234' u='c' c='nfs_parse_mount_options'/>
<use f='linux/fs/proc/root.c' l='48' u='c' c='proc_parse_options'/>
<use f='linux/fs/ramfs/inode.c' l='197' u='c' c='ramfs_parse_options'/>
<use f='linux/fs/tracefs/inode.c' l='176' u='c' c='tracefs_parse_options'/>
<use f='linux/init/main.c' l='748' u='c' c='initcall_blacklist'/>
<use f='linux/kernel/cgroup/cgroup-v1.c' l='933' u='c' c='parse_cgroupfs_options'/>
<use f='linux/kernel/cgroup/cgroup-v1.c' l='1301' u='c' c='cgroup_no_v1'/>
<use f='linux/kernel/cgroup/cgroup.c' l='1730' u='c' c='parse_cgroup_root_flags'/>
<use f='linux/kernel/cgroup/cgroup.c' l='3085' u='c' c='cgroup_subtree_control_write'/>
<use f='linux/kernel/cgroup/cgroup.c' l='5633' u='c' c='cgroup_disable'/>
<use f='linux/kernel/events/core.c' l='8354' u='c' c='perf_event_parse_addr_filter'/>
<use f='linux/kernel/seccomp.c' l='1142' u='c' c='seccomp_actions_logged_from_names'/>
<use f='linux/kernel/trace/blktrace.c' l='1716' u='c' c='blk_trace_str2mask'/>
<use f='linux/kernel/trace/trace.c' l='4442' u='c' c='apply_trace_boot_options'/>
<use f='linux/kernel/trace/trace_events.c' l='814' u='c' c='ftrace_set_clr_event'/>
<use f='linux/kernel/trace/trace_events.c' l='3055' u='c' c='early_enable_events'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='229' u='c' c='trigger_process_regex'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='632' u='c' c='event_trigger_callback'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='655' u='c' c='event_trigger_callback'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='731' u='c' c='set_trigger_filter'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1341' u='c' c='event_enable_trigger_func'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1345' u='c' c='event_enable_trigger_func'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1349' u='c' c='event_enable_trigger_func'/>
<use f='linux/kernel/trace/trace_events_trigger.c' l='1398' u='c' c='event_enable_trigger_func'/>
<def f='linux/lib/string.c' l='590' ll='603' type='char * strsep(char ** s, const char * ct)'/>
<dec f='linux/lib/string.c' l='604' type='char * strsep(char ** , const char * )'/>
<use f='linux/lib/string.c' l='604' c='strsep'/>
<use f='linux/lib/string.c' l='604' u='a'/>
<use f='linux/lib/string.c' l='604' u='a'/>
<doc f='linux/lib/string.c' l='579'>/**
 * strsep - Split a string into tokens
 * @s: The string to be searched
 * @ct: The characters to search for
 *
 * strsep() updates @s to point after the token, ready for the next call.
 *
 * It returns empty tokens, too, behaving exactly like the libc function
 * of that name. In fact, it was stolen from glibc2 and de-fancy-fied.
 * Same semantics, slimmer shape. ;)
 */</doc>
<use f='linux/net/ipv4/tcp_cong.c' l='304' u='c' c='tcp_set_allowed_congestion_control'/>
<use f='linux/net/ipv4/tcp_cong.c' l='317' u='c' c='tcp_set_allowed_congestion_control'/>
<use f='linux/scripts/mod/sumversion.c' l='442' u='c' c='get_src_version'/>
<use f='linux/security/selinux/hooks.c' l='1062' u='c' c='selinux_parse_opts_str'/>
