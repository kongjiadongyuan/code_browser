<def f='linux/include/linux/rcupdate.h' l='707' ll='714' type='void rcu_read_lock_bh()'/>
<doc f='linux/include/linux/rcupdate.h' l='690'>/**
 * rcu_read_lock_bh() - mark the beginning of an RCU-bh critical section
 *
 * This is equivalent of rcu_read_lock(), but to be used when updates
 * are being done using call_rcu_bh() or synchronize_rcu_bh(). Since
 * both call_rcu_bh() and synchronize_rcu_bh() consider completion of a
 * softirq handler to be a quiescent state, a process in RCU read-side
 * critical section must be protected by disabling softirqs. Read-side
 * critical sections in interrupt context can use just rcu_read_lock(),
 * though this should at least be commented to avoid confusing people
 * reading the code.
 *
 * Note that rcu_read_lock_bh() and the matching rcu_read_unlock_bh()
 * must occur in the same context, for example, it is illegal to invoke
 * rcu_read_unlock_bh() from one task if the matching rcu_read_lock_bh()
 * was invoked from some other task.
 */</doc>
<use f='linux/include/net/ndisc.h' l='386' u='c' c='__ipv6_neigh_lookup'/>
<use f='linux/include/net/ndisc.h' l='400' u='c' c='__ipv6_confirm_neigh'/>
<use f='linux/include/net/arp.h' l='33' u='c' c='__ipv4_neigh_lookup'/>
<use f='linux/include/net/arp.h' l='46' u='c' c='__ipv4_confirm_neigh'/>
<use f='linux/net/core/dev.c' l='3458' u='c' c='__dev_queue_xmit'/>
<use f='linux/net/core/neighbour.c' l='443' u='c' c='neigh_lookup'/>
<use f='linux/net/core/neighbour.c' l='466' u='c' c='neigh_lookup_nodev'/>
<use f='linux/net/core/neighbour.c' l='1873' u='c' c='neightbl_fill_info'/>
<use f='linux/net/core/neighbour.c' l='2336' u='c' c='neigh_dump_table'/>
<use f='linux/net/core/neighbour.c' l='2452' u='c' c='neigh_for_each'/>
<use f='linux/net/core/neighbour.c' l='2515' u='c' c='neigh_xmit'/>
<use f='linux/net/core/neighbour.c' l='2732' u='c' c='neigh_seq_start'/>
<use f='linux/net/ipv4/fib_semantics.c' l='1729' u='c' c='fib_good_nh'/>
<use f='linux/net/ipv4/ip_output.c' l='220' u='c' c='ip_finish_output2'/>
<use f='linux/net/ipv6/addrconf.c' l='1091' u='c' c='ipv6_add_addr'/>
<use f='linux/net/ipv6/addrconf.c' l='4304' u='c' c='addrconf_verify_rtnl'/>
<use f='linux/net/ipv6/addrconf.c' l='4381' u='c' c='addrconf_verify_rtnl'/>
<use f='linux/net/ipv6/addrconf.c' l='5597' u='c' c='ipv6_ifa_notify'/>
<use f='linux/net/ipv6/ip6_fib.c' l='2343' u='c' c='ipv6_route_seq_start'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='89' u='c' c='fl_lookup'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='248' u='c' c='fl6_sock_lookup'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='453' u='c' c='mem_check'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='493' u='c' c='ipv6_flowlabel_opt_get'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='562' u='c' c='ipv6_flowlabel_opt'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='612' u='c' c='ipv6_flowlabel_opt'/>
<use f='linux/net/ipv6/ip6_flowlabel.c' l='757' u='c' c='ip6fl_seq_start'/>
<use f='linux/net/ipv6/ip6_output.c' l='113' u='c' c='ip6_finish_output2'/>
<use f='linux/net/ipv6/route.c' l='634' u='c' c='rt6_check_neigh'/>
<use f='linux/net/netfilter/nfnetlink_log.c' l='128' u='c' c='instance_lookup_get'/>
<use f='linux/net/netfilter/nfnetlink_log.c' l='1014' u='c' c='seq_start'/>
