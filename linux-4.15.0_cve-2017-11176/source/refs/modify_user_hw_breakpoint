<dec f='linux/include/linux/hw_breakpoint.h' l='55' type='int modify_user_hw_breakpoint(struct perf_event * bp, struct perf_event_attr * attr)'/>
<doc f='linux/include/linux/hw_breakpoint.h' l='53'>/* FIXME: only change from the attr, and don&apos;t unregister */</doc>
<use f='linux/arch/x86/kernel/ptrace.c' l='593' u='c' c='ptrace_modify_breakpoint'/>
<use f='linux/arch/x86/kernel/ptrace.c' l='698' u='c' c='ptrace_set_breakpoint_addr'/>
<def f='linux/kernel/events/hw_breakpoint.c' l='433' ll='476' type='int modify_user_hw_breakpoint(struct perf_event * bp, struct perf_event_attr * attr)'/>
<dec f='linux/kernel/events/hw_breakpoint.c' l='477' type='int modify_user_hw_breakpoint(struct perf_event * , struct perf_event_attr * )'/>
<use f='linux/kernel/events/hw_breakpoint.c' l='477' c='modify_user_hw_breakpoint'/>
<use f='linux/kernel/events/hw_breakpoint.c' l='477' u='a'/>
<use f='linux/kernel/events/hw_breakpoint.c' l='477' u='a'/>
<doc f='linux/kernel/events/hw_breakpoint.c' l='426'>/**
 * modify_user_hw_breakpoint - modify a user-space hardware breakpoint
 * @bp: the breakpoint structure to modify
 * @attr: new breakpoint attributes
 * @triggered: callback to trigger when we hit the breakpoint
 * @tsk: pointer to &apos;task_struct&apos; of the process to which the address belongs
 */</doc>
