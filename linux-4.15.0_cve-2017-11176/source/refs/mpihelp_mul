<dec f='linux/lib/mpi/mpi-internal.h' l='206' type='int mpihelp_mul(mpi_ptr_t prodp, mpi_ptr_t up, mpi_size_t usize, mpi_ptr_t vp, mpi_size_t vsize, mpi_limb_t * _result)'/>
<use f='linux/lib/mpi/mpi-pow.c' l='234' u='c' c='mpi_powm'/>
<use f='linux/lib/mpi/mpih-mul.c' l='383' u='c' c='mpihelp_mul_karatsuba_case'/>
<def f='linux/lib/mpi/mpih-mul.c' l='439' ll='497' type='int mpihelp_mul(mpi_ptr_t prodp, mpi_ptr_t up, mpi_size_t usize, mpi_ptr_t vp, mpi_size_t vsize, mpi_limb_t * _result)'/>
<doc f='linux/lib/mpi/mpih-mul.c' l='424'>/* Multiply the natural numbers u (pointed to by UP, with USIZE limbs)
 * and v (pointed to by VP, with VSIZE limbs), and store the result at
 * PRODP.  USIZE + VSIZE limbs are always stored, but if the input
 * operands are normalized.  Return the most significant limb of the
 * result.
 *
 * NOTE: The space pointed to by PRODP is overwritten before finished
 * with U and V, so overlap is an error.
 *
 * Argument constraints:
 * 1. USIZE &gt;= VSIZE.
 * 2. PRODP != UP and PRODP != VP, i.e. the destination
 *    must be distinct from the multiplier and the multiplicand.
 */</doc>
