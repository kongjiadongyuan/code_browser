<def f='linux/include/net/cfg80211.h' l='764' ll='787'/>
<use f='linux/include/net/cfg80211.h' l='2948'/>
<size>400</size>
<doc f='linux/include/net/cfg80211.h' l='734'>/**
 * struct cfg80211_ap_settings - AP configuration
 *
 * Used to configure an AP interface.
 *
 * @chandef: defines the channel to use
 * @beacon: beacon data
 * @beacon_interval: beacon interval
 * @dtim_period: DTIM period
 * @ssid: SSID to be used in the BSS (note: may be %NULL if not provided from
 *	user space)
 * @ssid_len: length of @ssid
 * @hidden_ssid: whether to hide the SSID in Beacon/Probe Response frames
 * @crypto: crypto settings
 * @privacy: the BSS uses privacy
 * @auth_type: Authentication type (algorithm)
 * @smps_mode: SMPS mode
 * @inactivity_timeout: time in seconds to determine station&apos;s inactivity.
 * @p2p_ctwindow: P2P CT Window
 * @p2p_opp_ps: P2P opportunistic PS
 * @acl: ACL configuration used by the drivers which has support for
 *	MAC address based access control
 * @pbss: If set, start as a PCP instead of AP. Relevant for DMG
 *	networks.
 * @beacon_rate: bitrate to be used for beacons
 * @ht_cap: HT capabilities (or %NULL if HT isn&apos;t enabled)
 * @vht_cap: VHT capabilities (or %NULL if VHT isn&apos;t enabled)
 * @ht_required: stations must support HT
 * @vht_required: stations must support VHT
 */</doc>
<mbr r='cfg80211_ap_settings::chandef' o='0' t='struct cfg80211_chan_def'/>
<mbr r='cfg80211_ap_settings::beacon' o='192' t='struct cfg80211_beacon_data'/>
<mbr r='cfg80211_ap_settings::beacon_interval' o='960' t='int'/>
<mbr r='cfg80211_ap_settings::dtim_period' o='992' t='int'/>
<mbr r='cfg80211_ap_settings::ssid' o='1024' t='const u8 *'/>
<mbr r='cfg80211_ap_settings::ssid_len' o='1088' t='size_t'/>
<mbr r='cfg80211_ap_settings::hidden_ssid' o='1152' t='enum nl80211_hidden_ssid'/>
<mbr r='cfg80211_ap_settings::crypto' o='1216' t='struct cfg80211_crypto_settings'/>
<mbr r='cfg80211_ap_settings::privacy' o='1856' t='bool'/>
<mbr r='cfg80211_ap_settings::auth_type' o='1888' t='enum nl80211_auth_type'/>
<mbr r='cfg80211_ap_settings::smps_mode' o='1920' t='enum nl80211_smps_mode'/>
<mbr r='cfg80211_ap_settings::inactivity_timeout' o='1952' t='int'/>
<mbr r='cfg80211_ap_settings::p2p_ctwindow' o='1984' t='u8'/>
<mbr r='cfg80211_ap_settings::p2p_opp_ps' o='1992' t='bool'/>
<mbr r='cfg80211_ap_settings::acl' o='2048' t='const struct cfg80211_acl_data *'/>
<mbr r='cfg80211_ap_settings::pbss' o='2112' t='bool'/>
<mbr r='cfg80211_ap_settings::beacon_rate' o='2144' t='struct cfg80211_bitrate_mask'/>
<mbr r='cfg80211_ap_settings::ht_cap' o='3008' t='const struct ieee80211_ht_cap *'/>
<mbr r='cfg80211_ap_settings::vht_cap' o='3072' t='const struct ieee80211_vht_cap *'/>
<mbr r='cfg80211_ap_settings::ht_required' o='3136' t='bool'/>
<mbr r='cfg80211_ap_settings::vht_required' o='3144' t='bool'/>
<use f='linux/net/mac80211/cfg.c' l='874' c='ieee80211_start_ap'/>
<size>400</size>
<use f='linux/net/wireless/trace.h' l='476' c='trace_rdev_start_ap'/>
<use f='linux/net/wireless/trace.h' l='476' c='trace_rdev_start_ap'/>
<use f='linux/net/wireless/trace.h' l='476' c='trace_rdev_start_ap_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='476' c='trace_rdev_start_ap_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='476' c='register_trace_rdev_start_ap'/>
<use f='linux/net/wireless/trace.h' l='476' c='register_trace_prio_rdev_start_ap'/>
<use f='linux/net/wireless/trace.h' l='476' c='unregister_trace_rdev_start_ap'/>
<use f='linux/net/wireless/trace.h' l='476' c='check_trace_callback_type_rdev_start_ap'/>
<use f='linux/net/wireless/rdev-ops.h' l='140' c='rdev_start_ap'/>
<size>400</size>
<use f='linux/net/wireless/nl80211.c' l='3817' c='nl80211_check_ap_rate_selectors'/>
<use f='linux/net/wireless/nl80211.c' l='3838' c='nl80211_calculate_ap_params'/>
<use f='linux/net/wireless/nl80211.c' l='3861' c='nl80211_get_ap_channel'/>
<use f='linux/net/wireless/nl80211.c' l='3935' c='nl80211_start_ap'/>
<size>400</size>
