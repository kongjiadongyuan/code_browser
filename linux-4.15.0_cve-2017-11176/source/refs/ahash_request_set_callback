<def f='linux/include/crypto/hash.h' l='626' ll='634' type='void ahash_request_set_callback(struct ahash_request * req, u32 flags, crypto_completion_t compl, void * data)'/>
<use f='linux/arch/x86/power/hibernate_64.c' l='240' u='c' c='get_e820_md5'/>
<doc f='linux/include/crypto/hash.h' l='601'>/**
 * ahash_request_set_callback() - set asynchronous callback function
 * @req: request handle
 * @flags: specify zero or an ORing of the flags
 *	   CRYPTO_TFM_REQ_MAY_BACKLOG the request queue may back log and
 *	   increase the wait queue beyond the initial maximum size;
 *	   CRYPTO_TFM_REQ_MAY_SLEEP the request processing may sleep
 * @compl: callback function pointer to be registered with the request handle
 * @data: The data pointer refers to memory that is not used by the kernel
 *	  crypto API, but provided to the callback function for it to use. Here,
 *	  the caller can provide a reference to memory the callback function can
 *	  operate on. As the callback function is invoked asynchronously to the
 *	  related functionality, it may need to access data structures of the
 *	  related functionality which can be referenced using this pointer. The
 *	  callback function can access the memory via the &quot;data&quot; field in the
 *	  &amp;crypto_async_request data structure provided to the callback function.
 *
 * This function allows setting the callback function that is triggered once
 * the cipher operation completes.
 *
 * The callback function is registered with the &amp;ahash_request handle and
 * must comply with the following template::
 *
 *	void callback_function(struct crypto_async_request *req, int error)
 */</doc>
<use f='linux/crypto/ahash.c' l='291' u='c' c='ahash_restore_req'/>
<use f='linux/crypto/authenc.c' l='156' u='c' c='crypto_authenc_genicv'/>
<use f='linux/crypto/authenc.c' l='303' u='c' c='crypto_authenc_decrypt'/>
<use f='linux/crypto/authencesn.c' l='162' u='c' c='crypto_authenc_esn_genicv'/>
<use f='linux/crypto/authencesn.c' l='325' u='c' c='crypto_authenc_esn_decrypt'/>
<use f='linux/crypto/ccm.c' l='210' u='c' c='crypto_ccm_auth'/>
<use f='linux/crypto/gcm.c' l='232' u='c' c='gcm_hash_update'/>
<use f='linux/crypto/gcm.c' l='256' u='c' c='gcm_hash_len'/>
<use f='linux/crypto/gcm.c' l='428' u='c' c='gcm_hash'/>
<use f='linux/net/ipv4/tcp.c' l='3387' u='c' c='__tcp_alloc_md5sig_pool'/>
<use f='linux/net/ipv6/ah6.c' l='438' u='c' c='ah6_output'/>
<use f='linux/net/ipv6/ah6.c' l='624' u='c' c='ah6_input'/>
