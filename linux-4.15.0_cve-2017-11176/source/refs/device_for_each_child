<dec f='linux/include/linux/device.h' l='1129' type='int device_for_each_child(struct device * dev, void * data, int (*)(struct device *, void *) fn)'/>
<use f='linux/drivers/base/core.c' l='114' u='c' c='device_is_dependent'/>
<use f='linux/drivers/base/core.c' l='143' u='c' c='device_reorder_to_tail'/>
<def f='linux/drivers/base/core.c' l='2111' ll='2126' type='int device_for_each_child(struct device * parent, void * data, int (*)(struct device *, void *) fn)'/>
<dec f='linux/drivers/base/core.c' l='2127' type='int device_for_each_child(struct device * , void * , int (*)(struct device *, void *) )'/>
<use f='linux/drivers/base/core.c' l='2127' c='device_for_each_child'/>
<use f='linux/drivers/base/core.c' l='2127' u='a'/>
<use f='linux/drivers/base/core.c' l='2127' u='a'/>
<use f='linux/drivers/base/core.c' l='2224' u='c' c='device_check_offline'/>
<use f='linux/drivers/base/core.c' l='2249' u='c' c='device_offline'/>
<doc f='linux/drivers/base/core.c' l='2099'>/**
 * device_for_each_child - device child iterator.
 * @parent: parent struct device.
 * @fn: function to be called for each device.
 * @data: data for the callback.
 *
 * Iterate over @parent&apos;s child devices, and call @fn for each,
 * passing it @data.
 *
 * We check the return of @fn each time. If it returns anything
 * other than 0, we break out and return that value.
 */</doc>
<use f='linux/drivers/base/power/main.c' l='248' u='c' c='dpm_wait_for_children'/>
<use f='linux/drivers/base/power/runtime.c' l='224' u='c' c='pm_runtime_set_memalloc_noio'/>
<use f='linux/drivers/gpu/drm/drm_mipi_dsi.c' l='315' u='c' c='mipi_dsi_host_unregister'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='599' u='c' c='i2c_check_mux_parents'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='614' u='c' c='i2c_check_mux_children'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='631' u='c' c='i2c_check_addr_busy'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='1501' u='c' c='i2c_del_adapter'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='1502' u='c' c='i2c_del_adapter'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='1726' u='c' c='i2c_clients_command'/>
<use f='linux/drivers/i2c/i2c-smbus.c' l='111' u='c' c='smbus_alert'/>
<use f='linux/drivers/pci/pcie/aer/aerdrv_core.c' l='441' u='c' c='find_aer_service'/>
<use f='linux/drivers/pci/pcie/portdrv_core.c' l='384' u='c' c='pcie_port_device_suspend'/>
<use f='linux/drivers/pci/pcie/portdrv_core.c' l='406' u='c' c='pcie_port_device_resume'/>
<use f='linux/drivers/pci/pcie/portdrv_core.c' l='426' u='c' c='pcie_port_device_remove'/>
<use f='linux/drivers/pci/pcie/portdrv_pci.c' l='225' u='c' c='pcie_portdrv_err_resume'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3248' u='c' c='scsi_target_block'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='3274' u='c' c='scsi_target_unblock'/>
<use f='linux/drivers/scsi/scsi_transport_spi.c' l='414' u='c' c='store_spi_revalidate'/>
