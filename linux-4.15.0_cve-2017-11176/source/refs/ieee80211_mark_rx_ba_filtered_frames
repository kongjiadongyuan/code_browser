<dec f='linux/include/net/mac80211.h' l='5433' type='void ieee80211_mark_rx_ba_filtered_frames(struct ieee80211_sta * pubsta, u8 tid, u16 ssn, u64 filtered, u16 received_mpdus)'/>
<doc f='linux/include/net/mac80211.h' l='5419'>/**
 * ieee80211_mark_rx_ba_filtered_frames - move RX BA window and mark filtered
 * @pubsta: station struct
 * @tid: the session&apos;s TID
 * @ssn: starting sequence number of the bitmap, all frames before this are
 *	assumed to be out of the window after the call
 * @filtered: bitmap of filtered frames, BIT(0) is the @ssn entry etc.
 * @received_mpdus: number of received mpdus in firmware
 *
 * This function moves the BA window and releases all frames before @ssn, and
 * marks frames marked in the bitmap as having been filtered. Afterwards, it
 * checks if any frames in the window starting from @ssn can now be released
 * (in case they were only waiting for frames that were filtered.)
 */</doc>
<def f='linux/net/mac80211/rx.c' l='3494' ll='3570' type='void ieee80211_mark_rx_ba_filtered_frames(struct ieee80211_sta * pubsta, u8 tid, u16 ssn, u64 filtered, u16 received_mpdus)'/>
<dec f='linux/net/mac80211/rx.c' l='3571' type='void ieee80211_mark_rx_ba_filtered_frames(struct ieee80211_sta * , u8 , u16 , u64 , u16 )'/>
<use f='linux/net/mac80211/rx.c' l='3571' c='ieee80211_mark_rx_ba_filtered_frames'/>
<use f='linux/net/mac80211/rx.c' l='3571' u='a'/>
<use f='linux/net/mac80211/rx.c' l='3571' u='a'/>
