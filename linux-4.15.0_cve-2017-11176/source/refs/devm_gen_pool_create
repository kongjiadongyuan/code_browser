<dec f='linux/include/linux/genalloc.h' l='154' type='struct gen_pool * devm_gen_pool_create(struct device * dev, int min_alloc_order, int nid, const char * name)'/>
<def f='linux/lib/genalloc.c' l='700' ll='736' type='struct gen_pool * devm_gen_pool_create(struct device * dev, int min_alloc_order, int nid, const char * name)'/>
<dec f='linux/lib/genalloc.c' l='737' type='struct gen_pool * devm_gen_pool_create(struct device * , int , int , const char * )'/>
<use f='linux/lib/genalloc.c' l='737' c='devm_gen_pool_create'/>
<use f='linux/lib/genalloc.c' l='737' u='a'/>
<use f='linux/lib/genalloc.c' l='737' u='a'/>
<doc f='linux/lib/genalloc.c' l='689'>/**
 * devm_gen_pool_create - managed gen_pool_create
 * @dev: device that provides the gen_pool
 * @min_alloc_order: log base 2 of number of bytes each bitmap bit represents
 * @nid: node selector for allocated gen_pool, %NUMA_NO_NODE for all nodes
 * @name: name of a gen_pool or NULL, identifies a particular gen_pool on device
 *
 * Create a new special memory pool that can be used to manage special purpose
 * memory not managed by the regular kmalloc/kfree interface. The pool will be
 * automatically destroyed by the device management code.
 */</doc>
