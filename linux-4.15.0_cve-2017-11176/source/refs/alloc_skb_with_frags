<dec f='linux/include/linux/skbuff.h' l='986' type='struct sk_buff * alloc_skb_with_frags(unsigned long header_len, unsigned long data_len, int max_page_order, int * errcode, gfp_t gfp_mask)'/>
<def f='linux/net/core/skbuff.c' l='5122' ll='5186' type='struct sk_buff * alloc_skb_with_frags(unsigned long header_len, unsigned long data_len, int max_page_order, int * errcode, gfp_t gfp_mask)'/>
<dec f='linux/net/core/skbuff.c' l='5187' type='struct sk_buff * alloc_skb_with_frags(unsigned long , unsigned long , int , int * , gfp_t )'/>
<use f='linux/net/core/skbuff.c' l='5187' c='alloc_skb_with_frags'/>
<use f='linux/net/core/skbuff.c' l='5187' u='a'/>
<use f='linux/net/core/skbuff.c' l='5187' u='a'/>
<doc f='linux/net/core/skbuff.c' l='5111'>/**
 * alloc_skb_with_frags - allocate skb with page frags
 *
 * @header_len: size of linear part
 * @data_len: needed length in frags
 * @max_page_order: max page order desired.
 * @errcode: pointer to error code if any
 * @gfp_mask: allocation mask
 *
 * This can be used to allocate a paged skb, given a maximal order for frags.
 */</doc>
<use f='linux/net/core/sock.c' l='2075' u='c' c='sock_alloc_send_pskb'/>
<use f='linux/net/ipv4/tcp_input.c' l='4535' u='c' c='tcp_send_rcvq'/>
