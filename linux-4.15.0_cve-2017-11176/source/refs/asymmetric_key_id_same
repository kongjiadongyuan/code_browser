<dec f='linux/include/keys/asymmetric-type.h' l='63' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='114' u='c' c='find_asymmetric_key'/>
<def f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='160' ll='168' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * kid1, const struct asymmetric_key_id * kid2)'/>
<dec f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='169' type='bool asymmetric_key_id_same(const struct asymmetric_key_id * , const struct asymmetric_key_id * )'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='169' c='asymmetric_key_id_same'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='169' u='a'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='169' u='a'/>
<use f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='257' u='r' c='asymmetric_key_cmp'/>
<doc f='linux/crypto/asymmetric_keys/asymmetric_type.c' l='156'>/**
 * asymmetric_key_id_same - Return true if two asymmetric keys IDs are the same.
 * @kid_1, @kid_2: The key IDs to compare
 */</doc>
<use f='linux/crypto/asymmetric_keys/pkcs7_verify.c' l='145' u='c' c='pkcs7_find_key'/>
<use f='linux/crypto/asymmetric_keys/pkcs7_verify.c' l='236' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux/crypto/asymmetric_keys/pkcs7_verify.c' l='247' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux/crypto/asymmetric_keys/pkcs7_verify.c' l='261' u='c' c='pkcs7_verify_sig_chain'/>
<use f='linux/crypto/asymmetric_keys/restrict.c' l='118' u='c' c='match_either_id'/>
<use f='linux/crypto/asymmetric_keys/restrict.c' l='119' u='c' c='match_either_id'/>
<use f='linux/crypto/asymmetric_keys/restrict.c' l='186' u='c' c='key_or_keyring_common'/>
<use f='linux/crypto/asymmetric_keys/x509_public_key.c' l='121' u='c' c='x509_check_for_self_signed'/>
<use f='linux/crypto/asymmetric_keys/x509_public_key.c' l='122' u='c' c='x509_check_for_self_signed'/>
