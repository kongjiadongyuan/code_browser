<dec f='linux/include/linux/slab.h' l='640' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<doc f='linux/include/linux/slab.h' l='632'>/*
 * kmalloc_track_caller is a special version of kmalloc that records the
 * calling function of the routine calling it for slab leak tracking instead
 * of just the calling function (confusing, eh?).
 * It&apos;s useful when the call to kmalloc comes from a widely-used standard
 * allocator where we care about the real place the memory allocation
 * request comes from.
 */</doc>
<use f='linux/lib/kasprintf.c' l='25' macro='1' u='c' c='kvasprintf'/>
<use f='linux/mm/slab_common.c' l='1407' macro='1' u='c' c='__do_krealloc'/>
<def f='linux/mm/slub.c' l='4277' ll='4296' type='void * __kmalloc_track_caller(size_t size, gfp_t gfpflags, unsigned long caller)'/>
<use f='linux/mm/util.c' l='56' macro='1' u='c' c='kstrdup'/>
<use f='linux/mm/util.c' l='98' macro='1' u='c' c='kstrndup'/>
<use f='linux/mm/util.c' l='118' macro='1' u='c' c='kmemdup'/>
<use f='linux/mm/util.c' l='138' macro='1' u='c' c='kmemdup_nul'/>
<use f='linux/mm/util.c' l='164' macro='1' u='c' c='memdup_user'/>
<use f='linux/mm/util.c' l='223' macro='1' u='c' c='memdup_user_nul'/>
