<dec f='linux/include/linux/netdevice.h' l='2448' type='struct net_device * __dev_get_by_name(struct net * net, const char * name)'/>
<use f='linux/net/core/dev.c' l='637' u='c' c='netdev_boot_base'/>
<def f='linux/net/core/dev.c' l='736' ll='746' type='struct net_device * __dev_get_by_name(struct net * net, const char * name)'/>
<dec f='linux/net/core/dev.c' l='747' type='struct net_device * __dev_get_by_name(struct net * , const char * )'/>
<use f='linux/net/core/dev.c' l='747' c='__dev_get_by_name'/>
<use f='linux/net/core/dev.c' l='747' u='a'/>
<use f='linux/net/core/dev.c' l='747' u='a'/>
<use f='linux/net/core/dev.c' l='1102' u='c' c='__dev_alloc_name'/>
<use f='linux/net/core/dev.c' l='1156' u='c' c='dev_get_valid_name'/>
<use f='linux/net/core/dev.c' l='8387' u='c' c='dev_change_net_namespace'/>
<doc f='linux/net/core/dev.c' l='724'>/**
 *	__dev_get_by_name	- find a device by its name
 *	@net: the applicable net namespace
 *	@name: name to find
 *
 *	Find an interface by name. Must be called under RTNL semaphore
 *	or @dev_base_lock. If the name is found a pointer to the device
 *	is returned. If the name is not found then %NULL is returned. The
 *	reference counters are not incremented so the caller must be
 *	careful with locks.
 */</doc>
<use f='linux/net/core/dev_ioctl.c' l='247' u='c' c='dev_ifsioc'/>
<use f='linux/net/core/ethtool.c' l='2552' u='c' c='dev_ethtool'/>
<use f='linux/net/core/fib_rules.c' l='477' u='c' c='fib_nl_newrule'/>
<use f='linux/net/core/fib_rules.c' l='487' u='c' c='fib_nl_newrule'/>
<use f='linux/net/core/netpoll.c' l='671' u='c' c='netpoll_setup'/>
<use f='linux/net/core/rtnetlink.c' l='2416' u='c' c='rtnl_setlink'/>
<use f='linux/net/core/rtnetlink.c' l='2510' u='c' c='rtnl_dellink'/>
<use f='linux/net/core/rtnetlink.c' l='2647' u='c' c='rtnl_newlink'/>
<use f='linux/net/core/rtnetlink.c' l='2902' u='c' c='rtnl_getlink'/>
<use f='linux/net/ipv4/arp.c' l='1210' u='c' c='arp_ioctl'/>
<use f='linux/net/ipv4/devinet.c' l='1017' u='c' c='devinet_ioctl'/>
<use f='linux/net/ipv4/fib_frontend.c' l='522' u='c' c='rtentry_to_fib_config'/>
<use f='linux/net/ipv4/ipmr.c' l='403' u='c' c='ipmr_del_tunnel'/>
<use f='linux/net/ipv4/ipmr.c' l='449' u='c' c='ipmr_new_tunnel'/>
<use f='linux/net/ipv4/ipmr.c' l='478' u='c' c='ipmr_new_tunnel'/>
<use f='linux/net/ipv6/addrconf.c' l='2775' u='c' c='addrconf_set_dstaddr'/>
