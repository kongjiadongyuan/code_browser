<dec f='linux/include/linux/nvram.h' l='8' type='unsigned char __nvram_read_byte(int i)'/>
<def f='linux/drivers/char/nvram.c' l='142' ll='145' type='unsigned char __nvram_read_byte(int i)'/>
<dec f='linux/drivers/char/nvram.c' l='146' type='unsigned char __nvram_read_byte(int )'/>
<use f='linux/drivers/char/nvram.c' l='146' c='__nvram_read_byte'/>
<use f='linux/drivers/char/nvram.c' l='146' u='a'/>
<use f='linux/drivers/char/nvram.c' l='146' u='a'/>
<use f='linux/drivers/char/nvram.c' l='154' u='c' c='nvram_read_byte'/>
<use f='linux/drivers/char/nvram.c' l='234' u='c' c='nvram_read'/>
<use f='linux/drivers/char/nvram.c' l='384' u='c' c='nvram_proc_read'/>
<use f='linux/drivers/char/nvram.c' l='480' u='c' c='pc_check_checksum'/>
<use f='linux/drivers/char/nvram.c' l='481' u='c' c='pc_check_checksum'/>
<use f='linux/drivers/char/nvram.c' l='482' u='c' c='pc_check_checksum'/>
<use f='linux/drivers/char/nvram.c' l='492' u='c' c='pc_set_checksum'/>
<doc f='linux/drivers/char/nvram.c' l='131'>/*
 * These functions are provided to be called internally or by other parts of
 * the kernel. It&apos;s up to the caller to ensure correct checksum before reading
 * or after writing (needs to be done only once).
 *
 * It is worth noting that these functions all access bytes of general
 * purpose memory in the NVRAM - that is to say, they all add the
 * NVRAM_FIRST_BYTE offset.  Pass them offsets into NVRAM as if you did not
 * know about the RTC cruft.
 */</doc>
<doc f='linux/include/linux/nvram.h' l='7'>/* __foo is foo without grabbing the rtc_lock - get it yourself */</doc>
