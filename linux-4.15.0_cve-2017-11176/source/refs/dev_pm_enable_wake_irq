<dec f='linux/include/linux/pm_wakeirq.h' l='23' type='void dev_pm_enable_wake_irq(struct device * dev)'/>
<def f='linux/drivers/base/power/wakeirq.c' l='234' ll='240' type='void dev_pm_enable_wake_irq(struct device * dev)'/>
<dec f='linux/drivers/base/power/wakeirq.c' l='241' type='void dev_pm_enable_wake_irq(struct device * )'/>
<use f='linux/drivers/base/power/wakeirq.c' l='241' c='dev_pm_enable_wake_irq'/>
<use f='linux/drivers/base/power/wakeirq.c' l='241' u='a'/>
<use f='linux/drivers/base/power/wakeirq.c' l='241' u='a'/>
<doc f='linux/drivers/base/power/wakeirq.c' l='222'>/**
 * dev_pm_enable_wake_irq - Enable device wake-up interrupt
 * @dev: Device
 *
 * Optionally called from the bus code or the device driver for
 * runtime_resume() to override the PM runtime core managed wake-up
 * interrupt handling to enable the wake-up interrupt.
 *
 * Note that for runtime_suspend()) the wake-up interrupts
 * should be unconditionally enabled unlike for suspend()
 * that is conditional.
 */</doc>
