<dec f='linux/include/linux/blkdev.h' l='1192' type='int bdev_stack_limits(struct queue_limits * t, struct block_device * bdev, sector_t offset)'/>
<def f='linux/block/blk-settings.c' l='685' ll='693' type='int bdev_stack_limits(struct queue_limits * t, struct block_device * bdev, sector_t start)'/>
<dec f='linux/block/blk-settings.c' l='694' type='int bdev_stack_limits(struct queue_limits * , struct block_device * , sector_t )'/>
<use f='linux/block/blk-settings.c' l='694' c='bdev_stack_limits'/>
<use f='linux/block/blk-settings.c' l='694' u='a'/>
<use f='linux/block/blk-settings.c' l='694' u='a'/>
<use f='linux/block/blk-settings.c' l='711' u='c' c='disk_stack_limits'/>
<doc f='linux/block/blk-settings.c' l='674'>/**
 * bdev_stack_limits - adjust queue limits for stacked drivers
 * @t:	the stacking driver limits (top device)
 * @bdev:  the component block_device (bottom)
 * @start:  first data sector within component device
 *
 * Description:
 *    Merges queue limits for a top device and a block_device.  Returns
 *    0 if alignment didn&apos;t change.  Returns -1 if adding the bottom
 *    device caused misalignment.
 */</doc>
<use f='linux/drivers/md/dm-table.c' l='484' u='c' c='dm_set_device_limits'/>
