<dec f='linux/include/net/cfg80211.h' l='5478' type='void cfg80211_port_authorized(struct net_device * dev, const u8 * bssid, gfp_t gfp)'/>
<doc f='linux/include/net/cfg80211.h' l='5464'>/**
 * cfg80211_port_authorized - notify cfg80211 of successful security association
 *
 * @dev: network device
 * @bssid: the BSSID of the AP
 * @gfp: allocation flags
 *
 * This function should be called by a driver that supports 4 way handshake
 * offload after a security association was successfully established (i.e.,
 * the 4 way handshake was completed successfully). The call to this function
 * should be preceded with a call to cfg80211_connect_result(),
 * cfg80211_connect_done(), cfg80211_connect_bss() or cfg80211_roamed() to
 * indicate the 802.11 association.
 */</doc>
<def f='linux/net/wireless/sme.c' l='982' ll='1008' type='void cfg80211_port_authorized(struct net_device * dev, const u8 * bssid, gfp_t gfp)'/>
<dec f='linux/net/wireless/sme.c' l='1009' type='void cfg80211_port_authorized(struct net_device * , const u8 * , gfp_t )'/>
<use f='linux/net/wireless/sme.c' l='1009' c='cfg80211_port_authorized'/>
<use f='linux/net/wireless/sme.c' l='1009' u='a'/>
<use f='linux/net/wireless/sme.c' l='1009' u='a'/>
