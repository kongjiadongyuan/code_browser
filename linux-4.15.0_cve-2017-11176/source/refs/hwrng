<def f='linux/include/linux/hw_random.h' l='38' ll='52'/>
<use f='linux/include/linux/hw_random.h' l='40'/>
<use f='linux/include/linux/hw_random.h' l='41'/>
<use f='linux/include/linux/hw_random.h' l='42'/>
<use f='linux/include/linux/hw_random.h' l='43'/>
<use f='linux/include/linux/hw_random.h' l='44'/>
<use f='linux/include/linux/hw_random.h' l='57' c='hwrng_register'/>
<use f='linux/include/linux/hw_random.h' l='58' c='devm_hwrng_register'/>
<use f='linux/include/linux/hw_random.h' l='60' c='hwrng_unregister'/>
<use f='linux/include/linux/hw_random.h' l='61' c='devm_hwrng_unregister'/>
<use f='linux/drivers/char/hw_random/core.c' l='30'/>
<use f='linux/drivers/char/hw_random/core.c' l='53' c='hwrng_init'/>
<use f='linux/drivers/char/hw_random/core.c' l='56' c='rng_get_data'/>
<use f='linux/drivers/char/hw_random/core.c' l='64' c='add_early_randomness'/>
<use f='linux/drivers/char/hw_random/core.c' l='78' c='cleanup_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='78' c='cleanup_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='78' c='cleanup_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='78' c='cleanup_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='86' c='set_current_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='114' c='get_current_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='116' c='get_current_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='129' c='put_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='141' c='hwrng_init'/>
<use f='linux/drivers/char/hw_random/core.c' l='182' c='rng_get_data'/>
<use f='linux/drivers/char/hw_random/core.c' l='207' c='rng_dev_read'/>
<use f='linux/drivers/char/hw_random/core.c' l='303' c='enable_best_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='305' c='enable_best_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='305' c='enable_best_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='305' c='enable_best_rng'/>
<use f='linux/drivers/char/hw_random/core.c' l='319' c='hwrng_attr_current_store'/>
<use f='linux/drivers/char/hw_random/core.c' l='347' c='hwrng_attr_current_show'/>
<use f='linux/drivers/char/hw_random/core.c' l='364' c='hwrng_attr_available_show'/>
<use f='linux/drivers/char/hw_random/core.c' l='421' c='hwrng_fillfn'/>
<use f='linux/drivers/char/hw_random/core.c' l='453' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='456' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='456' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='475' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='475' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='475' c='hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='513' c='hwrng_unregister'/>
<use f='linux/drivers/char/hw_random/core.c' l='534' c='devm_hwrng_release'/>
<use f='linux/drivers/char/hw_random/core.c' l='539' c='devm_hwrng_match'/>
<use f='linux/drivers/char/hw_random/core.c' l='547' c='devm_hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='549' c='devm_hwrng_register'/>
<use f='linux/drivers/char/hw_random/core.c' l='568' c='devm_hwrng_unregister'/>
<size>120</size>
<doc f='linux/include/linux/hw_random.h' l='20'>/**
 * struct hwrng - Hardware Random Number Generator driver
 * @name:		Unique RNG name.
 * @init:		Initialization callback (can be NULL).
 * @cleanup:		Cleanup callback (can be NULL).
 * @data_present:	Callback to determine if data is available
 *			on the RNG. If NULL, it is assumed that
 *			there is always data available.  *OBSOLETE*
 * @data_read:		Read data from the RNG device.
 *			Returns the number of lower random bytes in &quot;data&quot;.
 *			Must not be NULL.    *OBSOLETE*
 * @read:		New API. drivers can fill up to max bytes of data
 *			into the buffer. The buffer is aligned for any type
 *			and max is a multiple of 4 and &gt;= 32 bytes.
 * @priv:		Private data, for use by the RNG driver.
 * @quality:		Estimation of true entropy in RNG&apos;s bitstream
 *			(per mill).
 */</doc>
<mbr r='hwrng::name' o='0' t='const char *'/>
<mbr r='hwrng::init' o='64' t='int (*)(struct hwrng *)'/>
<mbr r='hwrng::cleanup' o='128' t='void (*)(struct hwrng *)'/>
<mbr r='hwrng::data_present' o='192' t='int (*)(struct hwrng *, int)'/>
<mbr r='hwrng::data_read' o='256' t='int (*)(struct hwrng *, u32 *)'/>
<mbr r='hwrng::read' o='320' t='int (*)(struct hwrng *, void *, size_t, bool)'/>
<mbr r='hwrng::priv' o='384' t='unsigned long'/>
<mbr r='hwrng::quality' o='448' t='unsigned short'/>
<mbr r='hwrng::list' o='512' t='struct list_head'/>
<mbr r='hwrng::ref' o='640' t='struct kref'/>
<mbr r='hwrng::cleanup_done' o='704' t='struct completion'/>
<use f='linux/drivers/char/hw_random/via-rng.c' l='87' c='via_rng_data_present'/>
<use f='linux/drivers/char/hw_random/via-rng.c' l='120' c='via_rng_data_read'/>
<use f='linux/drivers/char/hw_random/via-rng.c' l='129' c='via_rng_init'/>
<use f='linux/drivers/char/hw_random/via-rng.c' l='187'/>
<size>120</size>
