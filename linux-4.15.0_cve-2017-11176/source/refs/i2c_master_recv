<dec f='linux/include/linux/i2c.h' l='68' type='int i2c_master_recv(const struct i2c_client * client, char * buf, int count)'/>
<def f='linux/drivers/i2c/i2c-core-base.c' l='2015' ll='2034' type='int i2c_master_recv(const struct i2c_client * client, char * buf, int count)'/>
<dec f='linux/drivers/i2c/i2c-core-base.c' l='2035' type='int i2c_master_recv(const struct i2c_client * , char * , int )'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2035' c='i2c_master_recv'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2035' u='a'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2035' u='a'/>
<doc f='linux/drivers/i2c/i2c-core-base.c' l='2007'>/**
 * i2c_master_recv - issue a single I2C message in master receive mode
 * @client: Handle to slave device
 * @buf: Where to store data read from slave
 * @count: How many bytes to read, must be less than 64k since msg.len is u16
 *
 * Returns negative errno, or else the number of bytes read.
 */</doc>
