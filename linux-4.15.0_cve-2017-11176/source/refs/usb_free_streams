<dec f='linux/include/linux/usb.h' l='816' type='int usb_free_streams(struct usb_interface * interface, struct usb_host_endpoint ** eps, unsigned int num_eps, gfp_t mem_flags)'/>
<doc f='linux/include/linux/usb.h' l='815'>/* Reverts a group of bulk endpoints back to not using stream IDs. */</doc>
<use f='linux/drivers/usb/core/devio.c' l='2327' u='c' c='proc_free_streams'/>
<use f='linux/drivers/usb/core/driver.c' l='439' u='c' c='usb_unbind_interface'/>
<def f='linux/drivers/usb/core/hcd.c' l='2182' ll='2208' type='int usb_free_streams(struct usb_interface * interface, struct usb_host_endpoint ** eps, unsigned int num_eps, gfp_t mem_flags)'/>
<dec f='linux/drivers/usb/core/hcd.c' l='2209' type='int usb_free_streams(struct usb_interface * , struct usb_host_endpoint ** , unsigned int , gfp_t )'/>
<use f='linux/drivers/usb/core/hcd.c' l='2209' c='usb_free_streams'/>
<use f='linux/drivers/usb/core/hcd.c' l='2209' u='a'/>
<use f='linux/drivers/usb/core/hcd.c' l='2209' u='a'/>
<doc f='linux/drivers/usb/core/hcd.c' l='2170'>/**
 * usb_free_streams - free bulk endpoint stream IDs.
 * @interface:	alternate setting that includes all endpoints.
 * @eps:	array of endpoints to remove streams from.
 * @num_eps:	number of endpoints in the array.
 * @mem_flags:	flags hcd should use to allocate memory.
 *
 * Reverts a group of bulk endpoints back to not using stream IDs.
 * Can fail if we are given bad arguments, or HCD is broken.
 *
 * Return: 0 on success. On failure, a negative error code.
 */</doc>
