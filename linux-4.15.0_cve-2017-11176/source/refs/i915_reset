<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3316' type='void i915_reset(struct drm_i915_private * i915, unsigned int flags)'/>
<def f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1875' ll='1955' type='void i915_reset(struct drm_i915_private * i915, unsigned int flags)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1857'>/**
 * i915_reset - reset chip after a hang
 * @i915: #drm_i915_private to reset
 * @flags: Instructions
 *
 * Reset the chip.  Useful if a hang is detected. Marks the device as wedged
 * on failure.
 *
 * Caller must hold the struct_mutex.
 *
 * Procedure is fairly simple:
 *   - reset the chip using the reset reg
 *   - re-init context state
 *   - re-init hardware status page
 *   - re-init ring buffer
 *   - re-init interrupt state
 *   - re-init display
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='1104' u='c' c='__i915_wait_request_check_and_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2783' u='c' c='i915_reset_device'/>
