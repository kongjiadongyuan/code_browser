<dec f='linux/include/linux/mempolicy.h' l='152' type='bool init_nodemask_of_mempolicy(nodemask_t * mask)'/>
<use f='linux/mm/hugetlb.c' l='2420' u='c' c='__nr_hugepages_store_common'/>
<def f='linux/mm/mempolicy.c' l='1832' ll='1863' type='bool init_nodemask_of_mempolicy(nodemask_t * mask)'/>
<doc f='linux/mm/mempolicy.c' l='1816'>/*
 * init_nodemask_of_mempolicy
 *
 * If the current task&apos;s mempolicy is &quot;default&quot; [NULL], return &apos;false&apos;
 * to indicate default policy.  Otherwise, extract the policy nodemask
 * for &apos;bind&apos; or &apos;interleave&apos; policy into the argument nodemask, or
 * initialize the argument nodemask to contain the single node for
 * &apos;preferred&apos; or &apos;local&apos; policy and return &apos;true&apos; to indicate presence
 * of non-default mempolicy.
 *
 * We don&apos;t bother with reference counting the mempolicy [mpol_get/put]
 * because the current task is examining it&apos;s own mempolicy and a task&apos;s
 * mempolicy is only ever changed by the task itself.
 *
 * N.B., it is the caller&apos;s responsibility to free a returned nodemask.
 */</doc>
