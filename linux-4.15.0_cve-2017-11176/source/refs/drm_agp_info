<def f='linux/include/uapi/drm/drm.h' l='568' ll='580'/>
<size>56</size>
<doc f='linux/include/uapi/drm/drm.h' l='561'>/**
 * DRM_IOCTL_AGP_INFO ioctl argument type.
 *
 * \sa drmAgpVersionMajor(), drmAgpVersionMinor(), drmAgpGetMode(),
 * drmAgpBase(), drmAgpSize(), drmAgpMemoryUsed(), drmAgpMemoryAvail(),
 * drmAgpVendorId() and drmAgpDeviceId().
 */</doc>
<mbr r='drm_agp_info::agp_version_major' o='0' t='int'/>
<mbr r='drm_agp_info::agp_version_minor' o='32' t='int'/>
<mbr r='drm_agp_info::mode' o='64' t='unsigned long'/>
<mbr r='drm_agp_info::aperture_base' o='128' t='unsigned long'/>
<mbr r='drm_agp_info::aperture_size' o='192' t='unsigned long'/>
<mbr r='drm_agp_info::memory_allowed' o='256' t='unsigned long'/>
<mbr r='drm_agp_info::memory_used' o='320' t='unsigned long'/>
<mbr r='drm_agp_info::id_vendor' o='384' t='unsigned short'/>
<mbr r='drm_agp_info::id_device' o='400' t='unsigned short'/>
<dec f='linux/include/drm/drm_agpsupport.h' l='51' type='int drm_agp_info(struct drm_device * dev, struct drm_agp_info * info)'/>
<use f='linux/include/drm/drm_agpsupport.h' l='51' c='drm_agp_info'/>
<size>56</size>
<def f='linux/drivers/gpu/drm/drm_agpsupport.c' l='53' ll='72' type='int drm_agp_info(struct drm_device * dev, struct drm_agp_info * info)'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='53' c='drm_agp_info'/>
<dec f='linux/drivers/gpu/drm/drm_agpsupport.c' l='73' type='int drm_agp_info(struct drm_device * , struct drm_agp_info * )'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='73' c='drm_agp_info'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='73' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='73' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='78' c='drm_agp_info_ioctl'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='81' u='c' c='drm_agp_info_ioctl'/>
<size>56</size>
<doc f='linux/drivers/gpu/drm/drm_agpsupport.c' l='41'>/**
 * Get AGP information.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg pointer to a (output) drm_agp_info structure.
 * \return zero on success or a negative number on failure.
 *
 * Verifies the AGP device has been initialized and acquired and fills in the
 * drm_agp_info structure with the information in drm_agp_head::agp_info.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_ioc32.c' l='645' c='compat_drm_agp_info'/>
<size>56</size>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<use f='linux/drivers/gpu/drm/drm_ioctl.c' l='596' macro='1'/>
<size>56</size>
