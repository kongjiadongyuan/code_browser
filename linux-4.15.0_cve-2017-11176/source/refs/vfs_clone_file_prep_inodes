<dec f='linux/include/linux/fs.h' l='1792' type='int vfs_clone_file_prep_inodes(struct inode * inode_in, loff_t pos_in, struct inode * inode_out, loff_t pos_out, u64 * len, bool is_dedupe)'/>
<def f='linux/fs/read_write.c' l='1693' ll='1791' type='int vfs_clone_file_prep_inodes(struct inode * inode_in, loff_t pos_in, struct inode * inode_out, loff_t pos_out, u64 * len, bool is_dedupe)'/>
<dec f='linux/fs/read_write.c' l='1792' type='int vfs_clone_file_prep_inodes(struct inode * , loff_t , struct inode * , loff_t , u64 * , bool )'/>
<use f='linux/fs/read_write.c' l='1792' c='vfs_clone_file_prep_inodes'/>
<use f='linux/fs/read_write.c' l='1792' u='a'/>
<use f='linux/fs/read_write.c' l='1792' u='a'/>
<doc f='linux/fs/read_write.c' l='1685'>/*
 * Check that the two inodes are eligible for cloning, the ranges make
 * sense, and then flush all dirty data.  Caller must ensure that the
 * inodes have been locked against any other modifications.
 *
 * Returns: 0 for &quot;nothing to clone&quot;, 1 for &quot;something to clone&quot;, or
 * the usual negative error code.
 */</doc>
