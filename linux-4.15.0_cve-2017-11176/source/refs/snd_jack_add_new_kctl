<dec f='linux/include/sound/jack.h' l='93' type='int snd_jack_add_new_kctl(struct snd_jack * jack, const char * name, int mask)'/>
<def f='linux/sound/core/jack.c' l='184' ll='194' type='int snd_jack_add_new_kctl(struct snd_jack * jack, const char * name, int mask)'/>
<dec f='linux/sound/core/jack.c' l='195' type='int snd_jack_add_new_kctl(struct snd_jack * , const char * , int )'/>
<use f='linux/sound/core/jack.c' l='195' c='snd_jack_add_new_kctl'/>
<use f='linux/sound/core/jack.c' l='195' u='a'/>
<use f='linux/sound/core/jack.c' l='195' u='a'/>
<doc f='linux/sound/core/jack.c' l='173'>/**
 * snd_jack_add_new_kctl - Create a new snd_jack_kctl and add it to jack
 * @jack:  the jack instance which the kctl will attaching to
 * @name:  the name for the snd_kcontrol object
 * @mask:  a bitmask of enum snd_jack_type values that can be detected
 *         by this snd_jack_kctl object.
 *
 * Creates a new snd_kcontrol object and adds it to the jack kctl_list.
 *
 * Return: Zero if successful, or a negative error code on failure.
 */</doc>
