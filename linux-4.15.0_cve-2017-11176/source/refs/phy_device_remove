<dec f='linux/include/linux/phy.h' l='818' type='void phy_device_remove(struct phy_device * phydev)'/>
<use f='linux/drivers/net/phy/phy_device.c' l='69' u='c' c='phy_mdio_device_remove'/>
<def f='linux/drivers/net/phy/phy_device.c' l='666' ll='670' type='void phy_device_remove(struct phy_device * phydev)'/>
<dec f='linux/drivers/net/phy/phy_device.c' l='671' type='void phy_device_remove(struct phy_device * )'/>
<use f='linux/drivers/net/phy/phy_device.c' l='671' c='phy_device_remove'/>
<use f='linux/drivers/net/phy/phy_device.c' l='671' u='a'/>
<use f='linux/drivers/net/phy/phy_device.c' l='671' u='a'/>
<doc f='linux/drivers/net/phy/phy_device.c' l='658'>/**
 * phy_device_remove - Remove a previously registered phy device from the MDIO bus
 * @phydev: phy_device structure to remove
 *
 * This doesn&apos;t free the phy_device itself, it merely reverses the effects
 * of phy_device_register(). Use phy_device_free() to free the device
 * after calling this function.
 */</doc>
