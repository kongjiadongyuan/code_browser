<dec f='linux/include/linux/cpufreq.h' l='934' type='int cpufreq_generic_init(struct cpufreq_policy * policy, struct cpufreq_frequency_table * table, unsigned int transition_latency)'/>
<def f='linux/drivers/cpufreq/cpufreq.c' l='177' ll='198' type='int cpufreq_generic_init(struct cpufreq_policy * policy, struct cpufreq_frequency_table * table, unsigned int transition_latency)'/>
<dec f='linux/drivers/cpufreq/cpufreq.c' l='199' type='int cpufreq_generic_init(struct cpufreq_policy * , struct cpufreq_frequency_table * , unsigned int )'/>
<use f='linux/drivers/cpufreq/cpufreq.c' l='199' c='cpufreq_generic_init'/>
<use f='linux/drivers/cpufreq/cpufreq.c' l='199' u='a'/>
<use f='linux/drivers/cpufreq/cpufreq.c' l='199' u='a'/>
<doc f='linux/drivers/cpufreq/cpufreq.c' l='170'>/*
 * This is a generic cpufreq init() routine which can be used by cpufreq
 * drivers of SMP systems. It will do following:
 * - validate &amp; show freq table passed
 * - set policies transition latency
 * - policy-&gt;cpus with all possible CPUs
 */</doc>
