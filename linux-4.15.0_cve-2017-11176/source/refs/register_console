<dec f='linux/include/linux/console.h' l='162' type='void register_console(struct console * )'/>
<use f='linux/arch/x86/kernel/early_printk.c' l='333' u='c' c='early_console_register'/>
<use f='linux/drivers/net/netconsole.c' l='930' u='c' c='init_netconsole'/>
<use f='linux/drivers/net/netconsole.c' l='931' u='c' c='init_netconsole'/>
<use f='linux/drivers/tty/serial/8250/8250_core.c' l='685' u='c' c='univ8250_console_init'/>
<use f='linux/drivers/tty/serial/earlycon.c' l='148' u='c' c='register_earlycon'/>
<use f='linux/drivers/tty/serial/serial_core.c' l='2307' u='c' c='uart_configure_port'/>
<use f='linux/drivers/tty/vt/vt.c' l='3029' u='c' c='con_init'/>
<def f='linux/kernel/printk/printk.c' l='2398' ll='2557' type='void register_console(struct console * newcon)'/>
<dec f='linux/kernel/printk/printk.c' l='2558' type='void register_console(struct console * )'/>
<use f='linux/kernel/printk/printk.c' l='2558' c='register_console'/>
<use f='linux/kernel/printk/printk.c' l='2558' u='a'/>
<use f='linux/kernel/printk/printk.c' l='2558' u='a'/>
<doc f='linux/kernel/printk/printk.c' l='2379'>/*
 * The console driver calls this routine during kernel initialization
 * to register the console printing procedure with printk() and to
 * print any messages that were printed by the kernel before the
 * console driver was initialized.
 *
 * This can happen pretty early during the boot process (because of
 * early_printk) - sometimes before setup_arch() completes - be careful
 * of what kernel features are used - they may not be initialised yet.
 *
 * There are two types of consoles - bootconsoles (early_printk) and
 * &quot;real&quot; consoles (everything which is not a bootconsole) which are
 * handled differently.
 *  - Any number of bootconsoles can be registered at any time.
 *  - As soon as a &quot;real&quot; console is registered, all bootconsoles
 *    will be unregistered automatically.
 *  - Once a &quot;real&quot; console is registered, any attempt to register a
 *    bootconsoles will be rejected
 */</doc>
