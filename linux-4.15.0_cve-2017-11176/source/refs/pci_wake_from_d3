<dec f='linux/include/linux/pci.h' l='1147' type='int pci_wake_from_d3(struct pci_dev * dev, bool enable)'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='4268' u='c' c='tg3_power_down'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='3048' u='c' c='__e100_power_off'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5184' u='c' c='e1000_suspend'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5247' u='c' c='e1000_shutdown'/>
<use f='linux/drivers/net/ethernet/marvell/sky2.c' l='5245' u='c' c='sky2_shutdown'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='6212' u='c' c='nv_shutdown'/>
<use f='linux/drivers/net/ethernet/realtek/r8169.c' l='8228' u='c' c='rtl_shutdown'/>
<def f='linux/drivers/pci/pci.c' l='1970' ll='1975' type='int pci_wake_from_d3(struct pci_dev * dev, bool enable)'/>
<dec f='linux/drivers/pci/pci.c' l='1976' type='int pci_wake_from_d3(struct pci_dev * , bool )'/>
<use f='linux/drivers/pci/pci.c' l='1976' c='pci_wake_from_d3'/>
<use f='linux/drivers/pci/pci.c' l='1976' u='a'/>
<use f='linux/drivers/pci/pci.c' l='1976' u='a'/>
<doc f='linux/drivers/pci/pci.c' l='1956'>/**
 * pci_wake_from_d3 - enable/disable device to wake up from D3_hot or D3_cold
 * @dev: PCI device to prepare
 * @enable: True to enable wake-up event generation; false to disable
 *
 * Many drivers want the device to wake up the system from D3_hot or D3_cold
 * and this function allows them to set that up cleanly - pci_enable_wake()
 * should not be called twice in a row to enable wake-up due to PCI PM vs ACPI
 * ordering constraints.
 *
 * This function only returns error code if the device is not capable of
 * generating PME# from both D3_hot and D3_cold, and the platform is unable to
 * enable wake-up power for it.
 */</doc>
