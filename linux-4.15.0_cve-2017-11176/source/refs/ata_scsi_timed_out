<dec f='linux/include/linux/libata.h' l='1135' type='enum blk_eh_timer_return ata_scsi_timed_out(struct scsi_cmnd * cmd)'/>
<use f='linux/drivers/ata/ahci.c' l='110' macro='1'/>
<use f='linux/drivers/ata/ahci.c' l='110' macro='1'/>
<use f='linux/drivers/ata/ata_piix.c' l='1079' macro='1'/>
<use f='linux/drivers/ata/ata_piix.c' l='1079' macro='1'/>
<use f='linux/drivers/ata/ata_piix.c' l='1113' macro='1'/>
<use f='linux/drivers/ata/ata_piix.c' l='1113' macro='1'/>
<def f='linux/drivers/ata/libata-eh.c' l='522' ll='551' type='enum blk_eh_timer_return ata_scsi_timed_out(struct scsi_cmnd * cmd)'/>
<dec f='linux/drivers/ata/libata-eh.c' l='552' type='enum blk_eh_timer_return ata_scsi_timed_out(struct scsi_cmnd * )'/>
<use f='linux/drivers/ata/libata-eh.c' l='552' c='ata_scsi_timed_out'/>
<use f='linux/drivers/ata/libata-eh.c' l='552' u='a'/>
<use f='linux/drivers/ata/libata-eh.c' l='552' u='a'/>
<doc f='linux/drivers/ata/libata-eh.c' l='503'>/**
 *	ata_scsi_timed_out - SCSI layer time out callback
 *	@cmd: timed out SCSI command
 *
 *	Handles SCSI layer timeout.  We race with normal completion of
 *	the qc for @cmd.  If the qc is already gone, we lose and let
 *	the scsi command finish (EH_HANDLED).  Otherwise, the qc has
 *	timed out and EH should be invoked.  Prevent ata_qc_complete()
 *	from finishing it by setting EH_SCHEDULED and return
 *	EH_NOT_HANDLED.
 *
 *	TODO: kill this function once old EH is gone.
 *
 *	LOCKING:
 *	Called from timer context
 *
 *	RETURNS:
 *	EH_HANDLED or EH_NOT_HANDLED
 */</doc>
<use f='linux/drivers/ata/pata_amd.c' l='391' macro='1'/>
<use f='linux/drivers/ata/pata_amd.c' l='391' macro='1'/>
<use f='linux/drivers/ata/pata_oldpiix.c' l='207' macro='1'/>
<use f='linux/drivers/ata/pata_oldpiix.c' l='207' macro='1'/>
<use f='linux/drivers/ata/pata_sch.c' l='74' macro='1'/>
<use f='linux/drivers/ata/pata_sch.c' l='74' macro='1'/>
