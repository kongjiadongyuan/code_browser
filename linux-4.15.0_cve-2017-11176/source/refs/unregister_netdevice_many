<dec f='linux/include/linux/netdevice.h' l='2459' type='void unregister_netdevice_many(struct list_head * head)'/>
<def f='linux/net/core/dev.c' l='8317' ll='8327' type='void unregister_netdevice_many(struct list_head * head)'/>
<dec f='linux/net/core/dev.c' l='8328' type='void unregister_netdevice_many(struct list_head * )'/>
<use f='linux/net/core/dev.c' l='8328' c='unregister_netdevice_many'/>
<use f='linux/net/core/dev.c' l='8328' u='a'/>
<use f='linux/net/core/dev.c' l='8328' u='a'/>
<use f='linux/net/core/dev.c' l='8787' u='c' c='default_device_exit_batch'/>
<doc f='linux/net/core/dev.c' l='8310'>/**
 *	unregister_netdevice_many - unregister many devices
 *	@head: list of devices
 *
 *  Note: As most callers use a stack allocated list_head,
 *  we force a list_del() to make sure stack wont be corrupted later.
 */</doc>
<use f='linux/net/core/rtnetlink.c' l='338' u='c' c='__rtnl_kill_links'/>
<use f='linux/net/core/rtnetlink.c' l='2465' u='c' c='rtnl_group_dellink'/>
<use f='linux/net/core/rtnetlink.c' l='2480' u='c' c='rtnl_delete_link'/>
<use f='linux/net/core/rtnetlink.c' l='2858' u='c' c='rtnl_newlink'/>
<use f='linux/net/ipv4/ip_tunnel.c' l='1075' u='c' c='ip_tunnel_delete_nets'/>
<use f='linux/net/ipv4/ipmr.c' l='1390' u='c' c='mroute_clean_tables'/>
<use f='linux/net/ipv6/sit.c' l='1872' u='c' c='sit_exit_batch_net'/>
<use f='linux/net/mac80211/iface.c' l='1960' u='c' c='ieee80211_remove_interfaces'/>
