<dec f='linux/include/linux/irqdomain.h' l='447' type='int irq_domain_activate_irq(struct irq_data * irq_data, bool early)'/>
<use f='linux/arch/x86/kernel/apic/io_apic.c' l='2152' u='c' c='check_timer'/>
<use f='linux/arch/x86/kernel/apic/io_apic.c' l='2174' u='c' c='check_timer'/>
<use f='linux/kernel/irq/chip.c' l='226' u='c' c='__irq_startup_managed'/>
<use f='linux/kernel/irq/chip.c' l='293' u='c' c='irq_activate'/>
<def f='linux/kernel/irq/irqdomain.c' l='1725' ll='1734' type='int irq_domain_activate_irq(struct irq_data * irq_data, bool reserve)'/>
<doc f='linux/kernel/irq/irqdomain.c' l='1716'>/**
 * irq_domain_activate_irq - Call domain_ops-&gt;activate recursively to activate
 *			     interrupt
 * @irq_data:	Outermost irq_data associated with interrupt
 * @reserve:	If set only reserve an interrupt vector instead of assigning one
 *
 * This is the second step to call domain_ops-&gt;activate to program interrupt
 * controllers, so the interrupt could actually get delivered.
 */</doc>
<use f='linux/kernel/irq/msi.c' l='444' u='c' c='msi_domain_alloc_irqs'/>
