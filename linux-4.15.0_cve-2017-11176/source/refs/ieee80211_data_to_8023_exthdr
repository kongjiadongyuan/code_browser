<dec f='linux/include/net/cfg80211.h' l='4334' type='int ieee80211_data_to_8023_exthdr(struct sk_buff * skb, struct ethhdr * ehdr, const u8 * addr, enum nl80211_iftype iftype)'/>
<use f='linux/include/net/cfg80211.h' l='4347' u='c' c='ieee80211_data_to_8023'/>
<doc f='linux/include/net/cfg80211.h' l='4325'>/**
 * ieee80211_data_to_8023_exthdr - convert an 802.11 data frame to 802.3
 * @skb: the 802.11 data frame
 * @ehdr: pointer to a &amp;struct ethhdr that will get the header, instead
 *	of it being pushed into the SKB
 * @addr: the device MAC address
 * @iftype: the virtual interface type
 * Return: 0 on success. Non-zero on error.
 */</doc>
<use f='linux/net/mac80211/rx.c' l='2419' u='c' c='ieee80211_rx_h_amsdu'/>
<def f='linux/net/wireless/util.c' l='422' ll='528' type='int ieee80211_data_to_8023_exthdr(struct sk_buff * skb, struct ethhdr * ehdr, const u8 * addr, enum nl80211_iftype iftype)'/>
<dec f='linux/net/wireless/util.c' l='529' type='int ieee80211_data_to_8023_exthdr(struct sk_buff * , struct ethhdr * , const u8 * , enum nl80211_iftype )'/>
<use f='linux/net/wireless/util.c' l='529' c='ieee80211_data_to_8023_exthdr'/>
<use f='linux/net/wireless/util.c' l='529' u='a'/>
<use f='linux/net/wireless/util.c' l='529' u='a'/>
