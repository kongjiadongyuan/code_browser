<dec f='linux/include/linux/usb.h' l='1859' type='void usb_sg_cancel(struct usb_sg_request * io)'/>
<use f='linux/drivers/usb/core/message.c' l='550' u='c' c='usb_sg_wait'/>
<def f='linux/drivers/usb/core/message.c' l='579' ll='604' type='void usb_sg_cancel(struct usb_sg_request * io)'/>
<dec f='linux/drivers/usb/core/message.c' l='605' type='void usb_sg_cancel(struct usb_sg_request * )'/>
<use f='linux/drivers/usb/core/message.c' l='605' c='usb_sg_cancel'/>
<use f='linux/drivers/usb/core/message.c' l='605' u='a'/>
<use f='linux/drivers/usb/core/message.c' l='605' u='a'/>
<doc f='linux/drivers/usb/core/message.c' l='571'>/**
 * usb_sg_cancel - stop scatter/gather i/o issued by usb_sg_wait()
 * @io: request block, initialized with usb_sg_init()
 *
 * This stops a request after it has been started by usb_sg_wait().
 * It can also prevents one initialized by usb_sg_init() from starting,
 * so that call just frees resources allocated to the request.
 */</doc>
<use f='linux/drivers/usb/storage/transport.c' l='445' u='c' c='usb_stor_bulk_transfer_sglist'/>
<use f='linux/drivers/usb/storage/transport.c' l='940' u='c' c='usb_stor_stop_transport'/>
