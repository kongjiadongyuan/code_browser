<dec f='linux/include/net/mac80211.h' l='4785' type='struct ieee80211_key_conf * ieee80211_gtk_rekey_add(struct ieee80211_vif * vif, struct ieee80211_key_conf * keyconf)'/>
<doc f='linux/include/net/mac80211.h' l='4755'>/**
 * ieee80211_gtk_rekey_add - add a GTK key from rekeying during WoWLAN
 * @vif: the virtual interface to add the key on
 * @keyconf: new key data
 *
 * When GTK rekeying was done while the system was suspended, (a) new
 * key(s) will be available. These will be needed by mac80211 for proper
 * RX processing, so this function allows setting them.
 *
 * The function returns the newly allocated key structure, which will
 * have similar contents to the passed key configuration but point to
 * mac80211-owned memory. In case of errors, the function returns an
 * ERR_PTR(), use IS_ERR() etc.
 *
 * Note that this function assumes the key isn&apos;t added to hardware
 * acceleration, so no TX will be done with the key. Since it&apos;s a GTK
 * on managed (station) networks, this is true anyway. If the driver
 * calls this function from the resume callback and subsequently uses
 * the return code 1 to reconfigure the device, this key will be part
 * of the reconfiguration.
 *
 * Note that the driver should also call ieee80211_set_key_rx_seq()
 * for the new key for each TID to set up sequence counters properly.
 *
 * IMPORTANT: If this replaces a key that is present in the hardware,
 * then it will attempt to remove it during this call. In many cases
 * this isn&apos;t what you want, so call ieee80211_remove_key() first for
 * the key that&apos;s being replaced.
 */</doc>
<def f='linux/net/mac80211/key.c' l='1116' ll='1145' type='struct ieee80211_key_conf * ieee80211_gtk_rekey_add(struct ieee80211_vif * vif, struct ieee80211_key_conf * keyconf)'/>
<dec f='linux/net/mac80211/key.c' l='1146' type='struct ieee80211_key_conf * ieee80211_gtk_rekey_add(struct ieee80211_vif * , struct ieee80211_key_conf * )'/>
<use f='linux/net/mac80211/key.c' l='1146' c='ieee80211_gtk_rekey_add'/>
<use f='linux/net/mac80211/key.c' l='1146' u='a'/>
<use f='linux/net/mac80211/key.c' l='1146' u='a'/>
