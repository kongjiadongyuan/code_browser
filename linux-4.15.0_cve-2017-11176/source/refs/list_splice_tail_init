<def f='linux/include/linux/list.h' l='350' ll='357' type='void list_splice_tail_init(struct list_head * list, struct list_head * head)'/>
<doc f='linux/include/linux/list.h' l='342'>/**
 * list_splice_tail_init - join two lists and reinitialise the emptied list
 * @list: the new list to add.
 * @head: the place to add it in the first list.
 *
 * Each of the lists is a queue.
 * The list at @list is reinitialised
 */</doc>
<use f='linux/block/blk-mq.c' l='902' u='c' c='flush_busy_ctx'/>
<use f='linux/block/blk-mq.c' l='1979' u='c' c='blk_mq_hctx_notify_dead'/>
<use f='linux/drivers/base/dd.c' l='195' u='c' c='driver_deferred_probe_trigger'/>
<use f='linux/drivers/dma/virt-dma.h' l='82' u='c' c='vchan_issue_pending'/>
<use f='linux/drivers/dma/virt-dma.h' l='143' u='c' c='vchan_get_all_descriptors'/>
<use f='linux/drivers/dma/virt-dma.h' l='144' u='c' c='vchan_get_all_descriptors'/>
<use f='linux/drivers/dma/virt-dma.h' l='145' u='c' c='vchan_get_all_descriptors'/>
<use f='linux/drivers/dma/virt-dma.h' l='146' u='c' c='vchan_get_all_descriptors'/>
<use f='linux/drivers/dma/virt-dma.c' l='94' u='c' c='vchan_complete'/>
<use f='linux/drivers/gpu/drm/i915/i915_sw_fence.c' l='169' u='c' c='__i915_sw_fence_wake_up_all'/>
<use f='linux/drivers/usb/host/ehci-q.c' l='1322' u='c' c='end_unlink_async'/>
<use f='linux/drivers/usb/host/ehci-sched.c' l='1914' u='c' c='itd_complete'/>
<use f='linux/drivers/usb/host/ehci-sched.c' l='2296' u='c' c='sitd_complete'/>
<use f='linux/kernel/cgroup/cgroup.c' l='2345' u='c' c='cgroup_migrate_execute'/>
<use f='linux/kernel/cgroup/cgroup.c' l='2413' u='c' c='cgroup_migrate_finish'/>
<use f='linux/kernel/cgroup/cgroup.c' l='2414' u='c' c='cgroup_migrate_finish'/>
<use f='linux/kernel/exit.c' l='692' u='c' c='forget_original_parent'/>
<use f='linux/kernel/workqueue.c' l='2709' u='c' c='flush_workqueue'/>
<use f='linux/net/core/dev.c' l='5714' u='c' c='net_rx_action'/>
<use f='linux/net/wireless/mlme.c' l='572' u='c' c='cfg80211_mlme_purge_registrations'/>
<use f='linux/net/wireless/reg.c' l='3020' u='c' c='restore_regulatory_settings'/>
<use f='linux/net/wireless/reg.c' l='3058' u='c' c='restore_regulatory_settings'/>
<def f='linux/tools/include/linux/list.h' l='336' ll='343' type='void list_splice_tail_init(struct list_head * list, struct list_head * head)'/>
<doc f='linux/tools/include/linux/list.h' l='328'>/**
 * list_splice_tail_init - join two lists and reinitialise the emptied list
 * @list: the new list to add.
 * @head: the place to add it in the first list.
 *
 * Each of the lists is a queue.
 * The list at @list is reinitialised
 */</doc>
