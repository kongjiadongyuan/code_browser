<def f='linux/include/uapi/linux/tcp.h' l='65' ll='68'/>
<size>20</size>
<doc f='linux/include/uapi/linux/tcp.h' l='60'>/*
 *	The union cast uses a gcc extension to avoid aliasing problems
 *  (union is compatible to any of its members)
 *  This means this part of the code is -fstrict-aliasing safe now.
 */</doc>
<mbr r='tcp_word_hdr::hdr' o='0' t='struct tcphdr'/>
<mbr r='tcp_word_hdr::words' o='0' t='__be32 [5]'/>
<use f='linux/net/core/flow_dissector.c' l='460' macro='1' c='__skb_flow_dissect_tcp'/>
<size>20</size>
<use f='linux/net/ipv4/tcp_input.c' l='168' macro='1' c='tcp_measure_rcv_mss'/>
<use f='linux/net/ipv4/tcp_input.c' l='5330' macro='1' c='tcp_rcv_established'/>
<size>20</size>
<use f='linux/net/ipv4/tcp_minisocks.c' l='585' macro='1' c='tcp_check_req'/>
<size>20</size>
<use f='linux/net/ipv4/tcp_offload.c' l='221' macro='1' c='tcp_gro_receive'/>
<use f='linux/net/ipv4/tcp_offload.c' l='243' macro='1' c='tcp_gro_receive'/>
<use f='linux/net/ipv4/tcp_offload.c' l='273' macro='1' c='tcp_gro_receive'/>
<size>20</size>
<use f='linux/net/netfilter/nf_conntrack_proto_tcp.c' l='601' macro='1' c='tcp_in_window'/>
<size>20</size>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<use f='linux/net/netfilter/nf_log_common.c' l='88' macro='1' c='nf_log_dump_tcp_header'/>
<size>20</size>
