<dec f='linux/include/sound/core.h' l='164' type='int snd_power_wait(struct snd_card * card, unsigned int power_state)'/>
<use f='linux/sound/core/control.c' l='867' u='c' c='snd_ctl_elem_info_user'/>
<use f='linux/sound/core/control.c' l='908' u='c' c='snd_ctl_elem_read_user'/>
<use f='linux/sound/core/control.c' l='969' u='c' c='snd_ctl_elem_write_user'/>
<use f='linux/sound/core/control_compat.c' l='114' u='c' c='snd_ctl_elem_info_compat'/>
<use f='linux/sound/core/control_compat.c' l='316' u='c' c='ctl_elem_read_user'/>
<use f='linux/sound/core/control_compat.c' l='344' u='c' c='ctl_elem_write_user'/>
<doc f='linux/include/sound/core.h' l='163'>/* init.c */</doc>
<def f='linux/sound/core/init.c' l='1013' ll='1035' type='int snd_power_wait(struct snd_card * card, unsigned int power_state)'/>
<dec f='linux/sound/core/init.c' l='1036' type='int snd_power_wait(struct snd_card * , unsigned int )'/>
<use f='linux/sound/core/init.c' l='1036' c='snd_power_wait'/>
<use f='linux/sound/core/init.c' l='1036' u='a'/>
<use f='linux/sound/core/init.c' l='1036' u='a'/>
<doc f='linux/sound/core/init.c' l='1004'>/**
 *  snd_power_wait - wait until the power-state is changed.
 *  @card: soundcard structure
 *  @power_state: expected power state
 *
 *  Waits until the power-state is changed.
 *
 *  Return: Zero if successful, or a negative error code.
 */</doc>
<use f='linux/sound/core/pcm_native.c' l='2864' u='c' c='snd_pcm_common_ioctl'/>
