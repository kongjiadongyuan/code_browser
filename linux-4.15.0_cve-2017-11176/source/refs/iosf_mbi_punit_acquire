<dec f='linux/arch/x86/include/asm/iosf_mbi.h' l='118' type='void iosf_mbi_punit_acquire()'/>
<def f='linux/arch/x86/platform/intel/iosf_mbi.c' l='195' ll='198' type='void iosf_mbi_punit_acquire()'/>
<dec f='linux/arch/x86/platform/intel/iosf_mbi.c' l='199' type='void iosf_mbi_punit_acquire()'/>
<use f='linux/arch/x86/platform/intel/iosf_mbi.c' l='199' c='iosf_mbi_punit_acquire'/>
<use f='linux/arch/x86/platform/intel/iosf_mbi.c' l='199' u='a'/>
<use f='linux/arch/x86/platform/intel/iosf_mbi.c' l='199' u='a'/>
<doc f='linux/arch/x86/include/asm/iosf_mbi.h' l='98'>/**
 * iosf_mbi_punit_acquire() - Acquire access to the P-Unit
 *
 * One some systems the P-Unit accesses the PMIC to change various voltages
 * through the same bus as other kernel drivers use for e.g. battery monitoring.
 *
 * If a driver sends requests to the P-Unit which require the P-Unit to access
 * the PMIC bus while another driver is also accessing the PMIC bus various bad
 * things happen.
 *
 * To avoid these problems this function must be called before accessing the
 * P-Unit or the PMIC, be it through iosf_mbi* functions or through other means.
 *
 * Note on these systems the i2c-bus driver will request a sempahore from the
 * P-Unit for exclusive access to the PMIC bus when i2c drivers are accessing
 * it, but this does not appear to be sufficient, we still need to avoid making
 * certain P-Unit requests during the access window to avoid problems.
 *
 * This function locks a mutex, as such it may sleep.
 */</doc>
