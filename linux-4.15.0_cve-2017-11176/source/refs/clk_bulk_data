<def f='linux/include/linux/clk.h' l='90' ll='93'/>
<use f='linux/include/linux/clk.h' l='204' c='clk_bulk_prepare'/>
<use f='linux/include/linux/clk.h' l='230' c='clk_bulk_unprepare'/>
<use f='linux/include/linux/clk.h' l='281' c='clk_bulk_get'/>
<use f='linux/include/linux/clk.h' l='296' c='devm_clk_bulk_get'/>
<use f='linux/include/linux/clk.h' l='357' c='clk_bulk_enable'/>
<use f='linux/include/linux/clk.h' l='391' c='clk_bulk_disable'/>
<use f='linux/include/linux/clk.h' l='423' c='clk_bulk_put'/>
<use f='linux/include/linux/clk.h' l='661' c='clk_bulk_prepare_enable'/>
<use f='linux/include/linux/clk.h' l='676' c='clk_bulk_disable_unprepare'/>
<size>16</size>
<doc f='linux/include/linux/clk.h' l='80'>/**
 * struct clk_bulk_data - Data used for bulk clk operations.
 *
 * @id: clock consumer ID
 * @clk: struct clk * to store the associated clock
 *
 * The CLK APIs provide a series of clk_bulk_() API calls as
 * a convenience to consumers which require multiple clks.  This
 * structure is used to manage data for these calls.
 */</doc>
<mbr r='clk_bulk_data::id' o='0' t='const char *'/>
<mbr r='clk_bulk_data::clk' o='64' t='struct clk *'/>
<use f='linux/drivers/clk/clk-bulk.c' l='23' c='clk_bulk_put'/>
<use f='linux/drivers/clk/clk-bulk.c' l='33' c='clk_bulk_get'/>
<use f='linux/drivers/clk/clk-bulk.c' l='71' c='clk_bulk_unprepare'/>
<use f='linux/drivers/clk/clk-bulk.c' l='87' c='clk_bulk_prepare'/>
<use f='linux/drivers/clk/clk-bulk.c' l='121' c='clk_bulk_disable'/>
<use f='linux/drivers/clk/clk-bulk.c' l='137' c='clk_bulk_enable'/>
<size>16</size>
<use f='linux/drivers/clk/clk-devres.c' l='38'/>
<use f='linux/drivers/clk/clk-devres.c' l='50' c='devm_clk_bulk_get'/>
<size>16</size>
