<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3996' type='int intel_engine_cmd_parser(struct intel_engine_cs * engine, struct drm_i915_gem_object * batch_obj, struct drm_i915_gem_object * shadow_batch_obj, u32 batch_start_offset, u32 batch_len, bool is_master)'/>
<def f='linux/drivers/gpu/drm/i915/i915_cmd_parser.c' l='1255' ll='1341' type='int intel_engine_cmd_parser(struct intel_engine_cs * engine, struct drm_i915_gem_object * batch_obj, struct drm_i915_gem_object * shadow_batch_obj, u32 batch_start_offset, u32 batch_len, bool is_master)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_cmd_parser.c' l='1240'>/**
 * i915_parse_cmds() - parse a submitted batch buffer for privilege violations
 * @engine: the engine on which the batch is to execute
 * @batch_obj: the batch buffer in question
 * @shadow_batch_obj: copy of the batch buffer in question
 * @batch_start_offset: byte offset in the batch at which execution starts
 * @batch_len: length of the commands in batch_obj
 * @is_master: is the submitting process the drm master?
 *
 * Parses the specified batch buffer looking for privilege violations as
 * described in the overview.
 *
 * Return: non-zero if the parser finds violations or otherwise fails; -EACCES
 * if the batch appears legal but should use hardware parsing
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_execbuffer.c' l='1926' u='c' c='eb_parse'/>
