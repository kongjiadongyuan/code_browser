<dec f='linux/include/sound/hdaudio.h' l='143' type='int snd_hdac_codec_read(struct hdac_device * hdac, hda_nid_t nid, int flags, unsigned int verb, unsigned int parm)'/>
<def f='linux/sound/hda/hdac_device.c' l='1019' ll='1023' type='int snd_hdac_codec_read(struct hdac_device * hdac, hda_nid_t nid, int flags, unsigned int verb, unsigned int parm)'/>
<dec f='linux/sound/hda/hdac_device.c' l='1024' type='int snd_hdac_codec_read(struct hdac_device * , hda_nid_t , int , unsigned int , unsigned int )'/>
<use f='linux/sound/hda/hdac_device.c' l='1024' c='snd_hdac_codec_read'/>
<use f='linux/sound/hda/hdac_device.c' l='1024' u='a'/>
<use f='linux/sound/hda/hdac_device.c' l='1024' u='a'/>
<doc f='linux/sound/hda/hdac_device.c' l='1007'>/**
 * snd_hdac_codec_read - send a command and get the response
 * @hdac: the HDAC device
 * @nid: NID to send the command
 * @flags: optional bit flags
 * @verb: the verb to send
 * @parm: the parameter for the verb
 *
 * Send a single command and read the corresponding response.
 *
 * Returns the obtained response value, or -1 for an error.
 */</doc>
<use f='linux/sound/hda/hdmi_chmap.c' l='192' u='c' c='hdmi_pin_get_slot_channel'/>
<use f='linux/sound/hda/hdmi_chmap.c' l='199' u='c' c='hdmi_get_channel_count'/>
<use f='linux/sound/pci/hda/hda_codec.h' l='321' u='c' c='snd_hda_codec_read'/>
