<dec f='linux/include/drm/drm_device.h' l='151' type='u32'/>
<offset>3264</offset>
<doc f='linux/include/drm/drm_device.h' l='136'>/**
	 * @max_vblank_count:
	 *
	 * Maximum value of the vblank registers. This value +1 will result in a
	 * wrap-around of the vblank register. It is used by the vblank core to
	 * handle wrap-arounds.
	 *
	 * If set to zero the vblank core will try to guess the elapsed vblanks
	 * between times when the vblank interrupt is disabled through
	 * high-precision timestamps. That approach is suffering from small
	 * races and imprecision over longer time periods, hence exposing a
	 * hardware vblank counter is always recommended.
	 *
	 * If non-zeor, &amp;drm_crtc_funcs.get_vblank_counter must be set.
	 */</doc>
<doc f='linux/include/drm/drm_device.h' l='151'>/**&lt; size of vblank counter register */</doc>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='114' u='r' c='drm_vblank_no_hw_counter'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='216' u='r' c='drm_update_vblank_count'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='218' u='r' c='drm_update_vblank_count'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='4057' u='w' c='intel_irq_init'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='4059' u='w' c='intel_irq_init'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='4063' u='w' c='intel_irq_init'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='1893' u='r' c='intel_enable_pipe'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12102' u='r' c='intel_crtc_get_vblank_counter'/>
