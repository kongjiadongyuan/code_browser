<dec f='linux/include/linux/device.h' l='1124' type='int device_register(struct device * dev)'/>
<doc f='linux/include/linux/device.h' l='1121'>/*
 * High level routines for use by the bus drivers
 */</doc>
<use f='linux/arch/x86/kernel/cpu/mcheck/mce.c' l='2210' u='c' c='mce_device_create'/>
<use f='linux/drivers/acpi/container.c' l='80' u='c' c='container_device_attach'/>
<use f='linux/drivers/base/bus.c' l='1166' u='c' c='subsys_register'/>
<def f='linux/drivers/base/core.c' l='1905' ll='1909' type='int device_register(struct device * dev)'/>
<dec f='linux/drivers/base/core.c' l='1910' type='int device_register(struct device * )'/>
<use f='linux/drivers/base/core.c' l='1910' c='device_register'/>
<use f='linux/drivers/base/core.c' l='1910' u='a'/>
<use f='linux/drivers/base/core.c' l='1910' u='a'/>
<use f='linux/drivers/base/core.c' l='2355' u='c' c='__root_device_register'/>
<doc f='linux/drivers/base/core.c' l='1887'>/**
 * device_register - register a device with the system.
 * @dev: pointer to the device structure
 *
 * This happens in two clean steps - initialize the device
 * and add it to the system. The two steps can be called
 * separately, but this is the easiest and most common.
 * I.e. you should only call the two helpers separately if
 * have a clearly defined need to use and refcount the device
 * before it is added to the hierarchy.
 *
 * For more information, see the kerneldoc for device_initialize()
 * and device_add().
 *
 * NOTE: _Never_ directly free @dev after calling this function, even
 * if it returned an error! Always use put_device() to give up the
 * reference initialized in this function instead.
 */</doc>
<use f='linux/drivers/base/cpu.c' l='383' u='c' c='register_cpu'/>
<use f='linux/drivers/base/node.c' l='316' u='c' c='register_node'/>
<use f='linux/drivers/base/platform.c' l='1156' u='c' c='platform_bus_init'/>
<use f='linux/drivers/dma/dmaengine.c' l='1046' u='c' c='dma_async_device_register'/>
<use f='linux/drivers/firmware/dmi-id.c' l='232' u='c' c='dmi_id_init'/>
<use f='linux/drivers/gpu/drm/drm_sysfs.c' l='378' u='c' c='drm_class_device_register'/>
<use f='linux/drivers/hwmon/hwmon.c' l='614' u='c' c='__hwmon_device_register'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='792' u='c' c='i2c_new_device'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='1273' u='c' c='i2c_register_adapter'/>
<use f='linux/drivers/net/phy/mdio_bus.c' l='348' u='c' c='__mdiobus_register'/>
<use f='linux/drivers/pci/pcie/portdrv_core.c' l='295' u='c' c='pcie_device_init'/>
<use f='linux/drivers/pci/probe.c' l='792' u='c' c='pci_register_host_bridge'/>
<use f='linux/drivers/pci/probe.c' l='810' u='c' c='pci_register_host_bridge'/>
<use f='linux/drivers/pci/probe.c' l='919' u='c' c='pci_alloc_child_bus'/>
<use f='linux/drivers/pcmcia/cs.c' l='602' u='c' c='pccardd'/>
<use f='linux/drivers/pcmcia/ds.c' l='584' u='c' c='pcmcia_device_add'/>
<use f='linux/drivers/pnp/card.c' l='241' u='c' c='pnp_add_card'/>
<use f='linux/drivers/pnp/core.c' l='86' u='c' c='pnp_register_protocol'/>
<use f='linux/drivers/pnp/core.c' l='196' u='c' c='__pnp_add_device'/>
<use f='linux/drivers/thermal/thermal_core.c' l='978' u='c' c='__thermal_cooling_device_register'/>
<use f='linux/drivers/thermal/thermal_core.c' l='1235' u='c' c='thermal_zone_device_register'/>
<use f='linux/drivers/tty/tty_io.c' l='2962' u='c' c='tty_register_device_attr'/>
<use f='linux/drivers/usb/core/endpoint.c' l='196' u='c' c='usb_create_ep_devs'/>
<use f='linux/drivers/usb/core/port.c' l='506' u='c' c='usb_hub_create_port_device'/>
<use f='linux/drivers/video/backlight/backlight.c' l='365' u='c' c='backlight_device_register'/>
<use f='linux/kernel/time/clockevents.c' l='724' u='c' c='tick_broadcast_init_sysfs'/>
<use f='linux/kernel/time/clockevents.c' l='748' u='c' c='tick_init_sysfs'/>
<use f='linux/kernel/time/clocksource.c' l='1016' u='c' c='init_clocksource_sysfs'/>
<use f='linux/kernel/workqueue.c' l='5327' u='c' c='workqueue_sysfs_register'/>
