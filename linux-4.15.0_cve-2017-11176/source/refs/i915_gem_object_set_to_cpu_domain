<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3767' type='int i915_gem_object_set_to_cpu_domain(struct drm_i915_gem_object * obj, bool write)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='333' u='c' c='i915_gem_object_unbind'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='803' u='c' c='i915_gem_obj_prepare_shmem_read'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='856' u='c' c='i915_gem_obj_prepare_shmem_write'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1636' u='c' c='i915_gem_set_domain_ioctl'/>
<def f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3985' ll='4021' type='int i915_gem_object_set_to_cpu_domain(struct drm_i915_gem_object * obj, bool write)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3977'>/**
 * Moves a single object to the CPU read, and possibly write domain.
 * @obj: object to act on
 * @write: requesting write or read-only access
 *
 * This function returns when the move is complete, including waiting on
 * flushes to occur.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_dmabuf.c' l='193' u='c' c='i915_gem_begin_cpu_access'/>
<use f='linux/drivers/gpu/drm/i915/intel_lrc.c' l='2191' u='c' c='populate_lr_context'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.c' l='1231' u='c' c='intel_ring_pin'/>
