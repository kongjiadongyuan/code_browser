<def f='linux/include/crypto/aead.h' l='328' ll='331' type='int crypto_aead_encrypt(struct aead_request * req)'/>
<doc f='linux/include/crypto/aead.h' l='309'>/**
 * crypto_aead_encrypt() - encrypt plaintext
 * @req: reference to the aead_request handle that holds all information
 *	 needed to perform the cipher operation
 *
 * Encrypt plaintext data using the aead_request handle. That data structure
 * and how it is filled with data is discussed with the aead_request_*
 * functions.
 *
 * IMPORTANT NOTE The encryption operation creates the authentication data /
 *		  tag. That data is concatenated with the created ciphertext.
 *		  The ciphertext memory size is therefore the given number of
 *		  block cipher blocks + the size defined by the
 *		  crypto_aead_setauthsize invocation. The caller must ensure
 *		  that sufficient memory is available for the ciphertext and
 *		  the authentication tag.
 *
 * Return: 0 if the cipher operation was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux/crypto/ccm.c' l='715' u='c' c='crypto_rfc4309_encrypt'/>
<use f='linux/crypto/echainiv.c' l='87' u='c' c='echainiv_encrypt'/>
<use f='linux/crypto/gcm.c' l='853' u='c' c='crypto_rfc4106_encrypt'/>
<use f='linux/crypto/gcm.c' l='1060' u='c' c='crypto_rfc4543_crypt'/>
<use f='linux/crypto/seqiv.c' l='111' u='c' c='seqiv_aead_encrypt'/>
<use f='linux/net/ipv6/esp6.c' l='393' u='c' c='esp6_output_tail'/>
<use f='linux/net/mac80211/aead_api.c' l='46' u='c' c='aead_encrypt'/>
<use f='linux/net/mac80211/aes_gmac.c' l='53' u='c' c='ieee80211_aes_gmac'/>
