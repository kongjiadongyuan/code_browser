<dec f='linux/include/drm/drm_atomic_helper.h' l='74' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1491' u='c' c='drm_atomic_helper_commit'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1507' u='c' c='drm_atomic_helper_commit'/>
<def f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2012' ll='2047' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2048' type='int drm_atomic_helper_prepare_planes(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2048' c='drm_atomic_helper_prepare_planes'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2048' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2048' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1999'>/**
 * drm_atomic_helper_prepare_planes - prepare plane resources before commit
 * @dev: DRM device
 * @state: atomic state object with new state structures
 *
 * This function prepares plane state, specifically framebuffers, for the new
 * configuration, by calling &amp;drm_plane_helper_funcs.prepare_fb. If any failure
 * is encountered this function will call &amp;drm_plane_helper_funcs.cleanup_fb on
 * any already successfully prepared framebuffer.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12095' u='c' c='intel_atomic_prepare_commit'/>
