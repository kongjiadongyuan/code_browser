<dec f='linux/include/linux/blkdev.h' l='1371' type='int blkdev_issue_zeroout(struct block_device * bdev, sector_t sector, sector_t nr_sects, gfp_t gfp_mask, unsigned int flags)'/>
<use f='linux/include/linux/blkdev.h' l='1384' u='c' c='sb_issue_zeroout'/>
<def f='linux/block/blk-lib.c' l='365' ll='413' type='int blkdev_issue_zeroout(struct block_device * bdev, sector_t sector, sector_t nr_sects, gfp_t gfp_mask, unsigned int flags)'/>
<dec f='linux/block/blk-lib.c' l='414' type='int blkdev_issue_zeroout(struct block_device * , sector_t , sector_t , gfp_t , unsigned int )'/>
<use f='linux/block/blk-lib.c' l='414' c='blkdev_issue_zeroout'/>
<use f='linux/block/blk-lib.c' l='414' u='a'/>
<use f='linux/block/blk-lib.c' l='414' u='a'/>
<doc f='linux/block/blk-lib.c' l='352'>/**
 * blkdev_issue_zeroout - zero-fill a block range
 * @bdev:	blockdev to write
 * @sector:	start sector
 * @nr_sects:	number of sectors to write
 * @gfp_mask:	memory allocation flags (for bio_alloc)
 * @flags:	controls detailed behavior
 *
 * Description:
 *  Zero-fill a block range, either using hardware offload or by explicitly
 *  writing zeroes to the device.  See __blkdev_issue_zeroout() for the
 *  valid values for %flags.
 */</doc>
<use f='linux/block/ioctl.c' l='263' u='c' c='blk_ioctl_zeroout'/>
<use f='linux/fs/block_dev.c' l='1996' u='c' c='blkdev_fallocate'/>
<use f='linux/fs/block_dev.c' l='2000' u='c' c='blkdev_fallocate'/>
