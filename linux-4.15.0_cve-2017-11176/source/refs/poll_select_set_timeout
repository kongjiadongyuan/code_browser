<dec f='linux/include/linux/poll.h' l='107' type='int poll_select_set_timeout(struct timespec * to, time64_t sec, long nsec)'/>
<def f='linux/fs/select.c' l='274' ll='289' type='int poll_select_set_timeout(struct timespec * to, time64_t sec, long nsec)'/>
<use f='linux/fs/select.c' l='689' u='c' c='SYSC_select'/>
<use f='linux/fs/select.c' l='714' u='c' c='do_pselect'/>
<use f='linux/fs/select.c' l='1020' u='c' c='SYSC_poll'/>
<use f='linux/fs/select.c' l='1059' u='c' c='SYSC_ppoll'/>
<use f='linux/fs/select.c' l='1270' u='c' c='C_SYSC_select'/>
<use f='linux/fs/select.c' l='1314' u='c' c='do_compat_pselect'/>
<use f='linux/fs/select.c' l='1380' u='c' c='C_SYSC_ppoll'/>
<doc f='linux/fs/select.c' l='263'>/**
 * poll_select_set_timeout - helper function to setup the timeout value
 * @to:		pointer to timespec64 variable for the final timeout
 * @sec:	seconds (from user space)
 * @nsec:	nanoseconds (from user space)
 *
 * Note, we do not use a timespec for the user space value here, That
 * way we can use the function for timeval and compat interfaces as well.
 *
 * Returns -EINVAL if sec/nsec are not normalized. Otherwise 0.
 */</doc>
<use f='linux/net/socket.c' l='2263' u='c' c='__sys_recvmmsg'/>
