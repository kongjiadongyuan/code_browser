<def f='linux/include/linux/balloon_compaction.h' l='62' ll='69'/>
<use f='linux/include/linux/balloon_compaction.h' l='66'/>
<use f='linux/include/linux/balloon_compaction.h' l='72' c='balloon_page_enqueue'/>
<use f='linux/include/linux/balloon_compaction.h' l='74' c='balloon_page_dequeue'/>
<use f='linux/include/linux/balloon_compaction.h' l='76' c='balloon_devinfo_init'/>
<use f='linux/include/linux/balloon_compaction.h' l='149' c='balloon_page_insert'/>
<size>48</size>
<doc f='linux/include/linux/balloon_compaction.h' l='55'>/*
 * Balloon device information descriptor.
 * This struct is used to allow the common balloon compaction interface
 * procedures to find the proper balloon device holding memory pages they&apos;ll
 * have to cope for page compaction / migration, as well as it serves the
 * balloon driver as a page book-keeper for its registered balloon devices.
 */</doc>
<mbr r='balloon_dev_info::isolated_pages' o='0' t='unsigned long'/>
<mbr r='balloon_dev_info::pages_lock' o='64' t='spinlock_t'/>
<mbr r='balloon_dev_info::pages' o='128' t='struct list_head'/>
<mbr r='balloon_dev_info::migratepage' o='256' t='int (*)(struct balloon_dev_info *, struct page *, struct page *, enum migrate_mode)'/>
<mbr r='balloon_dev_info::inode' o='320' t='struct inode *'/>
