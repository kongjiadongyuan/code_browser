<dec f='linux/drivers/cpufreq/cpufreq_governor.h' l='184' type='void gov_update_cpu_data(struct dbs_data * dbs_data)'/>
<def f='linux/drivers/cpufreq/cpufreq_governor.c' l='98' ll='114' type='void gov_update_cpu_data(struct dbs_data * dbs_data)'/>
<dec f='linux/drivers/cpufreq/cpufreq_governor.c' l='115' type='void gov_update_cpu_data(struct dbs_data * )'/>
<use f='linux/drivers/cpufreq/cpufreq_governor.c' l='115' c='gov_update_cpu_data'/>
<use f='linux/drivers/cpufreq/cpufreq_governor.c' l='115' u='a'/>
<use f='linux/drivers/cpufreq/cpufreq_governor.c' l='115' u='a'/>
<doc f='linux/drivers/cpufreq/cpufreq_governor.c' l='88'>/**
 * gov_update_cpu_data - Update CPU load data.
 * @dbs_data: Top-level governor data pointer.
 *
 * Update CPU load data for all CPUs in the domain governed by @dbs_data
 * (that may be a single policy or a bunch of them if governor tunables are
 * system-wide).
 *
 * Call under the @dbs_data mutex.
 */</doc>
<use f='linux/drivers/cpufreq/cpufreq_ondemand.c' l='219' u='c' c='store_io_is_busy'/>
<use f='linux/drivers/cpufreq/cpufreq_ondemand.c' l='289' u='c' c='store_ignore_nice_load'/>
