<dec f='linux/include/linux/skbuff.h' l='1671' type='void skb_insert(struct sk_buff * old, struct sk_buff * newsk, struct sk_buff_head * list)'/>
<doc f='linux/include/linux/skbuff.h' l='1665'>/*
 *	Insert an sk_buff on a list.
 *
 *	The &quot;__skb_xxxx()&quot; functions are the non-atomic ones that
 *	can only be called with interrupts disabled.
 */</doc>
<def f='linux/net/core/skbuff.c' l='2955' ll='2962' type='void skb_insert(struct sk_buff * old, struct sk_buff * newsk, struct sk_buff_head * list)'/>
<dec f='linux/net/core/skbuff.c' l='2963' type='void skb_insert(struct sk_buff * , struct sk_buff * , struct sk_buff_head * )'/>
<use f='linux/net/core/skbuff.c' l='2963' c='skb_insert'/>
<use f='linux/net/core/skbuff.c' l='2963' u='a'/>
<use f='linux/net/core/skbuff.c' l='2963' u='a'/>
<doc f='linux/net/core/skbuff.c' l='2943'>/**
 *	skb_insert	-	insert a buffer
 *	@old: buffer to insert before
 *	@newsk: buffer to insert
 *	@list: list to use
 *
 *	Place a packet before a given packet in a list. The list locks are
 * 	taken and this function is atomic with respect to other list locked
 *	calls.
 *
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
