<dec f='linux/include/drm/drm_gem.h' l='307' type='int drm_gem_dumb_destroy(struct drm_file * file, struct drm_device * dev, uint32_t handle)'/>
<use f='linux/drivers/gpu/drm/drm_dumb_buffers.c' l='136' u='c' c='drm_mode_destroy_dumb_ioctl'/>
<def f='linux/drivers/gpu/drm/drm_gem.c' l='355' ll='360' type='int drm_gem_dumb_destroy(struct drm_file * file, struct drm_device * dev, uint32_t handle)'/>
<dec f='linux/drivers/gpu/drm/drm_gem.c' l='361' type='int drm_gem_dumb_destroy(struct drm_file * , struct drm_device * , uint32_t )'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='361' c='drm_gem_dumb_destroy'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='361' u='a'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='361' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_gem.c' l='346'>/**
 * drm_gem_dumb_destroy - dumb fb callback helper for gem based drivers
 * @file: drm file-private structure to remove the dumb handle from
 * @dev: corresponding drm_device
 * @handle: the dumb handle to remove
 * 
 * This implements the &amp;drm_driver.dumb_destroy kms driver callback for drivers
 * which use gem to manage their backing storage.
 */</doc>
