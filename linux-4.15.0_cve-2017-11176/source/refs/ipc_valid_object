<def f='linux/ipc/util.h' l='198' ll='201' type='bool ipc_valid_object(struct kern_ipc_perm * perm)'/>
<doc f='linux/ipc/util.h' l='190'>/*
 * ipc_valid_object() - helper to sort out IPC_RMID races for codepaths
 * where the respective ipc_ids.rwsem is not being held down.
 * Checks whether the ipc object is still around or if it&apos;s gone already, as
 * ipc_rmid() may have already freed the ID while the ipc lock was spinning.
 * Needs to be called with kern_ipc_perm.lock held -- exception made for one
 * checkpoint case at sys_semtimedop() as noted in code commentary.
 */</doc>
<use f='linux/ipc/msg.c' l='774' u='c' c='do_msgsnd'/>
<use f='linux/ipc/msg.c' l='809' u='c' c='do_msgsnd'/>
<use f='linux/ipc/msg.c' l='1013' u='c' c='do_msgrcv'/>
<use f='linux/ipc/sem.c' l='1301' u='c' c='semctl_setval'/>
<use f='linux/ipc/sem.c' l='1359' u='c' c='semctl_main'/>
<use f='linux/ipc/sem.c' l='1379' u='c' c='semctl_main'/>
<use f='linux/ipc/sem.c' l='1428' u='c' c='semctl_main'/>
<use f='linux/ipc/sem.c' l='1456' u='c' c='semctl_main'/>
<use f='linux/ipc/sem.c' l='1827' u='c' c='find_alloc_undo'/>
<use f='linux/ipc/sem.c' l='1971' u='c' c='do_semtimedop'/>
<use f='linux/ipc/sem.c' l='2083' u='c' c='do_semtimedop'/>
<use f='linux/ipc/sem.c' l='2233' u='c' c='exit_sem'/>
<use f='linux/ipc/shm.c' l='978' u='c' c='shmctl_do_lock'/>
<use f='linux/ipc/shm.c' l='1348' u='c' c='do_shmat'/>
<use f='linux/ipc/util.c' l='601' u='c' c='ipc_lock'/>
