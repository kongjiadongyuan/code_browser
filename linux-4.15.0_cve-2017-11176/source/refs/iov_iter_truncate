<def f='linux/include/linux/uio.h' l='209' ll='219' type='void iov_iter_truncate(struct iov_iter * i, u64 count)'/>
<doc f='linux/include/linux/uio.h' l='203'>/*
 * Cap the iov_iter by given limit; note that the second argument is
 * *not* the new size - it&apos;s upper limit for such.  Passing it a value
 * greater than the amount of data in iov_iter is fine - it&apos;ll just do
 * nothing in that case.
 */</doc>
<use f='linux/block/scsi_ioctl.c' l='352' u='c' c='sg_io'/>
<use f='linux/drivers/scsi/sg.c' l='1785' u='c' c='sg_start_req'/>
<use f='linux/fs/block_dev.c' l='1890' u='c' c='blkdev_write_iter'/>
<use f='linux/fs/block_dev.c' l='1912' u='c' c='blkdev_read_iter'/>
<use f='linux/fs/ext4/file.c' l='177' u='c' c='ext4_write_checks'/>
<use f='linux/fs/iomap.c' l='894' u='c' c='iomap_dio_actor'/>
<use f='linux/mm/filemap.c' l='2070' u='c' c='generic_file_buffered_read'/>
<use f='linux/mm/filemap.c' l='2949' u='c' c='generic_write_checks'/>
<use f='linux/mm/filemap.c' l='2959' u='c' c='generic_write_checks'/>
<use f='linux/mm/filemap.c' l='2972' u='c' c='generic_write_checks'/>
