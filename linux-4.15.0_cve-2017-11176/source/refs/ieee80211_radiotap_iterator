<def f='linux/include/net/cfg80211.h' l='4254' ll='4272'/>
<use f='linux/include/net/cfg80211.h' l='4275' c='ieee80211_radiotap_iterator_init'/>
<use f='linux/include/net/cfg80211.h' l='4281' c='ieee80211_radiotap_iterator_next'/>
<size>88</size>
<doc f='linux/include/net/cfg80211.h' l='4225'>/**
 * struct ieee80211_radiotap_iterator - tracks walk thru present radiotap args
 * @this_arg_index: index of current arg, valid after each successful call
 *	to ieee80211_radiotap_iterator_next()
 * @this_arg: pointer to current radiotap arg; it is valid after each
 *	call to ieee80211_radiotap_iterator_next() but also after
 *	ieee80211_radiotap_iterator_init() where it will point to
 *	the beginning of the actual data portion
 * @this_arg_size: length of the current arg, for convenience
 * @current_namespace: pointer to the current namespace definition
 *	(or internally %NULL if the current namespace is unknown)
 * @is_radiotap_ns: indicates whether the current namespace is the default
 *	radiotap namespace or not
 *
 * @_rtheader: pointer to the radiotap header we are walking through
 * @_max_length: length of radiotap header in cpu byte ordering
 * @_arg_index: next argument index
 * @_arg: next argument pointer
 * @_next_bitmap: internal pointer to next present u32
 * @_bitmap_shifter: internal shifter for curr u32 bitmap, b0 set == arg present
 * @_vns: vendor namespace definitions
 * @_next_ns_data: beginning of the next namespace&apos;s data
 * @_reset_on_ext: internal; reset the arg index to 0 when going to the
 *	next bitmap word
 *
 * Describes the radiotap parser state. Fields prefixed with an underscore
 * must not be used by users of the parser, only by the parser internally.
 */</doc>
<mbr r='ieee80211_radiotap_iterator::_rtheader' o='0' t='struct ieee80211_radiotap_header *'/>
<mbr r='ieee80211_radiotap_iterator::_vns' o='64' t='const struct ieee80211_radiotap_vendor_namespaces *'/>
<mbr r='ieee80211_radiotap_iterator::current_namespace' o='128' t='const struct ieee80211_radiotap_namespace *'/>
<mbr r='ieee80211_radiotap_iterator::_arg' o='192' t='unsigned char *'/>
<mbr r='ieee80211_radiotap_iterator::_next_ns_data' o='256' t='unsigned char *'/>
<mbr r='ieee80211_radiotap_iterator::_next_bitmap' o='320' t='__le32 *'/>
<mbr r='ieee80211_radiotap_iterator::this_arg' o='384' t='unsigned char *'/>
<mbr r='ieee80211_radiotap_iterator::this_arg_index' o='448' t='int'/>
<mbr r='ieee80211_radiotap_iterator::this_arg_size' o='480' t='int'/>
<mbr r='ieee80211_radiotap_iterator::is_radiotap_ns' o='512' t='int'/>
<mbr r='ieee80211_radiotap_iterator::_max_length' o='544' t='int'/>
<mbr r='ieee80211_radiotap_iterator::_arg_index' o='576' t='int'/>
<mbr r='ieee80211_radiotap_iterator::_bitmap_shifter' o='608' t='uint32_t'/>
<mbr r='ieee80211_radiotap_iterator::_reset_on_ext' o='640' t='int'/>
<use f='linux/net/mac80211/tx.c' l='1961' c='ieee80211_parse_tx_radiotap'/>
<size>88</size>
<use f='linux/net/wireless/radiotap.c' l='97' c='ieee80211_radiotap_iterator_init'/>
<use f='linux/net/wireless/radiotap.c' l='166' c='find_ns'/>
<use f='linux/net/wireless/radiotap.c' l='213' c='ieee80211_radiotap_iterator_next'/>
<size>88</size>
