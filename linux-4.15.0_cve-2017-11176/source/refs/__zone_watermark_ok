<dec f='linux/include/linux/mmzone.h' l='779' type='bool __zone_watermark_ok(struct zone * z, unsigned int order, unsigned long mark, int classzone_idx, unsigned int alloc_flags, long free_pages)'/>
<use f='linux/mm/compaction.c' l='1459' u='c' c='__compaction_suitable'/>
<def f='linux/mm/page_alloc.c' l='3004' ll='3081' type='bool __zone_watermark_ok(struct zone * z, unsigned int order, unsigned long mark, int classzone_idx, unsigned int alloc_flags, long free_pages)'/>
<use f='linux/mm/page_alloc.c' l='3086' u='c' c='zone_watermark_ok'/>
<use f='linux/mm/page_alloc.c' l='3112' u='c' c='zone_watermark_fast'/>
<use f='linux/mm/page_alloc.c' l='3124' u='c' c='zone_watermark_ok_safe'/>
<use f='linux/mm/page_alloc.c' l='3831' u='c' c='should_reclaim_retry'/>
<doc f='linux/mm/page_alloc.c' l='2998'>/*
 * Return true if free base pages are above &apos;mark&apos;. For high-order checks it
 * will return true of the order-0 watermark is reached and there is at least
 * one free page of a suitable size. Checking now avoids taking the zone lock
 * to check in the allocation paths if no pages are free.
 */</doc>
