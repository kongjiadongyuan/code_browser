<dec f='linux/include/acpi/acpi_bus.h' l='620' type='int acpi_pm_device_sleep_state(struct device * , int * , int )'/>
<def f='linux/drivers/acpi/device_pm.c' l='635' ll='676' type='int acpi_pm_device_sleep_state(struct device * dev, int * d_min_p, int d_max_in)'/>
<dec f='linux/drivers/acpi/device_pm.c' l='677' type='int acpi_pm_device_sleep_state(struct device * , int * , int )'/>
<use f='linux/drivers/acpi/device_pm.c' l='677' c='acpi_pm_device_sleep_state'/>
<use f='linux/drivers/acpi/device_pm.c' l='677' u='a'/>
<use f='linux/drivers/acpi/device_pm.c' l='677' u='a'/>
<doc f='linux/drivers/acpi/device_pm.c' l='624'>/**
 * acpi_pm_device_sleep_state - Get preferred power state of ACPI device.
 * @dev: Device whose preferred target power state to return.
 * @d_min_p: Location to store the upper limit of the allowed states range.
 * @d_max_in: Deepest low-power state to take into consideration.
 * Return value: Preferred power state of the device on success, -ENODEV
 * if there&apos;s no &apos;struct acpi_device&apos; for @dev, -EINVAL if @d_max_in is
 * incorrect, or -ENODATA on ACPI method failure.
 *
 * The caller must ensure that @dev is valid before using this function.
 */</doc>
<use f='linux/drivers/ata/libata-acpi.c' l='888' u='c' c='ata_acpi_choose_suspend_state'/>
<use f='linux/drivers/pci/pci-acpi.c' l='489' u='c' c='acpi_pci_choose_state'/>
<use f='linux/drivers/pnp/pnpacpi/core.c' l='159' u='c' c='pnpacpi_suspend'/>
