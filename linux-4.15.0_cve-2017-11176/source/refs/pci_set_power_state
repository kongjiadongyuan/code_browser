<dec f='linux/include/linux/pci.h' l='1142' type='int pci_set_power_state(struct pci_dev * dev, pci_power_t state)'/>
<use f='linux/drivers/ata/ata_piix.c' l='1051' u='c' c='piix_pci_device_resume'/>
<use f='linux/drivers/ata/libata-core.c' l='6723' u='c' c='ata_pci_device_do_suspend'/>
<use f='linux/drivers/ata/libata-core.c' l='6730' u='c' c='ata_pci_device_do_resume'/>
<use f='linux/drivers/char/agp/amd64-agp.c' l='595' u='c' c='agp_amd64_suspend'/>
<use f='linux/drivers/char/agp/amd64-agp.c' l='602' u='c' c='agp_amd64_resume'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='580' u='c' c='i915_switcheroo_set_state'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1637' u='c' c='i915_drm_suspend_late'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1781' u='c' c='i915_drm_resume_early'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='4015' u='c' c='tg3_power_up'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='4269' u='c' c='tg3_power_down'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='11724' u='c' c='tg3_open'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='3049' u='c' c='__e100_power_off'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='3067' u='c' c='e100_resume'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5185' u='c' c='e1000_suspend'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5198' u='c' c='e1000_resume'/>
<use f='linux/drivers/net/ethernet/intel/e1000/e1000_main.c' l='5248' u='c' c='e1000_shutdown'/>
<use f='linux/drivers/net/ethernet/marvell/sky2.c' l='5246' u='c' c='sky2_shutdown'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='6213' u='c' c='nv_shutdown'/>
<use f='linux/drivers/net/ethernet/realtek/8139too.c' l='2635' u='c' c='rtl8139_suspend'/>
<use f='linux/drivers/net/ethernet/realtek/8139too.c' l='2648' u='c' c='rtl8139_resume'/>
<use f='linux/drivers/net/ethernet/realtek/r8169.c' l='8229' u='c' c='rtl_shutdown'/>
<use f='linux/drivers/pci/pci-driver.c' l='508' u='c' c='pci_restore_standard_config'/>
<use f='linux/drivers/pci/pci-driver.c' l='1020' u='c' c='pci_pm_thaw_noirq'/>
<def f='linux/drivers/pci/pci.c' l='900' ll='939' type='int pci_set_power_state(struct pci_dev * dev, pci_power_t state)'/>
<dec f='linux/drivers/pci/pci.c' l='940' type='int pci_set_power_state(struct pci_dev * , pci_power_t )'/>
<use f='linux/drivers/pci/pci.c' l='940' c='pci_set_power_state'/>
<use f='linux/drivers/pci/pci.c' l='940' u='a'/>
<use f='linux/drivers/pci/pci.c' l='940' u='a'/>
<use f='linux/drivers/pci/pci.c' l='1302' u='c' c='do_pci_enable_device'/>
<use f='linux/drivers/pci/pci.c' l='2059' u='c' c='pci_prepare_to_sleep'/>
<use f='linux/drivers/pci/pci.c' l='2077' u='c' c='pci_back_from_sleep'/>
<use f='linux/drivers/pci/pci.c' l='2101' u='c' c='pci_finish_runtime_suspend'/>
<use f='linux/drivers/pci/pci.c' l='4219' u='c' c='pci_dev_save_and_disable'/>
<doc f='linux/drivers/pci/pci.c' l='883'>/**
 * pci_set_power_state - Set the power state of a PCI device
 * @dev: PCI device to handle.
 * @state: PCI power state (D0, D1, D2, D3hot) to put the device into.
 *
 * Transition a device to a new power state, using the platform firmware and/or
 * the device&apos;s PCI PM registers.
 *
 * RETURN VALUE:
 * -EINVAL if the requested state is invalid.
 * -EIO if device does not support PCI PM or its PM capabilities register has a
 * wrong version, or device doesn&apos;t support the requested state.
 * 0 if the transition is to D1 or D2 but D1 and D2 are not supported.
 * 0 if device already is in the requested state.
 * 0 if the transition is to D3 but D3 is not supported.
 * 0 if device&apos;s power state has been successfully changed.
 */</doc>
<use f='linux/sound/pci/hda/hda_intel.c' l='1079' u='c' c='azx_freeze_noirq'/>
<use f='linux/sound/pci/hda/hda_intel.c' l='1091' u='c' c='azx_thaw_noirq'/>
