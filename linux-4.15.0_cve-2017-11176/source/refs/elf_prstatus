<def f='linux/include/uapi/linux/elfcore.h' l='37' ll='75'/>
<use f='linux/include/linux/crash_core.h' l='12'/>
<use f='linux/include/linux/crash_core.h' l='12'/>
<use f='linux/include/linux/crash_core.h' l='12'/>
<size>336</size>
<doc f='linux/include/uapi/linux/elfcore.h' l='28'>/*
 * Definitions to generate Intel SVR4-like core files.
 * These mostly have the same names as the SVR4 types with &quot;elf_&quot;
 * tacked on the front to prevent clashes with linux definitions,
 * and the typedef forms have been avoided.  This is mostly like
 * the SVR4 structure, but more Linuxy, with things that Linux does
 * not support and which gdb doesn&apos;t really use excluded.
 * Fields present but not used are marked with &quot;XXX&quot;.
 */</doc>
<mbr r='elf_prstatus::pr_info' o='0' t='struct elf_siginfo'/>
<mbr r='elf_prstatus::pr_cursig' o='96' t='short'/>
<mbr r='elf_prstatus::pr_sigpend' o='128' t='unsigned long'/>
<mbr r='elf_prstatus::pr_sighold' o='192' t='unsigned long'/>
<mbr r='elf_prstatus::pr_pid' o='256' t='pid_t'/>
<mbr r='elf_prstatus::pr_ppid' o='288' t='pid_t'/>
<mbr r='elf_prstatus::pr_pgrp' o='320' t='pid_t'/>
<mbr r='elf_prstatus::pr_sid' o='352' t='pid_t'/>
<mbr r='elf_prstatus::pr_utime' o='384' t='struct timeval'/>
<mbr r='elf_prstatus::pr_stime' o='512' t='struct timeval'/>
<mbr r='elf_prstatus::pr_cutime' o='640' t='struct timeval'/>
<mbr r='elf_prstatus::pr_cstime' o='768' t='struct timeval'/>
<mbr r='elf_prstatus::pr_reg' o='896' t='elf_gregset_t'/>
<mbr r='elf_prstatus::pr_fpvalid' o='2624' t='int'/>
<use f='linux/fs/binfmt_elf.c' l='1483' c='fill_prstatus'/>
<use f='linux/fs/binfmt_elf.c' l='1673'/>
<size>336</size>
<use f='linux/fs/proc/kcore.c' l='95' c='get_kcore_size'/>
<use f='linux/fs/proc/kcore.c' l='323' c='elf_kcore_store_hdr'/>
<use f='linux/fs/proc/kcore.c' l='395' c='elf_kcore_store_hdr'/>
<use f='linux/fs/proc/kcore.c' l='398' c='elf_kcore_store_hdr'/>
<size>336</size>
<use f='linux/kernel/kexec_core.c' l='1046' c='crash_save_cpu'/>
<size>336</size>
