<dec f='linux/include/linux/mount.h' l='77' type='int mnt_want_write_file(struct file * file)'/>
<use f='linux/fs/efivarfs/file.c' l='147' u='c' c='efivarfs_ioc_setxflags'/>
<use f='linux/fs/ext4/ioctl.c' l='345' u='c' c='ext4_ioctl_setproject'/>
<use f='linux/fs/ext4/ioctl.c' l='612' u='c' c='ext4_ioctl_group_add'/>
<use f='linux/fs/ext4/ioctl.c' l='669' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='698' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='746' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='799' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='831' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='853' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='866' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='888' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='1027' u='c' c='ext4_ioctl'/>
<use f='linux/fs/fat/file.c' l='47' u='c' c='fat_ioctl_set_attributes'/>
<def f='linux/fs/namespace.c' l='491' ll='503' type='int mnt_want_write_file(struct file * file)'/>
<dec f='linux/fs/namespace.c' l='504' type='int mnt_want_write_file(struct file * )'/>
<use f='linux/fs/namespace.c' l='504' c='mnt_want_write_file'/>
<use f='linux/fs/namespace.c' l='504' u='a'/>
<use f='linux/fs/namespace.c' l='504' u='a'/>
<doc f='linux/fs/namespace.c' l='480'>/**
 * mnt_want_write_file - get write access to a file&apos;s mount
 * @file: the file who&apos;s mount on which to take a write
 *
 * This is like mnt_want_write, but it takes a file and can
 * do some optimisations if the file is open for write already
 *
 * Mostly called by filesystems from their ioctl operation before performing
 * modification.  On overlayfs this needs to check if the file is on a read-only
 * lower layer and deny access in that case.
 */</doc>
<use f='linux/fs/read_write.c' l='1996' u='c' c='vfs_dedupe_file_range'/>
