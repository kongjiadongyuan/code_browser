<dec f='linux/include/drm/drm_agpsupport.h' l='45' type='int drm_agp_release(struct drm_device * dev)'/>
<def f='linux/drivers/gpu/drm/drm_agpsupport.c' l='137' ll='144' type='int drm_agp_release(struct drm_device * dev)'/>
<dec f='linux/drivers/gpu/drm/drm_agpsupport.c' l='145' type='int drm_agp_release(struct drm_device * )'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='145' c='drm_agp_release'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='145' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='145' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='150' u='c' c='drm_agp_release_ioctl'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='456' u='c' c='drm_legacy_agp_clear'/>
<doc f='linux/drivers/gpu/drm/drm_agpsupport.c' l='129'>/**
 * Release the AGP device.
 *
 * \param dev DRM device that is to release AGP.
 * \return zero on success or a negative number on failure.
 *
 * Verifies the AGP device has been acquired and calls \c agp_backend_release.
 */</doc>
