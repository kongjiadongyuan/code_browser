<def f='linux/include/linux/phy.h' l='728' ll='731' type='int phy_write(struct phy_device * phydev, u32 regnum, u16 val)'/>
<doc f='linux/include/linux/phy.h' l='718'>/**
 * phy_write - Convenience function for writing a given PHY register
 * @phydev: the phy_device struct
 * @regnum: register number to write
 * @val: value to write to @regnum
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 */</doc>
<use f='linux/drivers/net/phy/phy_device.c' l='1251' u='c' c='genphy_config_advert'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1285' u='c' c='genphy_config_advert'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1353' u='c' c='genphy_setup_forced'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1373' u='c' c='genphy_restart_aneg'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1585' u='c' c='genphy_soft_reset'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1644' u='c' c='genphy_suspend'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1657' u='c' c='genphy_resume'/>
<use f='linux/drivers/net/phy/phy_device.c' l='1676' u='c' c='genphy_loopback'/>
