<dec f='linux/include/linux/sunrpc/xdr.h' l='228' type='void xdr_commit_encode(struct xdr_stream * xdr)'/>
<def f='linux/net/sunrpc/xdr.c' l='498' ll='509' type='void xdr_commit_encode(struct xdr_stream * xdr)'/>
<dec f='linux/net/sunrpc/xdr.c' l='510' type='void xdr_commit_encode(struct xdr_stream * )'/>
<use f='linux/net/sunrpc/xdr.c' l='510' c='xdr_commit_encode'/>
<use f='linux/net/sunrpc/xdr.c' l='510' u='a'/>
<use f='linux/net/sunrpc/xdr.c' l='510' u='a'/>
<use f='linux/net/sunrpc/xdr.c' l='567' u='c' c='xdr_reserve_space'/>
<use f='linux/net/sunrpc/xdr.c' l='615' u='c' c='xdr_truncate_encode'/>
<doc f='linux/net/sunrpc/xdr.c' l='485'>/**
 * xdr_commit_encode - Ensure all data is written to buffer
 * @xdr: pointer to xdr_stream
 *
 * We handle encoding across page boundaries by giving the caller a
 * temporary location to write to, then later copying the data into
 * place; xdr_commit_encode does that copying.
 *
 * Normally the caller doesn&apos;t need to call this directly, as the
 * following xdr_reserve_space will do it.  But an explicit call may be
 * required at the end of encoding, or any other time when the xdr_buf
 * data might be read.
 */</doc>
