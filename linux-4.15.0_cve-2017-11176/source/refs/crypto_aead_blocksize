<def f='linux/include/crypto/aead.h' l='248' ll='251' type='unsigned int crypto_aead_blocksize(struct crypto_aead * tfm)'/>
<doc f='linux/include/crypto/aead.h' l='238'>/**
 * crypto_aead_blocksize() - obtain block size of cipher
 * @tfm: cipher handle
 *
 * The block size for the AEAD referenced with the cipher handle is returned.
 * The caller may use that information to allocate appropriate memory for the
 * data returned by the encryption or decryption operation
 *
 * Return: block size of cipher
 */</doc>
<use f='linux/crypto/blkcipher.c' l='369' u='c' c='blkcipher_aead_walk_virt_block'/>
<use f='linux/crypto/skcipher.c' l='534' u='c' c='skcipher_walk_aead_common'/>
<use f='linux/net/ipv6/esp6.c' l='445' u='c' c='esp6_output'/>
<use f='linux/net/ipv6/esp6.c' l='445' u='c' c='esp6_output'/>
<use f='linux/net/ipv6/esp6.c' l='445' u='c' c='esp6_output'/>
<use f='linux/net/ipv6/esp6.c' l='683' u='c' c='esp6_get_mtu'/>
<use f='linux/net/ipv6/esp6.c' l='683' u='c' c='esp6_get_mtu'/>
<use f='linux/net/ipv6/esp6.c' l='683' u='c' c='esp6_get_mtu'/>
<use f='linux/net/ipv6/esp6.c' l='901' u='c' c='esp6_init_state'/>
<use f='linux/net/ipv6/esp6.c' l='901' u='c' c='esp6_init_state'/>
<use f='linux/net/ipv6/esp6.c' l='901' u='c' c='esp6_init_state'/>
