<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3363' type='void i915_handle_error(struct drm_i915_private * dev_priv, u32 engine_mask, const char * fmt)'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='4093' u='c' c='i915_wedged_set'/>
<def f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2836' ll='2914' type='void i915_handle_error(struct drm_i915_private * dev_priv, u32 engine_mask, const char * fmt)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2824'>/**
 * i915_handle_error - handle a gpu error
 * @dev_priv: i915 device private
 * @engine_mask: mask representing engines that are hung
 * @fmt: Error message format string
 *
 * Do some basic checking of register state at error time and
 * dump it to the syslog.  Also call i915_capture_error_state() to make
 * sure we get a record and make it available in debugfs.  Fire a uevent
 * so userspace knows something bad happened (should trigger collection
 * of a ring dump etc.).
 */</doc>
<use f='linux/drivers/gpu/drm/i915/intel_hangcheck.c' l='269' u='c' c='engine_stuck'/>
<use f='linux/drivers/gpu/drm/i915/intel_hangcheck.c' l='281' u='c' c='engine_stuck'/>
<use f='linux/drivers/gpu/drm/i915/intel_hangcheck.c' l='410' u='c' c='hangcheck_declare_hang'/>
