<dec f='linux/include/linux/pm-trace.h' l='24' type='void generate_pm_trace(const void * tracedata, unsigned int user)'/>
<use f='linux/drivers/base/power/main.c' l='559' macro='1' u='c' c='device_resume_noirq'/>
<use f='linux/drivers/base/power/main.c' l='593' macro='1' u='c' c='device_resume_noirq'/>
<use f='linux/drivers/base/power/main.c' l='699' macro='1' u='c' c='device_resume_early'/>
<use f='linux/drivers/base/power/main.c' l='732' macro='1' u='c' c='device_resume_early'/>
<use f='linux/drivers/base/power/main.c' l='828' macro='1' u='c' c='device_resume'/>
<use f='linux/drivers/base/power/main.c' l='898' macro='1' u='c' c='device_resume'/>
<use f='linux/drivers/base/power/main.c' l='1108' macro='1' u='c' c='__device_suspend_noirq'/>
<use f='linux/drivers/base/power/main.c' l='1150' macro='1' u='c' c='__device_suspend_noirq'/>
<use f='linux/drivers/base/power/main.c' l='1267' macro='1' u='c' c='__device_suspend_late'/>
<use f='linux/drivers/base/power/main.c' l='1310' macro='1' u='c' c='__device_suspend_late'/>
<use f='linux/drivers/base/power/main.c' l='1468' macro='1' u='c' c='__device_suspend'/>
<use f='linux/drivers/base/power/main.c' l='1570' macro='1' u='c' c='__device_suspend'/>
<def f='linux/drivers/base/power/trace.c' l='162' ll='171' type='void generate_pm_trace(const void * tracedata, unsigned int user)'/>
<dec f='linux/drivers/base/power/trace.c' l='172' type='void generate_pm_trace(const void * , unsigned int )'/>
<use f='linux/drivers/base/power/trace.c' l='172' c='generate_pm_trace'/>
<use f='linux/drivers/base/power/trace.c' l='172' u='a'/>
<use f='linux/drivers/base/power/trace.c' l='172' u='a'/>
<doc f='linux/drivers/base/power/trace.c' l='153'>/*
 * We could just take the &quot;tracedata&quot; index into the .tracedata
 * section instead. Generating a hash of the data gives us a
 * chance to work across kernel versions, and perhaps more
 * importantly it also gives us valid/invalid check (ie we will
 * likely not give totally bogus reports - if the hash matches,
 * it&apos;s not any guarantee, but it&apos;s a high _likelihood_ that
 * the match is valid).
 */</doc>
