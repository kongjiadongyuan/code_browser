<dec f='linux/include/linux/input/touchscreen.h' l='30' type='void touchscreen_report_pos(struct input_dev * input, const struct touchscreen_properties * prop, unsigned int x, unsigned int y, bool multitouch)'/>
<def f='linux/drivers/input/touchscreen/of_touchscreen.c' l='179' ll='187' type='void touchscreen_report_pos(struct input_dev * input, const struct touchscreen_properties * prop, unsigned int x, unsigned int y, bool multitouch)'/>
<dec f='linux/drivers/input/touchscreen/of_touchscreen.c' l='188' type='void touchscreen_report_pos(struct input_dev * , const struct touchscreen_properties * , unsigned int , unsigned int , bool )'/>
<use f='linux/drivers/input/touchscreen/of_touchscreen.c' l='188' c='touchscreen_report_pos'/>
<use f='linux/drivers/input/touchscreen/of_touchscreen.c' l='188' u='a'/>
<use f='linux/drivers/input/touchscreen/of_touchscreen.c' l='188' u='a'/>
<doc f='linux/drivers/input/touchscreen/of_touchscreen.c' l='167'>/**
 * touchscreen_report_pos - Report touchscreen coordinates
 * @input: input_device to report coordinates for
 * @prop: pointer to a struct touchscreen_properties
 * @x: X coordinate to report
 * @y: Y coordinate to report
 * @multitouch: Report coordinates on single-touch or multi-touch axes
 *
 * Adjust the passed in x and y values applying any axis inversion and
 * swapping requested in the passed in touchscreen_properties and then
 * report the resulting coordinates on the input_dev&apos;s x and y axis.
 */</doc>
