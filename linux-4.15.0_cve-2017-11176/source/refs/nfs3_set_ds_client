<dec f='linux/fs/nfs/internal.h' l='205' type='struct nfs_client * nfs3_set_ds_client(struct nfs_server * mds_srv, const struct sockaddr * ds_addr, int ds_addrlen, int ds_proto, unsigned int ds_timeo, unsigned int ds_retrans)'/>
<def f='linux/fs/nfs/nfs3client.c' l='79' ll='111' type='struct nfs_client * nfs3_set_ds_client(struct nfs_server * mds_srv, const struct sockaddr * ds_addr, int ds_addrlen, int ds_proto, unsigned int ds_timeo, unsigned int ds_retrans)'/>
<dec f='linux/fs/nfs/nfs3client.c' l='112' type='struct nfs_client * nfs3_set_ds_client(struct nfs_server * , const struct sockaddr * , int , int , unsigned int , unsigned int )'/>
<use f='linux/fs/nfs/nfs3client.c' l='112' c='nfs3_set_ds_client'/>
<use f='linux/fs/nfs/nfs3client.c' l='112' u='a'/>
<use f='linux/fs/nfs/nfs3client.c' l='112' u='a'/>
<doc f='linux/fs/nfs/nfs3client.c' l='69'>/*
 * Set up a pNFS Data Server client over NFSv3.
 *
 * Return any existing nfs_client that matches server address,port,version
 * and minorversion.
 *
 * For a new nfs_client, use a soft mount (default), a low retrans and a
 * low timeout interval so that if a connection is lost, we retry through
 * the MDS.
 */</doc>
