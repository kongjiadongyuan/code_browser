<use f='libc2.31/catgets/catgets.c' l='46' u='c' c='catopen'/>
<use f='libc2.31/catgets/catgets.c' l='52' u='c' c='catopen'/>
<use f='libc2.31/gmon/gmon.c' l='359' u='c' c='write_gmon'/>
<use f='libc2.31/iconv/gconv_cache.c' l='56' u='c' c='__gconv_load_cache'/>
<use f='libc2.31/intl/dcigettext.c' l='1565' u='c' c='guess_category_value'/>
<use f='libc2.31/intl/dcigettext.c' l='1604' u='c' c='get_output_charset'/>
<use f='libc2.31/locale/findlocale.c' l='119' u='c' c='_nl_find_locale'/>
<use f='libc2.31/locale/findlocale.c' l='121' u='c' c='_nl_find_locale'/>
<use f='libc2.31/locale/findlocale.c' l='123' u='c' c='_nl_find_locale'/>
<use f='libc2.31/locale/newlocale.c' l='105' u='c' c='__newlocale'/>
<use f='libc2.31/locale/setlocale.c' l='252' u='c' c='__GI_setlocale'/>
<use f='libc2.31/nscd/nscd_gethst_r.c' l='141' u='c' c='nscd_gethst_r'/>
<def f='libc2.31/stdlib/getenv.c' l='32' ll='91' type='char * getenv(const char * name)'/>
<use f='libc2.31/stdlib/getenv.c' l='92' c='__EI_getenv'/>
<use f='libc2.31/stdlib/getenv.c' l='92' c='__EI_getenv'/>
<doc f='libc2.31/stdlib/getenv.c' l='26'>/* Return the value of the environment variable NAME.  This implementation
   is tuned a bit in that it assumes no environment variable has an empty
   name which of course should always be true.  We have a special case for
   one character names so that for the general case we can assume at least
   two characters which we can access.  By doing this we can avoid using the
   `strncmp&apos; most of the time.  */</doc>
<use f='libc2.31/time/tzset.c' l='377' u='c' c='tzset_internal'/>
