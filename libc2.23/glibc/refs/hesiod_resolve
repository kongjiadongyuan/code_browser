<dec f='glibc/hesiod/hesiod.h' l='33' type='char ** hesiod_resolve(void * context, const char * name, const char * type)'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-grp.c' l='65' u='c' c='lookup'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-grp.c' l='136' u='c' c='internal_gid_from_group'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-grp.c' l='186' u='c' c='_nss_hesiod_initgroups_dyn'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-proto.c' l='75' u='c' c='lookup'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-pwd.c' l='63' u='c' c='lookup'/>
<use f='glibc/hesiod/nss_hesiod/hesiod-service.c' l='76' u='c' c='lookup'/>
<dec f='glibc/hesiod/hesiod.c' l='59' type='char ** hesiod_resolve(void * context, const char * name, const char * type)'/>
<use f='glibc/hesiod/hesiod.c' l='181' u='c' c='hesiod_to_bind'/>
<def f='glibc/hesiod/hesiod.c' l='227' ll='248' type='char ** hesiod_resolve(void * context, const char * name, const char * type)'/>
<doc f='glibc/hesiod/hesiod.c' l='223'>/*
 * This is the core function.  Given a hesiod (name, type), it
 * returns an array of strings returned by the resolver.
 */</doc>
