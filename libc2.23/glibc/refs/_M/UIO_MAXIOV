<dec f='glibc/sysdeps/unix/sysv/linux/bits/uio.h' l='39'/>
<doc f='glibc/sysdeps/unix/sysv/linux/bits/uio.h' l='32'>/* Size of object which can be written atomically.

   This macro has different values in different kernel versions.  The
   latest versions of the kernel use 1024 and this is good choice.  Since
   the C library implementation of readv/writev is able to emulate the
   functionality even if the currently running kernel does not support
   this large value the readv/writev call will not fail because of this.  */</doc>
<use f='glibc/locale/programs/locfile.c' l='807' u='a'/>
<use f='glibc/locale/programs/locfile.c' l='808' u='c'/>
<use f='glibc/sysdeps/posix/sysconf.c' l='407' u='a'/>
<use f='glibc/sysdeps/posix/sysconf.c' l='408' u='c'/>
