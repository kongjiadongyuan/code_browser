<dec f='glibc/include/stdlib.h' l='117' type='int __posix_memalign(void ** memptr, size_t alignment, size_t size)'/>
<dec f='glibc/malloc/malloc.c' l='705' type='int __posix_memalign(void ** , size_t , size_t )'/>
<def f='glibc/malloc/malloc.c' l='5341' ll='5364' type='int __posix_memalign(void ** memptr, size_t alignment, size_t size)'/>
<use f='glibc/malloc/malloc.c' l='5365' c='posix_memalign'/>
<doc f='glibc/malloc/malloc.c' l='700'>/*
  posix_memalign(void **memptr, size_t alignment, size_t size);

  POSIX wrapper like memalign(), checking for validity of size.
*/</doc>
<doc f='glibc/malloc/malloc.c' l='5340'>/* We need a wrapper function for one of the additions of POSIX.  */</doc>
