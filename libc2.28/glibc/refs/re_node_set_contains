<def f='glibc/posix/regex_internal.c' l='1367' ll='1387' type='Idx re_node_set_contains(const re_node_set * set, Idx elem)'/>
<use f='glibc/posix/regcomp.c' l='1050' u='c' c='create_initial_state'/>
<use f='glibc/posix/regexec.c' l='1247' u='c' c='proceed_next_node'/>
<use f='glibc/posix/regexec.c' l='1256' u='c' c='proceed_next_node'/>
<use f='glibc/posix/regexec.c' l='1305' u='c' c='proceed_next_node'/>
<use f='glibc/posix/regexec.c' l='1317' u='c' c='proceed_next_node'/>
<use f='glibc/posix/regexec.c' l='1565' u='c' c='build_sifted_states'/>
<use f='glibc/posix/regexec.c' l='1832' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='1833' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='1835' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='1836' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='1851' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='1853' u='c' c='sub_epsilon_src_nodes'/>
<use f='glibc/posix/regexec.c' l='2055' u='c' c='check_subexp_limits'/>
<use f='glibc/posix/regexec.c' l='2057' u='c' c='check_subexp_limits'/>
<use f='glibc/posix/regexec.c' l='1565' u='c' c='sift_states_bkref'/>
<use f='glibc/posix/regexec.c' l='2174' macro='1' u='c'/>
<use f='glibc/posix/regexec.c' l='1565' u='c' c='sift_states_iter_mb'/>
<use f='glibc/posix/regexec.c' l='2993' u='c' c='check_arrival'/>
<use f='glibc/posix/regexec.c' l='3146' u='c' c='check_arrival_expand_ecl_sub'/>
<use f='glibc/posix/regexec.c' l='3205' u='c' c='expand_bkref_cache'/>
<use f='glibc/posix/regexec.c' l='3218' u='c' c='expand_bkref_cache'/>
<use f='glibc/posix/regexec.c' l='3241' u='c' c='expand_bkref_cache'/>
<doc f='glibc/posix/regex_internal.c' l='1365'>/* Return (idx + 1) if SET contains the element ELEM, return 0 otherwise.  */</doc>
