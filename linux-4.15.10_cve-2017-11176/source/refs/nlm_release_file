<dec f='linux/include/linux/lockd/lockd.h' l='288' type='void nlm_release_file(struct nlm_file * )'/>
<use f='linux/fs/lockd/svc4proc.c' l='98' u='c' c='__nlm4svc_proc_test'/>
<use f='linux/fs/lockd/svc4proc.c' l='146' u='c' c='__nlm4svc_proc_lock'/>
<use f='linux/fs/lockd/svc4proc.c' l='182' u='c' c='__nlm4svc_proc_cancel'/>
<use f='linux/fs/lockd/svc4proc.c' l='221' u='c' c='__nlm4svc_proc_unlock'/>
<use f='linux/fs/lockd/svc4proc.c' l='369' u='c' c='nlm4svc_proc_share'/>
<use f='linux/fs/lockd/svc4proc.c' l='403' u='c' c='nlm4svc_proc_unshare'/>
<use f='linux/fs/lockd/svclock.c' l='297' u='c' c='nlmsvc_free_block'/>
<use f='linux/fs/lockd/svcproc.c' l='129' u='c' c='__nlmsvc_proc_test'/>
<use f='linux/fs/lockd/svcproc.c' l='177' u='c' c='__nlmsvc_proc_lock'/>
<use f='linux/fs/lockd/svcproc.c' l='214' u='c' c='__nlmsvc_proc_cancel'/>
<use f='linux/fs/lockd/svcproc.c' l='254' u='c' c='__nlmsvc_proc_unlock'/>
<use f='linux/fs/lockd/svcproc.c' l='412' u='c' c='nlmsvc_proc_share'/>
<use f='linux/fs/lockd/svcproc.c' l='446' u='c' c='nlmsvc_proc_unshare'/>
<def f='linux/fs/lockd/svcsubs.c' l='296' ll='310' type='void nlm_release_file(struct nlm_file * file)'/>
<doc f='linux/fs/lockd/svcsubs.c' l='287'>/*
 * Release file. If there are no more remote locks on this file,
 * close it and free the handle.
 *
 * Note that we can&apos;t do proper reference counting without major
 * contortions because the code in fs/locks.c creates, deletes and
 * splits locks without notification. Our only way is to walk the
 * entire lock list each time we remove a lock.
 */</doc>
