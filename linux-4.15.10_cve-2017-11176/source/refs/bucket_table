<def f='linux/include/linux/rhashtable.h' l='90' ll='103'/>
<use f='linux/include/linux/rhashtable.h' l='100'/>
<use f='linux/include/linux/rhashtable.h' l='165'/>
<use f='linux/include/linux/rhashtable.h' l='191'/>
<use f='linux/include/linux/rhashtable.h' l='236' c='rht_bucket_index'/>
<use f='linux/include/linux/rhashtable.h' l='243' c='rht_key_hashfn'/>
<use f='linux/include/linux/rhashtable.h' l='274' c='rht_head_hashfn'/>
<use f='linux/include/linux/rhashtable.h' l='292' c='rht_grow_above_75'/>
<use f='linux/include/linux/rhashtable.h' l='305' c='rht_shrink_below_30'/>
<use f='linux/include/linux/rhashtable.h' l='318' c='rht_grow_above_100'/>
<use f='linux/include/linux/rhashtable.h' l='330' c='rht_grow_above_max'/>
<use f='linux/include/linux/rhashtable.h' l='348' c='rht_bucket_lock'/>
<use f='linux/include/linux/rhashtable.h' l='363' c='lockdep_rht_bucket_is_held'/>
<use f='linux/include/linux/rhashtable.h' l='390' c='rht_bucket_nested'/>
<use f='linux/include/linux/rhashtable.h' l='393' c='rht_bucket_nested_insert'/>
<use f='linux/include/linux/rhashtable.h' l='412' c='rht_bucket'/>
<use f='linux/include/linux/rhashtable.h' l='419' c='rht_bucket_var'/>
<use f='linux/include/linux/rhashtable.h' l='426' c='rht_bucket_insert'/>
<use f='linux/include/linux/rhashtable.h' l='608' c='__rhashtable_lookup'/>
<use f='linux/include/linux/rhashtable.h' l='718' c='__rhashtable_insert_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1009' c='__rhashtable_remove_fast_one'/>
<use f='linux/include/linux/rhashtable.h' l='1087' c='__rhashtable_remove_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1155' c='__rhashtable_replace_fast'/>
<use f='linux/include/linux/rhashtable.h' l='1213' c='rhashtable_replace_fast'/>
<size>128</size>
<doc f='linux/include/linux/rhashtable.h' l='76'>/**
 * struct bucket_table - Table of hash buckets
 * @size: Number of hash buckets
 * @nest: Number of bits of first-level nested table.
 * @rehash: Current bucket being rehashed
 * @hash_rnd: Random seed to fold into hash
 * @locks_mask: Mask to apply before accessing locks[]
 * @locks: Array of spinlocks protecting individual buckets
 * @walkers: List of active walkers
 * @rcu: RCU structure for freeing the table
 * @future_tbl: Table under construction during rehashing
 * @ntbl: Nested table used when out of memory.
 * @buckets: size * hash buckets
 */</doc>
<mbr r='bucket_table::size' o='0' t='unsigned int'/>
<mbr r='bucket_table::nest' o='32' t='unsigned int'/>
<mbr r='bucket_table::rehash' o='64' t='unsigned int'/>
<mbr r='bucket_table::hash_rnd' o='96' t='u32'/>
<mbr r='bucket_table::locks_mask' o='128' t='unsigned int'/>
<mbr r='bucket_table::locks' o='192' t='spinlock_t *'/>
<mbr r='bucket_table::walkers' o='256' t='struct list_head'/>
<mbr r='bucket_table::rcu' o='384' t='struct callback_head'/>
<mbr r='bucket_table::future_tbl' o='512' t='struct bucket_table *'/>
<mbr r='bucket_table::buckets' o='1024' t='struct rhash_head *[]'/>
<use f='linux/lib/rhashtable.c' l='42' c='head_hashfn'/>
<use f='linux/lib/rhashtable.c' l='69' c='alloc_bucket_locks'/>
<use f='linux/lib/rhashtable.c' l='123' c='nested_bucket_table_free'/>
<use f='linux/lib/rhashtable.c' l='138' c='bucket_table_free'/>
<use f='linux/lib/rhashtable.c' l='149' c='bucket_table_free_rcu'/>
<use f='linux/lib/rhashtable.c' l='149' c='bucket_table_free_rcu'/>
<use f='linux/lib/rhashtable.c' l='149' c='bucket_table_free_rcu'/>
<use f='linux/lib/rhashtable.c' l='177' c='nested_bucket_table_alloc'/>
<use f='linux/lib/rhashtable.c' l='182' c='nested_bucket_table_alloc'/>
<use f='linux/lib/rhashtable.c' l='205' c='bucket_table_alloc'/>
<use f='linux/lib/rhashtable.c' l='209' c='bucket_table_alloc'/>
<use f='linux/lib/rhashtable.c' l='245' c='rhashtable_last_table'/>
<use f='linux/lib/rhashtable.c' l='246' c='rhashtable_last_table'/>
<use f='linux/lib/rhashtable.c' l='248' c='rhashtable_last_table'/>
<use f='linux/lib/rhashtable.c' l='260' c='rhashtable_rehash_one'/>
<use f='linux/lib/rhashtable.c' l='261' c='rhashtable_rehash_one'/>
<use f='linux/lib/rhashtable.c' l='309' c='rhashtable_rehash_chain'/>
<use f='linux/lib/rhashtable.c' l='329' c='rhashtable_rehash_attach'/>
<use f='linux/lib/rhashtable.c' l='330' c='rhashtable_rehash_attach'/>
<use f='linux/lib/rhashtable.c' l='353' c='rhashtable_rehash_table'/>
<use f='linux/lib/rhashtable.c' l='354' c='rhashtable_rehash_table'/>
<use f='linux/lib/rhashtable.c' l='387' c='rhashtable_rehash_alloc'/>
<use f='linux/lib/rhashtable.c' l='390' c='rhashtable_rehash_alloc'/>
<use f='linux/lib/rhashtable.c' l='424' c='rhashtable_shrink'/>
<use f='linux/lib/rhashtable.c' l='445' c='rht_deferred_worker'/>
<use f='linux/lib/rhashtable.c' l='471' c='rhashtable_insert_rehash'/>
<use f='linux/lib/rhashtable.c' l='473' c='rhashtable_insert_rehash'/>
<use f='linux/lib/rhashtable.c' l='474' c='rhashtable_insert_rehash'/>
<use f='linux/lib/rhashtable.c' l='519' c='rhashtable_lookup_one'/>
<use f='linux/lib/rhashtable.c' l='563' c='rhashtable_insert_one'/>
<use f='linux/lib/rhashtable.c' l='564' c='rhashtable_insert_one'/>
<use f='linux/lib/rhashtable.c' l='570' c='rhashtable_insert_one'/>
<use f='linux/lib/rhashtable.c' l='618' c='rhashtable_try_insert'/>
<use f='linux/lib/rhashtable.c' l='619' c='rhashtable_try_insert'/>
<use f='linux/lib/rhashtable.c' l='783' c='rhashtable_walk_next'/>
<use f='linux/lib/rhashtable.c' l='856' c='rhashtable_walk_stop'/>
<use f='linux/lib/rhashtable.c' l='934' c='rhashtable_init'/>
<use f='linux/lib/rhashtable.c' l='1058' c='rhashtable_free_and_destroy'/>
<use f='linux/lib/rhashtable.c' l='1091' c='rht_bucket_nested'/>
<use f='linux/lib/rhashtable.c' l='1123' c='rht_bucket_nested_insert'/>
<size>128</size>
