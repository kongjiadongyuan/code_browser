<dec f='linux/include/linux/blkdev.h' l='1353' type='int blkdev_issue_flush(struct block_device * , gfp_t , sector_t * )'/>
<def f='linux/block/blk-flush.c' l='521' ll='560' type='int blkdev_issue_flush(struct block_device * bdev, gfp_t gfp_mask, sector_t * error_sector)'/>
<dec f='linux/block/blk-flush.c' l='561' type='int blkdev_issue_flush(struct block_device * , gfp_t , sector_t * )'/>
<use f='linux/block/blk-flush.c' l='561' c='blkdev_issue_flush'/>
<use f='linux/block/blk-flush.c' l='561' u='a'/>
<use f='linux/block/blk-flush.c' l='561' u='a'/>
<doc f='linux/block/blk-flush.c' l='510'>/**
 * blkdev_issue_flush - queue a flush
 * @bdev:	blockdev to issue flush for
 * @gfp_mask:	memory allocation flags (for bio_alloc)
 * @error_sector:	error sector
 *
 * Description:
 *    Issue a flush for the block device in question. Caller can supply
 *    room for storing the error offset in case of a flush error, if they
 *    wish to.
 */</doc>
<use f='linux/fs/block_dev.c' l='632' u='c' c='blkdev_fsync'/>
<use f='linux/fs/ext4/fsync.c' l='157' u='c' c='ext4_sync_file'/>
<use f='linux/fs/ext4/ialloc.c' l='1452' u='c' c='ext4_init_inode_table'/>
<use f='linux/fs/ext4/super.c' l='4870' u='c' c='ext4_sync_fs'/>
<use f='linux/fs/jbd2/checkpoint.c' l='408' u='c' c='jbd2_cleanup_journal_tail'/>
<use f='linux/fs/jbd2/commit.c' l='767' u='c' c='jbd2_journal_commit_transaction'/>
<use f='linux/fs/jbd2/commit.c' l='871' u='c' c='jbd2_journal_commit_transaction'/>
<use f='linux/fs/jbd2/recovery.c' l='292' u='c' c='jbd2_journal_recover'/>
<use f='linux/fs/libfs.c' l='1021' u='c' c='generic_file_fsync'/>
