<dec f='linux/include/linux/backing-dev.h' l='178' type='long wait_iff_congested(struct pglist_data * pgdat, int sync, long timeout)'/>
<def f='linux/mm/backing-dev.c' l='1052' ll='1086' type='long wait_iff_congested(struct pglist_data * pgdat, int sync, long timeout)'/>
<dec f='linux/mm/backing-dev.c' l='1087' type='long wait_iff_congested(struct pglist_data * , int , long )'/>
<use f='linux/mm/backing-dev.c' l='1087' c='wait_iff_congested'/>
<use f='linux/mm/backing-dev.c' l='1087' u='a'/>
<use f='linux/mm/backing-dev.c' l='1087' u='a'/>
<doc f='linux/mm/backing-dev.c' l='1034'>/**
 * wait_iff_congested - Conditionally wait for a backing_dev to become uncongested or a pgdat to complete writes
 * @pgdat: A pgdat to check if it is heavily congested
 * @sync: SYNC or ASYNC IO
 * @timeout: timeout in jiffies
 *
 * In the event of a congested backing_dev (any backing_dev) and the given
 * @pgdat has experienced recent congestion, this waits for up to @timeout
 * jiffies for either a BDI to exit congestion of the given @sync queue
 * or a write to complete.
 *
 * In the absence of pgdat congestion, cond_resched() is called to yield
 * the processor if necessary but otherwise does not sleep.
 *
 * The return value is 0 if the sleep is for the full timeout. Otherwise,
 * it is the number of jiffies that were still remaining when the function
 * returned. return_value == timeout implies the function did not sleep.
 */</doc>
<use f='linux/mm/vmscan.c' l='1895' u='c' c='shrink_inactive_list'/>
