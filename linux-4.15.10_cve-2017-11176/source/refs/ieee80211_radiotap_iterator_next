<dec f='linux/include/net/cfg80211.h' l='4281' type='int ieee80211_radiotap_iterator_next(struct ieee80211_radiotap_iterator * iterator)'/>
<use f='linux/net/mac80211/tx.c' l='1989' u='c' c='ieee80211_parse_tx_radiotap'/>
<def f='linux/net/wireless/radiotap.c' l='212' ll='369' type='int ieee80211_radiotap_iterator_next(struct ieee80211_radiotap_iterator * iterator)'/>
<dec f='linux/net/wireless/radiotap.c' l='370' type='int ieee80211_radiotap_iterator_next(struct ieee80211_radiotap_iterator * )'/>
<use f='linux/net/wireless/radiotap.c' l='370' c='ieee80211_radiotap_iterator_next'/>
<use f='linux/net/wireless/radiotap.c' l='370' u='a'/>
<use f='linux/net/wireless/radiotap.c' l='370' u='a'/>
<doc f='linux/net/wireless/radiotap.c' l='189'>/**
 * ieee80211_radiotap_iterator_next - return next radiotap parser iterator arg
 * @iterator: radiotap_iterator to move to next arg (if any)
 *
 * Returns: 0 if there is an argument to handle,
 * -ENOENT if there are no more args or -EINVAL
 * if there is something else wrong.
 *
 * This function provides the next radiotap arg index (IEEE80211_RADIOTAP_*)
 * in @this_arg_index and sets @this_arg to point to the
 * payload for the field.  It takes care of alignment handling and extended
 * present fields.  @this_arg can be changed by the caller (eg,
 * incremented to move inside a compound argument like
 * IEEE80211_RADIOTAP_CHANNEL).  The args pointed to are in
 * little-endian format whatever the endianess of your CPU.
 *
 * Alignment Gotcha:
 * You must take care when dereferencing iterator.this_arg
 * for multibyte types... the pointer is not aligned.  Use
 * get_unaligned((type *)iterator.this_arg) to dereference
 * iterator.this_arg for type &quot;type&quot; safely on all arches.
 */</doc>
