<dec f='linux/fs/nfs/nfs4session.h' l='90' type='void nfs4_free_slot(struct nfs4_slot_table * tbl, struct nfs4_slot * slot)'/>
<use f='linux/fs/nfs/nfs4proc.c' l='632' u='c' c='nfs40_sequence_free_slot'/>
<def f='linux/fs/nfs/nfs4session.c' l='82' ll='101' type='void nfs4_free_slot(struct nfs4_slot_table * tbl, struct nfs4_slot * slot)'/>
<use f='linux/fs/nfs/nfs4session.c' l='394' u='c' c='nfs41_try_wake_next_slot_table_entry'/>
<doc f='linux/fs/nfs/nfs4session.c' l='67'>/*
 * nfs4_free_slot - free a slot and efficiently update slot table.
 *
 * freeing a slot is trivially done by clearing its respective bit
 * in the bitmap.
 * If the freed slotid equals highest_used_slotid we want to update it
 * so that the server would be able to size down the slot table if needed,
 * otherwise we know that the highest_used_slotid is still in use.
 * When updating highest_used_slotid there may be &quot;holes&quot; in the bitmap
 * so we need to scan down from highest_used_slotid to 0 looking for the now
 * highest slotid in use.
 * If none found, highest_used_slotid is set to NFS4_NO_SLOT.
 *
 * Must be called while holding tbl-&gt;slot_tbl_lock
 */</doc>
