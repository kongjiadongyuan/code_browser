<dec f='linux/include/linux/efi.h' l='1424' type='int efivar_entry_iter(int (*)(struct efivar_entry *, void *) func, struct list_head * head, void * data)'/>
<def f='linux/drivers/firmware/efi/vars.c' l='1086' ll='1098' type='int efivar_entry_iter(int (*)(struct efivar_entry *, void *) func, struct list_head * head, void * data)'/>
<dec f='linux/drivers/firmware/efi/vars.c' l='1099' type='int efivar_entry_iter(int (*)(struct efivar_entry *, void *) , struct list_head * , void * )'/>
<use f='linux/drivers/firmware/efi/vars.c' l='1099' c='efivar_entry_iter'/>
<use f='linux/drivers/firmware/efi/vars.c' l='1099' u='a'/>
<use f='linux/drivers/firmware/efi/vars.c' l='1099' u='a'/>
<doc f='linux/drivers/firmware/efi/vars.c' l='1072'>/**
 * efivar_entry_iter - iterate over variable list
 * @func: callback function
 * @head: head of variable list
 * @data: function-specific data to pass to callback
 *
 * Iterate over the list of EFI variables and call @func with every
 * entry on the list. It is safe for @func to remove entries in the
 * list via efivar_entry_delete() while iterating.
 *
 * Some notes for the callback function:
 *  - a non-zero return value indicates an error and terminates the loop
 *  - @func is called from atomic context
 */</doc>
