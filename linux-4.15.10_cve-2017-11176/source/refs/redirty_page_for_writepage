<dec f='linux/include/linux/mm.h' l='1453' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<use f='linux/fs/buffer.c' l='1767' u='c' c='__block_write_full_page'/>
<use f='linux/fs/ext4/inode.c' l='2145' u='c' c='ext4_writepage'/>
<use f='linux/fs/ext4/inode.c' l='2171' u='c' c='ext4_writepage'/>
<use f='linux/fs/ext4/page-io.c' l='526' u='c' c='ext4_bio_write_page'/>
<use f='linux/fs/nfs/write.c' l='657' u='c' c='nfs_do_writepage'/>
<def f='linux/mm/page-writeback.c' l='2520' ll='2528' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<dec f='linux/mm/page-writeback.c' l='2529' type='int redirty_page_for_writepage(struct writeback_control * , struct page * )'/>
<use f='linux/mm/page-writeback.c' l='2529' c='redirty_page_for_writepage'/>
<use f='linux/mm/page-writeback.c' l='2529' u='a'/>
<use f='linux/mm/page-writeback.c' l='2529' u='a'/>
<doc f='linux/mm/page-writeback.c' l='2515'>/*
 * When a writepage implementation decides that it doesn&apos;t want to write this
 * page for some reason, it should redirty the locked page via
 * redirty_page_for_writepage() and it should then unlock the page and return 0
 */</doc>
