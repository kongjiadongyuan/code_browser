<dec f='linux/include/linux/sched/signal.h' l='264' type='int dequeue_signal(struct task_struct * tsk, sigset_t * mask, siginfo_t * info)'/>
<use f='linux/include/linux/sched/signal.h' l='273' u='c' c='kernel_dequeue_signal'/>
<use f='linux/fs/signalfd.c' l='161' u='c' c='signalfd_dequeue'/>
<use f='linux/fs/signalfd.c' l='175' u='c' c='signalfd_dequeue'/>
<def f='linux/kernel/signal.c' l='576' ll='648' type='int dequeue_signal(struct task_struct * tsk, sigset_t * mask, siginfo_t * info)'/>
<use f='linux/kernel/signal.c' l='2228' u='c' c='get_signal'/>
<dec f='linux/kernel/signal.c' l='2462' type='int dequeue_signal(struct task_struct * , sigset_t * , siginfo_t * )'/>
<use f='linux/kernel/signal.c' l='2462' c='dequeue_signal'/>
<use f='linux/kernel/signal.c' l='2462' u='a'/>
<use f='linux/kernel/signal.c' l='2462' u='a'/>
<use f='linux/kernel/signal.c' l='2832' u='c' c='do_sigtimedwait'/>
<use f='linux/kernel/signal.c' l='2851' u='c' c='do_sigtimedwait'/>
<doc f='linux/kernel/signal.c' l='570'>/*
 * Dequeue a signal and return the element to the caller, which is
 * expected to free it.
 *
 * All callers have to hold the siglock.
 */</doc>
