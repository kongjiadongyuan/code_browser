<dec f='linux/include/linux/sched.h' l='1428' type='int sched_setscheduler_nocheck(struct task_struct * , int , const struct sched_param * )'/>
<use f='linux/drivers/gpu/drm/i915/intel_breadcrumbs.c' l='576' u='c' c='signaler_set_rtpriority'/>
<use f='linux/kernel/irq/manage.c' l='1096' u='c' c='setup_irq_thread'/>
<use f='linux/kernel/kthread.c' l='326' u='c' c='__kthread_create_on_node'/>
<use f='linux/kernel/rcu/tree.c' l='4063' u='c' c='rcu_spawn_gp_kthread'/>
<use f='linux/kernel/sched/core.c' l='1594' u='c' c='sched_set_stop_task'/>
<def f='linux/kernel/sched/core.c' l='4309' ll='4313' type='int sched_setscheduler_nocheck(struct task_struct * p, int policy, const struct sched_param * param)'/>
<dec f='linux/kernel/sched/core.c' l='4314' type='int sched_setscheduler_nocheck(struct task_struct * , int , const struct sched_param * )'/>
<use f='linux/kernel/sched/core.c' l='4314' c='sched_setscheduler_nocheck'/>
<use f='linux/kernel/sched/core.c' l='4314' u='a'/>
<use f='linux/kernel/sched/core.c' l='4314' u='a'/>
<doc f='linux/kernel/sched/core.c' l='4296'>/**
 * sched_setscheduler_nocheck - change the scheduling policy and/or RT priority of a thread from kernelspace.
 * @p: the task in question.
 * @policy: new policy.
 * @param: structure containing the new RT priority.
 *
 * Just like sched_setscheduler, only don&apos;t bother checking if the
 * current context has permission.  For example, this is needed in
 * stop_machine(): we create temporary high priority worker threads,
 * but our caller might not have that capability.
 *
 * Return: 0 on success. An error code otherwise.
 */</doc>
