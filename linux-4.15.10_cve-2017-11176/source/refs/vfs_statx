<dec f='linux/include/linux/fs.h' l='3075' type='int vfs_statx(int , const char * , int , struct kstat * , u32 )'/>
<use f='linux/include/linux/fs.h' l='3080' u='c' c='vfs_stat'/>
<use f='linux/include/linux/fs.h' l='3085' u='c' c='vfs_lstat'/>
<use f='linux/include/linux/fs.h' l='3091' u='c' c='vfs_fstatat'/>
<def f='linux/fs/stat.c' l='166' ll='197' type='int vfs_statx(int dfd, const char * filename, int flags, struct kstat * stat, u32 request_mask)'/>
<dec f='linux/fs/stat.c' l='198' type='int vfs_statx(int , const char * , int , struct kstat * , u32 )'/>
<use f='linux/fs/stat.c' l='198' c='vfs_statx'/>
<use f='linux/fs/stat.c' l='198' u='a'/>
<use f='linux/fs/stat.c' l='198' u='a'/>
<use f='linux/fs/stat.c' l='573' u='c' c='SYSC_statx'/>
<doc f='linux/fs/stat.c' l='151'>/**
 * vfs_statx - Get basic and extra attributes by filename
 * @dfd: A file descriptor representing the base dir for a relative filename
 * @filename: The name of the file of interest
 * @flags: Flags to control the query
 * @stat: The result structure to fill in.
 * @request_mask: STATX_xxx flags indicating what the caller wants
 *
 * This function is a wrapper around vfs_getattr().  The main difference is
 * that it uses a filename and base directory to determine the file location.
 * Additionally, the use of AT_SYMLINK_NOFOLLOW in flags will prevent a symlink
 * at the given name from being referenced.
 *
 * 0 will be returned on success, and a -ve error code if unsuccessful.
 */</doc>
