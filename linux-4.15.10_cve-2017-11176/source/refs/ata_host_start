<dec f='linux/include/linux/libata.h' l='1112' type='int ata_host_start(struct ata_host * host)'/>
<use f='linux/drivers/ata/libahci.c' l='2530' u='c' c='ahci_host_activate_multi_irqs'/>
<def f='linux/drivers/ata/libata-core.c' l='6292' ll='6354' type='int ata_host_start(struct ata_host * host)'/>
<use f='linux/drivers/ata/libata-core.c' l='6558' u='c' c='ata_host_activate'/>
<dec f='linux/drivers/ata/libata-core.c' l='7239' type='int ata_host_start(struct ata_host * )'/>
<use f='linux/drivers/ata/libata-core.c' l='7239' c='ata_host_start'/>
<use f='linux/drivers/ata/libata-core.c' l='7239' u='a'/>
<use f='linux/drivers/ata/libata-core.c' l='7239' u='a'/>
<doc f='linux/drivers/ata/libata-core.c' l='6276'>/**
 *	ata_host_start - start and freeze ports of an ATA host
 *	@host: ATA host to start ports for
 *
 *	Start and then freeze ports of @host.  Started status is
 *	recorded in host-&gt;flags, so this function can be called
 *	multiple times.  Ports are guaranteed to get started only
 *	once.  If host-&gt;ops isn&apos;t initialized yet, its set to the
 *	first non-dummy port ops.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 *
 *	RETURNS:
 *	0 if all ports are started successfully, -errno otherwise.
 */</doc>
<use f='linux/drivers/ata/libata-sff.c' l='2397' u='c' c='ata_pci_sff_activate_host'/>
