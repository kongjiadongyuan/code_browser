<dec f='linux/include/linux/pagemap.h' l='620' type='void delete_from_page_cache(struct page * page)'/>
<use f='linux/fs/hugetlbfs/inode.c' l='333' u='c' c='remove_huge_page'/>
<def f='linux/mm/filemap.c' l='294' ll='305' type='void delete_from_page_cache(struct page * page)'/>
<dec f='linux/mm/filemap.c' l='306' type='void delete_from_page_cache(struct page * )'/>
<use f='linux/mm/filemap.c' l='306' c='delete_from_page_cache'/>
<use f='linux/mm/filemap.c' l='306' u='a'/>
<use f='linux/mm/filemap.c' l='306' u='a'/>
<doc f='linux/mm/filemap.c' l='286'>/**
 * delete_from_page_cache - delete page from page cache
 * @page: the page which the kernel is trying to remove from page cache
 *
 * This must be called only on pages that have been verified to be in the page
 * cache and locked.  It will never put the page into the free list, the caller
 * has a reference on the page.
 */</doc>
<use f='linux/mm/shmem.c' l='1869' u='c' c='shmem_getpage_gfp'/>
<use f='linux/mm/truncate.c' l='234' u='c' c='truncate_inode_page'/>
