<dec f='linux/include/drm/drm_vblank.h' l='182' type='u32 drm_crtc_accurate_vblank_count(struct drm_crtc * crtc)'/>
<def f='linux/drivers/gpu/drm/drm_vblank.c' l='295' ll='313' type='u32 drm_crtc_accurate_vblank_count(struct drm_crtc * crtc)'/>
<dec f='linux/drivers/gpu/drm/drm_vblank.c' l='314' type='u32 drm_crtc_accurate_vblank_count(struct drm_crtc * )'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='314' c='drm_crtc_accurate_vblank_count'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='314' u='a'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='314' u='a'/>
<use f='linux/drivers/gpu/drm/drm_vblank.c' l='878' u='c' c='drm_crtc_arm_vblank_event'/>
<doc f='linux/drivers/gpu/drm/drm_vblank.c' l='284'>/**
 * drm_crtc_accurate_vblank_count - retrieve the master vblank counter
 * @crtc: which counter to retrieve
 *
 * This function is similar to drm_crtc_vblank_count() but this function
 * interpolates to handle a race with vblank interrupts using the high precision
 * timestamping support.
 *
 * This is mostly useful for hardware that can obtain the scanout position, but
 * doesn&apos;t have a hardware frame counter.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='1672' u='c' c='display_pipe_crc_irq_handler'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12103' u='c' c='intel_crtc_get_vblank_counter'/>
