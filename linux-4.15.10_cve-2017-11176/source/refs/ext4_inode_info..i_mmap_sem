<dec f='linux/fs/ext4/ext4.h' l='982' type='struct rw_semaphore'/>
<offset>1536</offset>
<doc f='linux/fs/ext4/ext4.h' l='974'>/*
	 * i_mmap_sem is for serializing page faults with truncate / punch hole
	 * operations. We have to make sure that new page cannot be faulted in
	 * a section of the inode that is being punched. We cannot easily use
	 * i_data_sem for this since we need protection for the whole punch
	 * operation and i_data_sem ranks below transaction start so we have
	 * to occasionally drop it.
	 */</doc>
<use f='linux/fs/ext4/extents.c' l='4835' u='a' c='ext4_zero_range'/>
<use f='linux/fs/ext4/extents.c' l='4838' u='a' c='ext4_zero_range'/>
<use f='linux/fs/ext4/extents.c' l='4847' u='a' c='ext4_zero_range'/>
<use f='linux/fs/ext4/extents.c' l='5507' u='a' c='ext4_collapse_range'/>
<use f='linux/fs/ext4/extents.c' l='5576' u='a' c='ext4_collapse_range'/>
<use f='linux/fs/ext4/extents.c' l='5657' u='a' c='ext4_insert_range'/>
<use f='linux/fs/ext4/extents.c' l='5751' u='a' c='ext4_insert_range'/>
<use f='linux/fs/ext4/truncate.h' l='14' u='a' c='ext4_truncate_failed_write'/>
<use f='linux/fs/ext4/truncate.h' l='17' u='a' c='ext4_truncate_failed_write'/>
<use f='linux/fs/ext4/inode.c' l='4260' u='a' c='ext4_punch_hole'/>
<use f='linux/fs/ext4/inode.c' l='4325' u='a' c='ext4_punch_hole'/>
<use f='linux/fs/ext4/inode.c' l='5510' u='a' c='ext4_setattr'/>
<use f='linux/fs/ext4/inode.c' l='5521' u='a' c='ext4_setattr'/>
<use f='linux/fs/ext4/inode.c' l='6009' u='a' c='ext4_change_inode_journal_flag'/>
<use f='linux/fs/ext4/inode.c' l='6012' u='a' c='ext4_change_inode_journal_flag'/>
<use f='linux/fs/ext4/inode.c' l='6047' u='a' c='ext4_change_inode_journal_flag'/>
<use f='linux/fs/ext4/inode.c' l='6086' u='a' c='ext4_page_mkwrite'/>
<use f='linux/fs/ext4/inode.c' l='6161' u='a' c='ext4_page_mkwrite'/>
<use f='linux/fs/ext4/inode.c' l='6171' u='a' c='ext4_filemap_fault'/>
<use f='linux/fs/ext4/inode.c' l='6173' u='a' c='ext4_filemap_fault'/>
<use f='linux/fs/ext4/super.c' l='1034' u='a' c='init_once'/>
