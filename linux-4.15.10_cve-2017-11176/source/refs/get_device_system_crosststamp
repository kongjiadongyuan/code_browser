<dec f='linux/include/linux/timekeeping.h' l='190' type='int get_device_system_crosststamp(int (*)(ktime_t *, struct system_counterval_t *, void *) get_time_fn, void * ctx, struct system_time_snapshot * history, struct system_device_crosststamp * xtstamp)'/>
<doc f='linux/include/linux/timekeeping.h' l='187'>/*
 * Get cross timestamp between system clock and device clock
 */</doc>
<use f='linux/drivers/net/ethernet/intel/e1000e/ptp.c' l='176' u='c' c='e1000e_phc_getcrosststamp'/>
<def f='linux/kernel/time/timekeeping.c' l='1102' ll='1200' type='int get_device_system_crosststamp(int (*)(ktime_t *, struct system_counterval_t *, void *) get_time_fn, void * ctx, struct system_time_snapshot * history_begin, struct system_device_crosststamp * xtstamp)'/>
<dec f='linux/kernel/time/timekeeping.c' l='1201' type='int get_device_system_crosststamp(int (*)(ktime_t *, struct system_counterval_t *, void *) , void * , struct system_time_snapshot * , struct system_device_crosststamp * )'/>
<use f='linux/kernel/time/timekeeping.c' l='1201' c='get_device_system_crosststamp'/>
<use f='linux/kernel/time/timekeeping.c' l='1201' u='a'/>
<use f='linux/kernel/time/timekeeping.c' l='1201' u='a'/>
<doc f='linux/kernel/time/timekeeping.c' l='1091'>/**
 * get_device_system_crosststamp - Synchronously capture system/device timestamp
 * @get_time_fn:	Callback to get simultaneous device time and
 *	system counter from the device driver
 * @ctx:		Context passed to get_time_fn()
 * @history_begin:	Historical reference point used to interpolate system
 *	time when counter provided by the driver is before the current interval
 * @xtstamp:		Receives simultaneously captured system and device time
 *
 * Reads a timestamp from a device and correlates it to system time
 */</doc>
<use f='linux/sound/pci/hda/hda_controller.c' l='490' u='c' c='azx_get_crosststamp'/>
