<dec f='linux/include/linux/lockd/lockd.h' l='286' type='__be32 nlm_lookup_file(struct svc_rqst * , struct nlm_file ** , struct nfs_fh * )'/>
<doc f='linux/include/linux/lockd/lockd.h' l='283'>/*
 * File handling for the server personality
 */</doc>
<use f='linux/fs/lockd/svc4proc.c' l='43' u='c' c='nlm4svc_retrieve_args'/>
<use f='linux/fs/lockd/svcproc.c' l='72' u='c' c='nlmsvc_retrieve_args'/>
<def f='linux/fs/lockd/svcsubs.c' l='82' ll='139' type='__be32 nlm_lookup_file(struct svc_rqst * rqstp, struct nlm_file ** result, struct nfs_fh * f)'/>
<doc f='linux/fs/lockd/svcsubs.c' l='73'>/*
 * Lookup file info. If it doesn&apos;t exist, create a file info struct
 * and open a (VFS) file for the given inode.
 *
 * FIXME:
 * Note that we open the file O_RDONLY even when creating write locks.
 * This is not quite right, but for now, we assume the client performs
 * the proper R/W checking.
 */</doc>
