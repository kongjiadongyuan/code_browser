<dec f='linux/include/linux/mount.h' l='76' type='int mnt_want_write(struct vfsmount * mnt)'/>
<use f='linux/fs/namei.c' l='3278' u='c' c='do_last'/>
<use f='linux/fs/namei.c' l='3369' u='c' c='do_last'/>
<use f='linux/fs/namei.c' l='3448' u='c' c='do_tmpfile'/>
<use f='linux/fs/namei.c' l='3620' u='c' c='filename_create'/>
<use f='linux/fs/namei.c' l='3903' u='c' c='do_rmdir'/>
<use f='linux/fs/namei.c' l='4023' u='c' c='do_unlinkat'/>
<use f='linux/fs/namei.c' l='4538' u='c' c='SYSC_renameat2'/>
<def f='linux/fs/namespace.c' l='382' ll='391' type='int mnt_want_write(struct vfsmount * m)'/>
<dec f='linux/fs/namespace.c' l='392' type='int mnt_want_write(struct vfsmount * )'/>
<use f='linux/fs/namespace.c' l='392' c='mnt_want_write'/>
<use f='linux/fs/namespace.c' l='392' u='a'/>
<use f='linux/fs/namespace.c' l='392' u='a'/>
<doc f='linux/fs/namespace.c' l='373'>/**
 * mnt_want_write - get write access to a mount
 * @m: the mount on which to take a write
 *
 * This tells the low-level filesystem that a write is about to be performed to
 * it, and makes sure that writes are allowed (mount is read-write, filesystem
 * is not frozen) before returning success.  When the write operation is
 * finished, mnt_drop_write() must be called.  This is effectively a refcount.
 */</doc>
<use f='linux/fs/open.c' l='82' u='c' c='vfs_truncate'/>
<use f='linux/fs/open.c' l='522' u='c' c='chmod_common'/>
<use f='linux/fs/open.c' l='639' u='c' c='SYSC_fchownat'/>
<use f='linux/fs/utimes.c' l='55' u='c' c='utimes_common'/>
<use f='linux/fs/xattr.c' l='470' u='c' c='path_setxattr'/>
<use f='linux/fs/xattr.c' l='705' u='c' c='path_removexattr'/>
<use f='linux/ipc/mqueue.c' l='792' u='c' c='do_mq_open'/>
<use f='linux/ipc/mqueue.c' l='871' u='c' c='SYSC_mq_unlink'/>
<use f='linux/kernel/acct.c' l='230' u='c' c='acct_on'/>
