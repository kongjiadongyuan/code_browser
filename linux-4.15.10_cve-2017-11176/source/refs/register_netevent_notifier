<dec f='linux/include/net/netevent.h' l='32' type='int register_netevent_notifier(struct notifier_block * nb)'/>
<def f='linux/net/core/netevent.c' l='32' ll='35' type='int register_netevent_notifier(struct notifier_block * nb)'/>
<dec f='linux/net/core/netevent.c' l='36' type='int register_netevent_notifier(struct notifier_block * )'/>
<use f='linux/net/core/netevent.c' l='36' c='register_netevent_notifier'/>
<use f='linux/net/core/netevent.c' l='36' u='a'/>
<use f='linux/net/core/netevent.c' l='36' u='a'/>
<doc f='linux/net/core/netevent.c' l='23'>/**
 *	register_netevent_notifier - register a netevent notifier block
 *	@nb: notifier
 *
 *	Register a notifier to be called when a netevent occurs.
 *	The notifier passed is linked into the kernel structures and must
 *	not be reused until it has been unregistered. A negative errno code
 *	is returned on a failure.
 */</doc>
