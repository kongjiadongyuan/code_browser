<dec f='linux/fs/nfs/internal.h' l='441' type='struct vfsmount * nfs_do_submount(struct dentry * , struct nfs_fh * , struct nfs_fattr * , rpc_authflavor_t )'/>
<def f='linux/fs/nfs/namespace.c' l='230' ll='255' type='struct vfsmount * nfs_do_submount(struct dentry * dentry, struct nfs_fh * fh, struct nfs_fattr * fattr, rpc_authflavor_t authflavor)'/>
<dec f='linux/fs/nfs/namespace.c' l='256' type='struct vfsmount * nfs_do_submount(struct dentry * , struct nfs_fh * , struct nfs_fattr * , rpc_authflavor_t )'/>
<use f='linux/fs/nfs/namespace.c' l='256' c='nfs_do_submount'/>
<use f='linux/fs/nfs/namespace.c' l='256' u='a'/>
<use f='linux/fs/nfs/namespace.c' l='256' u='a'/>
<use f='linux/fs/nfs/namespace.c' l='270' u='c' c='nfs_submount'/>
<doc f='linux/fs/nfs/namespace.c' l='222'>/**
 * nfs_do_submount - set up mountpoint when crossing a filesystem boundary
 * @dentry - parent directory
 * @fh - filehandle for new root dentry
 * @fattr - attributes for new root inode
 * @authflavor - security flavor to use when performing the mount
 *
 */</doc>
<use f='linux/fs/nfs/nfs4namespace.c' l='413' u='c' c='nfs4_submount'/>
