<dec f='linux/drivers/edac/edac_device.h' l='241' type='struct edac_device_ctl_info * edac_device_alloc_ctl_info(unsigned int sizeof_private, char * edac_device_name, unsigned int nr_instances, char * edac_block_name, unsigned int nr_blocks, unsigned int offset_value, struct edac_dev_sysfs_block_attribute * block_attributes, unsigned int nr_attribs, int device_index)'/>
<def f='linux/drivers/edac/edac_device.c' l='50' ll='226' type='struct edac_device_ctl_info * edac_device_alloc_ctl_info(unsigned int sz_private, char * edac_device_name, unsigned int nr_instances, char * edac_block_name, unsigned int nr_blocks, unsigned int offset_value, struct edac_dev_sysfs_block_attribute * attrib_spec, unsigned int nr_attrib, int device_index)'/>
<dec f='linux/drivers/edac/edac_device.c' l='227' type='struct edac_device_ctl_info * edac_device_alloc_ctl_info(unsigned int , char * , unsigned int , char * , unsigned int , unsigned int , struct edac_dev_sysfs_block_attribute * , unsigned int , int )'/>
<use f='linux/drivers/edac/edac_device.c' l='227' c='edac_device_alloc_ctl_info'/>
<use f='linux/drivers/edac/edac_device.c' l='227' u='a'/>
<use f='linux/drivers/edac/edac_device.c' l='227' u='a'/>
<doc f='linux/drivers/edac/edac_device.h' l='236'>/*
 * The alloc() and free() functions for the &apos;edac_device&apos; control info
 * structure. A MC driver will allocate one of these for each edac_device
 * it is going to control/register with the EDAC CORE.
 */</doc>
