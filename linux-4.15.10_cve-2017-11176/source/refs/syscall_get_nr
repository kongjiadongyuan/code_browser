<def f='linux/arch/x86/include/asm/syscall.h' l='43' ll='46' type='int syscall_get_nr(struct task_struct * task, struct pt_regs * regs)'/>
<use f='linux/include/trace/events/syscalls.h' l='56' u='c' c='trace_event_raw_event_sys_exit'/>
<use f='linux/include/trace/events/syscalls.h' l='56' u='c' c='perf_trace_sys_exit'/>
<doc f='linux/arch/x86/include/asm/syscall.h' l='38'>/*
 * Only the low 32 bits of orig_ax are meaningful, so we return int.
 * This importantly ignores the high bits on 64-bit, so comparisons
 * sign-extend the low 32 bits.
 */</doc>
<use f='linux/arch/x86/kernel/ptrace.c' l='937' u='c' c='putreg32'/>
<use f='linux/arch/x86/kernel/signal.c' l='713' u='c' c='handle_signal'/>
<use f='linux/arch/x86/kernel/signal.c' l='816' u='c' c='do_signal'/>
<use f='linux/kernel/seccomp.c' l='82' u='c' c='populate_seccomp_data'/>
<use f='linux/kernel/seccomp.c' l='710' u='c' c='__seccomp_filter'/>
<use f='linux/kernel/seccomp.c' l='782' u='c' c='__secure_computing'/>
<use f='linux/lib/syscall.c' l='30' u='c' c='collect_syscall'/>
