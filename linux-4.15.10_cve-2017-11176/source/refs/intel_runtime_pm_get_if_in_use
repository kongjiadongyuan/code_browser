<dec f='linux/drivers/gpu/drm/i915/intel_drv.h' l='1846' type='bool intel_runtime_pm_get_if_in_use(struct drm_i915_private * dev_priv)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1244' u='c' c='i915_gem_gtt_pwrite_fast'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_fence_reg.c' l='256' u='c' c='fence_update'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_shrinker.c' l='186' u='c' c='i915_gem_shrink'/>
<use f='linux/drivers/gpu/drm/i915/intel_runtime_pm.c' l='1510' u='c' c='intel_display_power_get_if_enabled'/>
<def f='linux/drivers/gpu/drm/i915/intel_runtime_pm.c' l='3157' ll='3181' type='bool intel_runtime_pm_get_if_in_use(struct drm_i915_private * dev_priv)'/>
<doc f='linux/drivers/gpu/drm/i915/intel_runtime_pm.c' l='3147'>/**
 * intel_runtime_pm_get_if_in_use - grab a runtime pm reference if device in use
 * @dev_priv: i915 device instance
 *
 * This function grabs a device-level runtime pm reference if the device is
 * already in use and ensures that it is powered up.
 *
 * Any runtime pm reference obtained by this function must have a symmetric
 * call to intel_runtime_pm_put() to release the reference again.
 */</doc>
