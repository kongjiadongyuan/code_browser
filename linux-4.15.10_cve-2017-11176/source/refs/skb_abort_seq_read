<dec f='linux/include/linux/skbuff.h' l='1091' type='void skb_abort_seq_read(struct skb_seq_state * st)'/>
<def f='linux/net/core/skbuff.c' l='3314' ll='3318' type='void skb_abort_seq_read(struct skb_seq_state * st)'/>
<dec f='linux/net/core/skbuff.c' l='3319' type='void skb_abort_seq_read(struct skb_seq_state * )'/>
<use f='linux/net/core/skbuff.c' l='3319' c='skb_abort_seq_read'/>
<use f='linux/net/core/skbuff.c' l='3319' u='a'/>
<use f='linux/net/core/skbuff.c' l='3319' u='a'/>
<use f='linux/net/core/skbuff.c' l='3332' u='c' c='skb_ts_finish'/>
<doc f='linux/net/core/skbuff.c' l='3307'>/**
 * skb_abort_seq_read - Abort a sequential read of skb data
 * @st: state variable
 *
 * Must be called if skb_seq_read() was not called until it
 * returned 0.
 */</doc>
