<dec f='linux/drivers/char/agp/agp.h' l='208' type='u32 agp_collect_device_status(struct agp_bridge_data * bridge, u32 mode, u32 command)'/>
<def f='linux/drivers/char/agp/generic.c' l='720' ll='762' type='u32 agp_collect_device_status(struct agp_bridge_data * bridge, u32 requested_mode, u32 bridge_agpstat)'/>
<dec f='linux/drivers/char/agp/generic.c' l='763' type='u32 agp_collect_device_status(struct agp_bridge_data * , u32 , u32 )'/>
<use f='linux/drivers/char/agp/generic.c' l='763' c='agp_collect_device_status'/>
<use f='linux/drivers/char/agp/generic.c' l='763' u='a'/>
<use f='linux/drivers/char/agp/generic.c' l='763' u='a'/>
<use f='linux/drivers/char/agp/generic.c' l='815' u='c' c='agp_generic_enable'/>
<doc f='linux/drivers/char/agp/generic.c' l='711'>/**
 * agp_collect_device_status - determine correct agp_cmd from various agp_stat&apos;s
 * @bridge: an agp_bridge_data struct allocated for the AGP host bridge.
 * @requested_mode: requested agp_stat from userspace (Typically from X)
 * @bridge_agpstat: current agp_stat from AGP bridge.
 *
 * This function will hunt for an AGP graphics card, and try to match
 * the requested mode to the capabilities of both the bridge and the card.
 */</doc>
