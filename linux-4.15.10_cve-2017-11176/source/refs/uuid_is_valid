<dec f='linux/include/linux/uuid.h' l='78' type='bool uuid_is_valid(const char * uuid)'/>
<use f='linux/drivers/gpu/drm/i915/i915_perf.c' l='3174' u='c' c='i915_perf_add_config_ioctl'/>
<use f='linux/fs/efivarfs/inode.c' l='68' u='c' c='efivarfs_valid_name'/>
<use f='linux/lib/kobject_uevent.c' l='130' u='c' c='kobject_action_args'/>
<def f='linux/lib/uuid.c' l='86' ll='100' type='bool uuid_is_valid(const char * uuid)'/>
<dec f='linux/lib/uuid.c' l='101' type='bool uuid_is_valid(const char * )'/>
<use f='linux/lib/uuid.c' l='101' c='uuid_is_valid'/>
<use f='linux/lib/uuid.c' l='101' u='a'/>
<use f='linux/lib/uuid.c' l='101' u='a'/>
<use f='linux/lib/uuid.c' l='108' u='c' c='__uuid_parse'/>
<doc f='linux/lib/uuid.c' l='75'>/**
  * uuid_is_valid - checks if UUID string valid
  * @uuid:	UUID string to check
  *
  * Description:
  * It checks if the UUID string is following the format:
  *	xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  * where x is a hex digit.
  *
  * Return: true if input is valid UUID string.
  */</doc>
