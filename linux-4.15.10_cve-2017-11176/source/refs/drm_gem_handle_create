<dec f='linux/include/drm/drm_gem.h' l='290' type='int drm_gem_handle_create(struct drm_file * file_priv, struct drm_gem_object * obj, u32 * handlep)'/>
<def f='linux/drivers/gpu/drm/drm_gem.c' l='442' ll='449' type='int drm_gem_handle_create(struct drm_file * file_priv, struct drm_gem_object * obj, u32 * handlep)'/>
<dec f='linux/drivers/gpu/drm/drm_gem.c' l='450' type='int drm_gem_handle_create(struct drm_file * , struct drm_gem_object * , u32 * )'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='450' c='drm_gem_handle_create'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='450' u='a'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='450' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_gem.c' l='432'>/**
 * drm_gem_handle_create - create a gem handle for an object
 * @file_priv: drm file-private structure to register the handle for
 * @obj: object to register
 * @handlep: pionter to return the created handle to the caller
 *
 * Create a handle for this object. This adds a handle reference
 * to the object, which includes a regular reference count. Callers
 * will likely want to dereference the object afterwards.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='124' u='c' c='drm_gem_fb_create_handle'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='615' u='c' c='i915_gem_create'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_userptr.c' l='814' u='c' c='i915_gem_userptr_ioctl'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='13815' u='c' c='intel_user_framebuffer_create_handle'/>
