<def f='linux/include/linux/list.h' l='274' ll='286' type='void list_cut_position(struct list_head * list, struct list_head * head, struct list_head * entry)'/>
<doc f='linux/include/linux/list.h' l='260'>/**
 * list_cut_position - cut a list into two
 * @list: a new list to add all removed entries
 * @head: a list with entries
 * @entry: an entry within head, could be the head itself
 *	and if so we won&apos;t cut the list
 *
 * This helper moves the initial part of @head, up to and
 * including @entry, from @head to @list. You should
 * pass on @entry an element you know is on @head. @list
 * should be an empty list or a list you do not care about
 * losing its data.
 *
 */</doc>
<use f='linux/fs/ext4/mballoc.c' l='2879' u='c' c='ext4_process_freed_data'/>
<def f='linux/tools/include/linux/list.h' l='260' ll='272' type='void list_cut_position(struct list_head * list, struct list_head * head, struct list_head * entry)'/>
<doc f='linux/tools/include/linux/list.h' l='246'>/**
 * list_cut_position - cut a list into two
 * @list: a new list to add all removed entries
 * @head: a list with entries
 * @entry: an entry within head, could be the head itself
 *	and if so we won&apos;t cut the list
 *
 * This helper moves the initial part of @head, up to and
 * including @entry, from @head to @list. You should
 * pass on @entry an element you know is on @head. @list
 * should be an empty list or a list you do not care about
 * losing its data.
 *
 */</doc>
