<dec f='linux/include/net/mac80211.h' l='5233' type='void ieee80211_iter_keys_rcu(struct ieee80211_hw * hw, struct ieee80211_vif * vif, void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *, void *) iter, void * iter_data)'/>
<doc f='linux/include/net/mac80211.h' l='5218'>/**
 * ieee80211_iter_keys_rcu - iterate keys programmed into the device
 * @hw: pointer obtained from ieee80211_alloc_hw()
 * @vif: virtual interface to iterate, may be %NULL for all
 * @iter: iterator function that will be called for each key
 * @iter_data: custom data to pass to the iterator function
 *
 * This function can be used to iterate all the keys known to
 * mac80211, even those that weren&apos;t previously programmed into
 * the device. Note that due to locking reasons, keys of station
 * in removal process will be skipped.
 *
 * This function requires being called in an RCU critical section,
 * and thus iter must be atomic.
 */</doc>
<def f='linux/net/mac80211/key.c' l='821' ll='840' type='void ieee80211_iter_keys_rcu(struct ieee80211_hw * hw, struct ieee80211_vif * vif, void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *, void *) iter, void * iter_data)'/>
<dec f='linux/net/mac80211/key.c' l='841' type='void ieee80211_iter_keys_rcu(struct ieee80211_hw * , struct ieee80211_vif * , void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *, void *) , void * )'/>
<use f='linux/net/mac80211/key.c' l='841' c='ieee80211_iter_keys_rcu'/>
<use f='linux/net/mac80211/key.c' l='841' u='a'/>
<use f='linux/net/mac80211/key.c' l='841' u='a'/>
