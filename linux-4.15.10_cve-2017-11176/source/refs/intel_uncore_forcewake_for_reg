<dec f='linux/drivers/gpu/drm/i915/intel_uncore.h' l='146' type='enum forcewake_domains intel_uncore_forcewake_for_reg(struct drm_i915_private * dev_priv, i915_reg_t reg, unsigned int op)'/>
<use f='linux/drivers/gpu/drm/i915/intel_engine_cs.c' l='736' u='c' c='read_subslice_reg'/>
<use f='linux/drivers/gpu/drm/i915/intel_engine_cs.c' l='738' u='c' c='read_subslice_reg'/>
<use f='linux/drivers/gpu/drm/i915/intel_guc.c' l='54' u='c' c='intel_guc_init_send_regs'/>
<use f='linux/drivers/gpu/drm/i915/intel_lrc.c' l='1941' u='c' c='logical_ring_setup'/>
<use f='linux/drivers/gpu/drm/i915/intel_lrc.c' l='1945' u='c' c='logical_ring_setup'/>
<use f='linux/drivers/gpu/drm/i915/intel_lrc.c' l='1949' u='c' c='logical_ring_setup'/>
<use f='linux/drivers/gpu/drm/i915/intel_uncore.c' l='1668' u='c' c='intel_wait_for_register'/>
<def f='linux/drivers/gpu/drm/i915/intel_uncore.c' l='1911' ll='1929' type='enum forcewake_domains intel_uncore_forcewake_for_reg(struct drm_i915_private * dev_priv, i915_reg_t reg, unsigned int op)'/>
<doc f='linux/drivers/gpu/drm/i915/intel_uncore.c' l='1897'>/**
 * intel_uncore_forcewake_for_reg - which forcewake domains are needed to access
 * 				    a register
 * @dev_priv: pointer to struct drm_i915_private
 * @reg: register in question
 * @op: operation bitmask of FW_REG_READ and/or FW_REG_WRITE
 *
 * Returns a set of forcewake domains required to be taken with for example
 * intel_uncore_forcewake_get for the specified register to be accessible in the
 * specified mode (read, write or read/write) with raw mmio accessors.
 *
 * NOTE: On Gen6 and Gen7 write forcewake domain (FORCEWAKE_RENDER) requires the
 * callers to do FIFO management on their own or risk losing writes.
 */</doc>
