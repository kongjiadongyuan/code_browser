<dec f='linux/include/linux/mempolicy.h' l='131' type='void mpol_shared_policy_init(struct shared_policy * sp, struct mempolicy * mpol)'/>
<use f='linux/fs/hugetlbfs/inode.c' l='985' u='c' c='hugetlbfs_alloc_inode'/>
<def f='linux/mm/mempolicy.c' l='2421' ll='2458' type='void mpol_shared_policy_init(struct shared_policy * sp, struct mempolicy * mpol)'/>
<doc f='linux/mm/mempolicy.c' l='2411'>/**
 * mpol_shared_policy_init - initialize shared policy for inode
 * @sp: pointer to inode shared policy
 * @mpol:  struct mempolicy to install
 *
 * Install non-NULL @mpol in inode&apos;s shared policy rb-tree.
 * On entry, the current task has a reference on a non-NULL @mpol.
 * This must be released on exit.
 * This is called at get_inode() calls and we can use GFP_KERNEL.
 */</doc>
<use f='linux/mm/shmem.c' l='2183' u='c' c='shmem_get_inode'/>
<use f='linux/mm/shmem.c' l='2198' u='c' c='shmem_get_inode'/>
