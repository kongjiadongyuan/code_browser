<dec f='linux/include/linux/hugetlb.h' l='142' type='int huge_pmd_unshare(struct mm_struct * mm, unsigned long * addr, pte_t * ptep)'/>
<use f='linux/mm/hugetlb.c' l='3326' u='c' c='__unmap_hugepage_range'/>
<use f='linux/mm/hugetlb.c' l='4293' u='c' c='hugetlb_change_protection'/>
<def f='linux/mm/hugetlb.c' l='4598' ll='4613' type='int huge_pmd_unshare(struct mm_struct * mm, unsigned long * addr, pte_t * ptep)'/>
<doc f='linux/mm/hugetlb.c' l='4586'>/*
 * unmap huge page backed by shared pte.
 *
 * Hugetlb pte page is ref counted at the time of mapping.  If pte is shared
 * indicated by page_count &gt; 1, unmap is achieved by clearing pud and
 * decrementing the ref count. If count == 1, the pte page is not shared.
 *
 * called with page table lock held.
 *
 * returns: 1 successfully unmapped a shared pte page
 *	    0 the underlying pte page is not shared, or it is the last user
 */</doc>
