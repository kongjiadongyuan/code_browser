<dec f='linux/include/linux/clk-provider.h' l='750' type='int __clk_mux_determine_rate(struct clk_hw * hw, struct clk_rate_request * req)'/>
<use f='linux/drivers/clk/clk-gpio.c' l='91'/>
<use f='linux/drivers/clk/clk-gpio.c' l='91'/>
<use f='linux/drivers/clk/clk-mux.c' l='107' u='r'/>
<use f='linux/drivers/clk/clk-mux.c' l='107' u='r'/>
<def f='linux/drivers/clk/clk.c' l='507' ll='511' type='int __clk_mux_determine_rate(struct clk_hw * hw, struct clk_rate_request * req)'/>
<dec f='linux/drivers/clk/clk.c' l='512' type='int __clk_mux_determine_rate(struct clk_hw * , struct clk_rate_request * )'/>
<use f='linux/drivers/clk/clk.c' l='512' c='__clk_mux_determine_rate'/>
<use f='linux/drivers/clk/clk.c' l='512' u='a'/>
<use f='linux/drivers/clk/clk.c' l='512' u='a'/>
<doc f='linux/drivers/clk/clk.c' l='502'>/*
 * Helper for finding best parent to provide a given frequency. This can be used
 * directly as a determine_rate callback (e.g. for a mux), or from a more
 * complex clock that may combine a mux with other operations.
 */</doc>
<use f='linux/drivers/clk/x86/clk-pmc-atom.c' l='163' u='r'/>
<use f='linux/drivers/clk/x86/clk-pmc-atom.c' l='163' u='r'/>
