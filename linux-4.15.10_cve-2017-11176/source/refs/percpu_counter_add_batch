<dec f='linux/include/linux/percpu_counter.h' l='43' type='void percpu_counter_add_batch(struct percpu_counter * fbc, s64 amount, s32 batch)'/>
<use f='linux/include/linux/percpu_counter.h' l='55' u='c' c='percpu_counter_add'/>
<use f='linux/include/linux/mman.h' l='68' u='c' c='vm_acct_memory'/>
<use f='linux/include/linux/backing-dev.h' l='68' u='c' c='__add_wb_stat'/>
<use f='linux/lib/flex_proportions.c' l='211' u='c' c='fprop_reflect_period_percpu'/>
<use f='linux/lib/flex_proportions.c' l='223' u='c' c='__fprop_inc_percpu'/>
<use f='linux/lib/flex_proportions.c' l='271' u='c' c='__fprop_inc_percpu_max'/>
<def f='linux/lib/percpu_counter.c' l='83' ll='99' type='void percpu_counter_add_batch(struct percpu_counter * fbc, s64 amount, s32 batch)'/>
<dec f='linux/lib/percpu_counter.c' l='100' type='void percpu_counter_add_batch(struct percpu_counter * , s64 , s32 )'/>
<use f='linux/lib/percpu_counter.c' l='100' c='percpu_counter_add_batch'/>
<use f='linux/lib/percpu_counter.c' l='100' u='a'/>
<use f='linux/lib/percpu_counter.c' l='100' u='a'/>
<doc f='linux/lib/percpu_counter.c' l='76'>/**
 * This function is both preempt and irq safe. The former is due to explicit
 * preemption disable. The latter is guaranteed by the fact that the slow path
 * is explicitly protected by an irq-safe spinlock whereas the fast patch uses
 * this_cpu_add which is irq-safe by definition. Hence there is no need muck
 * with irq state before calling this one
 */</doc>
