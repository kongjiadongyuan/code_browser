<dec f='linux/include/linux/sched/mm.h' l='96' type='struct mm_struct * get_task_mm(struct task_struct * task)'/>
<doc f='linux/include/linux/sched/mm.h' l='95'>/* Grab a reference to a task&apos;s mm, if it is not already going away */</doc>
<use f='linux/fs/proc/array.c' l='377' u='c' c='proc_pid_status'/>
<use f='linux/fs/proc/array.c' l='420' u='c' c='do_task_stat'/>
<use f='linux/fs/proc/array.c' l='604' u='c' c='proc_pid_statm'/>
<use f='linux/fs/proc/base.c' l='226' u='c' c='proc_pid_cmdline_read'/>
<use f='linux/fs/proc/base.c' l='1977' u='c' c='map_files_get_link'/>
<use f='linux/fs/proc/base.c' l='2081' u='c' c='proc_map_files_lookup'/>
<use f='linux/fs/proc/base.c' l='2134' u='c' c='proc_map_files_readdir'/>
<use f='linux/fs/proc/base.c' l='2612' u='c' c='proc_coredump_filter_read'/>
<use f='linux/fs/proc/base.c' l='2647' u='c' c='proc_coredump_filter_write'/>
<use f='linux/fs/proc/task_mmu.c' l='1114' u='c' c='clear_refs_write'/>
<use f='linux/kernel/cgroup/cpuset.c' l='1113' u='c' c='update_tasks_nodemask'/>
<use f='linux/kernel/cgroup/cpuset.c' l='1557' u='c' c='cpuset_attach'/>
<use f='linux/kernel/events/core.c' l='8257' u='c' c='perf_event_addr_filters_apply'/>
<def f='linux/kernel/fork.c' l='1046' ll='1060' type='struct mm_struct * get_task_mm(struct task_struct * task)'/>
<dec f='linux/kernel/fork.c' l='1061' type='struct mm_struct * get_task_mm(struct task_struct * )'/>
<use f='linux/kernel/fork.c' l='1061' c='get_task_mm'/>
<use f='linux/kernel/fork.c' l='1061' u='a'/>
<use f='linux/kernel/fork.c' l='1061' u='a'/>
<use f='linux/kernel/fork.c' l='1072' u='c' c='mm_access'/>
<doc f='linux/kernel/fork.c' l='1037'>/**
 * get_task_mm - acquire a reference to the task&apos;s mm
 *
 * Returns %NULL if the task has no mm.  Checks PF_KTHREAD (meaning
 * this kernel workthread has transiently adopted a user mm with use_mm,
 * to do its AIO) is not set and if so returns a reference to it, after
 * bumping up the use count.  User must release the mm via mmput()
 * after use.  Typically used by /proc and ptrace.
 */</doc>
<use f='linux/kernel/ptrace.c' l='44' u='c' c='ptrace_access_vm'/>
<use f='linux/kernel/sys.c' l='1724' u='c' c='getrusage'/>
<use f='linux/kernel/trace/trace_output.c' l='1125' u='c' c='trace_user_stack_print'/>
<use f='linux/kernel/tsacct.c' l='103' u='c' c='xacct_add_tsk'/>
<use f='linux/mm/memory.c' l='4474' u='c' c='access_process_vm'/>
<use f='linux/mm/mempolicy.c' l='1430' u='c' c='SYSC_migrate_pages'/>
<use f='linux/mm/migrate.c' l='1791' u='c' c='SYSC_move_pages'/>
<use f='linux/mm/util.c' l='694' u='c' c='get_cmdline'/>
