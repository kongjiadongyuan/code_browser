<dec f='include/unistd.h' l='435' type='unsigned int alarm(unsigned int __seconds)'/>
<doc f='include/unistd.h' l='428'>/* Schedule an alarm.  In SECONDS seconds, the process will get a SIGALRM.
   If SECONDS is zero, any currently scheduled alarm will be cancelled.
   The function returns the number of seconds remaining until the last
   alarm scheduled would have signaled, or zero if there wasn&apos;t one.
   There is no return value to indicate an error, but you can set `errno&apos;
   to 0 and check its value after calling `alarm&apos;, and this might tell you.
   The signal may come late due to processor scheduling.  */</doc>
<def f='linux/include/linux/alarmtimer.h' l='41' ll='48'/>
<use f='linux/include/linux/alarmtimer.h' l='44'/>
<use f='linux/include/linux/alarmtimer.h' l='50' c='alarm_init'/>
<use f='linux/include/linux/alarmtimer.h' l='51' c='alarm_init'/>
<use f='linux/include/linux/alarmtimer.h' l='52' c='alarm_start'/>
<use f='linux/include/linux/alarmtimer.h' l='53' c='alarm_start_relative'/>
<use f='linux/include/linux/alarmtimer.h' l='54' c='alarm_restart'/>
<use f='linux/include/linux/alarmtimer.h' l='55' c='alarm_try_to_cancel'/>
<use f='linux/include/linux/alarmtimer.h' l='56' c='alarm_cancel'/>
<use f='linux/include/linux/alarmtimer.h' l='58' c='alarm_forward'/>
<use f='linux/include/linux/alarmtimer.h' l='59' c='alarm_forward_now'/>
<use f='linux/include/linux/alarmtimer.h' l='60' c='alarm_expires_remaining'/>
<use f='linux/include/linux/posix-timers.h' l='102'/>
<size>120</size>
<doc f='linux/include/linux/alarmtimer.h' l='31'>/**
 * struct alarm - Alarm timer structure
 * @node:	timerqueue node for adding to the event list this value
 *		also includes the expiration time.
 * @timer:	hrtimer used to schedule events while running
 * @function:	Function pointer to be executed when the timer fires.
 * @type:	Alarm type (BOOTTIME/REALTIME).
 * @state:	Flag that represents if the alarm is set to fire or not.
 * @data:	Internal data value.
 */</doc>
<mbr r='alarm::node' o='0' t='struct timerqueue_node'/>
<mbr r='alarm::timer' o='256' t='struct hrtimer'/>
<mbr r='alarm::function' o='768' t='enum alarmtimer_restart (*)(struct alarm *, ktime_t)'/>
<mbr r='alarm::type' o='832' t='enum alarmtimer_type'/>
<mbr r='alarm::state' o='864' t='int'/>
<mbr r='alarm::data' o='896' t='void *'/>
<use f='linux/fs/timerfd.c' l='33'/>
<use f='linux/fs/timerfd.c' l='81' c='timerfd_alarmproc'/>
<size>120</size>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='trace_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='trace_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='trace_alarmtimer_fired_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='trace_alarmtimer_fired_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='register_trace_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='register_trace_prio_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='unregister_trace_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='75' c='check_trace_callback_type_alarmtimer_fired'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='trace_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='trace_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='trace_alarmtimer_start_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='trace_alarmtimer_start_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='register_trace_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='register_trace_prio_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='unregister_trace_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='82' c='check_trace_callback_type_alarmtimer_start'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='trace_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='trace_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='trace_alarmtimer_cancel_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='trace_alarmtimer_cancel_rcuidle'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='register_trace_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='register_trace_prio_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='unregister_trace_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='89' c='check_trace_callback_type_alarmtimer_cancel'/>
<use f='linux/include/trace/events/alarmtimer.h' l='47' c='trace_event_get_offsets_alarm_class'/>
<use f='linux/include/trace/events/alarmtimer.h' l='47' c='trace_event_raw_event_alarm_class'/>
<use f='linux/include/trace/events/alarmtimer.h' l='47' c='perf_trace_alarm_class'/>
<use f='linux/include/trace/events/alarmtimer.h' l='47' c='perf_trace_alarm_class'/>
<use f='linux/kernel/time/alarmtimer.c' l='163' c='alarmtimer_enqueue'/>
<use f='linux/kernel/time/alarmtimer.c' l='181' c='alarmtimer_dequeue'/>
<use f='linux/kernel/time/alarmtimer.c' l='202' c='alarmtimer_fired'/>
<use f='linux/kernel/time/alarmtimer.c' l='202' c='alarmtimer_fired'/>
<use f='linux/kernel/time/alarmtimer.c' l='202' c='alarmtimer_fired'/>
<use f='linux/kernel/time/alarmtimer.c' l='202' c='alarmtimer_fired'/>
<use f='linux/kernel/time/alarmtimer.c' l='228' c='alarm_expires_remaining'/>
<use f='linux/kernel/time/alarmtimer.c' l='335' c='alarm_init'/>
<use f='linux/kernel/time/alarmtimer.c' l='336' c='alarm_init'/>
<use f='linux/kernel/time/alarmtimer.c' l='353' c='alarm_start'/>
<use f='linux/kernel/time/alarmtimer.c' l='373' c='alarm_start_relative'/>
<use f='linux/kernel/time/alarmtimer.c' l='382' c='alarm_restart'/>
<use f='linux/kernel/time/alarmtimer.c' l='402' c='alarm_try_to_cancel'/>
<use f='linux/kernel/time/alarmtimer.c' l='426' c='alarm_cancel'/>
<use f='linux/kernel/time/alarmtimer.c' l='438' c='alarm_forward'/>
<use f='linux/kernel/time/alarmtimer.c' l='470' c='alarm_forward_now'/>
<use f='linux/kernel/time/alarmtimer.c' l='530' c='alarm_handle_timer'/>
<use f='linux/kernel/time/alarmtimer.c' l='566' c='alarm_timer_rearm'/>
<use f='linux/kernel/time/alarmtimer.c' l='579' c='alarm_timer_forward'/>
<use f='linux/kernel/time/alarmtimer.c' l='591' c='alarm_timer_remaining'/>
<use f='linux/kernel/time/alarmtimer.c' l='615' c='alarm_timer_arm'/>
<use f='linux/kernel/time/alarmtimer.c' l='688' c='alarmtimer_nsleep_wakeup'/>
<use f='linux/kernel/time/alarmtimer.c' l='706' c='alarmtimer_do_nsleep'/>
<use f='linux/kernel/time/alarmtimer.c' l='753' c='alarm_timer_nsleep_restart'/>
<use f='linux/kernel/time/alarmtimer.c' l='774' c='alarm_timer_nsleep'/>
<size>120</size>
