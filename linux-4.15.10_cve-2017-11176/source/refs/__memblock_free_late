<dec f='linux/include/linux/bootmem.h' l='173' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<use f='linux/include/linux/bootmem.h' l='255' u='c' c='memblock_free_late'/>
<dec f='linux/include/linux/memblock.h' l='113' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<use f='linux/mm/memblock.c' l='299' u='c' c='memblock_discard'/>
<use f='linux/mm/memblock.c' l='306' u='c' c='memblock_discard'/>
<def f='linux/mm/memblock.c' l='1483' ll='1498' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<doc f='linux/mm/memblock.c' l='1474'>/*
 * __memblock_free_late - free bootmem block pages directly to buddy allocator
 * @addr: phys starting address of the  boot memory block
 * @size: size of the boot memory block in bytes
 *
 * This is only useful when the bootmem allocator has already been torn
 * down, but we are still initializing the system.  Pages are released directly
 * to the buddy allocator, no bootmem metadata is updated because it is gone.
 */</doc>
