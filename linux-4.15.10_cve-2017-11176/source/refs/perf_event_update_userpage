<dec f='linux/include/linux/perf_event.h' l='862' type='void perf_event_update_userpage(struct perf_event * event)'/>
<use f='linux/arch/x86/events/amd/ibs.c' l='425' u='c' c='perf_ibs_start'/>
<use f='linux/arch/x86/events/amd/ibs.c' l='512' u='c' c='perf_ibs_del'/>
<use f='linux/arch/x86/events/amd/ibs.c' l='676' u='c' c='perf_ibs_handle_irq'/>
<use f='linux/arch/x86/events/amd/iommu.c' l='305' u='c' c='perf_iommu_start'/>
<use f='linux/arch/x86/events/amd/iommu.c' l='379' u='c' c='perf_iommu_del'/>
<use f='linux/arch/x86/events/amd/uncore.c' l='111' u='c' c='amd_uncore_start'/>
<use f='linux/arch/x86/events/core.c' l='1180' u='c' c='x86_perf_event_set_period'/>
<use f='linux/arch/x86/events/core.c' l='1280' u='c' c='x86_pmu_start'/>
<use f='linux/arch/x86/events/core.c' l='1413' u='c' c='x86_pmu_del'/>
<use f='linux/kernel/events/core.c' l='2786' u='c' c='__perf_event_sync_stat'/>
<use f='linux/kernel/events/core.c' l='2787' u='c' c='__perf_event_sync_stat'/>
<use f='linux/kernel/events/core.c' l='4550' u='c' c='_perf_event_reset'/>
<def f='linux/kernel/events/core.c' l='4867' ll='4915' type='void perf_event_update_userpage(struct perf_event * event)'/>
<use f='linux/kernel/events/core.c' l='5353' u='c' c='perf_mmap'/>
<use f='linux/kernel/events/core.c' l='7672' u='c' c='perf_swevent_add'/>
<use f='linux/kernel/events/core.c' l='8697' u='c' c='cpu_clock_event_add'/>
<use f='linux/kernel/events/core.c' l='8774' u='c' c='task_clock_event_add'/>
<doc f='linux/kernel/events/core.c' l='4862'>/*
 * Callers need to ensure there can be no nesting of this function, otherwise
 * the seqlock logic goes bad. We can not serialize this because the arch
 * code calls this from NMI context.
 */</doc>
