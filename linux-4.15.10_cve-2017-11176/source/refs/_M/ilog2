<dec f='linux/include/linux/log2.h' l='84'/>
<use f='linux/include/linux/log2.h' l='191' u='c'/>
<doc f='linux/include/linux/log2.h' l='74'>/**
 * ilog2 - log base 2 of 32-bit or a 64-bit unsigned value
 * @n: parameter
 *
 * constant-capable log of base 2 calculation
 * - this can be used to initialise global variables from constant data, hence
 * the massive ternary operator construction
 *
 * selects the appropriately-sized optimised version depending on sizeof(n)
 */</doc>
<use f='linux/include/linux/sched.h' l='1256' u='c'/>
<use f='linux/arch/x86/kernel/cpu/mcheck/mce-genpool.c' l='122' u='c'/>
<use f='linux/block/blk-mq.c' l='51' u='c'/>
<use f='linux/block/blk-mq.c' l='966' u='c'/>
<use f='linux/block/blk-mq.c' l='2059' u='c'/>
<use f='linux/include/scsi/scsi_cmnd.h' l='316' u='c'/>
<use f='linux/include/scsi/scsi_cmnd.h' l='358' u='c'/>
<use f='linux/block/genhd.c' l='1546' u='c'/>
<use f='linux/block/genhd.c' l='1547' u='c'/>
<use f='linux/block/genhd.c' l='1551' u='c'/>
<use f='linux/block/genhd.c' l='1552' u='c'/>
<use f='linux/drivers/base/regmap/regmap.c' l='742' u='c'/>
<use f='linux/drivers/gpu/drm/drm_bufs.c' l='101' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='2549' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_execbuffer.c' l='280' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_fence_reg.c' l='142' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_fence_reg.c' l='175' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_internal.c' l='66' u='c'/>
<use f='linux/drivers/iommu/intel-iommu.c' l='1578' u='c'/>
<use f='linux/drivers/pci/msi.c' l='558' u='c'/>
<use f='linux/drivers/scsi/sd.h' l='175' u='c'/>
<use f='linux/drivers/scsi/sd.h' l='185' u='c'/>
<use f='linux/drivers/scsi/sd.h' l='190' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='757' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='758' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='791' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='792' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='821' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='822' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='852' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='853' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='973' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='974' u='c'/>
<use f='linux/drivers/scsi/sd.c' l='2292' u='c'/>
<use f='linux/drivers/usb/core/urb.c' l='561' u='c'/>
<use f='linux/fs/buffer.c' l='1647' u='c'/>
<use f='linux/fs/ext4/super.c' l='3806' u='c'/>
<use f='linux/fs/ext4/super.c' l='3807' u='c'/>
<use f='linux/fs/proc/array.c' l='140' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='641' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='642' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='643' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='644' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='645' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='646' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='647' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='648' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='649' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='650' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='651' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='655' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='656' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='657' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='658' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='659' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='660' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='661' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='662' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='663' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='664' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='665' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='666' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='667' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='671' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='672' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='673' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='674' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='675' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='676' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='679' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='680' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='681' u='c'/>
<use f='linux/fs/proc/task_mmu.c' l='682' u='c'/>
<use f='linux/kernel/bounds.c' l='22' u='c'/>
<use f='linux/kernel/events/ring_buffer.c' l='601' u='c'/>
<use f='linux/kernel/events/ring_buffer.c' l='625' u='c'/>
<use f='linux/kernel/sched/fair.c' l='177' u='c'/>
<use f='linux/kernel/time/timekeeping.c' l='2112' u='c'/>
<use f='linux/kernel/time/timekeeping.c' l='2112' u='c'/>
<use f='linux/kernel/time/timekeeping.c' l='2115' u='c'/>
<use f='linux/lib/rhashtable.c' l='106' u='c'/>
<use f='linux/lib/rhashtable.c' l='181' u='c'/>
<use f='linux/lib/rhashtable.c' l='200' u='c'/>
<use f='linux/lib/rhashtable.c' l='1094' u='c'/>
<use f='linux/lib/rhashtable.c' l='1126' u='c'/>
<use f='linux/lib/sbitmap.c' l='30' u='c'/>
<use f='linux/mm/page-writeback.c' l='1110' u='c'/>
<use f='linux/mm/page-writeback.c' l='1414' u='c'/>
<use f='linux/mm/page-writeback.c' l='1444' u='c'/>
<use f='linux/mm/page-writeback.c' l='1445' u='c'/>
<use f='linux/mm/page_alloc.c' l='7390' u='c'/>
<use f='linux/mm/slub.c' l='3612' u='c'/>
<use f='linux/net/ipv4/tcp_timer.c' l='178' u='c'/>
<use f='linux/net/ipv4/udp.c' l='2859' u='c'/>
<use f='linux/net/mac80211/tdls.c' l='263' u='c'/>
<use f='linux/net/mac80211/tdls.c' l='264' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='530' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='531' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='532' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='533' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='534' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='535' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='536' u='c'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='537' u='c'/>
<dec f='linux/tools/include/linux/log2.h' l='75'/>
<doc f='linux/tools/include/linux/log2.h' l='65'>/**
 * ilog2 - log of base 2 of 32-bit or a 64-bit unsigned value
 * @n - parameter
 *
 * constant-capable log of base 2 calculation
 * - this can be used to initialise global variables from constant data, hence
 *   the massive ternary operator construction
 *
 * selects the appropriately-sized optimised version depending on sizeof(n)
 */</doc>
