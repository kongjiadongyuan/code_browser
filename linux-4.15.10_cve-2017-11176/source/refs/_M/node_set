<dec f='linux/include/linux/nodemask.h' l='127'/>
<use f='linux/include/linux/nodemask.h' l='284' u='c'/>
<doc f='linux/include/linux/nodemask.h' l='118'>/*
 * The inline keyword gives the compiler room to decide to inline, or
 * not inline a function as it sees best.  However, as these functions
 * are called in both __init and non-__init functions, if they are not
 * inlined we will end up with a section mis-match error (of the type of
 * freeable items not being freed).  So we must use __always_inline here
 * to fix the problem.  If other functions in the future also end up in
 * this situation they will also need to be annotated as __always_inline
 */</doc>
<use f='linux/arch/x86/mm/amdtopology.c' l='155' u='c'/>
<use f='linux/arch/x86/mm/numa.c' l='328' u='c'/>
<use f='linux/arch/x86/mm/numa.c' l='510' u='c'/>
<use f='linux/arch/x86/mm/numa.c' l='696' u='c'/>
<use f='linux/arch/x86/mm/srat.c' l='60' u='c'/>
<use f='linux/arch/x86/mm/srat.c' l='101' u='c'/>
<use f='linux/drivers/acpi/numa.c' l='83' u='c'/>
<use f='linux/drivers/acpi/numa.c' l='297' u='c'/>
<use f='linux/kernel/irq/affinity.c' l='90' u='c'/>
<use f='linux/mm/mempolicy.c' l='817' u='c'/>
<use f='linux/mm/mempolicy.c' l='977' u='c'/>
<use f='linux/mm/mempolicy.c' l='2590' u='c'/>
<use f='linux/mm/mempolicy.c' l='2595' u='c'/>
<use f='linux/mm/mempolicy.c' l='2789' u='c'/>
<use f='linux/mm/page_alloc.c' l='5012' u='c'/>
<use f='linux/mm/page_alloc.c' l='5044' u='c'/>
<use f='linux/mm/slub.c' l='4518' u='c'/>
<use f='linux/mm/slub.c' l='4549' u='c'/>
