<dec f='linux/include/linux/list.h' l='21'/>
<doc f='linux/include/linux/list.h' l='11'>/*
 * Simple doubly linked list implementation.
 *
 * Some of the internal functions (&quot;__xxx&quot;) are useful when
 * manipulating whole lists rather than single entries, as
 * sometimes we already know the next/prev entries and we can
 * generate better code by using them directly rather than
 * using the generic single-entry routines.
 */</doc>
<use f='linux/arch/x86/events/intel/uncore.c' l='15' u='c'/>
<use f='linux/arch/x86/kernel/nmi.c' l='50' u='c'/>
<use f='linux/arch/x86/kernel/nmi.c' l='54' u='c'/>
<use f='linux/arch/x86/kernel/nmi.c' l='58' u='c'/>
<use f='linux/arch/x86/kernel/nmi.c' l='62' u='c'/>
<use f='linux/kernel/auditfilter.c' l='53' u='c'/>
<use f='linux/kernel/auditfilter.c' l='54' u='c'/>
<use f='linux/kernel/auditfilter.c' l='55' u='c'/>
<use f='linux/kernel/auditfilter.c' l='56' u='c'/>
<use f='linux/kernel/auditfilter.c' l='57' u='c'/>
<use f='linux/kernel/auditfilter.c' l='58' u='c'/>
<use f='linux/kernel/auditfilter.c' l='59' u='c'/>
<use f='linux/kernel/auditfilter.c' l='65' u='c'/>
<use f='linux/kernel/auditfilter.c' l='66' u='c'/>
<use f='linux/kernel/auditfilter.c' l='67' u='c'/>
<use f='linux/kernel/auditfilter.c' l='68' u='c'/>
<use f='linux/kernel/auditfilter.c' l='69' u='c'/>
<use f='linux/kernel/auditfilter.c' l='70' u='c'/>
<use f='linux/kernel/auditfilter.c' l='71' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='667' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='668' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='669' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='670' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='671' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='672' u='c'/>
<use f='linux/kernel/cgroup/cgroup.c' l='673' u='c'/>
<use f='linux/kernel/fork.c' l='1406' u='c'/>
<use f='linux/kernel/fork.c' l='1407' u='c'/>
<use f='linux/kernel/kprobes.c' l='134' u='c'/>
<use f='linux/kernel/kprobes.c' l='312' u='c'/>
<use f='linux/kernel/sched/fair.c' l='8482' u='c'/>
<use f='linux/kernel/workqueue.c' l='2599' u='c'/>
<use f='linux/mm/init-mm.c' l='25' u='c'/>
<use f='linux/net/core/net_namespace.c' l='39' u='c'/>
<use f='linux/net/sunrpc/auth_null.c' l='138' u='c'/>
<use f='linux/net/sunrpc/xprtsock.c' l='3203' u='c'/>
<use f='linux/net/sunrpc/xprtsock.c' l='3211' u='c'/>
<use f='linux/net/sunrpc/xprtsock.c' l='3219' u='c'/>
<use f='linux/net/sunrpc/xprtsock.c' l='3227' u='c'/>
<dec f='linux/tools/include/linux/list.h' l='20'/>
<doc f='linux/tools/include/linux/list.h' l='10'>/*
 * Simple doubly linked list implementation.
 *
 * Some of the internal functions (&quot;__xxx&quot;) are useful when
 * manipulating whole lists rather than single entries, as
 * sometimes we already know the next/prev entries and we can
 * generate better code by using them directly rather than
 * using the generic single-entry routines.
 */</doc>
