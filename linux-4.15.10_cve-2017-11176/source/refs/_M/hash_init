<dec f='linux/include/linux/hashtable.h' l='52'/>
<doc f='linux/include/linux/hashtable.h' l='42'>/**
 * hash_init - initialize a hash table
 * @hashtable: hashtable to be initialized
 *
 * Calculates the size of the hashtable from the given parameter, otherwise
 * same as hash_init_size.
 *
 * This has to be a macro since HASH_BITS() will not work on pointers since
 * it calculates the size during preprocessing.
 */</doc>
<use f='linux/block/elevator.c' l='186' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_cmd_parser.c' l='825' u='c'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_userptr.c' l='828' u='c'/>
<use f='linux/kernel/workqueue.c' l='3224' u='c'/>
<use f='linux/net/core/dev.c' l='8172' u='c'/>
<dec f='linux/tools/include/linux/hashtable.h' l='49'/>
<doc f='linux/tools/include/linux/hashtable.h' l='39'>/**
 * hash_init - initialize a hash table
 * @hashtable: hashtable to be initialized
 *
 * Calculates the size of the hashtable from the given parameter, otherwise
 * same as hash_init_size.
 *
 * This has to be a macro since HASH_BITS() will not work on pointers since
 * it calculates the size during preprocessing.
 */</doc>
<use f='linux/tools/objtool/check.c' l='2113' u='c'/>
<use f='linux/tools/objtool/elf.c' l='155' u='c'/>
<use f='linux/tools/objtool/elf.c' l='156' u='c'/>
<use f='linux/tools/objtool/elf.c' l='418' u='c'/>
<use f='linux/tools/objtool/elf.c' l='419' u='c'/>
