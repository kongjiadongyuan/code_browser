<def f='linux/include/linux/sbitmap.h' l='96' ll='130'/>
<use f='linux/include/linux/sbitmap.h' l='342' c='sbitmap_queue_init_node'/>
<use f='linux/include/linux/sbitmap.h' l='350' c='sbitmap_queue_free'/>
<use f='linux/include/linux/sbitmap.h' l='366' c='sbitmap_queue_resize'/>
<use f='linux/include/linux/sbitmap.h' l='375' c='__sbitmap_queue_get'/>
<use f='linux/include/linux/sbitmap.h' l='387' c='__sbitmap_queue_get_shallow'/>
<use f='linux/include/linux/sbitmap.h' l='399' c='sbitmap_queue_get'/>
<use f='linux/include/linux/sbitmap.h' l='421' c='sbitmap_queue_get_shallow'/>
<use f='linux/include/linux/sbitmap.h' l='440' c='sbitmap_queue_clear'/>
<use f='linux/include/linux/sbitmap.h' l='461' c='sbq_wait_ptr'/>
<use f='linux/include/linux/sbitmap.h' l='476' c='sbitmap_queue_wake_all'/>
<use f='linux/include/linux/sbitmap.h' l='486' c='sbitmap_queue_show'/>
<use f='linux/block/blk-mq-tag.h' l='16'/>
<use f='linux/block/blk-mq-tag.h' l='17'/>
<use f='linux/block/blk-mq-tag.h' l='39' c='bt_wait_ptr'/>
<size>56</size>
<doc f='linux/include/linux/sbitmap.h' l='87'>/**
 * struct sbitmap_queue - Scalable bitmap with the added ability to wait on free
 * bits.
 *
 * A &amp;struct sbitmap_queue uses multiple wait queues and rolling wakeups to
 * avoid contention on the wait queue spinlock. This ensures that we don&apos;t hit a
 * scalability wall when we run out of free bits and have to start putting tasks
 * to sleep.
 */</doc>
<mbr r='sbitmap_queue::sb' o='0' t='struct sbitmap'/>
<mbr r='sbitmap_queue::alloc_hint' o='192' t='unsigned int *'/>
<mbr r='sbitmap_queue::wake_batch' o='256' t='unsigned int'/>
<mbr r='sbitmap_queue::wake_index' o='288' t='atomic_t'/>
<mbr r='sbitmap_queue::ws' o='320' t='struct sbq_wait_state *'/>
<mbr r='sbitmap_queue::round_robin' o='384' t='bool'/>
<use f='linux/block/blk-mq-tag.c' l='67' c='hctx_may_queue'/>
<use f='linux/block/blk-mq-tag.c' l='94' c='__blk_mq_get_tag'/>
<use f='linux/block/blk-mq-tag.c' l='108' c='blk_mq_get_tag'/>
<use f='linux/block/blk-mq-tag.c' l='226' c='bt_for_each'/>
<use f='linux/block/blk-mq-tag.c' l='267' c='bt_tags_for_each'/>
<use f='linux/block/blk-mq-tag.c' l='354' c='bt_alloc'/>
<size>56</size>
<use f='linux/block/kyber-iosched.c' l='85'/>
<use f='linux/block/kyber-iosched.c' l='528' c='kyber_get_domain_token'/>
<size>56</size>
<use f='linux/lib/sbitmap.c' l='289' c='sbitmap_queue_init_node'/>
<use f='linux/lib/sbitmap.c' l='330' c='sbitmap_queue_resize'/>
<use f='linux/lib/sbitmap.c' l='349' c='__sbitmap_queue_get'/>
<use f='linux/lib/sbitmap.c' l='377' c='__sbitmap_queue_get_shallow'/>
<use f='linux/lib/sbitmap.c' l='406' c='sbq_wake_ptr'/>
<use f='linux/lib/sbitmap.c' l='428' c='sbq_wake_up'/>
<use f='linux/lib/sbitmap.c' l='469' c='sbitmap_queue_clear'/>
<use f='linux/lib/sbitmap.c' l='479' c='sbitmap_queue_wake_all'/>
<use f='linux/lib/sbitmap.c' l='500' c='sbitmap_queue_show'/>
<size>56</size>
