<dec f='linux/include/crypto/des.h' l='20' type='int __des3_ede_setkey(u32 * expkey, u32 * flags, const u8 * key, unsigned int keylen)'/>
<def f='linux/crypto/des_generic.c' l='862' ll='879' type='int __des3_ede_setkey(u32 * expkey, u32 * flags, const u8 * key, unsigned int keylen)'/>
<dec f='linux/crypto/des_generic.c' l='880' type='int __des3_ede_setkey(u32 * , u32 * , const u8 * , unsigned int )'/>
<use f='linux/crypto/des_generic.c' l='880' c='__des3_ede_setkey'/>
<use f='linux/crypto/des_generic.c' l='880' u='a'/>
<use f='linux/crypto/des_generic.c' l='880' u='a'/>
<use f='linux/crypto/des_generic.c' l='889' u='c' c='des3_ede_setkey'/>
<doc f='linux/crypto/des_generic.c' l='849'>/*
 * RFC2451:
 *
 *   For DES-EDE3, there is no known need to reject weak or
 *   complementation keys.  Any weakness is obviated by the use of
 *   multiple keys.
 *
 *   However, if the first two or last two independent 64-bit keys are
 *   equal (k1 == k2 or k2 == k3), then the DES3 operation is simply the
 *   same as DES.  Implementers MUST reject keys that exhibit this
 *   property.
 *
 */</doc>
