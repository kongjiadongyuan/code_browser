<dec f='linux/include/linux/fs.h' l='2498' type='int blkdev_reread_part(struct block_device * bdev)'/>
<def f='linux/block/ioctl.c' l='188' ll='197' type='int blkdev_reread_part(struct block_device * bdev)'/>
<dec f='linux/block/ioctl.c' l='198' type='int blkdev_reread_part(struct block_device * )'/>
<use f='linux/block/ioctl.c' l='198' c='blkdev_reread_part'/>
<use f='linux/block/ioctl.c' l='198' u='a'/>
<use f='linux/block/ioctl.c' l='198' u='a'/>
<use f='linux/block/ioctl.c' l='575' u='c' c='blkdev_ioctl'/>
<doc f='linux/block/ioctl.c' l='177'>/*
 * This is an exported API for the block driver, and will
 * try to acquire bd_mutex. If bd_mutex has been held already
 * in current context, please call __blkdev_reread_part().
 *
 * Make sure the held locks in current context aren&apos;t required
 * in open()/close() handler and I/O path for avoiding ABBA deadlock:
 * - bd_mutex is held before calling block driver&apos;s open/close
 *   handler
 * - reading partition table may submit I/O to the block device
 */</doc>
<use f='linux/drivers/block/loop.c' l='619' u='c' c='loop_reread_partitions'/>
