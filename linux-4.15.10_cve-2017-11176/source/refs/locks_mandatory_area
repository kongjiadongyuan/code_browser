<dec f='linux/include/linux/fs.h' l='2212' type='int locks_mandatory_area(struct inode * , struct file * , loff_t , loff_t , unsigned char )'/>
<use f='linux/include/linux/fs.h' l='2249' u='c' c='locks_verify_truncate'/>
<use f='linux/include/linux/fs.h' l='2252' u='c' c='locks_verify_truncate'/>
<def f='linux/fs/locks.c' l='1303' ll='1350' type='int locks_mandatory_area(struct inode * inode, struct file * filp, loff_t start, loff_t end, unsigned char type)'/>
<dec f='linux/fs/locks.c' l='1352' type='int locks_mandatory_area(struct inode * , struct file * , loff_t , loff_t , unsigned char )'/>
<use f='linux/fs/locks.c' l='1352' c='locks_mandatory_area'/>
<use f='linux/fs/locks.c' l='1352' u='a'/>
<use f='linux/fs/locks.c' l='1352' u='a'/>
<doc f='linux/fs/locks.c' l='1293'>/**
 * locks_mandatory_area - Check for a conflicting lock
 * @inode:	the file to check
 * @filp:       how the file was opened (if it was)
 * @start:	first byte in the file to check
 * @end:	lastbyte in the file to check
 * @type:	%F_WRLCK for a write lock, else %F_RDLCK
 *
 * Searches the inode&apos;s list of locks to find any POSIX locks which conflict.
 */</doc>
<use f='linux/fs/read_write.c' l='381' u='c' c='rw_verify_area'/>
<use f='linux/fs/read_write.c' l='1676' u='c' c='clone_verify_area'/>
