<dec f='linux/include/drm/drm_atomic_helper.h' l='69' type='void drm_atomic_helper_commit_modeset_disables(struct drm_device * dev, struct drm_atomic_state * state)'/>
<def f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1051' ll='1059' type='void drm_atomic_helper_commit_modeset_disables(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1060' type='void drm_atomic_helper_commit_modeset_disables(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1060' c='drm_atomic_helper_commit_modeset_disables'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1060' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1060' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1310' u='c' c='drm_atomic_helper_commit_tail'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1338' u='c' c='drm_atomic_helper_commit_tail_rpm'/>
<doc f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='1037'>/**
 * drm_atomic_helper_commit_modeset_disables - modeset commit to disable outputs
 * @dev: DRM device
 * @old_state: atomic state object with old state structures
 *
 * This function shuts down all the outputs that need to be shut down and
 * prepares them (if required) with the new mode.
 *
 * For compatibility with legacy crtc helpers this should be called before
 * drm_atomic_helper_commit_planes(), which is what the default commit function
 * does. But drivers with different needs can group the modeset commits together
 * and do the plane commits at the end. This is useful for drivers doing runtime
 * PM since planes updates then only happen when the CRTC is actually enabled.
 */</doc>
