<def f='linux/include/linux/crypto.h' l='537' ll='547'/>
<use f='linux/include/linux/crypto.h' l='585'/>
<use f='linux/include/linux/crypto.h' l='798' c='crypto_ablkcipher_crt'/>
<use f='linux/include/linux/crypto.h' l='877' c='crypto_ablkcipher_setkey'/>
<use f='linux/include/linux/crypto.h' l='910' c='crypto_ablkcipher_encrypt'/>
<use f='linux/include/linux/crypto.h' l='928' c='crypto_ablkcipher_decrypt'/>
<size>40</size>
<doc f='linux/include/linux/crypto.h' l='531'>/*
 * Transforms: user-instantiated objects which encapsulate algorithms
 * and core processing logic.  Managed via crypto_alloc_*() and
 * crypto_free_*(), as well as the various helpers below.
 */</doc>
<mbr r='ablkcipher_tfm::setkey' o='0' t='int (*)(struct crypto_ablkcipher *, const u8 *, unsigned int)'/>
<mbr r='ablkcipher_tfm::encrypt' o='64' t='int (*)(struct ablkcipher_request *)'/>
<mbr r='ablkcipher_tfm::decrypt' o='128' t='int (*)(struct ablkcipher_request *)'/>
<mbr r='ablkcipher_tfm::base' o='192' t='struct crypto_ablkcipher *'/>
<mbr r='ablkcipher_tfm::ivsize' o='256' t='unsigned int'/>
<mbr r='ablkcipher_tfm::reqsize' o='288' t='unsigned int'/>
<use f='linux/crypto/ablkcipher.c' l='354' c='crypto_init_ablkcipher_ops'/>
<use f='linux/crypto/ablkcipher.c' l='427' c='crypto_init_givcipher_ops'/>
<size>40</size>
<use f='linux/crypto/blkcipher.c' l='464' c='crypto_init_blkcipher_ops_async'/>
<size>40</size>
