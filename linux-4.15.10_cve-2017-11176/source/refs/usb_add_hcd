<dec f='linux/include/linux/usb/hcd.h' l='453' type='int usb_add_hcd(struct usb_hcd * hcd, unsigned int irqnum, unsigned long irqflags)'/>
<use f='linux/drivers/usb/core/hcd-pci.c' l='261' u='c' c='usb_hcd_pci_probe'/>
<use f='linux/drivers/usb/core/hcd-pci.c' l='269' u='c' c='usb_hcd_pci_probe'/>
<def f='linux/drivers/usb/core/hcd.c' l='2724' ll='2949' type='int usb_add_hcd(struct usb_hcd * hcd, unsigned int irqnum, unsigned long irqflags)'/>
<dec f='linux/drivers/usb/core/hcd.c' l='2950' type='int usb_add_hcd(struct usb_hcd * , unsigned int , unsigned long )'/>
<use f='linux/drivers/usb/core/hcd.c' l='2950' c='usb_add_hcd'/>
<use f='linux/drivers/usb/core/hcd.c' l='2950' u='a'/>
<use f='linux/drivers/usb/core/hcd.c' l='2950' u='a'/>
<doc f='linux/drivers/usb/core/hcd.c' l='2714'>/**
 * usb_add_hcd - finish generic HCD structure initialization and register
 * @hcd: the usb_hcd structure to initialize
 * @irqnum: Interrupt line to allocate
 * @irqflags: Interrupt type flags
 *
 * Finish the remaining parts of generic HCD initialization: allocate the
 * buffers of consistent memory, register the bus, request the IRQ line,
 * and call the driver&apos;s reset() and start() routines.
 */</doc>
