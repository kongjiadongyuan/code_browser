<dec f='linux/include/sound/core.h' l='261' type='int snd_device_new(struct snd_card * card, enum snd_device_type type, void * device_data, struct snd_device_ops * ops)'/>
<use f='linux/sound/core/control.c' l='1899' u='c' c='snd_ctl_create'/>
<doc f='linux/include/sound/core.h' l='259'>/* device.c */</doc>
<def f='linux/sound/core/device.c' l='44' ll='71' type='int snd_device_new(struct snd_card * card, enum snd_device_type type, void * device_data, struct snd_device_ops * ops)'/>
<dec f='linux/sound/core/device.c' l='72' type='int snd_device_new(struct snd_card * , enum snd_device_type , void * , struct snd_device_ops * )'/>
<use f='linux/sound/core/device.c' l='72' c='snd_device_new'/>
<use f='linux/sound/core/device.c' l='72' u='a'/>
<use f='linux/sound/core/device.c' l='72' u='a'/>
<doc f='linux/sound/core/device.c' l='28'>/**
 * snd_device_new - create an ALSA device component
 * @card: the card instance
 * @type: the device type, SNDRV_DEV_XXX
 * @device_data: the data pointer of this device
 * @ops: the operator table
 *
 * Creates a new device component for the given data pointer.
 * The device will be assigned to the card and managed together
 * by the card.
 *
 * The data pointer plays a role as the identifier, too, so the
 * pointer address must be unique and unchanged.
 *
 * Return: Zero if successful, or a negative error code on failure.
 */</doc>
<use f='linux/sound/core/hwdep.c' l='401' u='c' c='snd_hwdep_new'/>
<use f='linux/sound/core/jack.c' l='261' u='c' c='snd_jack_new'/>
<use f='linux/sound/core/pcm.c' l='809' u='c' c='_snd_pcm_new'/>
<use f='linux/sound/core/seq_device.c' l='240' u='c' c='snd_seq_device_new'/>
<use f='linux/sound/core/timer.c' l='902' u='c' c='snd_timer_new'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='954' u='c' c='snd_hda_codec_new'/>
<use f='linux/sound/pci/hda/hda_intel.c' l='1755' u='c' c='azx_create'/>
