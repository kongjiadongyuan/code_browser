<def f='linux/include/linux/skbuff.h' l='3134' ll='3141' type='int pskb_trim_rcsum(struct sk_buff * skb, unsigned int len)'/>
<doc f='linux/include/linux/skbuff.h' l='3125'>/**
 *	pskb_trim_rcsum - trim received skb and update checksum
 *	@skb: buffer to trim
 *	@len: new length
 *
 *	This is exactly the same as pskb_trim except that it ensures the
 *	checksum of received packets are still valid after the operation.
 */</doc>
<use f='linux/net/core/skbuff.c' l='4686' u='c' c='skb_checksum_maybe_trim'/>
<use f='linux/net/ipv4/ip_fragment.c' l='404' u='c' c='ip_frag_queue'/>
<use f='linux/net/ipv4/ip_fragment.c' l='721' u='c' c='ip_check_defrag'/>
<use f='linux/net/ipv4/ip_input.c' l='479' u='c' c='ip_rcv'/>
<use f='linux/net/ipv4/udp.c' l='2078' u='c' c='__udp4_lib_rcv'/>
<use f='linux/net/ipv6/exthdrs.c' l='789' u='c' c='ipv6_hop_jumbo'/>
<use f='linux/net/ipv6/ip6_input.c' l='188' u='c' c='ipv6_rcv'/>
<use f='linux/net/ipv6/netfilter/nf_conntrack_reasm.c' l='287' u='c' c='nf_ct_frag6_queue'/>
<use f='linux/net/ipv6/reassembly.c' l='283' u='c' c='ip6_frag_queue'/>
<use f='linux/net/ipv6/udp.c' l='814' u='c' c='__udp6_lib_rcv'/>
