<def f='linux/include/linux/pagemap.h' l='48' ll='61' type='void mapping_set_error(struct address_space * mapping, int error)'/>
<doc f='linux/include/linux/pagemap.h' l='34'>/**
 * mapping_set_error - record a writeback error in the address_space
 * @mapping - the mapping in which an error should be set
 * @error - the error to set in the mapping
 *
 * When writeback fails in some way, we must record that error so that
 * userspace can be informed when fsync and the like are called.  We endeavor
 * to report errors on any file that was open at the time of the error.  Some
 * internal callers also need to know when writeback errors have occurred.
 *
 * When a writeback error occurs, most filesystems will want to call
 * mapping_set_error to record the error in the mapping so that it can be
 * reported when the application calls fsync(2).
 */</doc>
<use f='linux/fs/buffer.c' l='1146' u='c' c='mark_buffer_write_io_error'/>
<use f='linux/fs/buffer.c' l='1148' u='c' c='mark_buffer_write_io_error'/>
<use f='linux/fs/buffer.c' l='1836' u='c' c='__block_write_full_page'/>
<use f='linux/fs/ext4/inode.c' l='2701' u='c' c='__writepage'/>
<use f='linux/fs/ext4/page-io.c' l='91' u='c' c='ext4_finish_bio'/>
<use f='linux/fs/ext4/page-io.c' l='324' u='c' c='ext4_end_bio'/>
<use f='linux/fs/mpage.c' l='672' u='c' c='__mpage_writepage'/>
<use f='linux/mm/filemap.c' l='1258' u='c' c='page_endio'/>
<use f='linux/mm/page-writeback.c' l='2302' u='c' c='__writepage'/>
<use f='linux/mm/vmscan.c' l='576' u='c' c='handle_write_error'/>
