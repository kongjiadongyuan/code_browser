<def f='linux/include/linux/mm.h' l='1289' ll='1306'/>
<use f='linux/include/linux/mm.h' l='1291'/>
<use f='linux/include/linux/mm.h' l='1293'/>
<use f='linux/include/linux/mm.h' l='1295'/>
<use f='linux/include/linux/mm.h' l='1297'/>
<use f='linux/include/linux/mm.h' l='1300'/>
<use f='linux/include/linux/mm.h' l='1302'/>
<use f='linux/include/linux/mm.h' l='1309' c='walk_page_range'/>
<use f='linux/include/linux/mm.h' l='1310' c='walk_page_vma'/>
<size>72</size>
<doc f='linux/include/linux/mm.h' l='1265'>/**
 * mm_walk - callbacks for walk_page_range
 * @pud_entry: if set, called for each non-empty PUD (2nd-level) entry
 *	       this handler should only handle pud_trans_huge() puds.
 *	       the pmd_entry or pte_entry callbacks will be used for
 *	       regular PUDs.
 * @pmd_entry: if set, called for each non-empty PMD (3rd-level) entry
 *	       this handler is required to be able to handle
 *	       pmd_trans_huge() pmds.  They may simply choose to
 *	       split_huge_page() instead of handling it explicitly.
 * @pte_entry: if set, called for each non-empty PTE (4th-level) entry
 * @pte_hole: if set, called for each hole at all levels
 * @hugetlb_entry: if set, called for each hugetlb entry
 * @test_walk: caller specific callback function to determine whether
 *             we walk over the current vma or not. Returning 0
 *             value means &quot;do page table walk over the current vma,&quot;
 *             and a negative one means &quot;abort current page table walk
 *             right now.&quot; 1 means &quot;skip the current vma.&quot;
 * @mm:        mm_struct representing the target process of page table walk
 * @vma:       vma currently walked (NULL if walking outside vmas)
 * @private:   private data for callbacks&apos; usage
 *
 * (see the comment on walk_page_range() for more details)
 */</doc>
<mbr r='mm_walk::pud_entry' o='0' t='int (*)(pud_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pmd_entry' o='64' t='int (*)(pmd_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pte_entry' o='128' t='int (*)(pte_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pte_hole' o='192' t='int (*)(unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::hugetlb_entry' o='256' t='int (*)(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::test_walk' o='320' t='int (*)(unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::mm' o='384' t='struct mm_struct *'/>
<mbr r='mm_walk::vma' o='448' t='struct vm_area_struct *'/>
<mbr r='mm_walk::private' o='512' t='void *'/>
<use f='linux/fs/proc/task_mmu.c' l='509' c='smaps_pte_hole'/>
<use f='linux/fs/proc/task_mmu.c' l='521' c='smaps_pte_entry'/>
<use f='linux/fs/proc/task_mmu.c' l='594' c='smaps_pmd_entry'/>
<use f='linux/fs/proc/task_mmu.c' l='600' c='smaps_pte_range'/>
<use f='linux/fs/proc/task_mmu.c' l='702' c='smaps_hugetlb_range'/>
<use f='linux/fs/proc/task_mmu.c' l='740' c='show_smap'/>
<use f='linux/fs/proc/task_mmu.c' l='1007' c='clear_refs_pte_range'/>
<use f='linux/fs/proc/task_mmu.c' l='1066' c='clear_refs_test_walk'/>
<use f='linux/fs/proc/task_mmu.c' l='1119' c='clear_refs_write'/>
<use f='linux/fs/proc/task_mmu.c' l='1218' c='pagemap_pte_hole'/>
<use f='linux/fs/proc/task_mmu.c' l='1296' c='pagemap_pmd_range'/>
<use f='linux/fs/proc/task_mmu.c' l='1382' c='pagemap_hugetlb_range'/>
<use f='linux/fs/proc/task_mmu.c' l='1456' c='pagemap_read'/>
<use f='linux/fs/proc/task_mmu.c' l='1666' c='gather_pte_stats'/>
<use f='linux/fs/proc/task_mmu.c' l='1704' c='gather_hugetlb_stats'/>
<use f='linux/fs/proc/task_mmu.c' l='1741' c='show_numa_map'/>
<size>72</size>
<use f='linux/mm/madvise.c' l='194' c='swapin_walk_pmd_entry'/>
<use f='linux/mm/madvise.c' l='231' c='force_swapin_readahead'/>
<use f='linux/mm/madvise.c' l='311' c='madvise_free_pte_range'/>
<use f='linux/mm/madvise.c' l='447' c='madvise_free_page_range'/>
<size>72</size>
<use f='linux/mm/mempolicy.c' l='432' c='queue_pages_pmd'/>
<use f='linux/mm/mempolicy.c' l='479' c='queue_pages_pte_range'/>
<use f='linux/mm/mempolicy.c' l='539' c='queue_pages_hugetlb'/>
<use f='linux/mm/mempolicy.c' l='597' c='queue_pages_test_walk'/>
<use f='linux/mm/mempolicy.c' l='654' c='queue_pages_range'/>
<size>72</size>
<use f='linux/mm/mincore.c' l='25' c='mincore_hugetlb'/>
<use f='linux/mm/mincore.c' l='107' c='mincore_unmapped_range'/>
<use f='linux/mm/mincore.c' l='115' c='mincore_pte_range'/>
<use f='linux/mm/mincore.c' l='182' c='do_mincore'/>
<size>72</size>
<use f='linux/mm/pagewalk.c' l='8' c='walk_pte_range'/>
<use f='linux/mm/pagewalk.c' l='29' c='walk_pmd_range'/>
<use f='linux/mm/pagewalk.c' l='74' c='walk_pud_range'/>
<use f='linux/mm/pagewalk.c' l='118' c='walk_p4d_range'/>
<use f='linux/mm/pagewalk.c' l='144' c='walk_pgd_range'/>
<use f='linux/mm/pagewalk.c' l='178' c='walk_hugetlb_range'/>
<use f='linux/mm/pagewalk.c' l='220' c='walk_page_test'/>
<use f='linux/mm/pagewalk.c' l='245' c='__walk_page_range'/>
<use f='linux/mm/pagewalk.c' l='290' c='walk_page_range'/>
<use f='linux/mm/pagewalk.c' l='338' c='walk_page_vma'/>
<size>72</size>
