<dec f='linux/include/linux/compaction.h' l='96' type='enum compact_result try_to_compact_pages(gfp_t gfp_mask, unsigned int order, unsigned int alloc_flags, const struct alloc_context * ac, enum compact_priority prio)'/>
<def f='linux/mm/compaction.c' l='1745' ll='1811' type='enum compact_result try_to_compact_pages(gfp_t gfp_mask, unsigned int order, unsigned int alloc_flags, const struct alloc_context * ac, enum compact_priority prio)'/>
<doc f='linux/mm/compaction.c' l='1735'>/**
 * try_to_compact_pages - Direct compact to satisfy a high-order allocation
 * @gfp_mask: The GFP mask of the current allocation
 * @order: The order of the current allocation
 * @alloc_flags: The allocation flags of the current allocation
 * @ac: The context of current allocation
 * @mode: The migration mode for async, sync light, or sync migration
 *
 * This is the main entry point for direct page compaction.
 */</doc>
<use f='linux/mm/page_alloc.c' l='3436' u='c' c='__alloc_pages_direct_compact'/>
