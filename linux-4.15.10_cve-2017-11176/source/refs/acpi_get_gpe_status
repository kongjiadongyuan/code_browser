<dec f='linux/include/acpi/acpixf.h' l='773' type='acpi_status acpi_get_gpe_status(acpi_handle gpe_device, u32 gpe_number, acpi_event_status * event_status)'/>
<def f='linux/drivers/acpi/acpica/evxfgpe.c' l='624' ll='651' type='acpi_status acpi_get_gpe_status(acpi_handle gpe_device, u32 gpe_number, acpi_event_status * event_status)'/>
<dec f='linux/drivers/acpi/acpica/evxfgpe.c' l='653' type='acpi_status acpi_get_gpe_status(acpi_handle , u32 , acpi_event_status * )'/>
<use f='linux/drivers/acpi/acpica/evxfgpe.c' l='653' c='acpi_get_gpe_status'/>
<use f='linux/drivers/acpi/acpica/evxfgpe.c' l='653' u='a'/>
<use f='linux/drivers/acpi/acpica/evxfgpe.c' l='653' u='a'/>
<doc f='linux/drivers/acpi/acpica/evxfgpe.c' l='610'>/*******************************************************************************
 *
 * FUNCTION:    acpi_get_gpe_status
 *
 * PARAMETERS:  gpe_device          - Parent GPE Device. NULL for GPE0/GPE1
 *              gpe_number          - GPE level within the GPE block
 *              event_status        - Where the current status of the event
 *                                    will be returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Get the current status of a GPE (signalled/not_signalled)
 *
 ******************************************************************************/</doc>
<use f='linux/drivers/acpi/ec.c' l='352' u='c' c='acpi_ec_is_gpe_raised'/>
<use f='linux/drivers/acpi/sysfs.c' l='666' u='c' c='get_status'/>
