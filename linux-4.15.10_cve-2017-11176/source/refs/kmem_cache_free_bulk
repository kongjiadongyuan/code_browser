<dec f='linux/include/linux/slab.h' l='352' type='void kmem_cache_free_bulk(struct kmem_cache * , size_t , void ** )'/>
<use f='linux/include/linux/slab.h' l='361' u='c' c='kfree_bulk'/>
<doc f='linux/include/linux/slab.h' l='345'>/*
 * Bulk allocation and freeing operations. These are accelerated in an
 * allocator specific way to avoid taking locks repeatedly or building
 * metadata structures unnecessarily.
 *
 * Note that interrupts must be enabled when calling these functions.
 */</doc>
<def f='linux/mm/slub.c' l='3087' ll='3101' type='void kmem_cache_free_bulk(struct kmem_cache * s, size_t size, void ** p)'/>
<dec f='linux/mm/slub.c' l='3102' type='void kmem_cache_free_bulk(struct kmem_cache * , size_t , void ** )'/>
<use f='linux/mm/slub.c' l='3102' c='kmem_cache_free_bulk'/>
<use f='linux/mm/slub.c' l='3102' u='a'/>
<use f='linux/mm/slub.c' l='3102' u='a'/>
<doc f='linux/mm/slub.c' l='3086'>/* Note that interrupts must be enabled when calling this function. */</doc>
<use f='linux/net/core/skbuff.c' l='725' u='c' c='__kfree_skb_flush'/>
<use f='linux/net/core/skbuff.c' l='748' u='c' c='_kfree_skb_defer'/>
