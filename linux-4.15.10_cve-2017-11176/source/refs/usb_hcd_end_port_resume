<dec f='linux/include/linux/usb/hcd.h' l='495' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<def f='linux/drivers/usb/core/hcd.c' l='1154' ll='1162' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<dec f='linux/drivers/usb/core/hcd.c' l='1163' type='void usb_hcd_end_port_resume(struct usb_bus * , int )'/>
<use f='linux/drivers/usb/core/hcd.c' l='1163' c='usb_hcd_end_port_resume'/>
<use f='linux/drivers/usb/core/hcd.c' l='1163' u='a'/>
<use f='linux/drivers/usb/core/hcd.c' l='1163' u='a'/>
<doc f='linux/drivers/usb/core/hcd.c' l='1143'>/*
 * usb_hcd_end_port_resume - a root-hub port has stopped sending a resume signal
 * @bus: the bus which the root hub belongs to
 * @portnum: the port which is being resumed
 *
 * HCDs should call this function when they know that a resume signal has
 * stopped being sent to a root-hub port.  The root hub will be allowed to
 * autosuspend again.
 *
 * The bus&apos;s private lock must be held by the caller.
 */</doc>
<use f='linux/drivers/usb/host/ehci-hub.c' l='1049' u='c' c='ehci_hub_control'/>
<use f='linux/drivers/usb/host/ehci-hub.c' l='1125' u='c' c='ehci_hub_control'/>
<use f='linux/drivers/usb/host/uhci-hub.c' l='119' u='c' c='uhci_finish_suspend'/>
