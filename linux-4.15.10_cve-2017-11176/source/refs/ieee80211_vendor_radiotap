<def f='linux/include/net/mac80211.h' l='1239' ll='1247'/>
<size>12</size>
<doc f='linux/include/net/mac80211.h' l='1216'>/**
 * struct ieee80211_vendor_radiotap - vendor radiotap data information
 * @present: presence bitmap for this vendor namespace
 *	(this could be extended in the future if any vendor needs more
 *	 bits, the radiotap spec does allow for that)
 * @align: radiotap vendor namespace alignment. This defines the needed
 *	alignment for the @data field below, not for the vendor namespace
 *	description itself (which has a fixed 2-byte alignment)
 *	Must be a power of two, and be set to at least 1!
 * @oui: radiotap vendor namespace OUI
 * @subns: radiotap vendor sub namespace
 * @len: radiotap vendor sub namespace skip length, if alignment is done
 *	then that&apos;s added to this, i.e. this is only the length of the
 *	@data field.
 * @pad: number of bytes of padding after the @data, this exists so that
 *	the skb data alignment can be preserved even if the data has odd
 *	length
 * @data: the actual vendor namespace data
 *
 * This struct, including the vendor data, goes into the skb-&gt;data before
 * the 802.11 header. It&apos;s split up in mac80211 using the align/oui/subns
 * data.
 */</doc>
<mbr r='ieee80211_vendor_radiotap::present' o='0' t='u32'/>
<mbr r='ieee80211_vendor_radiotap::align' o='32' t='u8'/>
<mbr r='ieee80211_vendor_radiotap::oui' o='40' t='u8 [3]'/>
<mbr r='ieee80211_vendor_radiotap::subns' o='64' t='u8'/>
<mbr r='ieee80211_vendor_radiotap::pad' o='72' t='u8'/>
<mbr r='ieee80211_vendor_radiotap::len' o='80' t='u16'/>
<mbr r='ieee80211_vendor_radiotap::data' o='96' t='u8 []'/>
<use f='linux/net/mac80211/rx.c' l='183' c='ieee80211_rx_radiotap_hdrlen'/>
<use f='linux/net/mac80211/rx.c' l='264' c='ieee80211_add_rx_radiotap_header'/>
<use f='linux/net/mac80211/rx.c' l='267' c='ieee80211_add_rx_radiotap_header'/>
<use f='linux/net/mac80211/rx.c' l='612' c='ieee80211_rx_monitor'/>
<size>12</size>
