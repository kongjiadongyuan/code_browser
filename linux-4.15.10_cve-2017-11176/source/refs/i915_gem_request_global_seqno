<def f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='276' ll='280' type='u32 i915_gem_request_global_seqno(const struct drm_i915_gem_request * request)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='327' u='c' c='__i915_gem_request_completed'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='335' u='c' c='i915_gem_request_completed'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.h' l='811' u='c' c='intel_wait_update_request'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.h' l='824' u='c' c='intel_wait_check_request'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='4395' u='c' c='__i915_request_irq_complete'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='258'>/**
 * i915_gem_request_global_seqno - report the current global seqno
 * @request - the request
 *
 * A request is assigned a global seqno only when it is on the hardware
 * execution queue. The global seqno can be used to maintain a list of
 * requests on the same engine in retirement order, for example for
 * constructing a priority queue for waiting. Prior to its execution, or
 * if it is subsequently removed in the event of preemption, its global
 * seqno is zero. As both insertion and removal from the execution queue
 * may operate in IRQ context, it is not guarded by the usual struct_mutex
 * BKL. Instead those relying on the global seqno must be prepared for its
 * value to change between reads. Only when the request is complete can
 * the global seqno be stable (due to the memory barriers on submitting
 * the commands to the hardware to write the breadcrumb, if the HWS shows
 * that it has passed the global seqno and the global seqno is unchanged
 * after the read, it is indeed complete).
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='765' u='c' c='i915_gem_request_await_request'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_request.c' l='1076' u='c' c='__i915_spin_request'/>
<use f='linux/drivers/gpu/drm/i915/intel_breadcrumbs.c' l='688' u='c' c='intel_engine_enable_signaling'/>
