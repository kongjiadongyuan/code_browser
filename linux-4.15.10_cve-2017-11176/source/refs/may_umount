<dec f='linux/include/linux/fs.h' l='2182' type='int may_umount(struct vfsmount * )'/>
<use f='linux/fs/autofs4/dev-ioctl.c' l='501' u='c' c='autofs_dev_ioctl_askumount'/>
<use f='linux/fs/autofs4/root.c' l='843' u='c' c='autofs4_ask_umount'/>
<def f='linux/fs/namespace.c' l='1396' ll='1406' type='int may_umount(struct vfsmount * mnt)'/>
<dec f='linux/fs/namespace.c' l='1408' type='int may_umount(struct vfsmount * )'/>
<use f='linux/fs/namespace.c' l='1408' c='may_umount'/>
<use f='linux/fs/namespace.c' l='1408' u='a'/>
<use f='linux/fs/namespace.c' l='1408' u='a'/>
<doc f='linux/fs/namespace.c' l='1383'>/**
 * may_umount - check if a mount point is busy
 * @mnt: root of mount
 *
 * This is called to check if a mount point has any
 * open files, pwds, chroots or sub mounts. If the
 * mount has sub mounts this will return busy
 * regardless of whether the sub mounts are busy.
 *
 * Doesn&apos;t take quota and stuff into account. IOW, in some cases it will
 * give false negatives. The main reason why it&apos;s here is that we need
 * a non-destructive way to look for easily umountable filesystems.
 */</doc>
