<dec f='linux/include/linux/phy.h' l='912' type='int phy_start_interrupts(struct phy_device * phydev)'/>
<def f='linux/drivers/net/phy/phy.c' l='690' ll='703' type='int phy_start_interrupts(struct phy_device * phydev)'/>
<dec f='linux/drivers/net/phy/phy.c' l='704' type='int phy_start_interrupts(struct phy_device * )'/>
<use f='linux/drivers/net/phy/phy.c' l='704' c='phy_start_interrupts'/>
<use f='linux/drivers/net/phy/phy.c' l='704' u='a'/>
<use f='linux/drivers/net/phy/phy.c' l='704' u='a'/>
<doc f='linux/drivers/net/phy/phy.c' l='680'>/**
 * phy_start_interrupts - request and enable interrupts for a PHY device
 * @phydev: target phy_device struct
 *
 * Description: Request the interrupt for the given PHY.
 *   If this fails, then we set irq to PHY_POLL.
 *   Otherwise, we enable the interrupts in the PHY.
 *   This should only be called with a valid IRQ number.
 *   Returns 0 on success or &lt; 0 on error.
 */</doc>
<use f='linux/drivers/net/phy/phy_device.c' l='742' u='c' c='phy_connect_direct'/>
