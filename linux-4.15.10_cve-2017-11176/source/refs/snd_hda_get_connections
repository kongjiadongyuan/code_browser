<dec f='linux/sound/pci/hda/hda_codec.h' l='335' type='int snd_hda_get_connections(struct hda_codec * codec, hda_nid_t nid, hda_nid_t * conn_list, int max_conns)'/>
<use f='linux/sound/pci/hda/hda_codec.h' l='340' u='c' c='snd_hda_get_num_conns'/>
<def f='linux/sound/pci/hda/hda_codec.c' l='227' ll='243' type='int snd_hda_get_connections(struct hda_codec * codec, hda_nid_t nid, hda_nid_t * conn_list, int max_conns)'/>
<dec f='linux/sound/pci/hda/hda_codec.c' l='244' type='int snd_hda_get_connections(struct hda_codec * , hda_nid_t , hda_nid_t * , int )'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='244' c='snd_hda_get_connections'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='244' u='a'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='244' u='a'/>
<doc f='linux/sound/pci/hda/hda_codec.c' l='215'>/**
 * snd_hda_get_connections - copy connection list
 * @codec: the HDA codec
 * @nid: NID to parse
 * @conn_list: connection list array; when NULL, checks only the size
 * @max_conns: max. number of connections to store
 *
 * Parses the connection list of the given widget and stores the list
 * of NIDs.
 *
 * Returns the number of connections, or a negative error code.
 */</doc>
