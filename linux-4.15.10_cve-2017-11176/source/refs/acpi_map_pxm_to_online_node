<dec f='linux/include/linux/acpi.h' l='393' type='int acpi_map_pxm_to_online_node(int pxm)'/>
<def f='linux/drivers/acpi/numa.c' l='104' ll='125' type='int acpi_map_pxm_to_online_node(int pxm)'/>
<dec f='linux/drivers/acpi/numa.c' l='126' type='int acpi_map_pxm_to_online_node(int )'/>
<use f='linux/drivers/acpi/numa.c' l='126' c='acpi_map_pxm_to_online_node'/>
<use f='linux/drivers/acpi/numa.c' l='126' u='a'/>
<use f='linux/drivers/acpi/numa.c' l='126' u='a'/>
<doc f='linux/drivers/acpi/numa.c' l='89'>/**
 * acpi_map_pxm_to_online_node - Map proximity ID to online node
 * @pxm: ACPI proximity ID
 *
 * This is similar to acpi_map_pxm_to_node(), but always returns an online
 * node.  When the mapped node from a given proximity ID is offline, it
 * looks up the node distance table and returns the nearest online node.
 *
 * ACPI device drivers, which are called after the NUMA initialization has
 * completed in the kernel, can call this interface to obtain their device
 * NUMA topology from ACPI tables.  Such drivers do not have to deal with
 * offline nodes.  A node may be offline when a device proximity ID is
 * unique, SRAT memory entry does not exist, or NUMA is disabled, ex.
 * &quot;numa=off&quot; on x86.
 */</doc>
