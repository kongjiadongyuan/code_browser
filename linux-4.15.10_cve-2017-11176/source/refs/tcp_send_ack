<dec f='linux/include/net/tcp.h' l='539' type='void tcp_send_ack(struct sock * sk)'/>
<use f='linux/net/ipv4/tcp.c' l='1603' u='c' c='tcp_cleanup_rbuf'/>
<use f='linux/net/ipv4/tcp_input.c' l='3404' u='c' c='tcp_send_challenge_ack'/>
<use f='linux/net/ipv4/tcp_input.c' l='4035' u='c' c='tcp_fin'/>
<use f='linux/net/ipv4/tcp_input.c' l='4040' u='c' c='tcp_fin'/>
<use f='linux/net/ipv4/tcp_input.c' l='4133' u='c' c='tcp_send_dupack'/>
<use f='linux/net/ipv4/tcp_input.c' l='5027' u='c' c='__tcp_ack_snd_check'/>
<use f='linux/net/ipv4/tcp_input.c' l='5699' u='c' c='tcp_rcv_synsent_state_process'/>
<use f='linux/net/ipv4/tcp_output.c' l='3595' u='c' c='tcp_send_delayed_ack'/>
<def f='linux/net/ipv4/tcp_output.c' l='3608' ll='3644' type='void tcp_send_ack(struct sock * sk)'/>
<dec f='linux/net/ipv4/tcp_output.c' l='3645' type='void tcp_send_ack(struct sock * )'/>
<use f='linux/net/ipv4/tcp_output.c' l='3645' c='tcp_send_ack'/>
<use f='linux/net/ipv4/tcp_output.c' l='3645' u='a'/>
<use f='linux/net/ipv4/tcp_output.c' l='3645' u='a'/>
<doc f='linux/net/ipv4/tcp_output.c' l='3607'>/* This routine sends an ack and also updates the window. */</doc>
<use f='linux/net/ipv4/tcp_timer.c' l='283' u='c' c='tcp_delack_timer_handler'/>
