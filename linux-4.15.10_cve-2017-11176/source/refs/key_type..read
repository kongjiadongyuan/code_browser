<dec f='linux/include/linux/key-type.h' l='138' type='long (*)(const struct key *, char *, size_t)'/>
<offset>768</offset>
<doc f='linux/include/linux/key-type.h' l='131'>/* read a key&apos;s data (optional)
	 * - permission checks will be done by the caller
	 * - the key&apos;s semaphore will be readlocked by the caller
	 * - should return the amount of data that could be read, no matter how
	 *   much is copied into the buffer
	 * - shouldn&apos;t do the copy if the buffer is NULL
	 */</doc>
<use f='linux/fs/nfs/nfs4idmap.c' l='184' u='w'/>
<use f='linux/fs/nfs/nfs4idmap.c' l='408' u='w'/>
<use f='linux/net/dns_resolver/dns_key.c' l='261' u='w'/>
<use f='linux/security/keys/key.c' l='900' u='r' c='key_create_or_update'/>
<use f='linux/security/keys/keyctl.c' l='792' u='r' c='keyctl_read_key'/>
<use f='linux/security/keys/keyctl.c' l='799' u='r' c='keyctl_read_key'/>
<use f='linux/security/keys/keyring.c' l='95' u='w'/>
<use f='linux/security/keys/request_key.c' l='374' u='r' c='construct_alloc_key'/>
<use f='linux/security/keys/request_key_auth.c' l='44' u='w'/>
<use f='linux/security/keys/user_defined.c' l='36' u='w'/>
