<dec f='linux/include/linux/hid.h' l='1101' type='u32 usbhid_lookup_quirk(const u16 idVendor, const u16 idProduct)'/>
<doc f='linux/include/linux/hid.h' l='1100'>/* HID quirks API */</doc>
<use f='linux/drivers/hid/usbhid/hid-core.c' l='981' u='c' c='usbhid_parse'/>
<use f='linux/drivers/hid/usbhid/hid-core.c' l='1332' u='c' c='usbhid_probe'/>
<def f='linux/drivers/hid/usbhid/hid-quirks.c' l='380' ll='400' type='u32 usbhid_lookup_quirk(const u16 idVendor, const u16 idProduct)'/>
<dec f='linux/drivers/hid/usbhid/hid-quirks.c' l='402' type='u32 usbhid_lookup_quirk(const u16 , const u16 )'/>
<use f='linux/drivers/hid/usbhid/hid-quirks.c' l='402' c='usbhid_lookup_quirk'/>
<use f='linux/drivers/hid/usbhid/hid-quirks.c' l='402' u='a'/>
<use f='linux/drivers/hid/usbhid/hid-quirks.c' l='402' u='a'/>
<doc f='linux/drivers/hid/usbhid/hid-quirks.c' l='369'>/**
 * usbhid_lookup_quirk: return any quirks associated with a USB HID device
 * @idVendor: the 16-bit USB vendor ID, in native byteorder
 * @idProduct: the 16-bit USB product ID, in native byteorder
 *
 * Description:
 *     Given a USB vendor ID and product ID, return any quirks associated
 *     with that device.
 *
 * Returns: a u32 quirks value.
 */</doc>
