<dec f='linux/include/linux/bootmem.h' l='376' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<use f='linux/fs/dcache.c' l='3586' u='c' c='dcache_init_early'/>
<use f='linux/fs/dcache.c' l='3612' u='c' c='dcache_init'/>
<use f='linux/fs/inode.c' l='1939' u='c' c='inode_init_early'/>
<use f='linux/fs/inode.c' l='1965' u='c' c='inode_init'/>
<use f='linux/fs/namespace.c' l='3254' u='c' c='mnt_init'/>
<use f='linux/fs/namespace.c' l='3259' u='c' c='mnt_init'/>
<use f='linux/kernel/futex.c' l='3639' u='c' c='futex_init'/>
<def f='linux/mm/page_alloc.c' l='7324' ll='7427' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<doc f='linux/mm/page_alloc.c' l='7318'>/*
 * allocate a large system hash table from bootmem
 * - it is assumed that the hash table must contain an exact power-of-2
 *   quantity of entries
 * - limit is the number of hash buckets, not the total allocation size
 */</doc>
<use f='linux/net/ipv4/tcp.c' l='3601' u='c' c='tcp_init'/>
<use f='linux/net/ipv4/tcp.c' l='3616' u='c' c='tcp_init'/>
<use f='linux/net/ipv4/udp.c' l='2810' u='c' c='udp_table_init'/>
