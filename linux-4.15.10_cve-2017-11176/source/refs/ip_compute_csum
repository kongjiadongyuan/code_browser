<dec f='linux/arch/x86/include/asm/checksum_64.h' l='161' type='__sum16 ip_compute_csum(const void * buff, int len)'/>
<doc f='linux/arch/x86/include/asm/checksum_64.h' l='153'>/**
 * ip_compute_csum - Compute an 16bit IP checksum.
 * @buff: buffer address.
 * @len: length of buffer.
 *
 * Returns the 16bit folded/inverted checksum of the passed buffer.
 * Ready to fill in.
 */</doc>
<def f='linux/arch/x86/lib/csum-partial_64.c' l='145' ll='148' type='__sum16 ip_compute_csum(const void * buff, int len)'/>
<dec f='linux/arch/x86/lib/csum-partial_64.c' l='149' type='__sum16 ip_compute_csum(const void * , int )'/>
<use f='linux/arch/x86/lib/csum-partial_64.c' l='149' c='ip_compute_csum'/>
<use f='linux/arch/x86/lib/csum-partial_64.c' l='149' u='a'/>
<use f='linux/arch/x86/lib/csum-partial_64.c' l='149' u='a'/>
<doc f='linux/arch/x86/lib/csum-partial_64.c' l='141'>/*
 * this routine is used for miscellaneous IP-like checksums, mainly
 * in icmp.c
 */</doc>
<use f='linux/net/ipv4/igmp.c' l='418' u='c' c='igmpv3_sendpack'/>
<use f='linux/net/ipv4/igmp.c' l='778' u='c' c='igmp_send_report'/>
<use f='linux/net/ipv4/ipmr.c' l='2287' u='c' c='pim_rcv'/>
