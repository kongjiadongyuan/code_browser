<dec f='linux/include/net/rtnetlink.h' l='20' type='int rtnl_unregister(int protocol, int msgtype)'/>
<use f='linux/net/core/fib_rules.c' l='1055' u='c' c='fib_rules_init'/>
<use f='linux/net/core/fib_rules.c' l='1056' u='c' c='fib_rules_init'/>
<use f='linux/net/core/fib_rules.c' l='1057' u='c' c='fib_rules_init'/>
<def f='linux/net/core/rtnetlink.c' l='221' ll='242' type='int rtnl_unregister(int protocol, int msgtype)'/>
<dec f='linux/net/core/rtnetlink.c' l='243' type='int rtnl_unregister(int , int )'/>
<use f='linux/net/core/rtnetlink.c' l='243' c='rtnl_unregister'/>
<use f='linux/net/core/rtnetlink.c' l='243' u='a'/>
<use f='linux/net/core/rtnetlink.c' l='243' u='a'/>
<doc f='linux/net/core/rtnetlink.c' l='214'>/**
 * rtnl_unregister - Unregister a rtnetlink message type
 * @protocol: Protocol family or PF_UNSPEC
 * @msgtype: rtnetlink message type
 *
 * Returns 0 on success or a negative error code.
 */</doc>
