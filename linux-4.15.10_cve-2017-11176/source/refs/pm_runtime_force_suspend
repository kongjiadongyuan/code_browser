<dec f='linux/include/linux/pm_runtime.h' l='36' type='int pm_runtime_force_suspend(struct device * dev)'/>
<def f='linux/drivers/base/power/runtime.c' l='1628' ll='1663' type='int pm_runtime_force_suspend(struct device * dev)'/>
<dec f='linux/drivers/base/power/runtime.c' l='1664' type='int pm_runtime_force_suspend(struct device * )'/>
<use f='linux/drivers/base/power/runtime.c' l='1664' c='pm_runtime_force_suspend'/>
<use f='linux/drivers/base/power/runtime.c' l='1664' u='a'/>
<use f='linux/drivers/base/power/runtime.c' l='1664' u='a'/>
<doc f='linux/drivers/base/power/runtime.c' l='1616'>/**
 * pm_runtime_force_suspend - Force a device into suspend state if needed.
 * @dev: Device to suspend.
 *
 * Disable runtime PM so we safely can check the device&apos;s runtime PM status and
 * if it is active, invoke it&apos;s .runtime_suspend callback to bring it into
 * suspend state. Keep runtime PM disabled to preserve the state unless we
 * encounter errors.
 *
 * Typically this function may be invoked from a system suspend callback to make
 * sure the device is put into low power state.
 */</doc>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2937'/>
