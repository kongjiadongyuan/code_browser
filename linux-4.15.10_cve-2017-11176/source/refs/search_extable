<dec f='linux/include/linux/extable.h' l='12' type='const struct exception_table_entry * search_extable(const struct exception_table_entry * base, const size_t num, unsigned long value)'/>
<use f='linux/kernel/extable.c' l='60' u='c' c='search_exception_tables'/>
<use f='linux/kernel/module.c' l='4258' u='c' c='search_module_extables'/>
<def f='linux/lib/extable.c' l='118' ll='125' type='const struct exception_table_entry * search_extable(const struct exception_table_entry * base, const size_t num, unsigned long value)'/>
<doc f='linux/lib/extable.c' l='111'>/*
 * Search one exception table for an entry corresponding to the
 * given instruction address, and return the address of the entry,
 * or NULL if none is found.
 * We use a binary search, and thus we assume that the table is
 * already sorted.
 */</doc>
