<dec f='linux/include/linux/fs.h' l='2881' type='struct inode * find_inode_nowait(struct super_block * , unsigned long , int (*)(struct inode *, unsigned long, void *) match, void * data)'/>
<use f='linux/fs/ext4/inode.c' l='5080' u='c' c='ext4_update_other_inodes_time'/>
<def f='linux/fs/inode.c' l='1353' ll='1377' type='struct inode * find_inode_nowait(struct super_block * sb, unsigned long hashval, int (*)(struct inode *, unsigned long, void *) match, void * data)'/>
<dec f='linux/fs/inode.c' l='1378' type='struct inode * find_inode_nowait(struct super_block * , unsigned long , int (*)(struct inode *, unsigned long, void *) , void * )'/>
<use f='linux/fs/inode.c' l='1378' c='find_inode_nowait'/>
<use f='linux/fs/inode.c' l='1378' u='a'/>
<use f='linux/fs/inode.c' l='1378' u='a'/>
<doc f='linux/fs/inode.c' l='1330'>/**
 * find_inode_nowait - find an inode in the inode cache
 * @sb:		super block of file system to search
 * @hashval:	hash value (usually inode number) to search for
 * @match:	callback used for comparisons between inodes
 * @data:	opaque data pointer to pass to @match
 *
 * Search for the inode specified by @hashval and @data in the inode
 * cache, where the helper function @match will return 0 if the inode
 * does not match, 1 if the inode does match, and -1 if the search
 * should be stopped.  The @match function must be responsible for
 * taking the i_lock spin_lock and checking i_state for an inode being
 * freed or being initialized, and incrementing the reference count
 * before returning 1.  It also must not sleep, since it is called with
 * the inode_hash_lock spinlock held.
 *
 * This is a even more generalized version of ilookup5() when the
 * function must never block --- find_inode() can block in
 * __wait_on_freeing_inode() --- or when the caller can not increment
 * the reference count because the resulting iput() might cause an
 * inode eviction.  The tradeoff is that the @match funtion must be
 * very carefully implemented.
 */</doc>
