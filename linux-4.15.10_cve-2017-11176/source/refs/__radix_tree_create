<dec f='linux/include/linux/radix-tree.h' l='288' type='int __radix_tree_create(struct radix_tree_root * , unsigned long index, unsigned int order, struct radix_tree_node ** nodep, void *** slotp)'/>
<def f='linux/lib/radix-tree.c' l='810' ll='859' type='int __radix_tree_create(struct radix_tree_root * root, unsigned long index, unsigned int order, struct radix_tree_node ** nodep, void *** slotp)'/>
<use f='linux/lib/radix-tree.c' l='993' u='c' c='__radix_tree_insert'/>
<doc f='linux/lib/radix-tree.c' l='793'>/**
 *	__radix_tree_create	-	create a slot in a radix tree
 *	@root:		radix tree root
 *	@index:		index key
 *	@order:		index occupies 2^order aligned slots
 *	@nodep:		returns node
 *	@slotp:		returns slot
 *
 *	Create, if necessary, and return the node and slot for an item
 *	at position @index in the radix tree @root.
 *
 *	Until there is more than one item in the tree, no nodes are
 *	allocated and @root-&gt;rnode is used as a direct slot instead of
 *	pointing to a node, in which case *@nodep will be NULL.
 *
 *	Returns -ENOMEM, or 0 for success.
 */</doc>
<use f='linux/mm/filemap.c' l='122' u='c' c='page_cache_tree_insert'/>
