<def f='linux/include/linux/osq_lock.h' l='9' ll='13'/>
<use f='linux/include/linux/osq_lock.h' l='10'/>
<use f='linux/include/linux/osq_lock.h' l='10'/>
<size>24</size>
<doc f='linux/include/linux/osq_lock.h' l='5'>/*
 * An MCS like lock especially tailored for optimistic spinning for sleeping
 * lock implementations (mutex, rwsem, etc).
 */</doc>
<mbr r='optimistic_spin_node::next' o='0' t='struct optimistic_spin_node *'/>
<mbr r='optimistic_spin_node::prev' o='64' t='struct optimistic_spin_node *'/>
<mbr r='optimistic_spin_node::locked' o='128' t='int'/>
<mbr r='optimistic_spin_node::cpu' o='160' t='int'/>
<use f='linux/kernel/locking/osq_lock.c' l='14'/>
<use f='linux/kernel/locking/osq_lock.c' l='25' c='node_cpu'/>
<use f='linux/kernel/locking/osq_lock.c' l='30' c='decode_cpu'/>
<use f='linux/kernel/locking/osq_lock.c' l='41' c='osq_wait_next'/>
<use f='linux/kernel/locking/osq_lock.c' l='43' c='osq_wait_next'/>
<use f='linux/kernel/locking/osq_lock.c' l='44' c='osq_wait_next'/>
<use f='linux/kernel/locking/osq_lock.c' l='46' c='osq_wait_next'/>
<use f='linux/kernel/locking/osq_lock.c' l='92' c='osq_lock'/>
<use f='linux/kernel/locking/osq_lock.c' l='93' c='osq_lock'/>
<use f='linux/kernel/locking/osq_lock.c' l='93' c='osq_lock'/>
<use f='linux/kernel/locking/osq_lock.c' l='208' c='osq_unlock'/>
<use f='linux/kernel/locking/osq_lock.c' l='208' c='osq_unlock'/>
<size>24</size>
