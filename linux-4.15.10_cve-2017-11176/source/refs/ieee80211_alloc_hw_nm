<dec f='linux/include/net/mac80211.h' l='3762' type='struct ieee80211_hw * ieee80211_alloc_hw_nm(size_t priv_data_len, const struct ieee80211_ops * ops, const char * requested_name)'/>
<use f='linux/include/net/mac80211.h' l='3784' u='c' c='ieee80211_alloc_hw'/>
<doc f='linux/include/net/mac80211.h' l='3746'>/**
 * ieee80211_alloc_hw_nm - Allocate a new hardware device
 *
 * This must be called once for each hardware device. The returned pointer
 * must be used to refer to this device when calling other functions.
 * mac80211 allocates a private data area for the driver pointed to by
 * @priv in &amp;struct ieee80211_hw, the size of this area is given as
 * @priv_data_len.
 *
 * @priv_data_len: length of private data
 * @ops: callbacks for this device
 * @requested_name: Requested name for this device.
 *	NULL is valid value, and means use the default naming (phy%d)
 *
 * Return: A pointer to the new hardware device, or %NULL on error.
 */</doc>
<def f='linux/net/mac80211/main.c' l='486' ll='672' type='struct ieee80211_hw * ieee80211_alloc_hw_nm(size_t priv_data_len, const struct ieee80211_ops * ops, const char * requested_name)'/>
<dec f='linux/net/mac80211/main.c' l='673' type='struct ieee80211_hw * ieee80211_alloc_hw_nm(size_t , const struct ieee80211_ops * , const char * )'/>
<use f='linux/net/mac80211/main.c' l='673' c='ieee80211_alloc_hw_nm'/>
<use f='linux/net/mac80211/main.c' l='673' u='a'/>
<use f='linux/net/mac80211/main.c' l='673' u='a'/>
