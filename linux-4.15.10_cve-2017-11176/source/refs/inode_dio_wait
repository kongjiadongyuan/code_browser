<dec f='linux/include/linux/fs.h' l='3012' type='void inode_dio_wait(struct inode * inode)'/>
<use f='linux/fs/ext4/extents.c' l='4812' u='c' c='ext4_zero_range'/>
<use f='linux/fs/ext4/extents.c' l='4980' u='c' c='ext4_fallocate'/>
<use f='linux/fs/ext4/extents.c' l='5501' u='c' c='ext4_collapse_range'/>
<use f='linux/fs/ext4/extents.c' l='5651' u='c' c='ext4_insert_range'/>
<use f='linux/fs/ext4/inode.c' l='4254' u='c' c='ext4_punch_hole'/>
<use f='linux/fs/ext4/inode.c' l='5505' u='c' c='ext4_setattr'/>
<use f='linux/fs/ext4/inode.c' l='5998' u='c' c='ext4_change_inode_journal_flag'/>
<use f='linux/fs/ext4/ioctl.c' l='128' u='c' c='swap_inode_boot_loader'/>
<use f='linux/fs/ext4/ioctl.c' l='129' u='c' c='swap_inode_boot_loader'/>
<use f='linux/fs/ext4/move_extent.c' l='614' u='c' c='ext4_move_extents'/>
<use f='linux/fs/ext4/move_extent.c' l='615' u='c' c='ext4_move_extents'/>
<use f='linux/fs/fat/file.c' l='469' u='c' c='fat_setattr'/>
<def f='linux/fs/inode.c' l='2063' ll='2067' type='void inode_dio_wait(struct inode * inode)'/>
<dec f='linux/fs/inode.c' l='2068' type='void inode_dio_wait(struct inode * )'/>
<use f='linux/fs/inode.c' l='2068' c='inode_dio_wait'/>
<use f='linux/fs/inode.c' l='2068' u='a'/>
<use f='linux/fs/inode.c' l='2068' u='a'/>
<doc f='linux/fs/inode.c' l='2053'>/**
 * inode_dio_wait - wait for outstanding DIO requests to finish
 * @inode: inode to wait for
 *
 * Waits for all pending direct I/O requests to finish so that we can
 * proceed with a truncate or equivalent operation.
 *
 * Must be called under a lock that serializes taking new references
 * to i_dio_count, usually by inode-&gt;i_mutex.
 */</doc>
<use f='linux/fs/nfs/inode.c' l='144' u='c' c='nfs_sync_inode'/>
<use f='linux/fs/nfs/io.c' l='22' u='c' c='nfs_block_o_direct'/>
<use f='linux/fs/read_write.c' l='1762' u='c' c='vfs_clone_file_prep_inodes'/>
<use f='linux/fs/read_write.c' l='1764' u='c' c='vfs_clone_file_prep_inodes'/>
