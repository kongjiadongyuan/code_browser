<dec f='linux/include/linux/fs.h' l='2120' type='void generic_shutdown_super(struct super_block * sb)'/>
<use f='linux/fs/nfs/super.c' l='2711' u='c' c='nfs_kill_super'/>
<def f='linux/fs/super.c' l='419' ll='456' type='void generic_shutdown_super(struct super_block * sb)'/>
<dec f='linux/fs/super.c' l='458' type='void generic_shutdown_super(struct super_block * )'/>
<use f='linux/fs/super.c' l='458' c='generic_shutdown_super'/>
<use f='linux/fs/super.c' l='458' u='a'/>
<use f='linux/fs/super.c' l='458' u='a'/>
<use f='linux/fs/super.c' l='991' u='c' c='kill_anon_super'/>
<use f='linux/fs/super.c' l='1146' u='c' c='kill_block_super'/>
<doc f='linux/fs/super.c' l='405'>/**
 *	generic_shutdown_super	-	common helper for -&gt;kill_sb()
 *	@sb: superblock to kill
 *
 *	generic_shutdown_super() does all fs-independent work on superblock
 *	shutdown.  Typical -&gt;kill_sb() should pick all fs-specific objects
 *	that need destruction out of superblock, call generic_shutdown_super()
 *	and release aforementioned objects.  Note: dentries and inodes _are_
 *	taken care of and do not need specific handling.
 *
 *	Upon calling this function, the filesystem may no longer alter or
 *	rearrange the set of dentries belonging to this super_block, nor may it
 *	change the attachments of dentries to inodes.
 */</doc>
