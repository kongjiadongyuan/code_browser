<dec f='linux/include/drm/drm_agpsupport.h' l='48' type='int drm_agp_enable(struct drm_device * dev, struct drm_agp_mode mode)'/>
<def f='linux/drivers/gpu/drm/drm_agpsupport.c' l='163' ll='172' type='int drm_agp_enable(struct drm_device * dev, struct drm_agp_mode mode)'/>
<dec f='linux/drivers/gpu/drm/drm_agpsupport.c' l='173' type='int drm_agp_enable(struct drm_device * , struct drm_agp_mode )'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='173' c='drm_agp_enable'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='173' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='173' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='180' u='c' c='drm_agp_enable_ioctl'/>
<doc f='linux/drivers/gpu/drm/drm_agpsupport.c' l='153'>/**
 * Enable the AGP bus.
 *
 * \param dev DRM device that has previously acquired AGP.
 * \param mode Requested AGP mode.
 * \return zero on success or a negative number on failure.
 *
 * Verifies the AGP device has been acquired but not enabled, and calls
 * \c agp_enable.
 */</doc>
