<dec f='linux/include/linux/hardirq.h' l='26' type='void rcu_nmi_enter()'/>
<use f='linux/arch/x86/kernel/nmi.c' l='516' macro='1' u='c' c='do_nmi'/>
<use f='linux/arch/x86/kernel/traps.c' l='106' u='c' c='ist_enter'/>
<use f='linux/kernel/extable.c' l='144' u='c' c='kernel_text_address'/>
<def f='linux/kernel/rcu/tree.c' l='1086' ll='1108' type='void rcu_nmi_enter()'/>
<doc f='linux/kernel/rcu/tree.c' l='1074'>/**
 * rcu_nmi_enter - inform RCU of entry to NMI context
 *
 * If the CPU was idle from RCU&apos;s viewpoint, update rdtp-&gt;dynticks and
 * rdtp-&gt;dynticks_nmi_nesting to let the RCU grace-period handling know
 * that the CPU is active.  This implementation permits nested NMIs, as
 * long as the nesting level does not overflow an int.  (You will probably
 * run out of stack space first.)
 *
 * If you add or remove a call to rcu_nmi_enter(), be sure to test
 * with CONFIG_RCU_EQS_DEBUG=y.
 */</doc>
