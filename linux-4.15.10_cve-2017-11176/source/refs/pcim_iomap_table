<dec f='linux/include/linux/pci.h' l='1902' type='void *const * pcim_iomap_table(struct pci_dev * pdev)'/>
<use f='linux/drivers/ata/ahci.c' l='1634' u='c' c='ahci_init_one'/>
<use f='linux/drivers/ata/ata_piix.c' l='1478' u='c' c='piix_init_sidpr'/>
<use f='linux/drivers/ata/libata-sff.c' l='2302' u='c' c='ata_pci_sff_init_host'/>
<use f='linux/drivers/ata/libata-sff.c' l='3212' u='c' c='ata_pci_bmdma_init'/>
<use f='linux/drivers/tty/serial/8250/8250_exar.c' l='134' u='c' c='default_setup'/>
<use f='linux/drivers/tty/serial/8250/8250_exar.c' l='139' u='c' c='default_setup'/>
<use f='linux/drivers/tty/serial/8250/8250_pci.c' l='81' u='c' c='setup_port'/>
<use f='linux/drivers/tty/serial/8250/8250_pci.c' l='87' u='c' c='setup_port'/>
<def f='linux/lib/devres.c' l='262' ll='275' type='void *const * pcim_iomap_table(struct pci_dev * pdev)'/>
<dec f='linux/lib/devres.c' l='276' type='void *const * pcim_iomap_table(struct pci_dev * )'/>
<use f='linux/lib/devres.c' l='276' c='pcim_iomap_table'/>
<use f='linux/lib/devres.c' l='276' u='a'/>
<use f='linux/lib/devres.c' l='276' u='a'/>
<use f='linux/lib/devres.c' l='293' u='c' c='pcim_iomap'/>
<use f='linux/lib/devres.c' l='316' u='c' c='pcim_iounmap'/>
<use f='linux/lib/devres.c' l='341' u='c' c='pcim_iomap_regions'/>
<use f='linux/lib/devres.c' l='418' u='c' c='pcim_iounmap_regions'/>
<doc f='linux/lib/devres.c' l='249'>/**
 * pcim_iomap_table - access iomap allocation table
 * @pdev: PCI device to access iomap table for
 *
 * Access iomap allocation table for @dev.  If iomap table doesn&apos;t
 * exist and @pdev is managed, it will be allocated.  All iomaps
 * recorded in the iomap table are automatically unmapped on driver
 * detach.
 *
 * This function might sleep when the table is first allocated but can
 * be safely called without context and guaranteed to succed once
 * allocated.
 */</doc>
