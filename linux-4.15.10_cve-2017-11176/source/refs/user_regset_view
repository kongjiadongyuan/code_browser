<def f='linux/include/linux/regset.h' l='221' ll='228'/>
<use f='linux/include/linux/regset.h' l='242' c='task_user_regset_view'/>
<use f='linux/include/linux/regset.h' l='369' c='copy_regset_to_user'/>
<use f='linux/include/linux/regset.h' l='395' c='copy_regset_from_user'/>
<size>32</size>
<doc f='linux/include/linux/regset.h' l='203'>/**
 * struct user_regset_view - available regsets
 * @name:	Identifier, e.g. UTS_MACHINE string.
 * @regsets:	Array of @n regsets available in this view.
 * @n:		Number of elements in @regsets.
 * @e_machine:	ELF header @e_machine %EM_* value written in core dumps.
 * @e_flags:	ELF header @e_flags value written in core dumps.
 * @ei_osabi:	ELF header @e_ident[%EI_OSABI] value written in core dumps.
 *
 * A regset view is a collection of regsets (&amp;struct user_regset,
 * above).  This describes all the state of a thread that can be seen
 * from a given architecture/ABI environment.  More than one view might
 * refer to the same &amp;struct user_regset, or more than one regset
 * might refer to the same machine-specific state in the thread.  For
 * example, a 32-bit thread&apos;s state could be examined from the 32-bit
 * view or from the 64-bit view.  Either method reaches the same thread
 * register state, doing appropriate widening or truncation.
 */</doc>
<mbr r='user_regset_view::name' o='0' t='const char *'/>
<mbr r='user_regset_view::regsets' o='64' t='const struct user_regset *'/>
<mbr r='user_regset_view::n' o='128' t='unsigned int'/>
<mbr r='user_regset_view::e_flags' o='160' t='u32'/>
<mbr r='user_regset_view::e_machine' o='192' t='u16'/>
<mbr r='user_regset_view::ei_osabi' o='208' t='u8'/>
<use f='linux/arch/x86/kernel/ptrace.c' l='764'/>
<use f='linux/arch/x86/kernel/ptrace.c' l='1281'/>
<use f='linux/arch/x86/kernel/ptrace.c' l='1336'/>
<use f='linux/arch/x86/kernel/ptrace.c' l='1359' c='task_user_regset_view'/>
<size>32</size>
<use f='linux/fs/binfmt_elf.c' l='1709' c='fill_thread_core_info'/>
<use f='linux/fs/binfmt_elf.c' l='1774' c='fill_note_info'/>
<size>32</size>
<use f='linux/kernel/ptrace.c' l='839' c='find_regset'/>
<use f='linux/kernel/ptrace.c' l='856' c='ptrace_regset'/>
<size>32</size>
