<def f='linux/include/linux/writeback.h' l='102' ll='138'/>
<use f='linux/include/linux/writeback.h' l='152' c='wb_domain_size_changed'/>
<use f='linux/include/linux/writeback.h' l='316' c='wb_domain_init'/>
<use f='linux/include/linux/writeback.h' l='321'/>
<use f='linux/include/linux/memcontrol.h' l='1055' c='mem_cgroup_wb_domain'/>
<size>120</size>
<doc f='linux/include/linux/writeback.h' l='95'>/*
 * A wb_domain represents a domain that wb&apos;s (bdi_writeback&apos;s) belong to
 * and are measured against each other in.  There always is one global
 * domain, global_wb_domain, that every wb in the system is a member of.
 * This allows measuring the relative bandwidth of each wb to distribute
 * dirtyable memory accordingly.
 */</doc>
<mbr r='wb_domain::lock' o='0' t='spinlock_t'/>
<mbr r='wb_domain::completions' o='64' t='struct fprop_global'/>
<mbr r='wb_domain::period_timer' o='448' t='struct timer_list'/>
<mbr r='wb_domain::period_time' o='768' t='unsigned long'/>
<mbr r='wb_domain::dirty_limit_tstamp' o='832' t='unsigned long'/>
<mbr r='wb_domain::dirty_limit' o='896' t='unsigned long'/>
<use f='linux/mm/page-writeback.c' l='126'/>
<use f='linux/mm/page-writeback.c' l='228' c='dtc_dom'/>
<use f='linux/mm/page-writeback.c' l='577' c='wb_domain_writeout_inc'/>
<use f='linux/mm/page-writeback.c' l='602' c='__wb_writeout_inc'/>
<use f='linux/mm/page-writeback.c' l='630' c='writeout_period'/>
<use f='linux/mm/page-writeback.c' l='647' c='wb_domain_init'/>
<use f='linux/mm/page-writeback.c' l='722' c='hard_dirty_limit'/>
<use f='linux/mm/page-writeback.c' l='766' c='__wb_calc_thresh'/>
<use f='linux/mm/page-writeback.c' l='1135' c='update_dirty_limit'/>
<use f='linux/mm/page-writeback.c' l='1165' c='domain_update_bandwidth'/>
<use f='linux/mm/page-writeback.c' l='2042' c='writeback_set_ratelimit'/>
<size>120</size>
