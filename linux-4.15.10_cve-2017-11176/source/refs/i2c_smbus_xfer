<dec f='linux/include/linux/i2c.h' l='84' type='s32 i2c_smbus_xfer(struct i2c_adapter * adapter, u16 addr, unsigned short flags, char read_write, u8 command, int size, union i2c_smbus_data * data)'/>
<doc f='linux/include/linux/i2c.h' l='79'>/* This is the very generalized SMBus access routine. You probably do not
   want to use this, though; one of the functions below may be much easier,
   and probably just as fast.
   Note that we use i2c_adapter here, because you do not need a specific
   smbus adapter to call this function. */</doc>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2063' u='c' c='i2c_default_probe'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2069' u='c' c='i2c_default_probe'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2072' u='c' c='i2c_default_probe'/>
<use f='linux/drivers/i2c/i2c-core-base.c' l='2191' u='c' c='i2c_probe_func_quick_read'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='99' u='c' c='i2c_smbus_read_byte'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='116' u='c' c='i2c_smbus_write_byte'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='134' u='c' c='i2c_smbus_read_byte_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='155' u='c' c='i2c_smbus_write_byte_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='174' u='c' c='i2c_smbus_read_word_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='195' u='c' c='i2c_smbus_write_word_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='222' u='c' c='i2c_smbus_read_block_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='252' u='c' c='i2c_smbus_write_block_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='268' u='c' c='i2c_smbus_read_i2c_block_data'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='288' u='c' c='i2c_smbus_write_i2c_block_data'/>
<def f='linux/drivers/i2c/i2c-core-smbus.c' l='484' ll='538' type='s32 i2c_smbus_xfer(struct i2c_adapter * adapter, u16 addr, unsigned short flags, char read_write, u8 command, int protocol, union i2c_smbus_data * data)'/>
<dec f='linux/drivers/i2c/i2c-core-smbus.c' l='539' type='s32 i2c_smbus_xfer(struct i2c_adapter * , u16 , unsigned short , char , u8 , int , union i2c_smbus_data * )'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='539' c='i2c_smbus_xfer'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='539' u='a'/>
<use f='linux/drivers/i2c/i2c-core-smbus.c' l='539' u='a'/>
<doc f='linux/drivers/i2c/i2c-core-smbus.c' l='471'>/**
 * i2c_smbus_xfer - execute SMBus protocol operations
 * @adapter: Handle to I2C bus
 * @addr: Address of SMBus slave on that bus
 * @flags: I2C_CLIENT_* flags (usually zero or I2C_CLIENT_PEC)
 * @read_write: I2C_SMBUS_READ or I2C_SMBUS_WRITE
 * @command: Byte interpreted by slave, for protocols which use such bytes
 * @protocol: SMBus protocol operation to execute, such as I2C_SMBUS_PROC_CALL
 * @data: Data to be read or written
 *
 * This executes an SMBus protocol operation, and returns a negative
 * errno code else zero on success.
 */</doc>
