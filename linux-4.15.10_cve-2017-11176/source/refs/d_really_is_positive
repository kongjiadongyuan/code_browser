<def f='linux/include/linux/dcache.h' l='485' ll='488' type='bool d_really_is_positive(const struct dentry * dentry)'/>
<use f='linux/include/linux/dcache.h' l='492' u='c' c='simple_positive'/>
<doc f='linux/include/linux/dcache.h' l='472'>/**
 * d_really_is_positive - Determine if a dentry is really positive (ignoring fallthroughs)
 * @dentry: The dentry in question
 *
 * Returns true if the dentry represents a name that maps to an inode
 * (ie. -&gt;d_inode is not NULL).  The dentry might still represent a whiteout if
 * that is represented on medium as a 0,0 chardev.
 *
 * Note!  (1) This should be used *only* by a filesystem to examine its own
 * dentries.  It should not be used to look at some other filesystem&apos;s
 * dentries.  (2) It should also be used in combination with d_inode() to get
 * the inode.
 */</doc>
<use f='linux/drivers/base/devtmpfs.c' l='239' u='c' c='dev_rmdir'/>
<use f='linux/drivers/base/devtmpfs.c' l='310' u='c' c='handle_remove'/>
<use f='linux/fs/autofs4/expire.c' l='379' u='c' c='should_expire'/>
<use f='linux/fs/autofs4/root.c' l='378' u='c' c='autofs4_d_automount'/>
<use f='linux/fs/autofs4/root.c' l='494' u='c' c='autofs4_d_manage'/>
<use f='linux/fs/autofs4/root.c' l='859' u='c' c='is_autofs4_dentry'/>
<use f='linux/fs/autofs4/waitq.c' l='336' u='c' c='validate_request'/>
<use f='linux/fs/binfmt_misc.c' l='704' u='c' c='bm_register_write'/>
<use f='linux/fs/debugfs/inode.c' l='279' u='c' c='debugfs_lookup'/>
<use f='linux/fs/debugfs/inode.c' l='312' u='c' c='start_creating'/>
<use f='linux/fs/debugfs/inode.c' l='803' u='c' c='debugfs_rename'/>
<use f='linux/fs/fat/namei_vfat.c' l='61' u='c' c='vfat_revalidate'/>
<use f='linux/fs/fat/namei_vfat.c' l='81' u='c' c='vfat_revalidate_ci'/>
<use f='linux/fs/libfs.c' l='367' u='c' c='simple_rename'/>
<use f='linux/fs/nfs/dir.c' l='1252' u='c' c='nfs_dentry_delete'/>
<use f='linux/fs/nfs/dir.c' l='1631' u='c' c='nfs_instantiate'/>
<use f='linux/fs/nfs/dir.c' l='1758' u='c' c='nfs_rmdir'/>
<use f='linux/fs/nfs/nfs4proc.c' l='2853' u='c' c='_nfs4_do_open'/>
<use f='linux/fs/nfs/nfs4proc.c' l='2856' u='c' c='_nfs4_do_open'/>
<use f='linux/fs/nfs/nfs4proc.c' l='2879' u='c' c='_nfs4_do_open'/>
<use f='linux/fs/nfs/unlink.c' l='136' u='c' c='nfs_call_unlink'/>
<use f='linux/fs/nfs/unlink.c' l='289' u='c' c='nfs_async_rename_release'/>
<use f='linux/ipc/mqueue.c' l='803' u='c' c='do_mq_open'/>
<use f='linux/kernel/trace/trace_events.c' l='720' u='c' c='remove_event_file_dir'/>
<use f='linux/mm/shmem.c' l='3180' u='c' c='shmem_rename2'/>
