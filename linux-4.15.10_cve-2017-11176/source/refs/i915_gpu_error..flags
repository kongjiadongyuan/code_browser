<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='1659' type='unsigned long'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3703' u='a' c='i915_reset_backoff'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3703' u='a' c='i915_reset_backoff'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3708' u='a' c='i915_reset_handoff'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3708' u='a' c='i915_reset_handoff'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3713' u='a' c='i915_terminally_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3713' u='a' c='i915_terminally_wedged'/>
<offset>1024</offset>
<doc f='linux/drivers/gpu/drm/i915/i915_drv.h' l='1629'>/**
	 * flags: Control various stages of the GPU reset
	 *
	 * #I915_RESET_BACKOFF - When we start a reset, we want to stop any
	 * other users acquiring the struct_mutex. To do this we set the
	 * #I915_RESET_BACKOFF bit in the error flags when we detect a reset
	 * and then check for that bit before acquiring the struct_mutex (in
	 * i915_mutex_lock_interruptible()?). I915_RESET_BACKOFF serves a
	 * secondary role in preventing two concurrent global reset attempts.
	 *
	 * #I915_RESET_HANDOFF - To perform the actual GPU reset, we need the
	 * struct_mutex. We try to acquire the struct_mutex in the reset worker,
	 * but it may be held by some long running waiter (that we cannot
	 * interrupt without causing trouble). Once we are ready to do the GPU
	 * reset, we set the I915_RESET_HANDOFF bit and wakeup any waiters. If
	 * they already hold the struct_mutex and want to participate they can
	 * inspect the bit and do the reset directly, otherwise the worker
	 * waits for the struct_mutex.
	 *
	 * #I915_RESET_ENGINE[num_engines] - Since the driver doesn&apos;t need to
	 * acquire the struct_mutex to reset an engine, we need an explicit
	 * flag to prevent two concurrent reset attempts in the same engine.
	 * As the number of engines continues to grow, allocate the flags from
	 * the most significant bits.
	 *
	 * #I915_WEDGED - If reset fails and we can no longer use the GPU,
	 * we set the #I915_WEDGED bit. Prior to command submission, e.g.
	 * i915_gem_request_alloc(), this bit is checked and the sequence
	 * aborted (with -EIO reported to userspace) if set.
	 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1302' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1302' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1304' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1304' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1306' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='1306' u='a' c='i915_hangcheck_info'/>
<use f='linux/drivers/gpu/drm/i915/i915_debugfs.c' l='4095' u='a' c='i915_wedged_set'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1881' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1881' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1883' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1883' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1947' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1948' u='a' c='i915_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1976' u='a' c='i915_reset_engine'/>
<use f='linux/drivers/gpu/drm/i915/i915_drv.c' l='1976' u='a' c='i915_reset_engine'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3185' u='a' c='i915_gem_set_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3195' u='a' c='i915_gem_unset_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3195' u='a' c='i915_gem_unset_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3244' u='a' c='i915_gem_unset_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2775' u='a' c='i915_reset_device'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2786' u='a' c='i915_reset_device'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2794' u='a' c='i915_reset_device'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2794' u='a' c='i915_reset_device'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2869' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2876' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2877' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2886' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2889' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2889' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2889' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2889' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2896' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2897' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2906' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='2909' u='a' c='i915_handle_error'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='3585' u='a' c='intel_prepare_reset'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='3681' u='a' c='intel_finish_reset'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12256' u='a' c='intel_atomic_commit_fence_wait'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12256' u='a' c='intel_atomic_commit_fence_wait'/>
