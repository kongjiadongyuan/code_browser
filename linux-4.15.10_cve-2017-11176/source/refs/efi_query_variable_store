<dec f='linux/include/linux/efi.h' l='955' type='efi_status_t efi_query_variable_store(u32 attributes, unsigned long size, bool nonblocking)'/>
<def f='linux/arch/x86/platform/efi/quirks.c' l='149' ll='219' type='efi_status_t efi_query_variable_store(u32 attributes, unsigned long size, bool nonblocking)'/>
<dec f='linux/arch/x86/platform/efi/quirks.c' l='220' type='efi_status_t efi_query_variable_store(u32 , unsigned long , bool )'/>
<use f='linux/arch/x86/platform/efi/quirks.c' l='220' c='efi_query_variable_store'/>
<use f='linux/arch/x86/platform/efi/quirks.c' l='220' u='a'/>
<use f='linux/arch/x86/platform/efi/quirks.c' l='220' u='a'/>
<doc f='linux/arch/x86/platform/efi/quirks.c' l='142'>/*
 * Some firmware implementations refuse to boot if there&apos;s insufficient space
 * in the variable store. Ensure that we never use more than a safe limit.
 *
 * Return EFI_SUCCESS if it is safe to write &apos;size&apos; bytes to the variable
 * store.
 */</doc>
<use f='linux/drivers/firmware/efi/efi.c' l='216' u='r' c='generic_ops_register'/>
