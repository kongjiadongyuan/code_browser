<dec f='linux/include/linux/fs.h' l='1629' type='int fiemap_check_flags(struct fiemap_extent_info * fieinfo, u32 fs_flags)'/>
<use f='linux/fs/ext4/extents.c' l='5177' u='c' c='ext4_fiemap'/>
<def f='linux/fs/ioctl.c' l='141' ll='151' type='int fiemap_check_flags(struct fiemap_extent_info * fieinfo, u32 fs_flags)'/>
<dec f='linux/fs/ioctl.c' l='152' type='int fiemap_check_flags(struct fiemap_extent_info * , u32 )'/>
<use f='linux/fs/ioctl.c' l='152' c='fiemap_check_flags'/>
<use f='linux/fs/ioctl.c' l='152' u='a'/>
<use f='linux/fs/ioctl.c' l='152' u='a'/>
<use f='linux/fs/ioctl.c' l='292' u='c' c='__generic_block_fiemap'/>
<doc f='linux/fs/ioctl.c' l='127'>/**
 * fiemap_check_flags - check validity of requested flags for fiemap
 * @fieinfo:	Fiemap context passed into -&gt;fiemap
 * @fs_flags:	Set of fiemap flags that the file system understands
 *
 * Called from file system -&gt;fiemap callback. This will compute the
 * intersection of valid fiemap flags and those that the fs supports. That
 * value is then compared against the user supplied flags. In case of bad user
 * flags, the invalid values will be written into the fieinfo structure, and
 * -EBADR is returned, which tells ioctl_fiemap() to return those values to
 * userspace. For this reason, a return code of -EBADR should be preserved.
 *
 * Returns 0 on success, -EBADR on bad flags.
 */</doc>
<use f='linux/fs/iomap.c' l='553' u='c' c='iomap_fiemap'/>
