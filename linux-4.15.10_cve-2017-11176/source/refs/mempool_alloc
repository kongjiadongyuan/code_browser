<dec f='linux/include/linux/mempool.h' l='36' type='void * mempool_alloc(mempool_t * pool, gfp_t gfp_mask)'/>
<use f='linux/block/bio.c' l='216' u='c' c='bvec_alloc'/>
<use f='linux/block/bio.c' l='486' u='c' c='bio_alloc_bioset'/>
<use f='linux/block/bio.c' l='490' u='c' c='bio_alloc_bioset'/>
<use f='linux/block/blk-core.c' l='1327' u='c' c='__get_request'/>
<use f='linux/block/bounce.c' l='229' u='c' c='__blk_queue_bounce'/>
<use f='linux/drivers/dma/dmaengine.c' l='1258' u='c' c='dmaengine_get_unmap_data'/>
<use f='linux/drivers/md/dm-io.c' l='446' u='c' c='sync_io'/>
<use f='linux/drivers/md/dm-io.c' l='478' u='c' c='async_io'/>
<use f='linux/drivers/md/dm-kcopyd.c' l='752' u='c' c='dm_kcopyd_copy'/>
<use f='linux/drivers/md/dm-kcopyd.c' l='836' u='c' c='dm_kcopyd_prepare_callback'/>
<use f='linux/drivers/md/dm-region-hash.c' l='290' u='c' c='__rh_alloc'/>
<use f='linux/drivers/md/dm.c' l='491' u='c' c='alloc_io'/>
<use f='linux/drivers/scsi/sd.c' l='1171' u='c' c='sd_setup_read_write_cmnd'/>
<use f='linux/fs/nfs/write.c' l='74' u='c' c='nfs_commitdata_alloc'/>
<use f='linux/fs/nfs/write.c' l='81' u='c' c='nfs_commitdata_alloc'/>
<use f='linux/fs/nfs/write.c' l='103' u='c' c='nfs_writehdr_alloc'/>
<use f='linux/lib/sg_pool.c' l='66' u='c' c='sg_pool_alloc'/>
<def f='linux/mm/mempool.c' l='312' ll='378' type='void * mempool_alloc(mempool_t * pool, gfp_t gfp_mask)'/>
<dec f='linux/mm/mempool.c' l='379' type='void * mempool_alloc(mempool_t * , gfp_t )'/>
<use f='linux/mm/mempool.c' l='379' c='mempool_alloc'/>
<use f='linux/mm/mempool.c' l='379' u='a'/>
<use f='linux/mm/mempool.c' l='379' u='a'/>
<doc f='linux/mm/mempool.c' l='300'>/**
 * mempool_alloc - allocate an element from a specific memory pool
 * @pool:      pointer to the memory pool which was allocated via
 *             mempool_create().
 * @gfp_mask:  the usual allocation bitmask.
 *
 * this function only sleeps if the alloc_fn() function sleeps or
 * returns NULL. Note that due to preallocation, this function
 * *never* fails when called from process contexts. (it might
 * fail if called from an IRQ context.)
 * Note: using __GFP_ZERO is not supported.
 */</doc>
<use f='linux/net/sunrpc/sched.c' l='882' u='c' c='rpc_malloc'/>
<use f='linux/net/sunrpc/sched.c' l='954' u='c' c='rpc_alloc_task'/>
