<def f='linux/include/net/cfg80211.h' l='1454' ll='1473'/>
<use f='linux/include/net/cfg80211.h' l='2991'/>
<size>184</size>
<doc f='linux/include/net/cfg80211.h' l='1429'>/**
 * struct mesh_setup - 802.11s mesh setup configuration
 * @chandef: defines the channel to use
 * @mesh_id: the mesh ID
 * @mesh_id_len: length of the mesh ID, at least 1 and at most 32 bytes
 * @sync_method: which synchronization method to use
 * @path_sel_proto: which path selection protocol to use
 * @path_metric: which metric to use
 * @auth_id: which authentication method this mesh is using
 * @ie: vendor information elements (optional)
 * @ie_len: length of vendor information elements
 * @is_authenticated: this mesh requires authentication
 * @is_secure: this mesh uses security
 * @user_mpm: userspace handles all MPM functions
 * @dtim_period: DTIM period to use
 * @beacon_interval: beacon interval to use
 * @mcast_rate: multicat rate for Mesh Node [6Mbps is the default for 802.11a]
 * @basic_rates: basic rates to use when creating the mesh
 * @beacon_rate: bitrate to be used for beacons
 * @userspace_handles_dfs: whether user space controls DFS operation, i.e.
 *	changes the channel when a radar is detected. This is required
 *	to operate on DFS channels.
 *
 * These parameters are fixed when the mesh is created.
 */</doc>
<mbr r='mesh_setup::chandef' o='0' t='struct cfg80211_chan_def'/>
<mbr r='mesh_setup::mesh_id' o='192' t='const u8 *'/>
<mbr r='mesh_setup::mesh_id_len' o='256' t='u8'/>
<mbr r='mesh_setup::sync_method' o='264' t='u8'/>
<mbr r='mesh_setup::path_sel_proto' o='272' t='u8'/>
<mbr r='mesh_setup::path_metric' o='280' t='u8'/>
<mbr r='mesh_setup::auth_id' o='288' t='u8'/>
<mbr r='mesh_setup::ie' o='320' t='const u8 *'/>
<mbr r='mesh_setup::ie_len' o='384' t='u8'/>
<mbr r='mesh_setup::is_authenticated' o='392' t='bool'/>
<mbr r='mesh_setup::is_secure' o='400' t='bool'/>
<mbr r='mesh_setup::user_mpm' o='408' t='bool'/>
<mbr r='mesh_setup::dtim_period' o='416' t='u8'/>
<mbr r='mesh_setup::beacon_interval' o='432' t='u16'/>
<mbr r='mesh_setup::mcast_rate' o='448' t='int [3]'/>
<mbr r='mesh_setup::basic_rates' o='544' t='u32'/>
<mbr r='mesh_setup::beacon_rate' o='576' t='struct cfg80211_bitrate_mask'/>
<mbr r='mesh_setup::userspace_handles_dfs' o='1440' t='bool'/>
<use f='linux/net/wireless/core.h' l='301'/>
<use f='linux/net/wireless/core.h' l='304' c='__cfg80211_join_mesh'/>
<use f='linux/net/wireless/core.h' l='308' c='cfg80211_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='trace_rdev_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='trace_rdev_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='trace_rdev_join_mesh_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='996' c='trace_rdev_join_mesh_rcuidle'/>
<use f='linux/net/wireless/trace.h' l='996' c='register_trace_rdev_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='register_trace_prio_rdev_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='unregister_trace_rdev_join_mesh'/>
<use f='linux/net/wireless/trace.h' l='996' c='check_trace_callback_type_rdev_join_mesh'/>
<use f='linux/net/wireless/rdev-ops.h' l='332' c='rdev_join_mesh'/>
<size>184</size>
<use f='linux/net/wireless/mesh.c' l='83'/>
<use f='linux/net/wireless/mesh.c' l='99' c='__cfg80211_join_mesh'/>
<use f='linux/net/wireless/mesh.c' l='203' c='cfg80211_join_mesh'/>
<size>184</size>
<use f='linux/net/wireless/nl80211.c' l='6095' c='nl80211_parse_mesh_setup'/>
<use f='linux/net/wireless/nl80211.c' l='9982' c='nl80211_join_mesh'/>
<size>184</size>
