<dec f='linux/include/linux/netdevice.h' l='3949' type='int netdev_master_upper_dev_link(struct net_device * dev, struct net_device * upper_dev, void * upper_priv, void * upper_info, struct netlink_ext_ack * extack)'/>
<def f='linux/net/core/dev.c' l='6409' ll='6416' type='int netdev_master_upper_dev_link(struct net_device * dev, struct net_device * upper_dev, void * upper_priv, void * upper_info, struct netlink_ext_ack * extack)'/>
<dec f='linux/net/core/dev.c' l='6417' type='int netdev_master_upper_dev_link(struct net_device * , struct net_device * , void * , void * , struct netlink_ext_ack * )'/>
<use f='linux/net/core/dev.c' l='6417' c='netdev_master_upper_dev_link'/>
<use f='linux/net/core/dev.c' l='6417' u='a'/>
<use f='linux/net/core/dev.c' l='6417' u='a'/>
<doc f='linux/net/core/dev.c' l='6396'>/**
 * netdev_master_upper_dev_link - Add a master link to the upper device
 * @dev: device
 * @upper_dev: new upper device
 * @upper_priv: upper device private
 * @upper_info: upper info to be passed down via notifier
 *
 * Adds a link to device which is upper to this one. In this case, only
 * one master upper device can be linked, although other non-master devices
 * might be linked as well. The caller must hold the RTNL lock.
 * On a failure a negative errno code is returned. On success the reference
 * counts are adjusted and the function returns zero.
 */</doc>
