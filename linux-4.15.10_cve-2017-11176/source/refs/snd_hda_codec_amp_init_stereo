<dec f='linux/sound/pci/hda/hda_local.h' l='138' type='int snd_hda_codec_amp_init_stereo(struct hda_codec * codec, hda_nid_t nid, int dir, int idx, int mask, int val)'/>
<def f='linux/sound/pci/hda/hda_codec.c' l='1333' ll='1344' type='int snd_hda_codec_amp_init_stereo(struct hda_codec * codec, hda_nid_t nid, int dir, int idx, int mask, int val)'/>
<dec f='linux/sound/pci/hda/hda_codec.c' l='1345' type='int snd_hda_codec_amp_init_stereo(struct hda_codec * , hda_nid_t , int , int , int , int )'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='1345' c='snd_hda_codec_amp_init_stereo'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='1345' u='a'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='1345' u='a'/>
<doc f='linux/sound/pci/hda/hda_codec.c' l='1322'>/**
 * snd_hda_codec_amp_init_stereo - initialize the stereo AMP value
 * @codec: the HDA codec
 * @nid: NID to read the AMP value
 * @dir: #HDA_INPUT or #HDA_OUTPUT
 * @idx: the index value (only for input direction)
 * @mask: bit mask to set
 * @val: the bits value to set
 *
 * Call snd_hda_codec_amp_init() for both stereo channels.
 */</doc>
