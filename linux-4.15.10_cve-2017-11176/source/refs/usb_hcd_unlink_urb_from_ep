<dec f='linux/include/linux/usb/hcd.h' l='419' type='void usb_hcd_unlink_urb_from_ep(struct usb_hcd * hcd, struct urb * urb)'/>
<use f='linux/drivers/usb/core/hcd.c' l='731' u='c' c='rh_call_control'/>
<use f='linux/drivers/usb/core/hcd.c' l='771' u='c' c='usb_hcd_poll_rh_status'/>
<use f='linux/drivers/usb/core/hcd.c' l='863' u='c' c='usb_rh_urb_dequeue'/>
<def f='linux/drivers/usb/core/hcd.c' l='1330' ll='1336' type='void usb_hcd_unlink_urb_from_ep(struct usb_hcd * hcd, struct urb * urb)'/>
<dec f='linux/drivers/usb/core/hcd.c' l='1337' type='void usb_hcd_unlink_urb_from_ep(struct usb_hcd * , struct urb * )'/>
<use f='linux/drivers/usb/core/hcd.c' l='1337' c='usb_hcd_unlink_urb_from_ep'/>
<use f='linux/drivers/usb/core/hcd.c' l='1337' u='a'/>
<use f='linux/drivers/usb/core/hcd.c' l='1337' u='a'/>
<doc f='linux/drivers/usb/core/hcd.c' l='1320'>/**
 * usb_hcd_unlink_urb_from_ep - remove an URB from its endpoint queue
 * @hcd: host controller to which @urb was submitted
 * @urb: URB being unlinked
 *
 * Host controller drivers should call this routine before calling
 * usb_hcd_giveback_urb().  The HCD&apos;s private spinlock must be held and
 * interrupts must be disabled.  The actions carried out here are required
 * for URB completion.
 */</doc>
<use f='linux/drivers/usb/host/ehci-q.c' l='266' u='c' c='ehci_urb_done'/>
<use f='linux/drivers/usb/host/ehci-q.c' l='1128' u='c' c='submit_async'/>
<use f='linux/drivers/usb/host/ehci-sched.c' l='972' u='c' c='intr_submit'/>
<use f='linux/drivers/usb/host/ehci-sched.c' l='1977' u='c' c='itd_submit'/>
<use f='linux/drivers/usb/host/ehci-sched.c' l='2356' u='c' c='sitd_submit'/>
<use f='linux/drivers/usb/host/ohci-q.c' l='73' u='c' c='finish_urb'/>
<use f='linux/drivers/usb/host/ohci-hcd.c' l='230' u='c' c='ohci_urb_enqueue'/>
<use f='linux/drivers/usb/host/uhci-q.c' l='1476' u='c' c='uhci_urb_enqueue'/>
<use f='linux/drivers/usb/host/uhci-q.c' l='1554' u='c' c='uhci_giveback_urb'/>
