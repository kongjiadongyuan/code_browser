<dec f='linux/include/linux/kthread.h' l='10' type='struct task_struct * kthread_create_on_node(int (*)(void *) threadfn, void * data, int node, const char * namefmt)'/>
<use f='linux/crypto/algboss.c' l='192' macro='1' u='c' c='cryptomgr_schedule_probe'/>
<use f='linux/crypto/algboss.c' l='255' macro='1' u='c' c='cryptomgr_schedule_test'/>
<use f='linux/drivers/base/devtmpfs.c' l='429' macro='1' u='c' c='devtmpfs_init'/>
<use f='linux/drivers/block/loop.c' l='847' macro='1' u='c' c='loop_prepare_queue'/>
<use f='linux/drivers/char/hw_random/core.c' l='446' macro='1' u='c' c='start_khwrngd'/>
<use f='linux/drivers/gpu/drm/i915/intel_breadcrumbs.c' l='793' macro='1' u='c' c='intel_engine_init_breadcrumbs'/>
<use f='linux/drivers/md/dm-rq.c' l='708' macro='1' u='c' c='dm_old_init_request_queue'/>
<use f='linux/drivers/md/md.c' l='7518' macro='1' u='c' c='md_register_thread'/>
<use f='linux/drivers/pcmcia/cs.c' l='172' macro='1' u='c' c='pcmcia_register_socket'/>
<use f='linux/drivers/scsi/hosts.c' l='489' macro='1' u='c' c='scsi_host_alloc'/>
<use f='linux/drivers/usb/storage/usb.c' l='793' macro='1' u='c' c='usb_stor_acquire_resources'/>
<use f='linux/fs/ext4/mmp.c' l='382' macro='1' u='c' c='ext4_multi_mount_protect'/>
<use f='linux/fs/ext4/super.c' l='3039' macro='1' u='c' c='ext4_run_lazyinit_thread'/>
<use f='linux/fs/jbd2/journal.c' l='299' macro='1' u='c' c='jbd2_journal_start_thread'/>
<use f='linux/fs/lockd/clntlock.c' l='219' macro='1' u='c' c='nlmclnt_recovery'/>
<use f='linux/fs/lockd/svc.c' l='394' macro='1' u='c' c='lockd_start_svc'/>
<use f='linux/fs/nfs/nfs4state.c' l='1219' macro='1' u='c' c='nfs4_schedule_state_manager'/>
<use f='linux/kernel/audit.c' l='949' macro='1' u='c' c='audit_send_reply'/>
<use f='linux/kernel/audit.c' l='1556' macro='1' u='c' c='audit_init'/>
<use f='linux/kernel/audit_tree.c' l='739' macro='1' u='c' c='audit_launch_prune'/>
<use f='linux/kernel/auditfilter.c' l='1179' macro='1' u='c' c='audit_list_rules_send'/>
<use f='linux/kernel/irq/manage.c' l='1085' macro='1' u='c' c='setup_irq_thread'/>
<use f='linux/kernel/irq/manage.c' l='1088' macro='1' u='c' c='setup_irq_thread'/>
<def f='linux/kernel/kthread.c' l='356' ll='369' type='struct task_struct * kthread_create_on_node(int (*)(void *) threadfn, void * data, int node, const char * namefmt)'/>
<dec f='linux/kernel/kthread.c' l='370' type='struct task_struct * kthread_create_on_node(int (*)(void *) , void * , int , const char * )'/>
<use f='linux/kernel/kthread.c' l='370' c='kthread_create_on_node'/>
<use f='linux/kernel/kthread.c' l='370' u='a'/>
<use f='linux/kernel/kthread.c' l='370' u='a'/>
<use f='linux/kernel/kthread.c' l='430' u='c' c='kthread_create_on_cpu'/>
<doc f='linux/kernel/kthread.c' l='333'>/**
 * kthread_create_on_node - create a kthread.
 * @threadfn: the function to run until signal_pending(current).
 * @data: data ptr for @threadfn.
 * @node: task and thread structures for the thread are allocated on this node
 * @namefmt: printf-style name for the thread.
 *
 * Description: This helper function creates and names a kernel
 * thread.  The thread will be stopped: use wake_up_process() to start
 * it.  See also kthread_run().  The new thread has SCHED_NORMAL policy and
 * is affine to all CPUs.
 *
 * If thread is going to be bound on a particular cpu, give its node
 * in @node, to get NUMA affinity for kthread stack, or else give NUMA_NO_NODE.
 * When woken, the thread will run @threadfn() with @data as its
 * argument. @threadfn() can either call do_exit() directly if it is a
 * standalone thread for which no one will call kthread_stop(), or
 * return when &apos;kthread_should_stop()&apos; is true (which means
 * kthread_stop() has been called).  The return value should be zero
 * or a negative error number; it will be passed to kthread_stop().
 *
 * Returns a task_struct or ERR_PTR(-ENOMEM) or ERR_PTR(-EINTR).
 */</doc>
<use f='linux/kernel/power/swap.c' l='725' macro='1' u='c' c='save_image_lzo'/>
<use f='linux/kernel/power/swap.c' l='749' macro='1' u='c' c='save_image_lzo'/>
<use f='linux/kernel/power/swap.c' l='1219' macro='1' u='c' c='load_image_lzo'/>
<use f='linux/kernel/power/swap.c' l='1243' macro='1' u='c' c='load_image_lzo'/>
<use f='linux/kernel/rcu/tree.c' l='4056' macro='1' u='c' c='rcu_spawn_gp_kthread'/>
<use f='linux/kernel/time/clocksource.c' l='137' macro='1' u='c' c='clocksource_watchdog_work'/>
<use f='linux/kernel/workqueue.c' l='1779' u='c' c='create_worker'/>
<use f='linux/kernel/workqueue.c' l='4017' macro='1' u='c' c='__alloc_workqueue_key'/>
<use f='linux/mm/compaction.c' l='2085' macro='1' u='c' c='kcompactd_run'/>
<use f='linux/mm/oom_kill.c' l='656' macro='1' u='c' c='oom_init'/>
<use f='linux/mm/vmscan.c' l='3727' macro='1' u='c' c='kswapd_run'/>
<use f='linux/net/sunrpc/svc.c' l='725' u='c' c='svc_start_kthreads'/>
