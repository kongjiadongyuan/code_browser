<def f='linux/include/linux/clk-provider.h' l='559' ll='573'/>
<size>72</size>
<doc f='linux/include/linux/clk-provider.h' l='546'>/**
 * struct clk_fractional_divider - adjustable fractional divider clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @reg:	register containing the divider
 * @mshift:	shift to the numerator bit field
 * @mwidth:	width of the numerator bit field
 * @nshift:	shift to the denominator bit field
 * @nwidth:	width of the denominator bit field
 * @lock:	register lock
 *
 * Clock with adjustable fractional divider affecting its output frequency.
 */</doc>
<mbr r='clk_fractional_divider::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_fractional_divider::reg' o='192' t='void *'/>
<mbr r='clk_fractional_divider::mshift' o='256' t='u8'/>
<mbr r='clk_fractional_divider::mwidth' o='264' t='u8'/>
<mbr r='clk_fractional_divider::mmask' o='288' t='u32'/>
<mbr r='clk_fractional_divider::nshift' o='320' t='u8'/>
<mbr r='clk_fractional_divider::nwidth' o='328' t='u8'/>
<mbr r='clk_fractional_divider::nmask' o='352' t='u32'/>
<mbr r='clk_fractional_divider::flags' o='384' t='u8'/>
<mbr r='clk_fractional_divider::approximation' o='448' t='void (*)(struct clk_hw *, unsigned long, unsigned long *, unsigned long *, unsigned long *)'/>
<mbr r='clk_fractional_divider::lock' o='512' t='spinlock_t *'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='22' c='clk_fd_recalc_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='22' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='22' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='22' macro='1' c='clk_fd_recalc_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='56' c='clk_fd_general_approximation'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='56' macro='1' c='clk_fd_general_approximation'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='56' macro='1' c='clk_fd_general_approximation'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='56' macro='1' c='clk_fd_general_approximation'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='76' c='clk_fd_round_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='76' macro='1' c='clk_fd_round_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='76' macro='1' c='clk_fd_round_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='76' macro='1' c='clk_fd_round_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='97' c='clk_fd_set_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='97' macro='1' c='clk_fd_set_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='97' macro='1' c='clk_fd_set_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='97' macro='1' c='clk_fd_set_rate'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='136' c='clk_hw_register_fractional_divider'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='191' c='clk_hw_unregister_fractional_divider'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='193' macro='1' c='clk_hw_unregister_fractional_divider'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='193' macro='1' c='clk_hw_unregister_fractional_divider'/>
<use f='linux/drivers/clk/clk-fractional-divider.c' l='193' macro='1' c='clk_hw_unregister_fractional_divider'/>
<size>72</size>
