<dec f='linux/include/drm/drm_atomic.h' l='550' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * state, const struct drm_display_mode * mode)'/>
<def f='linux/drivers/gpu/drm/drm_atomic.c' l='327' ll='360' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * state, const struct drm_display_mode * mode)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic.c' l='361' type='int drm_atomic_set_mode_for_crtc(struct drm_crtc_state * , const struct drm_display_mode * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='361' c='drm_atomic_set_mode_for_crtc'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='361' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic.c' l='361' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_atomic.c' l='316'>/**
 * drm_atomic_set_mode_for_crtc - set mode for CRTC
 * @state: the CRTC whose incoming state to update
 * @mode: kernel-internal mode to use for the CRTC, or NULL to disable
 *
 * Set a mode (originating from the kernel) on the desired CRTC state and update
 * the enable property.
 *
 * RETURNS:
 * Zero on success, error code on failure. Cannot return -EDEADLK.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2735' u='c' c='__drm_atomic_helper_set_config'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2753' u='c' c='__drm_atomic_helper_set_config'/>
<use f='linux/drivers/gpu/drm/drm_crtc_helper.c' l='1026' u='c' c='drm_helper_crtc_mode_set'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='811' u='c' c='atomic_remove_fb'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='5907' u='c' c='intel_crtc_disable_noatomic'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='9958' u='c' c='intel_get_load_detect_pipe'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='15037' u='c' c='intel_modeset_readout_hw_state'/>
