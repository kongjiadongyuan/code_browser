<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3765' type='int i915_gem_object_set_to_gtt_domain(struct drm_i915_gem_object * obj, bool write)'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1071' u='c' c='i915_gem_gtt_pread'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1273' u='c' c='i915_gem_gtt_pwrite_fast'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1634' u='c' c='i915_gem_set_domain_ioctl'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='1928' u='c' c='i915_gem_fault'/>
<def f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3602' ll='3655' type='int i915_gem_object_set_to_gtt_domain(struct drm_i915_gem_object * obj, bool write)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3594'>/**
 * Moves a single object to the GTT read, and possibly write domain.
 * @obj: object to act on
 * @write: ask for write access or read only
 *
 * This function returns when the move is complete, including waiting on
 * flushes to occur.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem_dmabuf.c' l='215' u='c' c='i915_gem_end_cpu_access'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_execbuffer.c' l='978' u='c' c='reloc_iomap'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_gtt.c' l='3607' u='c' c='i915_gem_restore_gtt_mappings'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_render_state.c' l='163' u='c' c='render_state_setup'/>
<use f='linux/drivers/gpu/drm/i915/intel_overlay.c' l='1434' u='c' c='intel_setup_overlay'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.c' l='1229' u='c' c='intel_ring_pin'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.c' l='1367' u='c' c='context_pin'/>
<use f='linux/drivers/gpu/drm/i915/intel_ringbuffer.c' l='1912' u='c' c='intel_ring_init_semaphores'/>
<use f='linux/drivers/gpu/drm/i915/intel_uc_fw.c' l='225' u='c' c='intel_uc_fw_upload'/>
