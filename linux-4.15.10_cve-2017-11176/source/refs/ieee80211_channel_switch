<def f='linux/include/net/mac80211.h' l='1389' ll='1395'/>
<use f='linux/include/net/mac80211.h' l='3625'/>
<use f='linux/include/net/mac80211.h' l='3702'/>
<size>48</size>
<doc f='linux/include/net/mac80211.h' l='1372'>/**
 * struct ieee80211_channel_switch - holds the channel switch data
 *
 * The information provided in this structure is required for channel switch
 * operation.
 *
 * @timestamp: value in microseconds of the 64-bit Time Synchronization
 *	Function (TSF) timer when the frame containing the channel switch
 *	announcement was received. This is simply the rx.mactime parameter
 *	the driver passed into mac80211.
 * @device_timestamp: arbitrary timestamp for the device, this is the
 *	rx.device_timestamp parameter the driver passed to mac80211.
 * @block_tx: Indicates whether transmission must be blocked before the
 *	scheduled channel switch, as indicated by the AP.
 * @chandef: the new channel to switch to
 * @count: the number of TBTT&apos;s until the channel switch event
 */</doc>
<mbr r='ieee80211_channel_switch::timestamp' o='0' t='u64'/>
<mbr r='ieee80211_channel_switch::device_timestamp' o='64' t='u32'/>
<mbr r='ieee80211_channel_switch::block_tx' o='96' t='bool'/>
<mbr r='ieee80211_channel_switch::chandef' o='128' t='struct cfg80211_chan_def'/>
<mbr r='ieee80211_channel_switch::count' o='320' t='u8'/>
<dec f='linux/net/mac80211/ieee80211_i.h' l='1682' type='int ieee80211_channel_switch(struct wiphy * wiphy, struct net_device * dev, struct cfg80211_csa_settings * params)'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='trace_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='trace_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='trace_drv_channel_switch_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='trace_drv_channel_switch_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='register_trace_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='register_trace_prio_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='unregister_trace_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='1102' c='check_trace_callback_type_drv_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='trace_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='trace_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='trace_drv_pre_channel_switch_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='trace_drv_pre_channel_switch_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='register_trace_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='register_trace_prio_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='unregister_trace_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/trace.h' l='2386' c='check_trace_callback_type_drv_pre_channel_switch'/>
<use f='linux/net/mac80211/driver-ops.h' l='638' c='drv_channel_switch'/>
<use f='linux/net/mac80211/driver-ops.h' l='1020' c='drv_pre_channel_switch'/>
<size>48</size>
<use f='linux/net/mac80211/cfg.c' l='3151' c='__ieee80211_channel_switch'/>
<def f='linux/net/mac80211/cfg.c' l='3237' ll='3249' type='int ieee80211_channel_switch(struct wiphy * wiphy, struct net_device * dev, struct cfg80211_csa_settings * params)'/>
<use f='linux/net/mac80211/cfg.c' l='3748'/>
<use f='linux/net/mac80211/cfg.c' l='3748'/>
<size>48</size>
<use f='linux/net/mac80211/ibss.c' l='899' u='c' c='ieee80211_ibss_process_chanswitch'/>
<use f='linux/net/mac80211/mlme.c' l='1090' c='ieee80211_sta_process_chanswitch'/>
<size>48</size>
