<dec f='linux/include/linux/oom.h' l='112' type='struct task_struct * find_lock_task_mm(struct task_struct * p)'/>
<use f='linux/fs/proc/base.c' l='1064' u='c' c='__set_oom_adj'/>
<use f='linux/kernel/cpu.c' l='710' u='c' c='clear_tasks_mm_cpumask'/>
<def f='linux/mm/oom_kill.c' l='112' ll='129' type='struct task_struct * find_lock_task_mm(struct task_struct * p)'/>
<use f='linux/mm/oom_kill.c' l='202' u='c' c='oom_badness'/>
<use f='linux/mm/oom_kill.c' l='406' u='c' c='dump_tasks'/>
<use f='linux/mm/oom_kill.c' l='898' u='c' c='oom_kill_process'/>
<doc f='linux/mm/oom_kill.c' l='106'>/*
 * The process p may have detached its own -&gt;mm while exiting or through
 * use_mm(), but one or more of its subthreads may still have a valid
 * pointer.  Return p, or any of its subthreads with a valid -&gt;mm, with
 * task_lock() held.
 */</doc>
