<dec f='linux/include/linux/mpi.h' l='76' type='MPI mpi_read_raw_from_sgl(struct scatterlist * sgl, unsigned int len)'/>
<use f='linux/crypto/rsa.c' l='103' u='c' c='rsa_enc'/>
<use f='linux/crypto/rsa.c' l='142' u='c' c='rsa_dec'/>
<use f='linux/crypto/rsa.c' l='180' u='c' c='rsa_sign'/>
<use f='linux/crypto/rsa.c' l='219' u='c' c='rsa_verify'/>
<def f='linux/lib/mpi/mpicoder.c' l='330' ll='414' type='MPI mpi_read_raw_from_sgl(struct scatterlist * sgl, unsigned int nbytes)'/>
<dec f='linux/lib/mpi/mpicoder.c' l='415' type='MPI mpi_read_raw_from_sgl(struct scatterlist * , unsigned int )'/>
<use f='linux/lib/mpi/mpicoder.c' l='415' c='mpi_read_raw_from_sgl'/>
<use f='linux/lib/mpi/mpicoder.c' l='415' u='a'/>
<use f='linux/lib/mpi/mpicoder.c' l='415' u='a'/>
<doc f='linux/lib/mpi/mpicoder.c' l='317'>/*
 * mpi_read_raw_from_sgl() - Function allocates an MPI and populates it with
 *			     data from the sgl
 *
 * This function works in the same way as the mpi_read_raw_data, but it
 * takes an sgl instead of void * buffer. i.e. it allocates
 * a new MPI and reads the content of the sgl to the MPI.
 *
 * @sgl:	scatterlist to read from
 * @nbytes:	number of bytes to read
 *
 * Return:	Pointer to a new MPI or NULL on error
 */</doc>
