<dec f='linux/kernel/trace/trace.h' l='672' type='void trace_filter_add_remove_task(struct trace_pid_list * pid_list, struct task_struct * self, struct task_struct * task)'/>
<def f='linux/kernel/trace/trace.c' l='376' ll='398' type='void trace_filter_add_remove_task(struct trace_pid_list * pid_list, struct task_struct * self, struct task_struct * task)'/>
<doc f='linux/kernel/trace/trace.c' l='364'>/**
 * trace_pid_filter_add_remove_task - Add or remove a task from a pid_list
 * @pid_list: The list to modify
 * @self: The current task for fork or NULL for exit
 * @task: The task to add or remove
 *
 * If adding a task, if @self is defined, the task is only added if @self
 * is also included in @pid_list. This happens on fork and tasks should
 * only be added when the parent is listed. If @self is NULL, then the
 * @task pid will be removed from the list, which would happen on exit
 * of a task.
 */</doc>
<use f='linux/kernel/trace/trace_events.c' l='516' u='c' c='event_filter_pid_sched_process_exit'/>
<use f='linux/kernel/trace/trace_events.c' l='528' u='c' c='event_filter_pid_sched_process_fork'/>
