<def f='linux/arch/x86/events/intel/pt.h' l='185' ll='190'/>
<use f='linux/arch/x86/events/intel/pt.c' l='36'/>
<use f='linux/arch/x86/events/intel/pt.c' l='431' c='pt_config_filters'/>
<use f='linux/arch/x86/events/intel/pt.c' l='471' c='pt_config'/>
<use f='linux/arch/x86/events/intel/pt.c' l='512' c='pt_config_stop'/>
<use f='linux/arch/x86/events/intel/pt.c' l='763' c='pt_update_head'/>
<use f='linux/arch/x86/events/intel/pt.c' l='809' c='pt_handle_status'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1242' c='intel_pt_interrupt'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1296' c='intel_pt_handle_vmx'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1337' c='pt_event_start'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1367' c='pt_event_stop'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1412' c='pt_event_add'/>
<use f='linux/arch/x86/events/intel/pt.c' l='1467' c='cpu_emergency_stop_pt'/>
<size>168</size>
<doc f='linux/arch/x86/events/intel/pt.h' l='178'>/**
 * struct pt - per-cpu pt context
 * @handle:	perf output handle
 * @filters:		last configured filters
 * @handle_nmi:	do handle PT PMI on this cpu, there&apos;s an active event
 * @vmx_on:	1 if VMX is ON on this cpu
 */</doc>
<mbr r='pt::handle' o='0' t='struct perf_output_handle'/>
<mbr r='pt::filters' o='448' t='struct pt_filters'/>
<mbr r='pt::handle_nmi' o='1280' t='int'/>
<mbr r='pt::vmx_on' o='1312' t='int'/>
