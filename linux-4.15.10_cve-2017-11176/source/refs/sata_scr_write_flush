<dec f='linux/include/linux/libata.h' l='1139' type='int sata_scr_write_flush(struct ata_link * link, int reg, u32 val)'/>
<use f='linux/drivers/ata/libata-core.c' l='4108' u='c' c='sata_link_hardreset'/>
<def f='linux/drivers/ata/libata-core.c' l='5522' ll='5537' type='int sata_scr_write_flush(struct ata_link * link, int reg, u32 val)'/>
<dec f='linux/drivers/ata/libata-core.c' l='7282' type='int sata_scr_write_flush(struct ata_link * , int , u32 )'/>
<use f='linux/drivers/ata/libata-core.c' l='7282' c='sata_scr_write_flush'/>
<use f='linux/drivers/ata/libata-core.c' l='7282' u='a'/>
<use f='linux/drivers/ata/libata-core.c' l='7282' u='a'/>
<doc f='linux/drivers/ata/libata-core.c' l='5507'>/**
 *	sata_scr_write_flush - write SCR register of the specified port and flush
 *	@link: ATA link to write SCR for
 *	@reg: SCR to write
 *	@val: value to write
 *
 *	This function is identical to sata_scr_write() except that this
 *	function performs flush after writing to the register.
 *
 *	LOCKING:
 *	None if @link is ap-&gt;link.  Kernel thread context otherwise.
 *
 *	RETURNS:
 *	0 on success, negative errno on failure.
 */</doc>
