<def f='linux/net/mac80211/sta_info.h' l='298' ll='307'/>
<use f='linux/net/mac80211/sta_info.h' l='501'/>
<size>88</size>
<doc f='linux/net/mac80211/sta_info.h' l='283'>/**
 * struct ieee80211_fast_tx - TX fastpath information
 * @key: key to use for hw crypto
 * @hdr: the 802.11 header to put with the frame
 * @hdr_len: actual 802.11 header length
 * @sa_offs: offset of the SA
 * @da_offs: offset of the DA
 * @pn_offs: offset where to put PN for crypto (or 0 if not needed)
 * @band: band this will be transmitted on, for tx_info
 * @rcu_head: RCU head to free this struct
 *
 * This struct is small enough so that the common case (maximum crypto
 * header length of 8 like for CCMP/GCMP) fits into a single 64-byte
 * cache line.
 */</doc>
<mbr r='ieee80211_fast_tx::key' o='0' t='struct ieee80211_key *'/>
<mbr r='ieee80211_fast_tx::hdr_len' o='64' t='u8'/>
<mbr r='ieee80211_fast_tx::sa_offs' o='72' t='u8'/>
<mbr r='ieee80211_fast_tx::da_offs' o='80' t='u8'/>
<mbr r='ieee80211_fast_tx::pn_offs' o='88' t='u8'/>
<mbr r='ieee80211_fast_tx::band' o='96' t='u8'/>
<mbr r='ieee80211_fast_tx::hdr' o='112' t='u8 [56]'/>
<mbr r='ieee80211_fast_tx::callback_head' o='576' t='struct callback_head'/>
<use f='linux/net/mac80211/tx.c' l='2788' c='ieee80211_check_fast_xmit'/>
<use f='linux/net/mac80211/tx.c' l='2788' c='ieee80211_check_fast_xmit'/>
<use f='linux/net/mac80211/tx.c' l='2788' c='ieee80211_check_fast_xmit'/>
<use f='linux/net/mac80211/tx.c' l='3045' c='ieee80211_clear_fast_xmit'/>
<use f='linux/net/mac80211/tx.c' l='3083' c='ieee80211_amsdu_prepare_head'/>
<use f='linux/net/mac80211/tx.c' l='3150' c='ieee80211_amsdu_aggregate'/>
<use f='linux/net/mac80211/tx.c' l='3312' c='ieee80211_xmit_fast'/>
<use f='linux/net/mac80211/tx.c' l='3573' c='__ieee80211_subif_start_xmit'/>
<size>88</size>
