<dec f='linux/include/scsi/scsi_host.h' l='811' type='void scsi_unblock_requests(struct Scsi_Host * )'/>
<def f='linux/drivers/scsi/scsi_lib.c' l='2371' ll='2375' type='void scsi_unblock_requests(struct Scsi_Host * shost)'/>
<dec f='linux/drivers/scsi/scsi_lib.c' l='2376' type='void scsi_unblock_requests(struct Scsi_Host * )'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='2376' c='scsi_unblock_requests'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='2376' u='a'/>
<use f='linux/drivers/scsi/scsi_lib.c' l='2376' u='a'/>
<doc f='linux/drivers/scsi/scsi_lib.c' l='2351'>/*
 * Function:    scsi_unblock_requests()
 *
 * Purpose:     Utility function used by low-level drivers to allow further
 *		commands from being queued to the device.
 *
 * Arguments:   shost       - Host in question
 *
 * Returns:     Nothing
 *
 * Lock status: No locks are assumed held.
 *
 * Notes:       There is no timer nor any other means by which the requests
 *		get unblocked other than the low-level driver calling
 *		scsi_unblock_requests().
 *
 *		This is done as an API function so that changes to the
 *		internals of the scsi mid-layer won&apos;t require wholesale
 *		changes to drivers that use this feature.
 */</doc>
