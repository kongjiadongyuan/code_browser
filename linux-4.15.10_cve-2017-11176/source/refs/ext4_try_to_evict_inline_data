<dec f='linux/fs/ext4/ext4.h' l='3012' type='int ext4_try_to_evict_inline_data(handle_t * handle, struct inode * inode, int needed)'/>
<def f='linux/fs/ext4/inline.c' l='1902' ll='1928' type='int ext4_try_to_evict_inline_data(handle_t * handle, struct inode * inode, int needed)'/>
<doc f='linux/fs/ext4/inline.c' l='1894'>/*
 * Called during xattr set, and if we can sparse space &apos;needed&apos;,
 * just create the extent tree evict the data to the outer block.
 *
 * We use jbd2 instead of page cache to move data to the 1st block
 * so that the whole transaction can be committed as a whole and
 * the data isn&apos;t lost because of the delayed page cache write.
 */</doc>
<use f='linux/fs/ext4/xattr.c' l='2189' u='c' c='ext4_xattr_ibody_inline_set'/>
