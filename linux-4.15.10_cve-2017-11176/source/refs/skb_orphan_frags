<def f='linux/include/linux/skbuff.h' l='2538' ll='2545' type='int skb_orphan_frags(struct sk_buff * skb, gfp_t gfp_mask)'/>
<doc f='linux/include/linux/skbuff.h' l='2529'>/**
 *	skb_orphan_frags - orphan the frags contained in a buffer
 *	@skb: buffer to orphan frags from
 *	@gfp_mask: allocation mask for replacement pages
 *
 *	For each frag in the SKB which needs a destructor (i.e. has an
 *	owner) create a copy of that frag and release the original
 *	page by calling the destructor.
 */</doc>
<use f='linux/include/linux/netdevice.h' l='3343' u='c' c='____dev_forward_skb'/>
<use f='linux/net/core/skbuff.c' l='1268' u='c' c='skb_clone'/>
<use f='linux/net/core/skbuff.c' l='1401' u='c' c='__pskb_copy_fclone'/>
<use f='linux/net/core/skbuff.c' l='1478' u='c' c='pskb_expand_head'/>
<use f='linux/net/core/skbuff.c' l='2734' u='c' c='skb_zerocopy'/>
<use f='linux/net/core/skbuff.c' l='3681' u='c' c='skb_segment'/>
<use f='linux/net/core/skbuff.c' l='5220' u='c' c='pskb_carve_inside_header'/>
<use f='linux/net/core/skbuff.c' l='5337' u='c' c='pskb_carve_inside_nonlinear'/>
