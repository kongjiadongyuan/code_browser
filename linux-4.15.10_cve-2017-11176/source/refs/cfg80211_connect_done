<dec f='linux/include/net/cfg80211.h' l='5304' type='void cfg80211_connect_done(struct net_device * dev, struct cfg80211_connect_resp_params * params, gfp_t gfp)'/>
<use f='linux/include/net/cfg80211.h' l='5361' u='c' c='cfg80211_connect_bss'/>
<doc f='linux/include/net/cfg80211.h' l='5290'>/**
 * cfg80211_connect_done - notify cfg80211 of connection result
 *
 * @dev: network device
 * @params: connection response parameters
 * @gfp: allocation flags
 *
 * It should be called by the underlying driver once execution of the connection
 * request from connect() has been completed. This is similar to
 * cfg80211_connect_bss(), but takes a structure pointer for connection response
 * parameters. Only one of the functions among cfg80211_connect_bss(),
 * cfg80211_connect_result(), cfg80211_connect_timeout(),
 * and cfg80211_connect_done() should be called.
 */</doc>
<def f='linux/net/wireless/sme.c' l='784' ll='865' type='void cfg80211_connect_done(struct net_device * dev, struct cfg80211_connect_resp_params * params, gfp_t gfp)'/>
<dec f='linux/net/wireless/sme.c' l='866' type='void cfg80211_connect_done(struct net_device * , struct cfg80211_connect_resp_params * , gfp_t )'/>
<use f='linux/net/wireless/sme.c' l='866' c='cfg80211_connect_done'/>
<use f='linux/net/wireless/sme.c' l='866' u='a'/>
<use f='linux/net/wireless/sme.c' l='866' u='a'/>
<doc f='linux/net/wireless/sme.c' l='783'>/* Consumes bss object one way or another */</doc>
