<dec f='linux/include/linux/timer.h' l='164' type='int mod_timer_pending(struct timer_list * timer, unsigned long expires)'/>
<def f='linux/kernel/time/timer.c' l='1066' ll='1069' type='int mod_timer_pending(struct timer_list * timer, unsigned long expires)'/>
<dec f='linux/kernel/time/timer.c' l='1070' type='int mod_timer_pending(struct timer_list * , unsigned long )'/>
<use f='linux/kernel/time/timer.c' l='1070' c='mod_timer_pending'/>
<use f='linux/kernel/time/timer.c' l='1070' u='a'/>
<use f='linux/kernel/time/timer.c' l='1070' u='a'/>
<doc f='linux/kernel/time/timer.c' l='1056'>/**
 * mod_timer_pending - modify a pending timer&apos;s timeout
 * @timer: the pending timer to be modified
 * @expires: new timeout in jiffies
 *
 * mod_timer_pending() is the same for pending timers as mod_timer(),
 * but will not re-activate and modify already deleted timers.
 *
 * It is useful for unserialized use of timers.
 */</doc>
<use f='linux/net/ipv4/inet_timewait_sock.c' l='251' u='c' c='__inet_twsk_schedule'/>
<use f='linux/net/ipv4/tcp_minisocks.c' l='643' u='c' c='tcp_check_req'/>
<use f='linux/net/netfilter/nf_conntrack_sip.c' l='812' u='c' c='refresh_signalling_expectation'/>
