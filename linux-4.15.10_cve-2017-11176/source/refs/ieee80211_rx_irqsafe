<dec f='linux/include/net/mac80211.h' l='4042' type='void ieee80211_rx_irqsafe(struct ieee80211_hw * hw, struct sk_buff * skb)'/>
<doc f='linux/include/net/mac80211.h' l='4029'>/**
 * ieee80211_rx_irqsafe - receive frame
 *
 * Like ieee80211_rx() but can be called in IRQ context
 * (internally defers to a tasklet.)
 *
 * Calls to this function, ieee80211_rx() or ieee80211_rx_ni() may not
 * be mixed for a single hardware.Must not run concurrently with
 * ieee80211_tx_status() or ieee80211_tx_status_ni().
 *
 * @hw: the hardware this frame came in on
 * @skb: the buffer to receive, owned by mac80211 after this call
 */</doc>
<def f='linux/net/mac80211/rx.c' l='4366' ll='4375' type='void ieee80211_rx_irqsafe(struct ieee80211_hw * hw, struct sk_buff * skb)'/>
<dec f='linux/net/mac80211/rx.c' l='4376' type='void ieee80211_rx_irqsafe(struct ieee80211_hw * , struct sk_buff * )'/>
<use f='linux/net/mac80211/rx.c' l='4376' c='ieee80211_rx_irqsafe'/>
<use f='linux/net/mac80211/rx.c' l='4376' u='a'/>
<use f='linux/net/mac80211/rx.c' l='4376' u='a'/>
<doc f='linux/net/mac80211/rx.c' l='4364'>/* This is a version of the rx handler that can be called from hard irq
 * context. Post the skb on the queue and schedule the tasklet */</doc>
