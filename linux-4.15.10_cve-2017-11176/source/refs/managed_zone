<def f='linux/include/linux/mmzone.h' l='834' ll='837' type='bool managed_zone(struct zone * zone)'/>
<doc f='linux/include/linux/mmzone.h' l='828'>/*
 * Returns true if a zone has pages managed by the buddy allocator.
 * All the reclaim decisions have to use this function rather than
 * populated_zone(). If the whole zone is reserved then we can easily
 * end up with populated_zone() &amp;&amp; !managed_zone().
 */</doc>
<use f='linux/mm/page_alloc.c' l='4927' u='c' c='build_zonerefs_node'/>
<use f='linux/mm/vmscan.c' l='259' u='c' c='lruvec_lru_size'/>
<use f='linux/mm/vmscan.c' l='2247' u='c' c='get_scan_count'/>
<use f='linux/mm/vmscan.c' l='2569' u='c' c='should_continue_reclaim'/>
<use f='linux/mm/vmscan.c' l='2921' u='c' c='allow_direct_reclaim'/>
<use f='linux/mm/vmscan.c' l='3194' u='c' c='pgdat_balanced'/>
<use f='linux/mm/vmscan.c' l='3275' u='c' c='kswapd_shrink_node'/>
<use f='linux/mm/vmscan.c' l='3348' u='c' c='balance_pgdat'/>
<use f='linux/mm/vmscan.c' l='3629' u='c' c='wakeup_kswapd'/>
