<def f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='667' ll='680' type='int i915_gem_active_wait(const struct i915_gem_active * active, unsigned int flags)'/>
<doc f='linux/drivers/gpu/drm/i915/i915_gem_request.h' l='645'>/**
 * i915_gem_active_wait - waits until the request is completed
 * @active - the active request on which to wait
 * @flags - how to wait
 * @timeout - how long to wait at most
 * @rps - userspace client to charge for a waitboost
 *
 * i915_gem_active_wait() waits until the request is completed before
 * returning, without requiring any locks to be held. Note that it does not
 * retire any requests before returning.
 *
 * This function relies on RCU in order to acquire the reference to the active
 * request without holding any locks. See __i915_gem_active_get_rcu() for the
 * glory details on how that is managed. Once the reference is acquired, we
 * can then wait upon the request, and afterwards release our reference,
 * free of any locking.
 *
 * This function wraps i915_wait_request(), see it for the full details on
 * the arguments.
 *
 * Returns 0 if successful, or a negative error code.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3460' u='c' c='wait_for_timeline'/>
