<def f='linux/include/linux/pwm.h' l='58' ll='63'/>
<use f='linux/include/linux/pwm.h' l='85'/>
<use f='linux/include/linux/pwm.h' l='94' c='pwm_get_state'/>
<use f='linux/include/linux/pwm.h' l='101' c='pwm_is_enabled'/>
<use f='linux/include/linux/pwm.h' l='116' c='pwm_get_period'/>
<use f='linux/include/linux/pwm.h' l='131' c='pwm_get_duty_cycle'/>
<use f='linux/include/linux/pwm.h' l='140' c='pwm_get_polarity'/>
<use f='linux/include/linux/pwm.h' l='171' c='pwm_init_state'/>
<use f='linux/include/linux/pwm.h' l='200' c='pwm_get_relative_duty_cycle'/>
<use f='linux/include/linux/pwm.h' l='228' c='pwm_set_relative_duty_cycle'/>
<use f='linux/include/linux/pwm.h' l='272'/>
<use f='linux/include/linux/pwm.h' l='274'/>
<use f='linux/include/linux/pwm.h' l='463' c='pwm_apply_state'/>
<use f='linux/include/linux/pwm.h' l='569' c='pwm_apply_args'/>
<size>16</size>
<doc f='linux/include/linux/pwm.h' l='51'>/*
 * struct pwm_state - state of a PWM channel
 * @period: PWM period (in nanoseconds)
 * @duty_cycle: PWM duty cycle (in nanoseconds)
 * @polarity: PWM polarity
 * @enabled: PWM enabled status
 */</doc>
<mbr r='pwm_state::period' o='0' t='unsigned int'/>
<mbr r='pwm_state::duty_cycle' o='32' t='unsigned int'/>
<mbr r='pwm_state::polarity' o='64' t='enum pwm_polarity'/>
<mbr r='pwm_state::enabled' o='96' t='bool'/>
