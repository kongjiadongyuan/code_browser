<dec f='linux/include/pcmcia/ds.h' l='176' type='int pcmcia_loop_tuple(struct pcmcia_device * p_dev, cisdata_t code, int (*)(struct pcmcia_device *, tuple_t *, void *) loop_tuple, void * priv_data)'/>
<doc f='linux/include/pcmcia/ds.h' l='175'>/* loop over CIS entries */</doc>
<def f='linux/drivers/pcmcia/pcmcia_cis.c' l='322' ll='335' type='int pcmcia_loop_tuple(struct pcmcia_device * p_dev, cisdata_t code, int (*)(struct pcmcia_device *, tuple_t *, void *) loop_tuple, void * priv_data)'/>
<dec f='linux/drivers/pcmcia/pcmcia_cis.c' l='336' type='int pcmcia_loop_tuple(struct pcmcia_device * , cisdata_t , int (*)(struct pcmcia_device *, tuple_t *, void *) , void * )'/>
<use f='linux/drivers/pcmcia/pcmcia_cis.c' l='336' c='pcmcia_loop_tuple'/>
<use f='linux/drivers/pcmcia/pcmcia_cis.c' l='336' u='a'/>
<use f='linux/drivers/pcmcia/pcmcia_cis.c' l='336' u='a'/>
<use f='linux/drivers/pcmcia/pcmcia_cis.c' l='386' u='c' c='pcmcia_get_tuple'/>
<use f='linux/drivers/pcmcia/pcmcia_cis.c' l='435' u='c' c='pcmcia_get_mac_from_cis'/>
<doc f='linux/drivers/pcmcia/pcmcia_cis.c' l='310'>/**
 * pcmcia_loop_tuple() - loop over tuples in the CIS
 * @p_dev:	the struct pcmcia_device which we need to loop for.
 * @code:	which CIS code shall we look for?
 * @priv_data:	private data to be passed to the loop_tuple function.
 * @loop_tuple:	function to call for each CIS entry of type @function. IT
 *		gets passed the raw tuple and @priv_data.
 *
 * pcmcia_loop_tuple() loops over all CIS entries of type @function, and
 * calls the @loop_tuple function for each entry. If the call to @loop_tuple
 * returns 0, the loop exits. Returns 0 on success or errorcode otherwise.
 */</doc>
