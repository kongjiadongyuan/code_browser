<dec f='linux/include/linux/fs.h' l='1086' type='int vfs_cancel_lock(struct file * filp, struct file_lock * fl)'/>
<use f='linux/fs/lockd/svclock.c' l='611' u='c' c='nlmsvc_cancel_blocked'/>
<def f='linux/fs/locks.c' l='2604' ll='2609' type='int vfs_cancel_lock(struct file * filp, struct file_lock * fl)'/>
<dec f='linux/fs/locks.c' l='2611' type='int vfs_cancel_lock(struct file * , struct file_lock * )'/>
<use f='linux/fs/locks.c' l='2611' c='vfs_cancel_lock'/>
<use f='linux/fs/locks.c' l='2611' u='a'/>
<use f='linux/fs/locks.c' l='2611' u='a'/>
<doc f='linux/fs/locks.c' l='2597'>/**
 * vfs_cancel_lock - file byte range unblock lock
 * @filp: The file to apply the unblock to
 * @fl: The lock to be unblocked
 *
 * Used by lock managers to cancel blocked requests
 */</doc>
