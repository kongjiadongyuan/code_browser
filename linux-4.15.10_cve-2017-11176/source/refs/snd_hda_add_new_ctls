<dec f='linux/sound/pci/hda/hda_local.h' l='284' type='int snd_hda_add_new_ctls(struct hda_codec * codec, const struct snd_kcontrol_new * knew)'/>
<doc f='linux/sound/pci/hda/hda_local.h' l='281'>/*
 * Misc
 */</doc>
<def f='linux/sound/pci/hda/hda_codec.c' l='3260' ll='3297' type='int snd_hda_add_new_ctls(struct hda_codec * codec, const struct snd_kcontrol_new * knew)'/>
<dec f='linux/sound/pci/hda/hda_codec.c' l='3298' type='int snd_hda_add_new_ctls(struct hda_codec * , const struct snd_kcontrol_new * )'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='3298' c='snd_hda_add_new_ctls'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='3298' u='a'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='3298' u='a'/>
<doc f='linux/sound/pci/hda/hda_codec.c' l='3250'>/**
 * snd_hda_add_new_ctls - create controls from the array
 * @codec: the HDA codec
 * @knew: the array of struct snd_kcontrol_new
 *
 * This helper function creates and add new controls in the given array.
 * The array must be terminated with an empty entry as terminator.
 *
 * Returns 0 if successful, or a negative error code.
 */</doc>
