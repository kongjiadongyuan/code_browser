<def f='linux/include/linux/skbuff.h' l='2591' ll='2595' type='struct sk_buff * netdev_alloc_skb(struct net_device * dev, unsigned int length)'/>
<use f='linux/include/linux/skbuff.h' l='2607' u='c' c='dev_alloc_skb'/>
<doc f='linux/include/linux/skbuff.h' l='2578'>/**
 *	netdev_alloc_skb - allocate an skbuff for rx on a specific device
 *	@dev: network device to receive on
 *	@length: length to allocate
 *
 *	Allocate a new &amp;sk_buff and assign it a usage count of one. The
 *	buffer has unspecified headroom built in. Users should allocate
 *	the headroom they think they need without accounting for the
 *	built in space. The built in space is used for optimisations.
 *
 *	%NULL is returned if there is no free memory. Although this function
 *	allocates memory it can be called from an interrupt.
 */</doc>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='6893' u='c' c='tg3_rx'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='13415' u='c' c='tg3_run_loopback'/>
<use f='linux/drivers/net/ethernet/intel/e100.c' l='2396' u='c' c='e100_loopback_test'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='1819' u='c' c='nv_alloc_rx'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='1860' u='c' c='nv_alloc_rx_optimized'/>
<use f='linux/drivers/net/ethernet/nvidia/forcedeth.c' l='5101' u='c' c='nv_loopback_test'/>
<use f='linux/net/mac80211/tdls.c' l='868' u='c' c='ieee80211_tdls_build_mgmt_packet_data'/>
