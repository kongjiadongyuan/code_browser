<dec f='linux/include/linux/phy.h' l='801' type='struct phy_device * get_phy_device(struct mii_bus * bus, int addr, bool is_c45)'/>
<use f='linux/drivers/net/phy/mdio_bus.c' l='476' u='c' c='mdiobus_scan'/>
<def f='linux/drivers/net/phy/phy_device.c' l='563' ll='578' type='struct phy_device * get_phy_device(struct mii_bus * bus, int addr, bool is_c45)'/>
<dec f='linux/drivers/net/phy/phy_device.c' l='579' type='struct phy_device * get_phy_device(struct mii_bus * , int , bool )'/>
<use f='linux/drivers/net/phy/phy_device.c' l='579' c='get_phy_device'/>
<use f='linux/drivers/net/phy/phy_device.c' l='579' u='a'/>
<use f='linux/drivers/net/phy/phy_device.c' l='579' u='a'/>
<doc f='linux/drivers/net/phy/phy_device.c' l='553'>/**
 * get_phy_device - reads the specified PHY device and returns its @phy_device
 *		    struct
 * @bus: the target MII bus
 * @addr: PHY address on the MII bus
 * @is_c45: If true the PHY uses the 802.3 clause 45 protocol
 *
 * Description: Reads the ID registers of the PHY at @addr on the
 *   @bus, then allocates and returns the phy_device to represent it.
 */</doc>
