<dec f='linux/include/drm/drm_connector.h' l='1026' type='int drm_connector_attach_scaling_mode_property(struct drm_connector * connector, u32 scaling_mode_mask)'/>
<def f='linux/drivers/gpu/drm/drm_connector.c' l='1060' ll='1103' type='int drm_connector_attach_scaling_mode_property(struct drm_connector * connector, u32 scaling_mode_mask)'/>
<dec f='linux/drivers/gpu/drm/drm_connector.c' l='1104' type='int drm_connector_attach_scaling_mode_property(struct drm_connector * , u32 )'/>
<use f='linux/drivers/gpu/drm/drm_connector.c' l='1104' c='drm_connector_attach_scaling_mode_property'/>
<use f='linux/drivers/gpu/drm/drm_connector.c' l='1104' u='a'/>
<use f='linux/drivers/gpu/drm/drm_connector.c' l='1104' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_connector.c' l='1046'>/**
 * drm_connector_attach_scaling_mode_property - attach atomic scaling mode property
 * @connector: connector to attach scaling mode property on.
 * @scaling_mode_mask: or&apos;ed mask of BIT(%DRM_MODE_SCALE_\*).
 *
 * This is used to add support for scaling mode to atomic drivers.
 * The scaling mode will be set to &amp;drm_connector_state.picture_aspect_ratio
 * and can be used from &amp;drm_connector_helper_funcs-&gt;atomic_check for validation.
 *
 * This is the atomic version of drm_mode_create_scaling_mode_property().
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/intel_dp.c' l='5173' u='c' c='intel_dp_add_properties'/>
<use f='linux/drivers/gpu/drm/i915/intel_dsi.c' l='1679' u='c' c='intel_dsi_add_properties'/>
<use f='linux/drivers/gpu/drm/i915/intel_lvds.c' l='1044' u='c' c='intel_lvds_init'/>
