<dec f='linux/include/linux/iova.h' l='152' type='unsigned long alloc_iova_fast(struct iova_domain * iovad, unsigned long size, unsigned long limit_pfn, bool flush_rcache)'/>
<use f='linux/drivers/iommu/amd_iommu.c' l='1548' u='c' c='dma_ops_alloc_iova'/>
<use f='linux/drivers/iommu/amd_iommu.c' l='1552' u='c' c='dma_ops_alloc_iova'/>
<use f='linux/drivers/iommu/intel-iommu.c' l='3473' u='c' c='intel_alloc_iova'/>
<use f='linux/drivers/iommu/intel-iommu.c' l='3478' u='c' c='intel_alloc_iova'/>
<def f='linux/drivers/iommu/iova.c' l='403' ll='430' type='unsigned long alloc_iova_fast(struct iova_domain * iovad, unsigned long size, unsigned long limit_pfn, bool flush_rcache)'/>
<dec f='linux/drivers/iommu/iova.c' l='431' type='unsigned long alloc_iova_fast(struct iova_domain * , unsigned long , unsigned long , bool )'/>
<use f='linux/drivers/iommu/iova.c' l='431' c='alloc_iova_fast'/>
<use f='linux/drivers/iommu/iova.c' l='431' u='a'/>
<use f='linux/drivers/iommu/iova.c' l='431' u='a'/>
<doc f='linux/drivers/iommu/iova.c' l='393'>/**
 * alloc_iova_fast - allocates an iova from rcache
 * @iovad: - iova domain in question
 * @size: - size of page frames to allocate
 * @limit_pfn: - max limit address
 * @flush_rcache: - set to flush rcache on regular allocation failure
 * This function tries to satisfy an iova allocation from the rcache,
 * and falls back to regular allocation on failure. If regular allocation
 * fails too and the flush_rcache flag is set then the rcache will be flushed.
*/</doc>
