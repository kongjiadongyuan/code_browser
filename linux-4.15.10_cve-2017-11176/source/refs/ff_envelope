<def f='linux/include/uapi/linux/input.h' l='316' ll='321'/>
<use f='linux/include/uapi/linux/input.h' l='330'/>
<use f='linux/include/uapi/linux/input.h' l='342'/>
<use f='linux/include/uapi/linux/input.h' l='391'/>
<size>8</size>
<doc f='linux/include/uapi/linux/input.h' l='304'>/**
 * struct ff_envelope - generic force-feedback effect envelope
 * @attack_length: duration of the attack (ms)
 * @attack_level: level at the beginning of the attack
 * @fade_length: duration of fade (ms)
 * @fade_level: level at the end of fade
 *
 * The @attack_level and @fade_level are absolute values; when applying
 * envelope force-feedback core will convert to positive/negative
 * value based on polarity of the default level of the effect.
 * Valid range for the attack and fade levels is 0x0000 - 0x7fff
 */</doc>
<mbr r='ff_envelope::attack_length' o='0' t='__u16'/>
<mbr r='ff_envelope::attack_level' o='16' t='__u16'/>
<mbr r='ff_envelope::fade_length' o='32' t='__u16'/>
<mbr r='ff_envelope::fade_level' o='48' t='__u16'/>
<use f='linux/drivers/hid/usbhid/hid-pidff.c' l='245' c='pidff_set_envelope_report'/>
<use f='linux/drivers/hid/usbhid/hid-pidff.c' l='273' c='pidff_needs_set_envelope'/>
<use f='linux/drivers/hid/usbhid/hid-pidff.c' l='274' c='pidff_needs_set_envelope'/>
<size>8</size>
<use f='linux/drivers/input/input-compat.h' l='34'/>
<size>8</size>
<use f='linux/drivers/input/ff-memless.c' l='70' c='get_envelope'/>
<use f='linux/drivers/input/ff-memless.c' l='72' c='get_envelope'/>
<use f='linux/drivers/input/ff-memless.c' l='91' c='calculate_next_time'/>
<use f='linux/drivers/input/ff-memless.c' l='165' c='apply_envelope'/>
<size>8</size>
