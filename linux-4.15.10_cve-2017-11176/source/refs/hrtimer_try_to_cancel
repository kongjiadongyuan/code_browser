<dec f='linux/include/linux/hrtimer.h' l='381' type='int hrtimer_try_to_cancel(struct hrtimer * timer)'/>
<use f='linux/block/cfq-iosched.c' l='2610' u='c' c='cfq_del_timer'/>
<use f='linux/drivers/rtc/interface.c' l='671' u='c' c='rtc_update_hrtimer'/>
<use f='linux/fs/timerfd.c' l='470' u='c' c='do_timerfd_settime'/>
<use f='linux/kernel/sched/deadline.c' l='144' u='c' c='dl_change_utilization'/>
<use f='linux/kernel/sched/deadline.c' l='282' u='c' c='task_contending'/>
<use f='linux/kernel/sched/deadline.c' l='1576' u='c' c='migrate_task_rq_dl'/>
<use f='linux/kernel/sched/deadline.c' l='2254' u='c' c='switched_to_dl'/>
<use f='linux/kernel/time/alarmtimer.c' l='409' u='c' c='alarm_try_to_cancel'/>
<def f='linux/kernel/time/hrtimer.c' l='994' ll='1018' type='int hrtimer_try_to_cancel(struct hrtimer * timer)'/>
<dec f='linux/kernel/time/hrtimer.c' l='1019' type='int hrtimer_try_to_cancel(struct hrtimer * )'/>
<use f='linux/kernel/time/hrtimer.c' l='1019' c='hrtimer_try_to_cancel'/>
<use f='linux/kernel/time/hrtimer.c' l='1019' u='a'/>
<use f='linux/kernel/time/hrtimer.c' l='1019' u='a'/>
<use f='linux/kernel/time/hrtimer.c' l='1032' u='c' c='hrtimer_cancel'/>
<doc f='linux/kernel/time/hrtimer.c' l='984'>/**
 * hrtimer_try_to_cancel - try to deactivate a timer
 * @timer:	hrtimer to stop
 *
 * Returns:
 *  0 when the timer was not active
 *  1 when the timer was active
 * -1 when the timer is currently executing the callback function and
 *    cannot be stopped
 */</doc>
<use f='linux/kernel/time/itimer.c' l='215' u='c' c='do_setitimer'/>
<use f='linux/kernel/time/posix-timers.c' l='829' u='c' c='common_hrtimer_try_to_cancel'/>
<use f='linux/kernel/time/tick-broadcast-hrtimer.c' l='37' u='c' c='bc_shutdown'/>
<use f='linux/kernel/time/tick-broadcast-hrtimer.c' l='65' u='c' c='bc_set_next'/>
<use f='linux/sound/core/hrtimer.c' l='126' u='c' c='snd_hrtimer_stop'/>
