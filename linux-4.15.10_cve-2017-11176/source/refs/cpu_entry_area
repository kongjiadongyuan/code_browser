<def f='linux/arch/x86/include/asm/cpu_entry_area.h' l='18' ll='56'/>
<dec f='linux/arch/x86/include/asm/cpu_entry_area.h' l='61' type='typeof(struct cpu_entry_area *)'/>
<use f='linux/arch/x86/include/asm/cpu_entry_area.h' l='61'/>
<use f='linux/arch/x86/include/asm/cpu_entry_area.h' l='74' c='get_cpu_entry_area'/>
<size>180224</size>
<doc f='linux/arch/x86/include/asm/cpu_entry_area.h' l='10'>/*
 * cpu_entry_area is a percpu region that contains things needed by the CPU
 * and early entry/exit code.  Real types aren&apos;t used for all fields here
 * to avoid circular header dependencies.
 *
 * Every field is a virtual alias of some other allocated backing store.
 * There is no direct allocation of a struct cpu_entry_area.
 */</doc>
<mbr r='cpu_entry_area::gdt' o='0' t='char [4096]'/>
<mbr r='cpu_entry_area::entry_stack_page' o='32768' t='struct entry_stack_page'/>
<mbr r='cpu_entry_area::tss' o='65536' t='struct tss_struct'/>
<mbr r='cpu_entry_area::entry_trampoline' o='163840' t='char [4096]'/>
<mbr r='cpu_entry_area::exception_stacks' o='196608' t='char [20480]'/>
<mbr r='cpu_entry_area::cpu_debug_store' o='360448' t='struct debug_store'/>
<mbr r='cpu_entry_area::cpu_debug_buffers' o='393216' t='struct debug_store_buffers'/>
<use f='linux/arch/x86/kernel/asm-offsets.c' l='102' c='common'/>
<use f='linux/arch/x86/kernel/asm-offsets.c' l='103' c='common'/>
<use f='linux/arch/x86/kernel/asm-offsets.c' l='104' c='common'/>
<size>180224</size>
<use f='linux/arch/x86/mm/cpu_entry_area.c' l='18' c='get_cpu_entry_area'/>
<use f='linux/arch/x86/mm/cpu_entry_area.c' l='20' macro='1' c='get_cpu_entry_area'/>
<use f='linux/arch/x86/mm/cpu_entry_area.c' l='21' c='get_cpu_entry_area'/>
<use f='linux/arch/x86/mm/cpu_entry_area.c' l='23' c='get_cpu_entry_area'/>
<use f='linux/arch/x86/mm/cpu_entry_area.c' l='130' c='setup_cpu_entry_area'/>
<size>180224</size>
