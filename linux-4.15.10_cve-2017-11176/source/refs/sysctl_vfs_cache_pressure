<dec f='linux/include/linux/dcache.h' l='503' type='int'/>
<use f='linux/include/linux/dcache.h' l='507' u='r' c='vfs_pressure_ratio'/>
<use f='linux/include/linux/dcache.h' l='507' u='r' c='vfs_pressure_ratio'/>
<def f='linux/fs/dcache.c' l='84' type='int'/>
<dec f='linux/fs/dcache.c' l='85' type='typeof (sysctl_vfs_cache_pressure)'/>
<use f='linux/fs/dcache.c' l='85'/>
<use f='linux/fs/dcache.c' l='85' u='a'/>
<use f='linux/fs/dcache.c' l='85' u='a'/>
<doc f='linux/fs/dcache.c' l='46'>/*
 * Usage:
 * dcache-&gt;d_inode-&gt;i_lock protects:
 *   - i_dentry, d_u.d_alias, d_inode of aliases
 * dcache_hash_bucket lock protects:
 *   - the dcache hash table
 * s_anon bl list spinlock protects:
 *   - the s_anon list (see __d_drop)
 * dentry-&gt;d_sb-&gt;s_dentry_lru_lock protects:
 *   - the dcache lru lists and counters
 * d_lock protects:
 *   - d_flags
 *   - d_name
 *   - d_lru
 *   - d_count
 *   - d_unhashed()
 *   - d_parent and d_subdirs
 *   - childrens&apos; d_child and d_parent
 *   - d_u.d_alias, d_inode
 *
 * Ordering:
 * dentry-&gt;d_inode-&gt;i_lock
 *   dentry-&gt;d_lock
 *     dentry-&gt;d_sb-&gt;s_dentry_lru_lock
 *     dcache_hash_bucket lock
 *     s_anon lock
 *
 * If there is an ancestor relationship:
 * dentry-&gt;d_parent-&gt;...-&gt;d_parent-&gt;d_lock
 *   ...
 *     dentry-&gt;d_parent-&gt;d_lock
 *       dentry-&gt;d_lock
 *
 * If no ancestor relationship:
 * if (dentry1 &lt; dentry2)
 *   dentry1-&gt;d_lock
 *     dentry2-&gt;d_lock
 */</doc>
<use f='linux/kernel/sysctl.c' l='1497' u='a'/>
<use f='linux/kernel/sysctl.c' l='1498'/>
<use f='linux/kernel/sysctl.c' l='1497' u='a'/>
<use f='linux/kernel/sysctl.c' l='1498'/>
<use f='linux/kernel/sysctl.c' l='1497' u='a'/>
<use f='linux/kernel/sysctl.c' l='1498'/>
<use f='linux/kernel/sysctl.c' l='1497' u='a'/>
<use f='linux/kernel/sysctl.c' l='1498'/>
<use f='linux/net/sunrpc/auth.c' l='526' u='r' c='rpcauth_cache_shrink_count'/>
