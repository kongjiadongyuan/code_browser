<dec f='linux/include/linux/sunrpc/svcsock.h' l='55' type='void svc_close_net(struct svc_serv * , struct net * )'/>
<doc f='linux/include/linux/sunrpc/svcsock.h' l='52'>/*
 * Function prototypes.
 */</doc>
<use f='linux/net/sunrpc/svc.c' l='514' u='c' c='svc_shutdown_net'/>
<def f='linux/net/sunrpc/svc_xprt.c' l='1115' ll='1125' type='void svc_close_net(struct svc_serv * serv, struct net * net)'/>
<doc f='linux/net/sunrpc/svc_xprt.c' l='1103'>/*
 * Server threads may still be running (especially in the case where the
 * service is still running in other network namespaces).
 *
 * So we shut down sockets the same way we would on a running server, by
 * setting XPT_CLOSE, enqueuing, and letting a thread pick it up to do
 * the close.  In the case there are no such other threads,
 * threads running, svc_clean_up_xprts() does a simple version of a
 * server&apos;s main event loop, and in the case where there are other
 * threads, we may need to wait a little while and then check again to
 * see if they&apos;re done.
 */</doc>
