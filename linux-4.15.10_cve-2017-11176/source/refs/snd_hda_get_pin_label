<dec f='linux/sound/pci/hda/hda_auto_parser.h' l='48' type='int snd_hda_get_pin_label(struct hda_codec * codec, hda_nid_t nid, const struct auto_pin_cfg * cfg, char * label, int maxlen, int * indexp)'/>
<def f='linux/sound/pci/hda/hda_auto_parser.c' l='710' ll='767' type='int snd_hda_get_pin_label(struct hda_codec * codec, hda_nid_t nid, const struct auto_pin_cfg * cfg, char * label, int maxlen, int * indexp)'/>
<dec f='linux/sound/pci/hda/hda_auto_parser.c' l='768' type='int snd_hda_get_pin_label(struct hda_codec * , hda_nid_t , const struct auto_pin_cfg * , char * , int , int * )'/>
<use f='linux/sound/pci/hda/hda_auto_parser.c' l='768' c='snd_hda_get_pin_label'/>
<use f='linux/sound/pci/hda/hda_auto_parser.c' l='768' u='a'/>
<use f='linux/sound/pci/hda/hda_auto_parser.c' l='768' u='a'/>
<doc f='linux/sound/pci/hda/hda_auto_parser.c' l='691'>/**
 * snd_hda_get_pin_label - Get a label for the given I/O pin
 * @codec: the HDA codec
 * @nid: pin NID
 * @cfg: the parsed pin configuration
 * @label: the string buffer to store
 * @maxlen: the max length of string buffer (including termination)
 * @indexp: the pointer to return the index number (for multiple ctls)
 *
 * Get a label for the given pin.  This function works for both input and
 * output pins.  When @cfg is given as non-NULL, the function tries to get
 * an optimized label using hda_get_autocfg_input_label().
 *
 * This function tries to give a unique label string for the pin as much as
 * possible.  For example, when the multiple line-outs are present, it adds
 * the channel suffix like &quot;Front&quot;, &quot;Surround&quot;, etc (only when @cfg is given).
 * If no unique name with a suffix is available and @indexp is non-NULL, the
 * index number is stored in the pointer.
 */</doc>
<use f='linux/sound/pci/hda/hda_jack.c' l='436' u='c' c='add_jack_kctl'/>
