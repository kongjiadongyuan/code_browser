<dec f='linux/drivers/gpu/drm/i915/intel_frontbuffer.h' l='34' type='void intel_frontbuffer_flip(struct drm_i915_private * dev_priv, unsigned int frontbuffer_bits)'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='5006' u='c' c='intel_post_plane_update'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='5123' u='c' c='intel_crtc_disable_planes'/>
<def f='linux/drivers/gpu/drm/i915/intel_frontbuffer.c' l='193' ll='202' type='void intel_frontbuffer_flip(struct drm_i915_private * dev_priv, unsigned int frontbuffer_bits)'/>
<doc f='linux/drivers/gpu/drm/i915/intel_frontbuffer.c' l='182'>/**
 * intel_frontbuffer_flip - synchronous frontbuffer flip
 * @dev_priv: i915 device
 * @frontbuffer_bits: frontbuffer plane tracking bits
 *
 * This function gets called after scheduling a flip on @obj. This is for
 * synchronous plane updates which will happen on the next vblank and which will
 * not get delayed by pending gpu rendering.
 *
 * Can be called without any locks held.
 */</doc>
