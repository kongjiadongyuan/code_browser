<dec f='linux/include/drm/drm_agpsupport.h' l='42' type='int drm_agp_acquire(struct drm_device * dev)'/>
<def f='linux/drivers/gpu/drm/drm_agpsupport.c' l='97' ll='108' type='int drm_agp_acquire(struct drm_device * dev)'/>
<dec f='linux/drivers/gpu/drm/drm_agpsupport.c' l='109' type='int drm_agp_acquire(struct drm_device * )'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='109' c='drm_agp_acquire'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='109' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='109' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='126' u='c' c='drm_agp_acquire_ioctl'/>
<doc f='linux/drivers/gpu/drm/drm_agpsupport.c' l='88'>/**
 * Acquire the AGP device.
 *
 * \param dev DRM device that is to acquire AGP.
 * \return zero on success or a negative number on failure.
 *
 * Verifies the AGP device hasn&apos;t been acquired before and calls
 * \c agp_backend_acquire.
 */</doc>
