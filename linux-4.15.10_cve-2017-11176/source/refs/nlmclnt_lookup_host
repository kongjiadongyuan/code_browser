<dec f='linux/include/linux/lockd/lockd.h' l='225' type='struct nlm_host * nlmclnt_lookup_host(const struct sockaddr * sap, const size_t salen, const unsigned short protocol, const u32 version, const char * hostname, int noresvport, struct net * net)'/>
<doc f='linux/include/linux/lockd/lockd.h' l='222'>/*
 * Host cache
 */</doc>
<use f='linux/fs/lockd/clntlock.c' l='63' u='c' c='nlmclnt_init'/>
<def f='linux/fs/lockd/host.c' l='211' ll='277' type='struct nlm_host * nlmclnt_lookup_host(const struct sockaddr * sap, const size_t salen, const unsigned short protocol, const u32 version, const char * hostname, int noresvport, struct net * net)'/>
<doc f='linux/fs/lockd/host.c' l='197'>/**
 * nlmclnt_lookup_host - Find an NLM host handle matching a remote server
 * @sap: network address of server
 * @salen: length of server address
 * @protocol: transport protocol to use
 * @version: NLM protocol version
 * @hostname: &apos;\0&apos;-terminated hostname of server
 * @noresvport: 1 if non-privileged port should be used
 *
 * Returns an nlm_host structure that matches the passed-in
 * [server address, transport protocol, NLM version, server hostname].
 * If one doesn&apos;t already exist in the host cache, a new handle is
 * created and returned.
 */</doc>
