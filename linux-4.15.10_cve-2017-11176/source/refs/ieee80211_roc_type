<def f='linux/include/net/mac80211.h' l='2926' ll='2929'/>
<use f='linux/include/net/mac80211.h' l='3633'/>
<doc f='linux/include/net/mac80211.h' l='2913'>/**
 * enum ieee80211_roc_type - remain on channel type
 *
 * With the support for multi channel contexts and multi channel operations,
 * remain on channel operations might be limited/deferred/aborted by other
 * flows/operations which have higher priority (and vise versa).
 * Specifying the ROC type can be used by devices to prioritize the ROC
 * operations compared to other operations/flows.
 *
 * @IEEE80211_ROC_TYPE_NORMAL: There are no special requirements for this ROC.
 * @IEEE80211_ROC_TYPE_MGMT_TX: The remain on channel request is required
 *	for sending managment frames offchannel.
 */</doc>
<use f='linux/net/mac80211/ieee80211_i.h' l='348'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='trace_drv_remain_on_channel'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='trace_drv_remain_on_channel'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='trace_drv_remain_on_channel_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='trace_drv_remain_on_channel_rcuidle'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='register_trace_drv_remain_on_channel'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='register_trace_prio_drv_remain_on_channel'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='unregister_trace_drv_remain_on_channel'/>
<use f='linux/net/mac80211/trace.h' l='1187' c='check_trace_callback_type_drv_remain_on_channel'/>
<use f='linux/net/mac80211/driver-ops.h' l='674' c='drv_remain_on_channel'/>
<use f='linux/net/mac80211/offchannel.c' l='311' c='_ieee80211_start_next_roc'/>
<use f='linux/net/mac80211/offchannel.c' l='550' c='ieee80211_start_roc_work'/>
