<dec f='linux/drivers/md/md.h' l='375' type='struct mutex'/>
<offset>3648</offset>
<doc f='linux/drivers/md/md.h' l='366'>/* &apos;open_mutex&apos; avoids races between &apos;md_open&apos; and &apos;do_md_stop&apos;, so
	 * that we are never stopping an array while it is open.
	 * &apos;reconfig_mutex&apos; protects all other reconfiguration.
	 * These locks are separate due to conflicting interactions
	 * with bdev-&gt;bd_mutex.
	 * Lock ordering is:
	 *  reconfig_mutex -&gt; bd_mutex : e.g. do_md_run -&gt; revalidate_disk
	 *  bd_mutex -&gt; open_mutex:  e.g. __blkdev_get -&gt; md_open
	 */</doc>
<use f='linux/drivers/md/md.c' l='548' u='a' c='mddev_init'/>
<use f='linux/drivers/md/md.c' l='5343' u='a' c='md_alloc'/>
<use f='linux/drivers/md/md.c' l='5359' u='a' c='md_alloc'/>
<use f='linux/drivers/md/md.c' l='5892' u='a' c='md_set_readonly'/>
<use f='linux/drivers/md/md.c' l='5920' u='a' c='md_set_readonly'/>
<use f='linux/drivers/md/md.c' l='5953' u='a' c='do_md_stop'/>
<use f='linux/drivers/md/md.c' l='5959' u='a' c='do_md_stop'/>
<use f='linux/drivers/md/md.c' l='5983' u='a' c='do_md_stop'/>
<use f='linux/drivers/md/md.c' l='5990' u='a' c='do_md_stop'/>
<use f='linux/drivers/md/md.c' l='7145' u='a' c='md_ioctl'/>
<use f='linux/drivers/md/md.c' l='7147' u='a' c='md_ioctl'/>
<use f='linux/drivers/md/md.c' l='7154' u='a' c='md_ioctl'/>
<use f='linux/drivers/md/md.c' l='7394' u='a' c='md_open'/>
<use f='linux/drivers/md/md.c' l='7398' u='a' c='md_open'/>
<use f='linux/drivers/md/md.c' l='7405' u='a' c='md_open'/>
