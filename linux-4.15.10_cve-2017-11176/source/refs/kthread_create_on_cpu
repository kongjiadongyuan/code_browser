<dec f='linux/include/linux/kthread.h' l='30' type='struct task_struct * kthread_create_on_cpu(int (*)(void *) threadfn, void * data, unsigned int cpu, const char * namefmt)'/>
<def f='linux/kernel/kthread.c' l='424' ll='439' type='struct task_struct * kthread_create_on_cpu(int (*)(void *) threadfn, void * data, unsigned int cpu, const char * namefmt)'/>
<doc f='linux/kernel/kthread.c' l='413'>/**
 * kthread_create_on_cpu - Create a cpu bound kthread
 * @threadfn: the function to run until signal_pending(current).
 * @data: data ptr for @threadfn.
 * @cpu: The cpu on which the thread should be bound,
 * @namefmt: printf-style name for the thread. Format is restricted
 *	     to &quot;name.*%u&quot;. Code fills in cpu number.
 *
 * Description: This helper function creates and names a kernel thread
 * The thread will be woken and put into park mode.
 */</doc>
<use f='linux/kernel/smpboot.c' l='184' u='c' c='__smpboot_create_thread'/>
