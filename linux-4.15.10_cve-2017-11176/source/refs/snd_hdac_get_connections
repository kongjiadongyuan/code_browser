<dec f='linux/include/sound/hdaudio.h' l='129' type='int snd_hdac_get_connections(struct hdac_device * codec, hda_nid_t nid, hda_nid_t * conn_list, int max_conns)'/>
<def f='linux/sound/hda/hdac_device.c' l='447' ll='536' type='int snd_hdac_get_connections(struct hdac_device * codec, hda_nid_t nid, hda_nid_t * conn_list, int max_conns)'/>
<dec f='linux/sound/hda/hdac_device.c' l='537' type='int snd_hdac_get_connections(struct hdac_device * , hda_nid_t , hda_nid_t * , int )'/>
<use f='linux/sound/hda/hdac_device.c' l='537' c='snd_hdac_get_connections'/>
<use f='linux/sound/hda/hdac_device.c' l='537' u='a'/>
<use f='linux/sound/hda/hdac_device.c' l='537' u='a'/>
<doc f='linux/sound/hda/hdac_device.c' l='434'>/**
 * snd_hdac_get_connections - get a widget connection list
 * @codec: the codec object
 * @nid: NID
 * @conn_list: the array to store the results, can be NULL
 * @max_conns: the max size of the given array
 *
 * Returns the number of connected widgets, zero for no connection, or a
 * negative error code.  When the number of elements don&apos;t fit with the
 * given array size, it returns -ENOSPC.
 *
 * When @conn_list is NULL, it just checks the number of connections.
 */</doc>
<use f='linux/sound/hda/hdac_sysfs.c' l='260' u='c' c='connections_show'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='158' macro='1' u='c' c='read_and_add_raw_conns'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='160' macro='1' u='c' c='read_and_add_raw_conns'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='164' macro='1' u='c' c='read_and_add_raw_conns'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='140' macro='1' u='c' c='is_stereo_amps'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='826' macro='1' u='c' c='print_codec_info'/>
<use f='linux/sound/pci/hda/hda_proc.c' l='832' macro='1' u='c' c='print_codec_info'/>
