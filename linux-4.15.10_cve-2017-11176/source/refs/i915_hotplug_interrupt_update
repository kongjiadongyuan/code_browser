<dec f='linux/drivers/gpu/drm/i915/i915_drv.h' l='3394' type='void i915_hotplug_interrupt_update(struct drm_i915_private * dev_priv, uint32_t mask, uint32_t bits)'/>
<def f='linux/drivers/gpu/drm/i915/i915_irq.c' l='237' ll='244' type='void i915_hotplug_interrupt_update(struct drm_i915_private * dev_priv, uint32_t mask, uint32_t bits)'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='3762' u='c' c='i915_irq_reset'/>
<use f='linux/drivers/gpu/drm/i915/i915_irq.c' l='3868' u='c' c='i965_irq_reset'/>
<doc f='linux/drivers/gpu/drm/i915/i915_irq.c' l='225'>/**
 * i915_hotplug_interrupt_update - update hotplug interrupt enable
 * @dev_priv: driver private
 * @mask: bits to update
 * @bits: bits to enable
 * NOTE: the HPD enable bits are modified both inside and outside
 * of an interrupt context. To avoid that read-modify-write cycles
 * interfer, these bits are protected by a spinlock. Since this
 * function is usually not called from a context where the lock is
 * held already, this function acquires the lock itself. A non-locking
 * version is also available.
 */</doc>
<use f='linux/drivers/gpu/drm/i915/intel_crt.c' l='518' u='c' c='intel_crt_detect_hotplug'/>
<use f='linux/drivers/gpu/drm/i915/intel_crt.c' l='535' u='c' c='intel_crt_detect_hotplug'/>
