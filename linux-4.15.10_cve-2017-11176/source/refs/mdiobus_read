<dec f='linux/include/linux/mdio.h' l='260' type='int mdiobus_read(struct mii_bus * bus, int addr, u32 regnum)'/>
<use f='linux/include/linux/phy.h' l='715' u='c' c='phy_read'/>
<def f='linux/drivers/net/phy/mdio_bus.c' l='535' ll='548' type='int mdiobus_read(struct mii_bus * bus, int addr, u32 regnum)'/>
<dec f='linux/drivers/net/phy/mdio_bus.c' l='549' type='int mdiobus_read(struct mii_bus * , int , u32 )'/>
<use f='linux/drivers/net/phy/mdio_bus.c' l='549' c='mdiobus_read'/>
<use f='linux/drivers/net/phy/mdio_bus.c' l='549' u='a'/>
<use f='linux/drivers/net/phy/mdio_bus.c' l='549' u='a'/>
<doc f='linux/drivers/net/phy/mdio_bus.c' l='525'>/**
 * mdiobus_read - Convenience function for reading a given MII mgmt register
 * @bus: the mii_bus struct
 * @addr: the phy address
 * @regnum: register number to read
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 */</doc>
<use f='linux/drivers/net/phy/phy-core.c' l='226' u='c' c='phy_read_mmd'/>
<use f='linux/drivers/net/phy/phy.c' l='407' u='c' c='phy_mii_ioctl'/>
<use f='linux/drivers/net/phy/phy_device.c' l='430' u='c' c='get_phy_c45_devs_in_pkg'/>
<use f='linux/drivers/net/phy/phy_device.c' l='436' u='c' c='get_phy_c45_devs_in_pkg'/>
<use f='linux/drivers/net/phy/phy_device.c' l='497' u='c' c='get_phy_c45_ids'/>
<use f='linux/drivers/net/phy/phy_device.c' l='503' u='c' c='get_phy_c45_ids'/>
<use f='linux/drivers/net/phy/phy_device.c' l='537' u='c' c='get_phy_id'/>
<use f='linux/drivers/net/phy/phy_device.c' l='544' u='c' c='get_phy_id'/>
