<dec f='linux/include/drm/drm_framebuffer.h' l='212' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * fb)'/>
<def f='linux/drivers/gpu/drm/drm_framebuffer.c' l='723' ll='734' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * fb)'/>
<dec f='linux/drivers/gpu/drm/drm_framebuffer.c' l='735' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * )'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='735' c='drm_framebuffer_unregister_private'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='735' u='a'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='735' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_framebuffer.c' l='709'>/**
 * drm_framebuffer_unregister_private - unregister a private fb from the lookup idr
 * @fb: fb to unregister
 *
 * Drivers need to call this when cleaning up driver-private framebuffers, e.g.
 * those used for fbdev. Note that the caller must hold a reference of it&apos;s own,
 * i.e. the object may not be destroyed through this call (since it&apos;ll lead to a
 * locking inversion).
 *
 * NOTE: This function is deprecated. For driver-private framebuffers it is not
 * recommended to embed a framebuffer struct info fbdev struct, instead, a
 * framebuffer pointer is preferred and drm_framebuffer_put() should be called
 * when the framebuffer is to be cleaned up.
 */</doc>
