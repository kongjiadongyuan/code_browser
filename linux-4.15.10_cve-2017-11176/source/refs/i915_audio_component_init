<dec f='linux/drivers/gpu/drm/i915/intel_drv.h' l='1309' type='void i915_audio_component_init(struct drm_i915_private * dev_priv)'/>
<def f='linux/drivers/gpu/drm/i915/intel_audio.c' l='929' ll='944' type='void i915_audio_component_init(struct drm_i915_private * dev_priv)'/>
<use f='linux/drivers/gpu/drm/i915/intel_audio.c' l='971' u='c' c='intel_audio_init'/>
<doc f='linux/drivers/gpu/drm/i915/intel_audio.c' l='913'>/**
 * i915_audio_component_init - initialize and register the audio component
 * @dev_priv: i915 device instance
 *
 * This will register with the component framework a child component which
 * will bind dynamically to the snd_hda_intel driver&apos;s corresponding master
 * component when the latter is registered. During binding the child
 * initializes an instance of struct i915_audio_component which it receives
 * from the master. The master can then start to use the interface defined by
 * this struct. Each side can break the binding at any point by deregistering
 * its own component after which each side&apos;s component unbind callback is
 * called.
 *
 * We ignore any error during registration and continue with reduced
 * functionality (i.e. without HDMI audio).
 */</doc>
