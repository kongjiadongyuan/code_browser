<dec f='linux/include/drm/drm_agpsupport.h' l='54' type='int drm_agp_alloc(struct drm_device * dev, struct drm_agp_buffer * request)'/>
<def f='linux/drivers/gpu/drm/drm_agpsupport.c' l='195' ll='226' type='int drm_agp_alloc(struct drm_device * dev, struct drm_agp_buffer * request)'/>
<dec f='linux/drivers/gpu/drm/drm_agpsupport.c' l='227' type='int drm_agp_alloc(struct drm_device * , struct drm_agp_buffer * )'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='227' c='drm_agp_alloc'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='227' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='227' u='a'/>
<use f='linux/drivers/gpu/drm/drm_agpsupport.c' l='235' u='c' c='drm_agp_alloc_ioctl'/>
<doc f='linux/drivers/gpu/drm/drm_agpsupport.c' l='183'>/**
 * Allocate AGP memory.
 *
 * \param inode device inode.
 * \param file_priv file private pointer.
 * \param cmd command.
 * \param arg pointer to a drm_agp_buffer structure.
 * \return zero on success or a negative number on failure.
 *
 * Verifies the AGP device is present and has been acquired, allocates the
 * memory via agp_allocate_memory() and creates a drm_agp_mem entry for it.
 */</doc>
