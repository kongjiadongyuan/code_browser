<dec f='linux/sound/pci/hda/hda_local.h' l='184' type='int snd_hda_create_dig_out_ctls(struct hda_codec * codec, hda_nid_t associated_nid, hda_nid_t cvt_nid, int type)'/>
<doc f='linux/sound/pci/hda/hda_local.h' l='181'>/*
 * SPDIF I/O
 */</doc>
<def f='linux/sound/pci/hda/hda_codec.c' l='2396' ll='2451' type='int snd_hda_create_dig_out_ctls(struct hda_codec * codec, hda_nid_t associated_nid, hda_nid_t cvt_nid, int type)'/>
<dec f='linux/sound/pci/hda/hda_codec.c' l='2452' type='int snd_hda_create_dig_out_ctls(struct hda_codec * , hda_nid_t , hda_nid_t , int )'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2452' c='snd_hda_create_dig_out_ctls'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2452' u='a'/>
<use f='linux/sound/pci/hda/hda_codec.c' l='2452' u='a'/>
<doc f='linux/sound/pci/hda/hda_codec.c' l='2385'>/**
 * snd_hda_create_dig_out_ctls - create Output SPDIF-related controls
 * @codec: the HDA codec
 * @associated_nid: NID that new ctls associated with
 * @cvt_nid: converter NID
 * @type: HDA_PCM_TYPE_*
 * Creates controls related with the digital output.
 * Called from each patch supporting the digital out.
 *
 * Returns 0 if successful, or a negative error code.
 */</doc>
