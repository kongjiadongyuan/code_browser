<dec f='linux/include/linux/ptp_clock_kernel.h' l='178' type='struct ptp_clock * ptp_clock_register(struct ptp_clock_info * info, struct device * parent)'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='17921' u='c' c='tg3_init_one'/>
<doc f='linux/include/linux/ptp_clock_kernel.h' l='166'>/**
 * ptp_clock_register() - register a PTP hardware clock driver
 *
 * @info:   Structure describing the new clock.
 * @parent: Pointer to the parent device of the new clock.
 *
 * Returns a valid pointer on success or PTR_ERR on failure.  If PHC
 * support is missing at the configuration level, this function
 * returns NULL, and drivers are expected to gracefully handle that
 * case separately.
 */</doc>
<use f='linux/drivers/net/ethernet/intel/e1000e/ptp.c' l='332' u='c' c='e1000e_ptp_init'/>
<def f='linux/drivers/ptp/ptp_clock.c' l='203' ll='300' type='struct ptp_clock * ptp_clock_register(struct ptp_clock_info * info, struct device * parent)'/>
<dec f='linux/drivers/ptp/ptp_clock.c' l='301' type='struct ptp_clock * ptp_clock_register(struct ptp_clock_info * , struct device * )'/>
<use f='linux/drivers/ptp/ptp_clock.c' l='301' c='ptp_clock_register'/>
<use f='linux/drivers/ptp/ptp_clock.c' l='301' u='a'/>
<use f='linux/drivers/ptp/ptp_clock.c' l='301' u='a'/>
<doc f='linux/drivers/ptp/ptp_clock.c' l='201'>/* public interface */</doc>
