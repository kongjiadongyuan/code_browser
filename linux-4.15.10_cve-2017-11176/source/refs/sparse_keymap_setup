<dec f='linux/include/linux/input/sparse-keymap.h' l='51' type='int sparse_keymap_setup(struct input_dev * dev, const struct key_entry * keymap, int (*)(struct input_dev *, struct key_entry *) setup)'/>
<def f='linux/drivers/input/sparse-keymap.c' l='170' ll='223' type='int sparse_keymap_setup(struct input_dev * dev, const struct key_entry * keymap, int (*)(struct input_dev *, struct key_entry *) setup)'/>
<dec f='linux/drivers/input/sparse-keymap.c' l='224' type='int sparse_keymap_setup(struct input_dev * , const struct key_entry * , int (*)(struct input_dev *, struct key_entry *) )'/>
<use f='linux/drivers/input/sparse-keymap.c' l='224' c='sparse_keymap_setup'/>
<use f='linux/drivers/input/sparse-keymap.c' l='224' u='a'/>
<use f='linux/drivers/input/sparse-keymap.c' l='224' u='a'/>
<doc f='linux/drivers/input/sparse-keymap.c' l='157'>/**
 * sparse_keymap_setup - set up sparse keymap for an input device
 * @dev: Input device
 * @keymap: Keymap in form of array of &amp;key_entry structures ending
 *	with %KE_END type entry
 * @setup: Function that can be used to adjust keymap entries
 *	depending on device&apos;s needs, may be %NULL
 *
 * The function calculates size and allocates copy of the original
 * keymap after which sets up input device event bits appropriately.
 * The allocated copy of the keymap is automatically freed when it
 * is no longer needed.
 */</doc>
<use f='linux/drivers/platform/x86/eeepc-laptop.c' l='1201' u='c' c='eeepc_input_init'/>
