<def f='linux/include/linux/sunrpc/cache.h' l='128' ll='133'/>
<use f='linux/include/linux/sunrpc/cache.h' l='129'/>
<use f='linux/include/linux/sunrpc/cache.h' l='208' c='cache_check'/>
<use f='linux/include/linux/sunrpc/svc.h' l='287'/>
<use f='linux/include/linux/lockd/lockd.h' l='184'/>
<size>16</size>
<doc f='linux/include/linux/sunrpc/cache.h' l='124'>/* this must be embedded in any request structure that
 * identifies an object that will want a callback on
 * a cache fill
 */</doc>
<mbr r='cache_req::defer' o='0' t='struct cache_deferred_req *(*)(struct cache_req *)'/>
<mbr r='cache_req::thread_wait' o='64' t='int'/>
<use f='linux/net/sunrpc/cache.c' l='41' c='cache_defer_req'/>
<use f='linux/net/sunrpc/cache.c' l='254' c='cache_check'/>
<use f='linux/net/sunrpc/cache.c' l='596' c='cache_wait_req'/>
<use f='linux/net/sunrpc/cache.c' l='656' c='cache_defer_req'/>
<size>16</size>
<use f='linux/net/sunrpc/svc_xprt.c' l='30' c='svc_defer'/>
<use f='linux/net/sunrpc/svc_xprt.c' l='1164' c='svc_defer'/>
<size>16</size>
