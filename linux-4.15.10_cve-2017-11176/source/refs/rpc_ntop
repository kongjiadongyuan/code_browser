<dec f='linux/include/linux/sunrpc/addr.h' l='16' type='size_t rpc_ntop(const struct sockaddr * , char * , const size_t )'/>
<use f='linux/fs/lockd/mon.c' l='288' u='c' c='nsm_create_handle'/>
<use f='linux/fs/nfs/nfs3client.c' l='99' u='c' c='nfs3_set_ds_client'/>
<use f='linux/fs/nfs/nfs4client.c' l='388' u='c' c='nfs4_init_client'/>
<use f='linux/fs/nfs/nfs4client.c' l='916' u='c' c='nfs4_set_ds_client'/>
<use f='linux/fs/nfs/nfs4client.c' l='1220' u='c' c='nfs4_update_server'/>
<def f='linux/net/sunrpc/addr.c' l='128' ll='138' type='size_t rpc_ntop(const struct sockaddr * sap, char * buf, const size_t buflen)'/>
<dec f='linux/net/sunrpc/addr.c' l='139' type='size_t rpc_ntop(const struct sockaddr * , char * , const size_t )'/>
<use f='linux/net/sunrpc/addr.c' l='139' c='rpc_ntop'/>
<use f='linux/net/sunrpc/addr.c' l='139' u='a'/>
<use f='linux/net/sunrpc/addr.c' l='139' u='a'/>
<doc f='linux/net/sunrpc/addr.c' l='119'>/**
 * rpc_ntop - construct a presentation address in @buf
 * @sap: socket address
 * @buf: construction area
 * @buflen: size of @buf, in bytes
 *
 * Plants a %NUL-terminated string in @buf and returns the length
 * of the string, excluding the %NUL.  Otherwise zero is returned.
 */</doc>
<use f='linux/net/sunrpc/xprtsock.c' l='262' u='c' c='xs_format_common_peer_addresses'/>
<use f='linux/net/sunrpc/xprtsock.c' l='269' u='c' c='xs_format_common_peer_addresses'/>
