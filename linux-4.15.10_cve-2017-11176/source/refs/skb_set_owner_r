<def f='linux/include/net/sock.h' l='2032' ll='2039' type='void skb_set_owner_r(struct sk_buff * skb, struct sock * sk)'/>
<doc f='linux/include/net/sock.h' l='2024'>/*
 *	Queue a received datagram if it will fit. Stream and sequenced
 *	protocols can&apos;t normally use this as they need to fit buffers in
 *	and play with them.
 *
 *	Inlined as it&apos;s very short and called for pretty much every
 *	packet ever received.
 */</doc>
<use f='linux/net/core/sock.c' l='457' u='c' c='__sock_queue_rcv_skb'/>
<use f='linux/net/ipv4/tcp_fastopen.c' l='197' u='c' c='tcp_fastopen_add_skb'/>
<use f='linux/net/ipv4/tcp_input.c' l='4497' u='c' c='tcp_data_queue_ofo'/>
<use f='linux/net/ipv4/tcp_input.c' l='4514' u='c' c='tcp_queue_rcv'/>
<use f='linux/net/ipv4/tcp_input.c' l='4784' u='c' c='tcp_collapse'/>
<use f='linux/net/ipv6/tcp_ipv6.c' l='1232' u='c' c='tcp_v6_syn_recv_sock'/>
<use f='linux/net/ipv6/tcp_ipv6.c' l='1371' u='c' c='tcp_v6_do_rcv'/>
<use f='linux/net/packet/af_packet.c' l='2132' u='c' c='packet_rcv'/>
<use f='linux/net/packet/af_packet.c' l='2251' u='c' c='tpacket_rcv'/>
