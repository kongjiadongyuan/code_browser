<dec f='linux/include/linux/buffer_head.h' l='159' type='struct buffer_head * alloc_page_buffers(struct page * page, unsigned long size, bool retry)'/>
<use f='linux/drivers/md/md-bitmap.c' l='371' u='c' c='read_page'/>
<def f='linux/fs/buffer.c' l='842' ll='882' type='struct buffer_head * alloc_page_buffers(struct page * page, unsigned long size, bool retry)'/>
<dec f='linux/fs/buffer.c' l='883' type='struct buffer_head * alloc_page_buffers(struct page * , unsigned long , bool )'/>
<use f='linux/fs/buffer.c' l='883' c='alloc_page_buffers'/>
<use f='linux/fs/buffer.c' l='883' u='a'/>
<use f='linux/fs/buffer.c' l='883' u='a'/>
<use f='linux/fs/buffer.c' l='988' u='c' c='grow_dev_page'/>
<use f='linux/fs/buffer.c' l='1538' u='c' c='create_empty_buffers'/>
<use f='linux/fs/buffer.c' l='2602' u='c' c='nobh_write_begin'/>
<doc f='linux/fs/buffer.c' l='833'>/*
 * Create the appropriate buffers when given a page for data area and
 * the size of each buffer.. Use the bh-&gt;b_this_page linked list to
 * follow the buffers created.  Return NULL if unable to create more
 * buffers.
 *
 * The retry flag is used to differentiate async IO (paging, swapping)
 * which may not fail from ordinary buffer allocations.
 */</doc>
