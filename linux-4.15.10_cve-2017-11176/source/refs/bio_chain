<dec f='linux/include/linux/bio.h' l='445' type='void bio_chain(struct bio * , struct bio * )'/>
<def f='linux/block/bio.c' l='337' ll='344' type='void bio_chain(struct bio * bio, struct bio * parent)'/>
<dec f='linux/block/bio.c' l='345' type='void bio_chain(struct bio * , struct bio * )'/>
<use f='linux/block/bio.c' l='345' c='bio_chain'/>
<use f='linux/block/bio.c' l='345' u='a'/>
<use f='linux/block/bio.c' l='345' u='a'/>
<doc f='linux/block/bio.c' l='326'>/**
 * bio_chain - chain bio completions
 * @bio: the target bio
 * @parent: the @bio&apos;s parent bio
 *
 * The caller won&apos;t have a bi_end_io called when @bio completes - instead,
 * @parent&apos;s bi_end_io won&apos;t be called until both @parent and @bio have
 * completed; the chained bio will also be freed when it completes.
 *
 * The caller must not set bi_private or bi_end_io in @bio.
 */</doc>
<use f='linux/block/blk-lib.c' l='19' u='c' c='next_bio'/>
<use f='linux/block/blk-merge.c' l='214' u='c' c='blk_queue_split'/>
<use f='linux/block/bounce.c' l='216' u='c' c='__blk_queue_bounce'/>
