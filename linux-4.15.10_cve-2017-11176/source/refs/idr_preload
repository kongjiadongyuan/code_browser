<dec f='linux/include/linux/idr.h' l='83' type='void idr_preload(gfp_t gfp_mask)'/>
<doc f='linux/include/linux/idr.h' l='66'>/**
 * DOC: idr sync
 * idr synchronization (stolen from radix-tree.h)
 *
 * idr_find() is able to be called locklessly, using RCU. The caller must
 * ensure calls to this function are made within rcu_read_lock() regions.
 * Other readers (lock-free or otherwise) and modifications may be running
 * concurrently.
 *
 * It is still required that the caller manage the synchronization and
 * lifetimes of the items. So if RCU lock-free lookups are used, typically
 * this would mean that the items have their own locks, or are amenable to
 * lock-free access; and that the items are freed by RCU (or only freed after
 * having been deleted from the idr tree *and* a synchronize_rcu() grace
 * period).
 */</doc>
<use f='linux/block/genhd.c' l='471' u='c' c='blk_alloc_devt'/>
<use f='linux/drivers/gpu/drm/drm_drv.c' l='166' u='c' c='drm_minor_alloc'/>
<use f='linux/drivers/gpu/drm/drm_gem.c' l='394' u='c' c='drm_gem_handle_create_tail'/>
<use f='linux/drivers/gpu/drm/drm_syncobj.c' l='312' u='c' c='drm_syncobj_get_handle'/>
<use f='linux/drivers/gpu/drm/drm_syncobj.c' l='431' u='c' c='drm_syncobj_fd_to_handle'/>
<use f='linux/drivers/md/dm.c' l='1588' u='c' c='specific_minor'/>
<use f='linux/drivers/md/dm.c' l='1604' u='c' c='next_free_minor'/>
<use f='linux/drivers/scsi/sg.c' l='1426' u='c' c='sg_alloc'/>
<use f='linux/fs/kernfs/dir.c' l='637' u='c' c='__kernfs_new_node'/>
<use f='linux/fs/nfs/nfs4client.c' l='34' u='c' c='nfs_get_cb_ident_idr'/>
<use f='linux/fs/notify/inotify/inotify_user.c' l='349' u='c' c='inotify_add_to_idr'/>
<use f='linux/ipc/util.c' l='257' u='c' c='ipc_addid'/>
<use f='linux/kernel/cgroup/cgroup.c' l='299' u='c' c='cgroup_idr_alloc'/>
<use f='linux/kernel/pid.c' l='166' u='c' c='alloc_pid'/>
<def f='linux/lib/radix-tree.c' l='2101' ll='2105' type='void idr_preload(gfp_t gfp_mask)'/>
<dec f='linux/lib/radix-tree.c' l='2106' type='void idr_preload(gfp_t )'/>
<use f='linux/lib/radix-tree.c' l='2106' c='idr_preload'/>
<use f='linux/lib/radix-tree.c' l='2106' u='a'/>
<use f='linux/lib/radix-tree.c' l='2106' u='a'/>
<doc f='linux/lib/radix-tree.c' l='2094'>/**
 * idr_preload - preload for idr_alloc()
 * @gfp_mask: allocation mask to use for preloading
 *
 * Preallocate memory to use for the next call to idr_alloc().  This function
 * returns with preemption disabled.  It will be enabled by idr_preload_end().
 */</doc>
<use f='linux/net/sched/act_api.c' l='302' u='c' c='tcf_idr_create'/>
<use f='linux/net/sched/act_api.c' l='315' u='c' c='tcf_idr_create'/>
