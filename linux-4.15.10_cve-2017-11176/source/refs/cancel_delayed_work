<dec f='linux/include/linux/workqueue.h' l='463' type='bool cancel_delayed_work(struct delayed_work * dwork)'/>
<use f='linux/block/blk-core.c' l='310' u='c' c='blk_stop_queue'/>
<use f='linux/block/blk-mq.c' l='1346' u='c' c='blk_mq_stop_hw_queue'/>
<use f='linux/drivers/acpi/acpi_video.c' l='256' u='c' c='acpi_video_set_brightness'/>
<use f='linux/drivers/gpu/drm/i915/intel_dp.c' l='2061' u='c' c='edp_panel_vdd_on'/>
<use f='linux/drivers/gpu/drm/i915/intel_dp.c' l='5663' u='c' c='intel_edp_drrs_invalidate'/>
<use f='linux/drivers/gpu/drm/i915/intel_dp.c' l='5706' u='c' c='intel_edp_drrs_flush'/>
<use f='linux/drivers/net/phy/phy.c' l='577' u='c' c='phy_trigger_machine'/>
<use f='linux/drivers/thermal/thermal_core.c' l='302' u='c' c='thermal_zone_device_set_polling'/>
<use f='linux/fs/nfs/namespace.c' l='209' u='c' c='nfs_release_automount_timer'/>
<def f='linux/kernel/workqueue.c' l='3045' ll='3048' type='bool cancel_delayed_work(struct delayed_work * dwork)'/>
<dec f='linux/kernel/workqueue.c' l='3049' type='bool cancel_delayed_work(struct delayed_work * )'/>
<use f='linux/kernel/workqueue.c' l='3049' c='cancel_delayed_work'/>
<use f='linux/kernel/workqueue.c' l='3049' u='a'/>
<use f='linux/kernel/workqueue.c' l='3049' u='a'/>
<doc f='linux/kernel/workqueue.c' l='3029'>/**
 * cancel_delayed_work - cancel a delayed work
 * @dwork: delayed_work to cancel
 *
 * Kill off a pending delayed_work.
 *
 * Return: %true if @dwork was pending and canceled; %false if it wasn&apos;t
 * pending.
 *
 * Note:
 * The work callback function may still be running on return, unless
 * it returns %true and the work doesn&apos;t re-arm itself.  Explicitly flush or
 * use cancel_delayed_work_sync() to wait on it.
 *
 * This function is safe to call from any context including IRQ handler.
 */</doc>
<use f='linux/net/core/netpoll.c' l='801' u='c' c='rcu_cleanup_netpoll_info'/>
<use f='linux/net/core/netpoll.c' l='806' u='c' c='rcu_cleanup_netpoll_info'/>
<use f='linux/net/ipv4/devinet.c' l='511' u='c' c='__inet_insert_ifa'/>
<use f='linux/net/ipv4/devinet.c' l='916' u='c' c='inet_rtm_newaddr'/>
<use f='linux/net/ipv6/addrconf.c' l='321' u='c' c='addrconf_del_dad_work'/>
<use f='linux/net/ipv6/addrconf.c' l='922' u='c' c='inet6_ifa_finish_destroy'/>
<use f='linux/net/ipv6/addrconf.c' l='4308' u='c' c='addrconf_verify_rtnl'/>
<use f='linux/net/ipv6/addrconf.c' l='6683' u='c' c='addrconf_cleanup'/>
<use f='linux/net/mac80211/scan.c' l='1124' u='c' c='ieee80211_scan_cancel'/>
<use f='linux/net/mac80211/tdls.c' l='1425' u='c' c='ieee80211_tdls_oper'/>
<use f='linux/net/mac80211/util.c' l='2835' u='c' c='ieee80211_dfs_cac_cancel'/>
<use f='linux/net/wireless/mlme.c' l='755' u='c' c='cfg80211_sched_dfs_chan_update'/>
<use f='linux/net/wireless/reg.c' l='518' u='c' c='cancel_crda_timeout'/>
