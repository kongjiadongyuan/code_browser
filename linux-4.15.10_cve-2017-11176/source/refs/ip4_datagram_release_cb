<dec f='linux/include/net/ip.h' l='184' type='void ip4_datagram_release_cb(struct sock * sk)'/>
<def f='linux/net/ipv4/datagram.c' l='102' ll='130' type='void ip4_datagram_release_cb(struct sock * sk)'/>
<dec f='linux/net/ipv4/datagram.c' l='131' type='void ip4_datagram_release_cb(struct sock * )'/>
<use f='linux/net/ipv4/datagram.c' l='131' c='ip4_datagram_release_cb'/>
<use f='linux/net/ipv4/datagram.c' l='131' u='a'/>
<use f='linux/net/ipv4/datagram.c' l='131' u='a'/>
<doc f='linux/net/ipv4/datagram.c' l='98'>/* Because UDP xmit path can manipulate sk_dst_cache without holding
 * socket lock, we need to use sk_dst_set() here,
 * even if we own the socket lock.
 */</doc>
<use f='linux/net/ipv4/ping.c' l='1013'/>
<use f='linux/net/ipv4/ping.c' l='1013'/>
<use f='linux/net/ipv4/raw.c' l='976'/>
<use f='linux/net/ipv4/raw.c' l='976'/>
<use f='linux/net/ipv4/udp.c' l='2558'/>
<use f='linux/net/ipv4/udp.c' l='2558'/>
