<dec f='linux/include/net/cfg80211.h' l='4639' type='struct cfg80211_bss * cfg80211_inform_bss_frame_data(struct wiphy * wiphy, struct cfg80211_inform_bss * data, struct ieee80211_mgmt * mgmt, size_t len, gfp_t gfp)'/>
<use f='linux/include/net/cfg80211.h' l='4657' u='c' c='cfg80211_inform_bss_width_frame'/>
<use f='linux/include/net/cfg80211.h' l='4672' u='c' c='cfg80211_inform_bss_frame'/>
<doc f='linux/include/net/cfg80211.h' l='4624'>/**
 * cfg80211_inform_bss_frame_data - inform cfg80211 of a received BSS frame
 * @wiphy: the wiphy reporting the BSS
 * @data: the BSS metadata
 * @mgmt: the management frame (probe response or beacon)
 * @len: length of the management frame
 * @gfp: context flags
 *
 * This informs cfg80211 that BSS information was found and
 * the BSS should be updated/added.
 *
 * Return: A referenced struct, must be released with cfg80211_put_bss()!
 * Or %NULL on error.
 */</doc>
<use f='linux/net/mac80211/ibss.c' l='391' u='c' c='__ieee80211_sta_join_ibss'/>
<use f='linux/net/mac80211/scan.c' l='102' u='c' c='ieee80211_bss_info_update'/>
<def f='linux/net/wireless/scan.c' l='1176' ll='1257' type='struct cfg80211_bss * cfg80211_inform_bss_frame_data(struct wiphy * wiphy, struct cfg80211_inform_bss * data, struct ieee80211_mgmt * mgmt, size_t len, gfp_t gfp)'/>
<dec f='linux/net/wireless/scan.c' l='1258' type='struct cfg80211_bss * cfg80211_inform_bss_frame_data(struct wiphy * , struct cfg80211_inform_bss * , struct ieee80211_mgmt * , size_t , gfp_t )'/>
<use f='linux/net/wireless/scan.c' l='1258' c='cfg80211_inform_bss_frame_data'/>
<use f='linux/net/wireless/scan.c' l='1258' u='a'/>
<use f='linux/net/wireless/scan.c' l='1258' u='a'/>
<doc f='linux/net/wireless/scan.c' l='1175'>/* cfg80211_inform_bss_width_frame helper */</doc>
