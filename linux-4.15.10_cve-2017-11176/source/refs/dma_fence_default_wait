<dec f='linux/include/linux/dma-fence.h' l='280' type='long dma_fence_default_wait(struct dma_fence * fence, bool intr, long timeout)'/>
<use f='linux/drivers/dma-buf/dma-fence-array.c' l='98' u='r'/>
<use f='linux/drivers/dma-buf/dma-fence-array.c' l='98' u='r'/>
<def f='linux/drivers/dma-buf/dma-fence.c' l='366' ll='429' type='long dma_fence_default_wait(struct dma_fence * fence, bool intr, long timeout)'/>
<dec f='linux/drivers/dma-buf/dma-fence.c' l='430' type='long dma_fence_default_wait(struct dma_fence * , bool , long )'/>
<use f='linux/drivers/dma-buf/dma-fence.c' l='430' c='dma_fence_default_wait'/>
<use f='linux/drivers/dma-buf/dma-fence.c' l='430' u='a'/>
<use f='linux/drivers/dma-buf/dma-fence.c' l='430' u='a'/>
<use f='linux/drivers/dma-buf/dma-fence.c' l='498' u='r' c='dma_fence_wait_any_timeout'/>
<doc f='linux/drivers/dma-buf/dma-fence.c' l='354'>/**
 * dma_fence_default_wait - default sleep until the fence gets signaled
 * or until timeout elapses
 * @fence:	[in]	the fence to wait on
 * @intr:	[in]	if true, do an interruptible wait
 * @timeout:	[in]	timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT
 *
 * Returns -ERESTARTSYS if interrupted, 0 if the wait timed out, or the
 * remaining timeout in jiffies on success. If timeout is zero the value one is
 * returned if the fence is already signaled for consistency with other
 * functions taking a jiffies timeout.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_crtc.c' l='237'/>
<use f='linux/drivers/gpu/drm/drm_crtc.c' l='237'/>
<use f='linux/drivers/gpu/drm/drm_syncobj.c' l='207'/>
<use f='linux/drivers/gpu/drm/drm_syncobj.c' l='207'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem.c' l='3226' u='c' c='i915_gem_unset_wedged'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_clflush.c' l='67'/>
<use f='linux/drivers/gpu/drm/i915/i915_gem_clflush.c' l='67'/>
