<dec f='linux/include/linux/fs.h' l='1593' type='bool inode_owner_or_capable(const struct inode * inode)'/>
<use f='linux/fs/attr.c' l='70' u='c' c='setattr_prepare'/>
<use f='linux/fs/attr.c' l='81' u='c' c='setattr_prepare'/>
<use f='linux/fs/attr.c' l='228' u='c' c='notify_change'/>
<use f='linux/fs/efivarfs/file.c' l='131' u='c' c='efivarfs_ioc_setxflags'/>
<use f='linux/fs/ext4/ioctl.c' l='107' u='c' c='swap_inode_boot_loader'/>
<use f='linux/fs/ext4/ioctl.c' l='651' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='689' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='828' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='850' u='c' c='ext4_ioctl'/>
<use f='linux/fs/ext4/ioctl.c' l='1017' u='c' c='ext4_ioctl'/>
<use f='linux/fs/fcntl.c' l='49' u='c' c='setfl'/>
<def f='linux/fs/inode.c' l='2023' ll='2034' type='bool inode_owner_or_capable(const struct inode * inode)'/>
<dec f='linux/fs/inode.c' l='2035' type='bool inode_owner_or_capable(const struct inode * )'/>
<use f='linux/fs/inode.c' l='2035' c='inode_owner_or_capable'/>
<use f='linux/fs/inode.c' l='2035' u='a'/>
<use f='linux/fs/inode.c' l='2035' u='a'/>
<doc f='linux/fs/inode.c' l='2016'>/**
 * inode_owner_or_capable - check current task permissions to inode
 * @inode: inode being checked
 *
 * Return true if current either has CAP_FOWNER in a namespace with the
 * inode owner uid mapped, or owns the file.
 */</doc>
<use f='linux/fs/namei.c' l='1011' u='c' c='may_linkat'/>
<use f='linux/fs/namei.c' l='2949' u='c' c='may_open'/>
<use f='linux/fs/posix_acl.c' l='866' u='c' c='set_posix_acl'/>
<use f='linux/fs/xattr.c' l='130' u='c' c='xattr_permission'/>
<use f='linux/security/selinux/hooks.c' l='3179' u='c' c='selinux_inode_setxattr'/>
