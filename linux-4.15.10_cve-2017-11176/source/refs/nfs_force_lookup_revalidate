<dec f='linux/include/linux/nfs_fs.h' l='466' type='void nfs_force_lookup_revalidate(struct inode * dir)'/>
<def f='linux/fs/nfs/dir.c' l='955' ll='958' type='void nfs_force_lookup_revalidate(struct inode * dir)'/>
<dec f='linux/fs/nfs/dir.c' l='959' type='void nfs_force_lookup_revalidate(struct inode * )'/>
<use f='linux/fs/nfs/dir.c' l='959' c='nfs_force_lookup_revalidate'/>
<use f='linux/fs/nfs/dir.c' l='959' u='a'/>
<use f='linux/fs/nfs/dir.c' l='959' u='a'/>
<doc f='linux/fs/nfs/dir.c' l='945'>/**
 * nfs_force_lookup_revalidate - Mark the directory as having changed
 * @dir - pointer to directory inode
 *
 * This forces the revalidation code in nfs_lookup_revalidate() to do a
 * full lookup on all child dentries of &apos;dir&apos; whenever a change occurs
 * on the server that might have invalidated our dcache.
 *
 * The caller should be holding dir-&gt;i_lock
 */</doc>
<use f='linux/fs/nfs/inode.c' l='1791' u='c' c='nfs_update_inode'/>
<use f='linux/fs/nfs/nfs4proc.c' l='1052' u='c' c='update_changeattr'/>
<use f='linux/fs/nfs/unlink.c' l='296' u='c' c='nfs_async_rename_release'/>
<use f='linux/fs/nfs/unlink.c' l='300' u='c' c='nfs_async_rename_release'/>
