<def f='linux/include/linux/crash_dump.h' l='59' ll='62' type='int is_kdump_kernel()'/>
<use f='linux/include/linux/crash_dump.h' l='74' u='c' c='is_vmcore_usable'/>
<use f='linux/include/linux/crash_dump.h' l='83' u='c' c='vmcore_unusable'/>
<doc f='linux/include/linux/crash_dump.h' l='49'>/*
 * is_kdump_kernel() checks whether this kernel is booting after a panic of
 * previous kernel or not. This is determined by checking if previous kernel
 * has passed the elf core header address on command line.
 *
 * This is not just a test if CONFIG_CRASH_DUMP is enabled or not. It will
 * return 1 if CONFIG_CRASH_DUMP=y and if kernel is booting after a panic of
 * previous kernel.
 */</doc>
<use f='linux/arch/x86/kernel/pci-calgary_64.c' l='778' u='c' c='calgary_setup_tar'/>
<use f='linux/arch/x86/kernel/pci-calgary_64.c' l='1155' u='c' c='calgary_init'/>
<use f='linux/arch/x86/kernel/pci-calgary_64.c' l='1223' u='c' c='determine_tce_table_size'/>
<use f='linux/arch/x86/kernel/pci-calgary_64.c' l='1457' u='c' c='detect_calgary'/>
<use f='linux/block/blk-mq.c' l='2648' u='c' c='blk_mq_alloc_tag_set'/>
<use f='linux/drivers/iommu/amd_iommu_init.c' l='1538' u='c' c='init_iommu_one'/>
<use f='linux/drivers/iommu/amd_iommu_init.c' l='2503' u='c' c='early_amd_iommu_init'/>
<use f='linux/drivers/iommu/intel-iommu.c' l='3277' u='c' c='init_dmars'/>
<use f='linux/net/core/dev.c' l='2447' u='c' c='netif_get_num_default_rss_queues'/>
