<dec f='linux/include/sound/hdaudio.h' l='331' type='void snd_hdac_bus_queue_event(struct hdac_bus * bus, u32 res, u32 res_ex)'/>
<def f='linux/sound/hda/hdac_bus.c' l='129' ll='145' type='void snd_hdac_bus_queue_event(struct hdac_bus * bus, u32 res, u32 res_ex)'/>
<dec f='linux/sound/hda/hdac_bus.c' l='146' type='void snd_hdac_bus_queue_event(struct hdac_bus * , u32 , u32 )'/>
<use f='linux/sound/hda/hdac_bus.c' l='146' c='snd_hdac_bus_queue_event'/>
<use f='linux/sound/hda/hdac_bus.c' l='146' u='a'/>
<use f='linux/sound/hda/hdac_bus.c' l='146' u='a'/>
<doc f='linux/sound/hda/hdac_bus.c' l='119'>/**
 * snd_hdac_bus_queue_event - add an unsolicited event to queue
 * @bus: the BUS
 * @res: unsolicited event (lower 32bit of RIRB entry)
 * @res_ex: codec addr and flags (upper 32bit or RIRB entry)
 *
 * Adds the given event to the queue.  The events are processed in
 * the workqueue asynchronously.  Call this function in the interrupt
 * hanlder when RIRB receives an unsolicited event.
 */</doc>
<use f='linux/sound/hda/hdac_controller.c' l='210' u='c' c='snd_hdac_bus_update_rirb'/>
<use f='linux/sound/pci/hda/hda_codec.h' l='373' u='c' c='snd_hda_queue_unsol_event'/>
