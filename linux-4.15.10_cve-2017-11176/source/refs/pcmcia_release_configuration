<dec f='linux/drivers/pcmcia/cs_internal.h' l='143' type='int pcmcia_release_configuration(struct pcmcia_device * p_dev)'/>
<doc f='linux/drivers/pcmcia/cs_internal.h' l='142'>/* pcmcia_resource.c */</doc>
<use f='linux/drivers/pcmcia/ds.c' l='1175' u='c' c='pcmcia_dev_suspend'/>
<def f='linux/drivers/pcmcia/pcmcia_resource.c' l='350' ll='384' type='int pcmcia_release_configuration(struct pcmcia_device * p_dev)'/>
<use f='linux/drivers/pcmcia/pcmcia_resource.c' l='990' u='c' c='pcmcia_disable_device'/>
<doc f='linux/drivers/pcmcia/pcmcia_resource.c' l='339'>/**
 * pcmcia_release_configuration() - physically disable a PCMCIA device
 * @p_dev: pcmcia device
 *
 * pcmcia_release_configuration() is the 1:1 counterpart to
 * pcmcia_enable_device(): If a PCMCIA device is no longer used by any
 * driver, the Vpp voltage is set to 0, IRQs will no longer be generated,
 * and I/O ranges will be disabled. As pcmcia_release_io() and
 * pcmcia_release_window() still need to be called, device drivers are
 * expected to call pcmcia_disable_device() instead.
 */</doc>
