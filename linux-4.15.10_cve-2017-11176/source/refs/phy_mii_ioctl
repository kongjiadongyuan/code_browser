<dec f='linux/include/linux/phy.h' l='911' type='int phy_mii_ioctl(struct phy_device * phydev, struct ifreq * ifr, int cmd)'/>
<use f='linux/drivers/net/ethernet/broadcom/tg3.c' l='13968' u='c' c='tg3_ioctl'/>
<def f='linux/drivers/net/phy/phy.c' l='395' ll='467' type='int phy_mii_ioctl(struct phy_device * phydev, struct ifreq * ifr, int cmd)'/>
<dec f='linux/drivers/net/phy/phy.c' l='468' type='int phy_mii_ioctl(struct phy_device * , struct ifreq * , int )'/>
<use f='linux/drivers/net/phy/phy.c' l='468' c='phy_mii_ioctl'/>
<use f='linux/drivers/net/phy/phy.c' l='468' u='a'/>
<use f='linux/drivers/net/phy/phy.c' l='468' u='a'/>
<doc f='linux/drivers/net/phy/phy.c' l='385'>/**
 * phy_mii_ioctl - generic PHY MII ioctl interface
 * @phydev: the phy_device struct
 * @ifr: &amp;struct ifreq for socket ioctl&apos;s
 * @cmd: ioctl cmd to execute
 *
 * Note that this function is currently incompatible with the
 * PHYCONTROL layer.  It changes registers without regard to
 * current state.  Use at own risk.
 */</doc>
