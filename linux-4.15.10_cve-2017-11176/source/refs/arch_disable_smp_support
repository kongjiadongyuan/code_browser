<dec f='linux/include/linux/smp.h' l='209' type='void arch_disable_smp_support()'/>
<doc f='linux/include/linux/smp.h' l='205'>/*
 * Callback to arch code if there&apos;s nosmp or maxcpus=0 on the
 * boot command line:
 */</doc>
<def f='linux/arch/x86/kernel/smpboot.c' l='1095' ll='1098' type='void arch_disable_smp_support()'/>
<doc f='linux/arch/x86/kernel/smpboot.c' l='1092'>/**
 * arch_disable_smp_support() - disables SMP support for x86 at runtime
 */</doc>
<def f='linux/kernel/smp.c' l='515' type='void arch_disable_smp_support()'/>
<use f='linux/kernel/smp.c' l='520' u='c' c='nosmp'/>
<use f='linux/kernel/smp.c' l='545' u='c' c='maxcpus'/>
<doc f='linux/kernel/smp.c' l='504'>/*
 * Setup routine for controlling SMP activation
 *
 * Command-line option of &quot;nosmp&quot; or &quot;maxcpus=0&quot; will disable SMP
 * activation entirely (the MPS table probe still happens, though).
 *
 * Command-line option of &quot;maxcpus=&lt;NUM&gt;&quot;, where &lt;NUM&gt; is an integer
 * greater than 0, limits the maximum number of CPUs activated in
 * SMP mode to &lt;NUM&gt;.
 */</doc>
