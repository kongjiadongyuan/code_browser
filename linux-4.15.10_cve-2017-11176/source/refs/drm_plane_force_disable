<dec f='linux/include/drm/drm_plane.h' l='585' type='void drm_plane_force_disable(struct drm_plane * plane)'/>
<use f='linux/drivers/gpu/drm/drm_fb_helper.c' l='443' u='c' c='restore_fbdev_mode_legacy'/>
<use f='linux/drivers/gpu/drm/drm_framebuffer.c' l='872' u='c' c='legacy_remove_fb'/>
<def f='linux/drivers/gpu/drm/drm_plane.c' l='401' ll='422' type='void drm_plane_force_disable(struct drm_plane * plane)'/>
<dec f='linux/drivers/gpu/drm/drm_plane.c' l='423' type='void drm_plane_force_disable(struct drm_plane * )'/>
<use f='linux/drivers/gpu/drm/drm_plane.c' l='423' c='drm_plane_force_disable'/>
<use f='linux/drivers/gpu/drm/drm_plane.c' l='423' u='a'/>
<use f='linux/drivers/gpu/drm/drm_plane.c' l='423' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_plane.c' l='386'>/**
 * drm_plane_force_disable - Forcibly disable a plane
 * @plane: plane to disable
 *
 * Forces the plane to be disabled.
 *
 * Used when the plane&apos;s current framebuffer is destroyed,
 * and when restoring fbdev mode.
 *
 * Note that this function is not suitable for atomic drivers, since it doesn&apos;t
 * wire through the lock acquisition context properly and hence can&apos;t handle
 * retries or driver private locks. You probably want to use
 * drm_atomic_helper_disable_plane() or
 * drm_atomic_helper_disable_planes_on_crtc() instead.
 */</doc>
