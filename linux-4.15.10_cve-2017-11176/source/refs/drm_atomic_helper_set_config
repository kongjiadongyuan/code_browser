<dec f='linux/include/drm/drm_atomic_helper.h' l='113' type='int drm_atomic_helper_set_config(struct drm_mode_set * set, struct drm_modeset_acquire_ctx * ctx)'/>
<def f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2685' ll='2710' type='int drm_atomic_helper_set_config(struct drm_mode_set * set, struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2711' type='int drm_atomic_helper_set_config(struct drm_mode_set * , struct drm_modeset_acquire_ctx * )'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2711' c='drm_atomic_helper_set_config'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2711' u='a'/>
<use f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2711' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_atomic_helper.c' l='2669'>/**
 * drm_atomic_helper_set_config - set a new config from userspace
 * @set: mode set configuration
 * @ctx: lock acquisition context
 *
 * Provides a default crtc set_config handler using the atomic driver interface.
 *
 * NOTE: For backwards compatibility with old userspace this automatically
 * resets the &quot;link-status&quot; property to GOOD, to force any link
 * re-training. The SETCRTC ioctl does not define whether an update does
 * need a full modeset or just a plane update, hence we&apos;re allowed to do
 * that. See also drm_mode_connector_set_link_status_property().
 *
 * Returns:
 * Returns 0 on success, negative errno numbers on failure.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_simple_kms_helper.c' l='83'/>
<use f='linux/drivers/gpu/drm/drm_simple_kms_helper.c' l='83'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12569'/>
<use f='linux/drivers/gpu/drm/i915/intel_display.c' l='12569'/>
