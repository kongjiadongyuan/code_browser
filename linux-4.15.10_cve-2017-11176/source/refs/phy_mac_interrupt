<dec f='linux/include/linux/phy.h' l='902' type='void phy_mac_interrupt(struct phy_device * phydev, int new_link)'/>
<def f='linux/drivers/net/phy/phy.c' l='1092' ll='1098' type='void phy_mac_interrupt(struct phy_device * phydev, int new_link)'/>
<dec f='linux/drivers/net/phy/phy.c' l='1099' type='void phy_mac_interrupt(struct phy_device * , int )'/>
<use f='linux/drivers/net/phy/phy.c' l='1099' c='phy_mac_interrupt'/>
<use f='linux/drivers/net/phy/phy.c' l='1099' u='a'/>
<use f='linux/drivers/net/phy/phy.c' l='1099' u='a'/>
<doc f='linux/drivers/net/phy/phy.c' l='1083'>/**
 * phy_mac_interrupt - MAC says the link has changed
 * @phydev: phy_device struct with changed link
 * @new_link: Link is Up/Down.
 *
 * Description: The MAC layer is able indicate there has been a change
 *   in the PHY link status. Set the new link status, and trigger the
 *   state machine, work a work queue.
 */</doc>
