<dec f='linux/include/linux/irq.h' l='1151' type='void irq_matrix_remove_managed(struct irq_matrix * m, const struct cpumask * msk)'/>
<use f='linux/arch/x86/kernel/apic/vector.c' l='466' u='c' c='vector_free_reserved_and_managed'/>
<use f='linux/kernel/irq/matrix.c' l='193' u='c' c='irq_matrix_reserve_managed'/>
<def f='linux/kernel/irq/matrix.c' l='210' ll='237' type='void irq_matrix_remove_managed(struct irq_matrix * m, const struct cpumask * msk)'/>
<doc f='linux/kernel/irq/matrix.c' l='198'>/**
 * irq_matrix_remove_managed - Remove managed interrupts in a CPU map
 * @m:		Matrix pointer
 * @msk:	On which CPUs the bits should be removed
 *
 * Can be called for offline CPUs
 *
 * This removes not allocated managed interrupts from the map. It does
 * not matter which one because the managed interrupts free their
 * allocation when they shut down. If not, the accounting is screwed,
 * but all what can be done at this point is warn about it.
 */</doc>
