<dec f='linux/kernel/rcu/rcu_segcblist.h' l='123' type='void rcu_segcblist_extract_count(struct rcu_segcblist * rsclp, struct rcu_cblist * rclp)'/>
<def f='linux/kernel/rcu/rcu_segcblist.c' l='194' ll='201' type='void rcu_segcblist_extract_count(struct rcu_segcblist * rsclp, struct rcu_cblist * rclp)'/>
<use f='linux/kernel/rcu/rcu_segcblist.c' l='439' u='c' c='rcu_segcblist_merge'/>
<doc f='linux/kernel/rcu/rcu_segcblist.c' l='185'>/*
 * Extract only the counts from the specified rcu_segcblist structure,
 * and place them in the specified rcu_cblist structure.  This function
 * supports both callback orphaning and invocation, hence the separation
 * of counts and callbacks.  (Callbacks ready for invocation must be
 * orphaned and adopted separately from pending callbacks, but counts
 * apply to all callbacks.  Locking must be used to make sure that
 * both orphaned-callbacks lists are consistent.)
 */</doc>
