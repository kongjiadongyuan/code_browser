<dec f='linux/include/drm/drm_lease.h' l='32' type='uint32_t drm_lease_filter_crtcs(struct drm_file * file_priv, uint32_t crtcs)'/>
<use f='linux/drivers/gpu/drm/drm_encoder.c' l='237' u='c' c='drm_mode_getencoder'/>
<def f='linux/drivers/gpu/drm/drm_lease.c' l='157' ll='186' type='uint32_t drm_lease_filter_crtcs(struct drm_file * file_priv, uint32_t crtcs_in)'/>
<dec f='linux/drivers/gpu/drm/drm_lease.c' l='187' type='uint32_t drm_lease_filter_crtcs(struct drm_file * , uint32_t )'/>
<use f='linux/drivers/gpu/drm/drm_lease.c' l='187' c='drm_lease_filter_crtcs'/>
<use f='linux/drivers/gpu/drm/drm_lease.c' l='187' u='a'/>
<use f='linux/drivers/gpu/drm/drm_lease.c' l='187' u='a'/>
<doc f='linux/drivers/gpu/drm/drm_lease.c' l='149'>/**
 * drm_lease_filter_crtcs - restricted crtc set to leased values (idr_mutex not held)
 * @file_priv: requestor file
 * @crtcs: bitmask of crtcs to check
 *
 * Reconstructs a crtc mask based on the crtcs which are visible
 * through the specified file.
 */</doc>
<use f='linux/drivers/gpu/drm/drm_plane.c' l='525' u='c' c='drm_mode_getplane'/>
