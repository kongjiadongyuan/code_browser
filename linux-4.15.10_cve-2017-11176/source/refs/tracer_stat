<def f='linux/kernel/trace/trace_stat.h' l='12' ll='26'/>
<use f='linux/kernel/trace/trace_stat.h' l='16'/>
<use f='linux/kernel/trace/trace_stat.h' l='31' c='register_stat_tracer'/>
<use f='linux/kernel/trace/trace_stat.h' l='32' c='unregister_stat_tracer'/>
<use f='linux/kernel/trace/trace_stat.c' l='34'/>
<use f='linux/kernel/trace/trace_stat.c' l='127' c='stat_seq_init'/>
<use f='linux/kernel/trace/trace_stat.c' l='302' c='register_stat_tracer'/>
<use f='linux/kernel/trace/trace_stat.c' l='346' c='unregister_stat_tracer'/>
<size>56</size>
<doc f='linux/kernel/trace/trace_stat.h' l='7'>/*
 * If you want to provide a stat file (one-shot statistics), fill
 * an iterator with stat_start/stat_next and a stat_show callbacks.
 * The others callbacks are optional.
 */</doc>
<mbr r='tracer_stat::name' o='0' t='const char *'/>
<mbr r='tracer_stat::stat_start' o='64' t='void *(*)(struct tracer_stat *)'/>
<mbr r='tracer_stat::stat_next' o='128' t='void *(*)(void *, int)'/>
<mbr r='tracer_stat::stat_cmp' o='192' t='int (*)(void *, void *)'/>
<mbr r='tracer_stat::stat_show' o='256' t='int (*)(struct seq_file *, void *)'/>
<mbr r='tracer_stat::stat_release' o='320' t='void (*)(void *)'/>
<mbr r='tracer_stat::stat_headers' o='384' t='int (*)(struct seq_file *)'/>
