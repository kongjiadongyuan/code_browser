<def f='linux/include/net/sock.h' l='1704' ll='1711' type='void sock_orphan(struct sock * sk)'/>
<doc f='linux/include/net/sock.h' l='1697'>/* Detach socket from process context.
 * Announce socket dead, detach it from wait queue and inode.
 * Note that parent inode held reference count on this struct sock,
 * we do not release it in this function, because protocol
 * probably wants some additional cleanups or even continuing
 * to work with this socket (TCP).
 */</doc>
<use f='linux/net/core/sock.c' l='3010' u='c' c='sk_common_release'/>
<use f='linux/net/ipv4/inet_connection_sock.c' l='900' u='c' c='inet_child_forget'/>
<use f='linux/net/ipv4/tcp.c' l='2242' u='c' c='tcp_close'/>
<use f='linux/net/netlink/af_netlink.c' l='720' u='c' c='netlink_release'/>
<use f='linux/net/packet/af_packet.c' l='3032' u='c' c='packet_release'/>
<use f='linux/net/unix/af_unix.c' l='523' u='c' c='unix_release_sock'/>
