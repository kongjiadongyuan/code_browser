<dec f='linux/include/linux/perf_event.h' l='850' type='void perf_event_free_task(struct task_struct * task)'/>
<def f='linux/kernel/events/core.c' l='10642' ll='10672' type='void perf_event_free_task(struct task_struct * task)'/>
<use f='linux/kernel/events/core.c' l='11005' u='c' c='perf_event_init_task'/>
<doc f='linux/kernel/events/core.c' l='10635'>/*
 * Free an unexposed, unused context as created by inheritance by
 * perf_event_init_task below, used by fork() in case of fail.
 *
 * Not all locks are strictly required, but take them anyway to be nice and
 * help out with the lockdep assertions.
 */</doc>
<use f='linux/kernel/fork.c' l='1967' u='c' c='copy_process'/>
