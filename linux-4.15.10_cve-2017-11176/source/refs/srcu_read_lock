<def f='linux/include/linux/srcu.h' l='155' ll='162' type='int srcu_read_lock(struct srcu_struct * sp)'/>
<doc f='linux/include/linux/srcu.h' l='138'>/**
 * srcu_read_lock - register a new reader for an SRCU-protected structure.
 * @sp: srcu_struct in which to register the new reader.
 *
 * Enter an SRCU read-side critical section.  Note that SRCU read-side
 * critical sections may be nested.  However, it is illegal to
 * call anything that waits on an SRCU grace period for the same
 * srcu_struct, whether directly or indirectly.  Please note that
 * one way to indirectly wait on an SRCU grace period is to acquire
 * a mutex that is held elsewhere while calling synchronize_srcu() or
 * synchronize_srcu_expedited().
 *
 * Note that srcu_read_lock() and the matching srcu_read_unlock() must
 * occur in the same context, for example, it is illegal to invoke
 * srcu_read_unlock() in an irq handler if the matching srcu_read_lock()
 * was invoked in process context.
 */</doc>
<use f='linux/block/blk-mq.c' l='1228' u='c' c='__blk_mq_run_hw_queue'/>
<use f='linux/block/blk-mq.c' l='1667' u='c' c='blk_mq_try_issue_directly'/>
<use f='linux/drivers/base/core.c' l='66' u='c' c='device_links_read_lock'/>
<use f='linux/drivers/base/power/wakeup.c' l='339' u='c' c='device_wakeup_arm_wake_irqs'/>
<use f='linux/drivers/base/power/wakeup.c' l='355' u='c' c='device_wakeup_disarm_wake_irqs'/>
<use f='linux/drivers/base/power/wakeup.c' l='813' u='c' c='pm_print_active_wakeup_sources'/>
<use f='linux/drivers/base/power/wakeup.c' l='1045' u='c' c='wakeup_sources_stats_show'/>
<use f='linux/drivers/dax/super.c' l='38' u='c' c='dax_read_lock'/>
<use f='linux/drivers/md/dm.c' l='579' u='c' c='dm_get_live_table'/>
<use f='linux/fs/notify/fsnotify.c' l='309' u='c' c='fsnotify'/>
<use f='linux/fs/notify/mark.c' l='317' u='c' c='fsnotify_finish_user_wait'/>
<use f='linux/fs/notify/mark.c' l='477' u='c' c='fsnotify_grab_connector'/>
<use f='linux/fs/quota/dquot.c' l='1664' u='c' c='__dquot_alloc_space'/>
<use f='linux/fs/quota/dquot.c' l='1727' u='c' c='dquot_alloc_inode'/>
<use f='linux/fs/quota/dquot.c' l='1773' u='c' c='dquot_claim_space_nodirty'/>
<use f='linux/fs/quota/dquot.c' l='1815' u='c' c='dquot_reclaim_space_nodirty'/>
<use f='linux/fs/quota/dquot.c' l='1862' u='c' c='__dquot_free_space'/>
<use f='linux/fs/quota/dquot.c' l='1909' u='c' c='dquot_free_inode'/>
<use f='linux/kernel/events/core.c' l='9236' u='c' c='perf_init_event'/>
<use f='linux/kernel/notifier.c' l='497' u='c' c='__srcu_notifier_call_chain'/>
<use f='linux/mm/mmu_notifier.c' l='66' u='c' c='__mmu_notifier_release'/>
<use f='linux/mm/mmu_notifier.c' l='117' u='c' c='__mmu_notifier_clear_flush_young'/>
<use f='linux/mm/mmu_notifier.c' l='134' u='c' c='__mmu_notifier_clear_young'/>
<use f='linux/mm/mmu_notifier.c' l='150' u='c' c='__mmu_notifier_test_young'/>
<use f='linux/mm/mmu_notifier.c' l='169' u='c' c='__mmu_notifier_change_pte'/>
<use f='linux/mm/mmu_notifier.c' l='183' u='c' c='__mmu_notifier_invalidate_range_start'/>
<use f='linux/mm/mmu_notifier.c' l='200' u='c' c='__mmu_notifier_invalidate_range_end'/>
<use f='linux/mm/mmu_notifier.c' l='230' u='c' c='__mmu_notifier_invalidate_range'/>
<use f='linux/mm/mmu_notifier.c' l='348' u='c' c='mmu_notifier_unregister'/>
<use f='linux/net/core/netpoll.c' l='228' u='c' c='netpoll_poll_disable'/>
