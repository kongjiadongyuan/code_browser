<dec f='linux/include/linux/nvmem-consumer.h' l='39' type='void * nvmem_cell_read(struct nvmem_cell * cell, size_t * len)'/>
<def f='linux/drivers/nvmem/core.c' l='1009' ll='1029' type='void * nvmem_cell_read(struct nvmem_cell * cell, size_t * len)'/>
<dec f='linux/drivers/nvmem/core.c' l='1030' type='void * nvmem_cell_read(struct nvmem_cell * , size_t * )'/>
<use f='linux/drivers/nvmem/core.c' l='1030' c='nvmem_cell_read'/>
<use f='linux/drivers/nvmem/core.c' l='1030' u='a'/>
<use f='linux/drivers/nvmem/core.c' l='1030' u='a'/>
<use f='linux/drivers/nvmem/core.c' l='1134' u='c' c='nvmem_cell_read_u32'/>
<doc f='linux/drivers/nvmem/core.c' l='999'>/**
 * nvmem_cell_read() - Read a given nvmem cell
 *
 * @cell: nvmem cell to be read.
 * @len: pointer to length of cell which will be populated on successful read;
 *	 can be NULL.
 *
 * Return: ERR_PTR() on error or a valid pointer to a buffer on success. The
 * buffer should be freed by the consumer with a kfree().
 */</doc>
